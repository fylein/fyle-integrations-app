(globalThis.webpackChunkfyle_integrations_app=globalThis.webpackChunkfyle_integrations_app||[]).push([[179],{"./.storybook/preview.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>_storybook_preview});var angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[{"name":"SearchPipe","id":"pipe-SearchPipe-748052a5a8b0b5012d6ae04ca889feaa27e7c9bc6c419f348ffd2b90f3911698b4cd9923790444847e862e90dd981544bdea69631d264fa4859eef1db58cdf26","file":"src/app/shared/pipes/search.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"args","type":"any[]","deprecated":false,"deprecationMessage":"","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"args","type":"any[]","deprecated":false,"deprecationMessage":"","dotDotDotToken":true,"tagName":{"text":"param"}}]}],"standalone":false,"ngname":"search","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'search\'\\n})\\nexport class SearchPipe implements PipeTransform {\\n\\n  transform(value: any, ...args: any[]): any {\\n    if (value && args && args.length && args[0]) {\\n      const searchText = args[0].toLowerCase();\\n      const options = value.filter((item: any) => {\\n        return item.value ? item.value.toLowerCase().includes(searchText) : item.name.toLowerCase().includes(searchText);\\n      });\\n      return options && options.length ? options : (value[0].value ? [{ id: null, value: \'No result found\' }] : [{ email: \'\', name: \'No result found\' }]);\\n    }\\n    return value;\\n  }\\n\\n}\\n"},{"name":"SnakeCaseToSpaceCasePipe","id":"pipe-SnakeCaseToSpaceCasePipe-f8724a0b9ee7a72ceed7fdffac67edc1515b3dc2ff849c168a3f75711cbff4da8c7929a468349644eae78211c26dbccc6801dc51d85b8c48612c49ca09db0c2e","file":"src/app/shared/pipes/snake-case-to-space-case.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"","deprecated":false,"deprecationMessage":""},{"name":"args","type":"[]","deprecated":false,"deprecationMessage":"","dotDotDotToken":true}],"optional":false,"returnType":"string","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"args","type":"[]","deprecated":false,"deprecationMessage":"","dotDotDotToken":true,"tagName":{"text":"param"}}]}],"standalone":false,"ngname":"snakeCaseToSpaceCase","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'snakeCaseToSpaceCase\'\\n})\\nexport class SnakeCaseToSpaceCasePipe implements PipeTransform {\\n\\n  transform(value: unknown, ...args: unknown[]): string {\\n    if (value && typeof value === \'string\') {\\n      return value.replace(/_/g, \' \');\\n    }\\n\\n    return \'\';\\n  }\\n\\n}\\n"},{"name":"TrimCharacterPipe","id":"pipe-TrimCharacterPipe-c7d0b0213f66710f6455631788bfcd2e51b3498f83a30b0f0121f18215a7ba41924437f55da0f431a7ba0d5869fb6d4ecb65246c681cc09dc71fba0078818bcb","file":"src/app/shared/pipes/trim-character.pipe.ts","type":"pipe","deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","properties":[],"methods":[{"name":"transform","args":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":""},{"name":"trimSize","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trimSize","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"standalone":false,"ngname":"trimCharacter","sourceCode":"import { Pipe, PipeTransform } from \'@angular/core\';\\n\\n@Pipe({\\n  name: \'trimCharacter\'\\n})\\nexport class TrimCharacterPipe implements PipeTransform {\\n\\n  transform(value: string, trimSize: number): string {\\n    if (value.length > trimSize) {\\n      return `${value.substring(0, trimSize)}...`;\\n    }\\n\\n    return value;\\n  }\\n\\n}\\n"}],"interfaces":[{"name":"AccountingExport","id":"interface-AccountingExport-2c1527c9453b1f6140475fb479c5dbd80b4eadd3fe8b41f468a5f57ad8c0f39dc2283f96b49dd581062efb31431f9391a14abca53ef232171fb454e4ac9cdb60","file":"src/app/core/models/db/accounting-export.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { SnakeCaseToSpaceCasePipe } from \\"src/app/shared/pipes/snake-case-to-space-case.pipe\\";\\nimport { AccountingExportStatus, AccountingExportType, FundSource, FyleReferenceType } from \\"../enum/enum.model\\";\\nimport { ExpenseGroupDescription, SkipExportList, SkipExportLog } from \\"../si/db/expense-group.model\\";\\nimport { Expense } from \\"../si/db/expense.model\\";\\nimport { TitleCasePipe } from \\"@angular/common\\";\\nimport { ExportLogService } from \\"../../services/common/export-log.service\\";\\nimport { DateFilter } from \\"../qbd/misc/date-filter.model\\";\\nimport { environment } from \\"src/environments/environment\\";\\nimport { ExpenseGroup } from \\"./expense-group.model\\";\\n\\nexport interface AccountingExportCount {\\n    count: number;\\n}\\n\\nexport interface ExportableAccountingExport {\\n  exportable_accounting_export_ids: number[];\\n}\\n\\nexport interface AccountingExportList {\\n    exportedAt: Date;\\n    employee: [string, string];\\n    expenseType: string;\\n    referenceNumber: string;\\n    exportedAs: string;\\n    integrationUrl: string;\\n    fyleUrl: string;\\n    expenses: Expense[];\\n  }\\n\\nexport interface AccountingExport {\\n    id: number;\\n    type: string;\\n    description: ExpenseGroupDescription;\\n    status: AccountingExportStatus;\\n    mapping_errors: {\\n        type: string;\\n        value: string;\\n    }[] | null;\\n    response: Record<string, unknown>;\\n    created_at: Date;\\n    updated_at: Date;\\n    exported_at: Date;\\n    workspace: number;\\n    export_url: string;\\n    expenses: Expense[];\\n    fund_source: FundSource;\\n}\\n\\nexport type AccountingExportGetParam = {\\n    type__in: string[],\\n    status__in: string[],\\n    id__in?: number[],\\n    limit: number,\\n    offset: number,\\n    exported_at__lte?: string,\\n    exported_at__gte?: string\\n}\\n\\nexport class AccountingExportModel {\\n\\n  static getDateOptions(): DateFilter[] {\\n    const currentDateTime = new Date();\\n    const dateOptions: DateFilter[] = [\\n      {\\n        dateRange: \'This Month\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), 1),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'This Week\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), currentDateTime.getDate() - currentDateTime.getDay()),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'Today\',\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: currentDateTime.toLocaleDateString(),\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      }\\n    ];\\n\\n    return dateOptions;\\n  }\\n\\n  static getFyleExpenseUrl(expense_id: string): string {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}`;\\n    return url;\\n  }\\n\\n  static getfilteredAccountingExports(query: string, group: AccountingExportList): boolean {\\n    const employeeName = group.employee ? group.employee[0] : \'\';\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.referenceNumber ? group.referenceNumber : \'\';\\n\\n    return (\\n      employeeName.toLowerCase().includes(query) ||\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static getReferenceType(description: ExpenseGroupDescription): FyleReferenceType {\\n    let referenceType = FyleReferenceType.REPORT_ID;\\n\\n    if (FyleReferenceType.EXPENSE in description) {\\n      referenceType = FyleReferenceType.EXPENSE;\\n    } else if (FyleReferenceType.REPORT_ID in description) {\\n      referenceType = FyleReferenceType.REPORT_ID;\\n    } else if (FyleReferenceType.PAYMENT in description) {\\n      referenceType = FyleReferenceType.PAYMENT;\\n    }\\n\\n    return referenceType;\\n  }\\n\\n  static formatExportType(exportType: string): string {\\n    if (exportType.startsWith(\'CREATING_\')) {\\n      exportType = exportType.substring(\'CREATING_\'.length);\\n    }\\n    exportType = new SnakeCaseToSpaceCasePipe().transform(exportType);\\n    return new TitleCasePipe().transform(exportType);\\n  }\\n\\n  static getFyleReferenceNumber(referenceType: string, expense: Expense): string {\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      return expense.expense_number;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      return expense.payment_number;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      return expense.claim_number;\\n    }\\n    return expense.claim_number;\\n  }\\n\\n  static generateFyleUrl(expense: Expense, referenceType: FyleReferenceType, org_id: string) : string {\\n    let url = `${environment.fyle_app_url}/app/`;\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      url += `admin/#/view_expense/${expense.expense_id}`;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      url += `admin/#/reports/${expense.report_id}`;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      url += `admin/#/settlements/${expense.settlement_id}`;\\n    }\\n    return `${url}?org_id=${org_id}`;\\n  }\\n\\n  static parseAPIResponseToExportLog(accountingExport: AccountingExport, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(accountingExport.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, accountingExport.expenses[0]);\\n    return {\\n      exportedAt: accountingExport.exported_at,\\n      employee: [accountingExport.expenses[0].employee_name, accountingExport.description.employee_email],\\n      expenseType: accountingExport.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: this.formatExportType(accountingExport.type),\\n      fyleUrl: this.generateFyleUrl(accountingExport.expenses[0], referenceType, org_id),\\n      integrationUrl: accountingExport.export_url,\\n      expenses: accountingExport.expenses\\n    };\\n  }\\n\\n  static generateExportTypeAndId(expenseGroup: ExpenseGroup) {\\n    if (!expenseGroup.response_logs) {\\n      return [null, null, null];\\n    }\\n    let exportRedirection = null;\\n    let exportType = null;\\n    let exportId = null;\\n\\n    if (\'Bill\' in expenseGroup.response_logs && expenseGroup.response_logs.Bill) {\\n      exportRedirection = \'bill\';\\n      exportType = exportRedirection;\\n      exportId = expenseGroup.response_logs.Bill.Id;\\n    } else if (\'JournalEntry\' in expenseGroup.response_logs && expenseGroup.response_logs.JournalEntry) {\\n      exportRedirection = \'journal\';\\n      exportType = \'Journal Entry\';\\n      exportId = expenseGroup.response_logs.JournalEntry.Id;\\n    } else if (\'Purchase\' in expenseGroup.response_logs && expenseGroup.response_logs.Purchase) {\\n      exportId = expenseGroup.response_logs.Purchase.Id;\\n      if (expenseGroup.response_logs.Purchase.PaymentType === \'Check\') {\\n        exportRedirection = \'check\';\\n        exportType = exportRedirection;\\n      } else {\\n        exportRedirection = \'expense\';\\n        if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && !expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Purchase\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Credit\';\\n          exportRedirection = \'creditcardcredit\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'Cash\') {\\n          exportType = \'Debit Card Expense\';\\n          exportRedirection = \'expense\';\\n        } else {\\n          exportType = \'expense\';\\n        }\\n      }\\n    }\\n\\n    return [exportRedirection, exportId, exportType];\\n  }\\n\\n  static parseExpenseGroupAPIResponseToExportLog(expenseGroup: ExpenseGroup, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(expenseGroup.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, expenseGroup.expenses[0]);\\n\\n    const [type, id, exportType] = this.generateExportTypeAndId(expenseGroup);\\n\\n    return {\\n      exportedAt: expenseGroup.exported_at,\\n      employee: [expenseGroup.expenses[0].employee_name, expenseGroup.description.employee_email],\\n      expenseType: expenseGroup.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: exportType,\\n      fyleUrl: this.generateFyleUrl(expenseGroup.expenses[0], referenceType, org_id),\\n      integrationUrl: `${environment.qbo_app_url}/app/${type}?txnId=${id}`,\\n      expenses: expenseGroup.expenses\\n    };\\n  }\\n}\\n\\nexport class SkippedAccountingExportModel {\\n  static getfilteredSkippedAccountingExports(query: string, group: SkipExportList): boolean {\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.claim_number ? group.claim_number : \'\';\\n\\n    return (\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static parseAPIResponseToSkipExportList(skippedExpense: SkipExportLog): SkipExportList {\\n    return {\\n      updated_at: skippedExpense.updated_at,\\n      claim_number: skippedExpense.claim_number,\\n      employee: [skippedExpense.employee_name, skippedExpense.employee_email],\\n      expenseType: skippedExpense.fund_source === \'PERSONAL\' ? \'Reimbursable\' : \'Corporate Card\',\\n      fyleUrl: `${environment.fyle_app_url}/app/admin/#/view_expense/${skippedExpense.expense_id}?org_id=${skippedExpense.org_id}`\\n    };\\n  }\\n}\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":40},{"name":"description","deprecated":false,"deprecationMessage":"","type":"ExpenseGroupDescription","optional":false,"description":"","line":33},{"name":"expenses","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":45},{"name":"export_url","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44},{"name":"exported_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":42},{"name":"fund_source","deprecated":false,"deprecationMessage":"","type":"FundSource","optional":false,"description":"","line":46},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":31},{"name":"mapping_errors","deprecated":false,"deprecationMessage":"","type":"literal type[] | null","optional":false,"description":"","line":35},{"name":"response","deprecated":false,"deprecationMessage":"","type":"Record<string | >","optional":false,"description":"","line":39},{"name":"status","deprecated":false,"deprecationMessage":"","type":"AccountingExportStatus","optional":false,"description":"","line":34},{"name":"type","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":41},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":43}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"AccountingExportCount","id":"interface-AccountingExportCount-2c1527c9453b1f6140475fb479c5dbd80b4eadd3fe8b41f468a5f57ad8c0f39dc2283f96b49dd581062efb31431f9391a14abca53ef232171fb454e4ac9cdb60","file":"src/app/core/models/db/accounting-export.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { SnakeCaseToSpaceCasePipe } from \\"src/app/shared/pipes/snake-case-to-space-case.pipe\\";\\nimport { AccountingExportStatus, AccountingExportType, FundSource, FyleReferenceType } from \\"../enum/enum.model\\";\\nimport { ExpenseGroupDescription, SkipExportList, SkipExportLog } from \\"../si/db/expense-group.model\\";\\nimport { Expense } from \\"../si/db/expense.model\\";\\nimport { TitleCasePipe } from \\"@angular/common\\";\\nimport { ExportLogService } from \\"../../services/common/export-log.service\\";\\nimport { DateFilter } from \\"../qbd/misc/date-filter.model\\";\\nimport { environment } from \\"src/environments/environment\\";\\nimport { ExpenseGroup } from \\"./expense-group.model\\";\\n\\nexport interface AccountingExportCount {\\n    count: number;\\n}\\n\\nexport interface ExportableAccountingExport {\\n  exportable_accounting_export_ids: number[];\\n}\\n\\nexport interface AccountingExportList {\\n    exportedAt: Date;\\n    employee: [string, string];\\n    expenseType: string;\\n    referenceNumber: string;\\n    exportedAs: string;\\n    integrationUrl: string;\\n    fyleUrl: string;\\n    expenses: Expense[];\\n  }\\n\\nexport interface AccountingExport {\\n    id: number;\\n    type: string;\\n    description: ExpenseGroupDescription;\\n    status: AccountingExportStatus;\\n    mapping_errors: {\\n        type: string;\\n        value: string;\\n    }[] | null;\\n    response: Record<string, unknown>;\\n    created_at: Date;\\n    updated_at: Date;\\n    exported_at: Date;\\n    workspace: number;\\n    export_url: string;\\n    expenses: Expense[];\\n    fund_source: FundSource;\\n}\\n\\nexport type AccountingExportGetParam = {\\n    type__in: string[],\\n    status__in: string[],\\n    id__in?: number[],\\n    limit: number,\\n    offset: number,\\n    exported_at__lte?: string,\\n    exported_at__gte?: string\\n}\\n\\nexport class AccountingExportModel {\\n\\n  static getDateOptions(): DateFilter[] {\\n    const currentDateTime = new Date();\\n    const dateOptions: DateFilter[] = [\\n      {\\n        dateRange: \'This Month\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), 1),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'This Week\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), currentDateTime.getDate() - currentDateTime.getDay()),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'Today\',\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: currentDateTime.toLocaleDateString(),\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      }\\n    ];\\n\\n    return dateOptions;\\n  }\\n\\n  static getFyleExpenseUrl(expense_id: string): string {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}`;\\n    return url;\\n  }\\n\\n  static getfilteredAccountingExports(query: string, group: AccountingExportList): boolean {\\n    const employeeName = group.employee ? group.employee[0] : \'\';\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.referenceNumber ? group.referenceNumber : \'\';\\n\\n    return (\\n      employeeName.toLowerCase().includes(query) ||\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static getReferenceType(description: ExpenseGroupDescription): FyleReferenceType {\\n    let referenceType = FyleReferenceType.REPORT_ID;\\n\\n    if (FyleReferenceType.EXPENSE in description) {\\n      referenceType = FyleReferenceType.EXPENSE;\\n    } else if (FyleReferenceType.REPORT_ID in description) {\\n      referenceType = FyleReferenceType.REPORT_ID;\\n    } else if (FyleReferenceType.PAYMENT in description) {\\n      referenceType = FyleReferenceType.PAYMENT;\\n    }\\n\\n    return referenceType;\\n  }\\n\\n  static formatExportType(exportType: string): string {\\n    if (exportType.startsWith(\'CREATING_\')) {\\n      exportType = exportType.substring(\'CREATING_\'.length);\\n    }\\n    exportType = new SnakeCaseToSpaceCasePipe().transform(exportType);\\n    return new TitleCasePipe().transform(exportType);\\n  }\\n\\n  static getFyleReferenceNumber(referenceType: string, expense: Expense): string {\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      return expense.expense_number;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      return expense.payment_number;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      return expense.claim_number;\\n    }\\n    return expense.claim_number;\\n  }\\n\\n  static generateFyleUrl(expense: Expense, referenceType: FyleReferenceType, org_id: string) : string {\\n    let url = `${environment.fyle_app_url}/app/`;\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      url += `admin/#/view_expense/${expense.expense_id}`;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      url += `admin/#/reports/${expense.report_id}`;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      url += `admin/#/settlements/${expense.settlement_id}`;\\n    }\\n    return `${url}?org_id=${org_id}`;\\n  }\\n\\n  static parseAPIResponseToExportLog(accountingExport: AccountingExport, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(accountingExport.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, accountingExport.expenses[0]);\\n    return {\\n      exportedAt: accountingExport.exported_at,\\n      employee: [accountingExport.expenses[0].employee_name, accountingExport.description.employee_email],\\n      expenseType: accountingExport.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: this.formatExportType(accountingExport.type),\\n      fyleUrl: this.generateFyleUrl(accountingExport.expenses[0], referenceType, org_id),\\n      integrationUrl: accountingExport.export_url,\\n      expenses: accountingExport.expenses\\n    };\\n  }\\n\\n  static generateExportTypeAndId(expenseGroup: ExpenseGroup) {\\n    if (!expenseGroup.response_logs) {\\n      return [null, null, null];\\n    }\\n    let exportRedirection = null;\\n    let exportType = null;\\n    let exportId = null;\\n\\n    if (\'Bill\' in expenseGroup.response_logs && expenseGroup.response_logs.Bill) {\\n      exportRedirection = \'bill\';\\n      exportType = exportRedirection;\\n      exportId = expenseGroup.response_logs.Bill.Id;\\n    } else if (\'JournalEntry\' in expenseGroup.response_logs && expenseGroup.response_logs.JournalEntry) {\\n      exportRedirection = \'journal\';\\n      exportType = \'Journal Entry\';\\n      exportId = expenseGroup.response_logs.JournalEntry.Id;\\n    } else if (\'Purchase\' in expenseGroup.response_logs && expenseGroup.response_logs.Purchase) {\\n      exportId = expenseGroup.response_logs.Purchase.Id;\\n      if (expenseGroup.response_logs.Purchase.PaymentType === \'Check\') {\\n        exportRedirection = \'check\';\\n        exportType = exportRedirection;\\n      } else {\\n        exportRedirection = \'expense\';\\n        if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && !expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Purchase\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Credit\';\\n          exportRedirection = \'creditcardcredit\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'Cash\') {\\n          exportType = \'Debit Card Expense\';\\n          exportRedirection = \'expense\';\\n        } else {\\n          exportType = \'expense\';\\n        }\\n      }\\n    }\\n\\n    return [exportRedirection, exportId, exportType];\\n  }\\n\\n  static parseExpenseGroupAPIResponseToExportLog(expenseGroup: ExpenseGroup, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(expenseGroup.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, expenseGroup.expenses[0]);\\n\\n    const [type, id, exportType] = this.generateExportTypeAndId(expenseGroup);\\n\\n    return {\\n      exportedAt: expenseGroup.exported_at,\\n      employee: [expenseGroup.expenses[0].employee_name, expenseGroup.description.employee_email],\\n      expenseType: expenseGroup.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: exportType,\\n      fyleUrl: this.generateFyleUrl(expenseGroup.expenses[0], referenceType, org_id),\\n      integrationUrl: `${environment.qbo_app_url}/app/${type}?txnId=${id}`,\\n      expenses: expenseGroup.expenses\\n    };\\n  }\\n}\\n\\nexport class SkippedAccountingExportModel {\\n  static getfilteredSkippedAccountingExports(query: string, group: SkipExportList): boolean {\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.claim_number ? group.claim_number : \'\';\\n\\n    return (\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static parseAPIResponseToSkipExportList(skippedExpense: SkipExportLog): SkipExportList {\\n    return {\\n      updated_at: skippedExpense.updated_at,\\n      claim_number: skippedExpense.claim_number,\\n      employee: [skippedExpense.employee_name, skippedExpense.employee_email],\\n      expenseType: skippedExpense.fund_source === \'PERSONAL\' ? \'Reimbursable\' : \'Corporate Card\',\\n      fyleUrl: `${environment.fyle_app_url}/app/admin/#/view_expense/${skippedExpense.expense_id}?org_id=${skippedExpense.org_id}`\\n    };\\n  }\\n}\\n","properties":[{"name":"count","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"AccountingExportList","id":"interface-AccountingExportList-2c1527c9453b1f6140475fb479c5dbd80b4eadd3fe8b41f468a5f57ad8c0f39dc2283f96b49dd581062efb31431f9391a14abca53ef232171fb454e4ac9cdb60","file":"src/app/core/models/db/accounting-export.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { SnakeCaseToSpaceCasePipe } from \\"src/app/shared/pipes/snake-case-to-space-case.pipe\\";\\nimport { AccountingExportStatus, AccountingExportType, FundSource, FyleReferenceType } from \\"../enum/enum.model\\";\\nimport { ExpenseGroupDescription, SkipExportList, SkipExportLog } from \\"../si/db/expense-group.model\\";\\nimport { Expense } from \\"../si/db/expense.model\\";\\nimport { TitleCasePipe } from \\"@angular/common\\";\\nimport { ExportLogService } from \\"../../services/common/export-log.service\\";\\nimport { DateFilter } from \\"../qbd/misc/date-filter.model\\";\\nimport { environment } from \\"src/environments/environment\\";\\nimport { ExpenseGroup } from \\"./expense-group.model\\";\\n\\nexport interface AccountingExportCount {\\n    count: number;\\n}\\n\\nexport interface ExportableAccountingExport {\\n  exportable_accounting_export_ids: number[];\\n}\\n\\nexport interface AccountingExportList {\\n    exportedAt: Date;\\n    employee: [string, string];\\n    expenseType: string;\\n    referenceNumber: string;\\n    exportedAs: string;\\n    integrationUrl: string;\\n    fyleUrl: string;\\n    expenses: Expense[];\\n  }\\n\\nexport interface AccountingExport {\\n    id: number;\\n    type: string;\\n    description: ExpenseGroupDescription;\\n    status: AccountingExportStatus;\\n    mapping_errors: {\\n        type: string;\\n        value: string;\\n    }[] | null;\\n    response: Record<string, unknown>;\\n    created_at: Date;\\n    updated_at: Date;\\n    exported_at: Date;\\n    workspace: number;\\n    export_url: string;\\n    expenses: Expense[];\\n    fund_source: FundSource;\\n}\\n\\nexport type AccountingExportGetParam = {\\n    type__in: string[],\\n    status__in: string[],\\n    id__in?: number[],\\n    limit: number,\\n    offset: number,\\n    exported_at__lte?: string,\\n    exported_at__gte?: string\\n}\\n\\nexport class AccountingExportModel {\\n\\n  static getDateOptions(): DateFilter[] {\\n    const currentDateTime = new Date();\\n    const dateOptions: DateFilter[] = [\\n      {\\n        dateRange: \'This Month\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), 1),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'This Week\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), currentDateTime.getDate() - currentDateTime.getDay()),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'Today\',\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: currentDateTime.toLocaleDateString(),\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      }\\n    ];\\n\\n    return dateOptions;\\n  }\\n\\n  static getFyleExpenseUrl(expense_id: string): string {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}`;\\n    return url;\\n  }\\n\\n  static getfilteredAccountingExports(query: string, group: AccountingExportList): boolean {\\n    const employeeName = group.employee ? group.employee[0] : \'\';\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.referenceNumber ? group.referenceNumber : \'\';\\n\\n    return (\\n      employeeName.toLowerCase().includes(query) ||\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static getReferenceType(description: ExpenseGroupDescription): FyleReferenceType {\\n    let referenceType = FyleReferenceType.REPORT_ID;\\n\\n    if (FyleReferenceType.EXPENSE in description) {\\n      referenceType = FyleReferenceType.EXPENSE;\\n    } else if (FyleReferenceType.REPORT_ID in description) {\\n      referenceType = FyleReferenceType.REPORT_ID;\\n    } else if (FyleReferenceType.PAYMENT in description) {\\n      referenceType = FyleReferenceType.PAYMENT;\\n    }\\n\\n    return referenceType;\\n  }\\n\\n  static formatExportType(exportType: string): string {\\n    if (exportType.startsWith(\'CREATING_\')) {\\n      exportType = exportType.substring(\'CREATING_\'.length);\\n    }\\n    exportType = new SnakeCaseToSpaceCasePipe().transform(exportType);\\n    return new TitleCasePipe().transform(exportType);\\n  }\\n\\n  static getFyleReferenceNumber(referenceType: string, expense: Expense): string {\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      return expense.expense_number;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      return expense.payment_number;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      return expense.claim_number;\\n    }\\n    return expense.claim_number;\\n  }\\n\\n  static generateFyleUrl(expense: Expense, referenceType: FyleReferenceType, org_id: string) : string {\\n    let url = `${environment.fyle_app_url}/app/`;\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      url += `admin/#/view_expense/${expense.expense_id}`;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      url += `admin/#/reports/${expense.report_id}`;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      url += `admin/#/settlements/${expense.settlement_id}`;\\n    }\\n    return `${url}?org_id=${org_id}`;\\n  }\\n\\n  static parseAPIResponseToExportLog(accountingExport: AccountingExport, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(accountingExport.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, accountingExport.expenses[0]);\\n    return {\\n      exportedAt: accountingExport.exported_at,\\n      employee: [accountingExport.expenses[0].employee_name, accountingExport.description.employee_email],\\n      expenseType: accountingExport.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: this.formatExportType(accountingExport.type),\\n      fyleUrl: this.generateFyleUrl(accountingExport.expenses[0], referenceType, org_id),\\n      integrationUrl: accountingExport.export_url,\\n      expenses: accountingExport.expenses\\n    };\\n  }\\n\\n  static generateExportTypeAndId(expenseGroup: ExpenseGroup) {\\n    if (!expenseGroup.response_logs) {\\n      return [null, null, null];\\n    }\\n    let exportRedirection = null;\\n    let exportType = null;\\n    let exportId = null;\\n\\n    if (\'Bill\' in expenseGroup.response_logs && expenseGroup.response_logs.Bill) {\\n      exportRedirection = \'bill\';\\n      exportType = exportRedirection;\\n      exportId = expenseGroup.response_logs.Bill.Id;\\n    } else if (\'JournalEntry\' in expenseGroup.response_logs && expenseGroup.response_logs.JournalEntry) {\\n      exportRedirection = \'journal\';\\n      exportType = \'Journal Entry\';\\n      exportId = expenseGroup.response_logs.JournalEntry.Id;\\n    } else if (\'Purchase\' in expenseGroup.response_logs && expenseGroup.response_logs.Purchase) {\\n      exportId = expenseGroup.response_logs.Purchase.Id;\\n      if (expenseGroup.response_logs.Purchase.PaymentType === \'Check\') {\\n        exportRedirection = \'check\';\\n        exportType = exportRedirection;\\n      } else {\\n        exportRedirection = \'expense\';\\n        if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && !expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Purchase\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Credit\';\\n          exportRedirection = \'creditcardcredit\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'Cash\') {\\n          exportType = \'Debit Card Expense\';\\n          exportRedirection = \'expense\';\\n        } else {\\n          exportType = \'expense\';\\n        }\\n      }\\n    }\\n\\n    return [exportRedirection, exportId, exportType];\\n  }\\n\\n  static parseExpenseGroupAPIResponseToExportLog(expenseGroup: ExpenseGroup, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(expenseGroup.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, expenseGroup.expenses[0]);\\n\\n    const [type, id, exportType] = this.generateExportTypeAndId(expenseGroup);\\n\\n    return {\\n      exportedAt: expenseGroup.exported_at,\\n      employee: [expenseGroup.expenses[0].employee_name, expenseGroup.description.employee_email],\\n      expenseType: expenseGroup.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: exportType,\\n      fyleUrl: this.generateFyleUrl(expenseGroup.expenses[0], referenceType, org_id),\\n      integrationUrl: `${environment.qbo_app_url}/app/${type}?txnId=${id}`,\\n      expenses: expenseGroup.expenses\\n    };\\n  }\\n}\\n\\nexport class SkippedAccountingExportModel {\\n  static getfilteredSkippedAccountingExports(query: string, group: SkipExportList): boolean {\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.claim_number ? group.claim_number : \'\';\\n\\n    return (\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static parseAPIResponseToSkipExportList(skippedExpense: SkipExportLog): SkipExportList {\\n    return {\\n      updated_at: skippedExpense.updated_at,\\n      claim_number: skippedExpense.claim_number,\\n      employee: [skippedExpense.employee_name, skippedExpense.employee_email],\\n      expenseType: skippedExpense.fund_source === \'PERSONAL\' ? \'Reimbursable\' : \'Corporate Card\',\\n      fyleUrl: `${environment.fyle_app_url}/app/admin/#/view_expense/${skippedExpense.expense_id}?org_id=${skippedExpense.org_id}`\\n    };\\n  }\\n}\\n","properties":[{"name":"employee","deprecated":false,"deprecationMessage":"","type":"[string, string]","optional":false,"description":"","line":21},{"name":"expenses","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":27},{"name":"expenseType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22},{"name":"exportedAs","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24},{"name":"exportedAt","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":20},{"name":"fyleUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26},{"name":"integrationUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25},{"name":"referenceNumber","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"AccountingExportSummary","id":"interface-AccountingExportSummary-8e2036944a889ba1f78e46369f27dc11ffa7712cdc006aae5f0ffc24e03bd173f90ddf57acad1c1ea19918fdf8f1f0938e12966d1d3c5bd91b54fdba3ad219f2","file":"src/app/core/models/db/accounting-export-summary.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface AccountingExportSummary {\\n    id: number;\\n    last_exported_at: string;\\n    next_export_at: string;\\n    export_mode: string;\\n    total_accounting_export_count: number;\\n    successful_accounting_export_count: number;\\n    failed_accounting_export_count: number;\\n    created_at: string;\\n    updated_at: string;\\n    workspace: number;\\n}\\n\\nexport class AccountingExportSummaryModel {\\n    static parseAPIResponseToAccountingSummary(response: any): AccountingExportSummary {\\n        return {\\n            id: response.id,\\n            last_exported_at: response.last_exported_at,\\n            next_export_at: response.next_export_at,\\n            export_mode: response.export_mode,\\n            total_accounting_export_count: response.total_expense_groups_count,\\n            successful_accounting_export_count: response.successful_expense_groups_count,\\n            failed_accounting_export_count: response.failed_expense_groups_count,\\n            created_at: response.created_at,\\n            updated_at: response.updated_at,\\n            workspace: response.workspace\\n        };\\n    }\\n}\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9},{"name":"export_mode","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"failed_accounting_export_count","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":8},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2},{"name":"last_exported_at","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":3},{"name":"next_export_at","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":4},{"name":"successful_accounting_export_count","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":7},{"name":"total_accounting_export_count","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":6},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":10},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":11}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"AdvancedSettingGeneralMapping","id":"interface-AdvancedSettingGeneralMapping-80b31e6728b27952f8e4805037c7ca5838cf2dd46b93b07bb32d8f709368e6165040e6c71912727e8867de9344aab56bdddc1c7d0aedc163614f8791a2170683","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\nimport { PaymentSyncDirection } from \\"../../enum/enum.model\\";\\nimport { EmailOptions } from \\"../../qbd/qbd-configuration/advanced-setting.model\\";\\n\\n  export interface GeneralMappingEntity {\\n    id: string;\\n    name: string;\\n  }\\n\\n  export  interface HourOption {\\n    label: string;\\n    value: number;\\n  }\\n\\n  export type EmailOption = {\\n    email: string;\\n    name: string;\\n  }\\n\\n  export type AdvancedSettingFormOption = {\\n    label: string,\\n    value: string | null | PaymentSyncDirection\\n}\\n\\nexport type ConditionField = {\\n  field_name: string;\\n  type: string;\\n  is_custom: boolean;\\n};\\n\\nexport enum Operator {\\n  IsNull = \\"isnull\\",\\n  IExact = \\"iexact\\",\\n  IContains = \\"icontains\\",\\n  LessThan = \\"lt\\",\\n  LessThanOrEqual = \\"lte\\"\\n}\\n\\nexport const JoinOptions = {\\n  AND: \'AND\',\\n  OR: \'OR\'\\n};\\n\\nexport enum JoinOption {\\n  AND = \\"AND\\",\\n  OR = \\"OR\\"\\n}\\n\\nexport enum CustomOperatorOption {\\n  Is = \\"iexact\\",\\n  IsEmpty = \\"is_empty\\",\\n  IsNotEmpty = \\"is_not_empty\\"\\n}\\n\\nexport type SkipExport = {\\n  id?: number;\\n  condition: string;\\n  custom_field_type: any;\\n  operator: Operator.IsNull | Operator.IExact | Operator.IContains | Operator.LessThan | Operator.LessThanOrEqual;\\n  values: string[];\\n  rank: number;\\n  join_by: JoinOption.AND | JoinOption.OR | null;\\n  is_custom: boolean;\\n};\\n\\nexport type ExpenseFilterResponse = {\\n  count: number;\\n  results: SkipExport[];\\n};\\n\\nexport interface Configuration {\\n    change_accounting_period: boolean;\\n    sync_fyle_to_sage_intacct_payments: boolean;\\n    sync_sage_intacct_to_fyle_payments: boolean;\\n    auto_create_destination_entity: boolean;\\n    auto_create_merchant_destination_entity: boolean;\\n    memo_structure: string[];\\n  }\\n\\n  export interface AdvancedSettingGeneralMapping {\\n    payment_account: GeneralMappingEntity;\\n    default_location: GeneralMappingEntity;\\n    default_department: GeneralMappingEntity;\\n    default_class: GeneralMappingEntity;\\n    default_project: GeneralMappingEntity;\\n    default_item: GeneralMappingEntity;\\n    use_intacct_employee_departments: boolean;\\n    use_intacct_employee_locations: boolean;\\n  }\\n\\n  export interface WorkspaceSchedules {\\n    enabled: boolean;\\n    start_datetime: string;\\n    interval_hours: number;\\n    emails_selected: string[] | [];\\n    additional_email_options: EmailOption[];\\n  }\\n\\nexport type AdvancedSettingsGet = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n    workspace_id: number;\\n}\\n\\nexport type AdvancedSettingsPost = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n  }\\n\\n  export class AdvancedSetting {\\n    static constructPayload(advancedSettingsForm: FormGroup): AdvancedSettingsPost {\\n      const getFormValue = (key: string) => advancedSettingsForm.get(key)?.value;\\n\\n      const mapAttribute = (key: string, idKey: string, valueKey: string) => {\\n        const value = getFormValue(key);\\n        return value ? { name: value[valueKey], id: value[idKey] } : { name: null, id: null };\\n      };\\n\\n      const advancedSettingPayload: AdvancedSettingsPost = {\\n        configurations: {\\n          auto_create_merchant_destination_entity: true,\\n          sync_fyle_to_sage_intacct_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.FYLE_TO_INTACCT,\\n          sync_sage_intacct_to_fyle_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.INTACCT_TO_FYLE,\\n          auto_create_destination_entity: getFormValue(\'autoCreateEmployeeVendor\'),\\n          change_accounting_period: !!getFormValue(\'postEntriesCurrentPeriod\'),\\n          memo_structure: getFormValue(\'setDescriptionField\')\\n        },\\n        general_mappings: {\\n          payment_account: mapAttribute(\'defaultPaymentAccount\', \'destination_id\', \'value\'),\\n          default_location: mapAttribute(\'defaultLocation\', \'destination_id\', \'value\'),\\n          default_department: mapAttribute(\'defaultDepartment\', \'destination_id\', \'value\'),\\n          default_class: mapAttribute(\'defaultClass\', \'destination_id\', \'value\'),\\n          default_project: mapAttribute(\'defaultProject\', \'destination_id\', \'value\'),\\n          default_item: mapAttribute(\'defaultItems\', \'destination_id\', \'value\'),\\n          use_intacct_employee_departments: !!getFormValue(\'useEmployeeLocation\'),\\n          use_intacct_employee_locations: !!getFormValue(\'useEmployeeDepartment\')\\n        },\\n        workspace_schedules: {\\n          enabled: !!getFormValue(\'scheduleAutoExport\'),\\n          start_datetime: \'\',\\n          interval_hours: getFormValue(\'scheduleAutoExport\'),\\n          emails_selected: advancedSettingsForm.get(\'email\')?.value ? advancedSettingsForm.get(\'email\')?.value.map((item: EmailOptions) => item.email) : [],\\n          additional_email_options: getFormValue(\'addedEmail\')\\n        }\\n      };\\n\\n      return advancedSettingPayload;\\n    }\\n  }","properties":[{"name":"default_class","deprecated":false,"deprecationMessage":"","type":"GeneralMappingEntity","optional":false,"description":"","line":84},{"name":"default_department","deprecated":false,"deprecationMessage":"","type":"GeneralMappingEntity","optional":false,"description":"","line":83},{"name":"default_item","deprecated":false,"deprecationMessage":"","type":"GeneralMappingEntity","optional":false,"description":"","line":86},{"name":"default_location","deprecated":false,"deprecationMessage":"","type":"GeneralMappingEntity","optional":false,"description":"","line":82},{"name":"default_project","deprecated":false,"deprecationMessage":"","type":"GeneralMappingEntity","optional":false,"description":"","line":85},{"name":"payment_account","deprecated":false,"deprecationMessage":"","type":"GeneralMappingEntity","optional":false,"description":"","line":81},{"name":"use_intacct_employee_departments","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":87},{"name":"use_intacct_employee_locations","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":88}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"BusinessCentralAccountingExport","id":"interface-BusinessCentralAccountingExport-166f45e5262c7020f6a90db2d52a9ca7bf6baaa0d90d60bb1e8117f9d70c49659384faf7e2570c9e13f0bd749e9c492ab0e7180a8a3aa7a0987a7bd1d2700a96","file":"src/app/core/models/business-central/db/business-central-accounting-export.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AccountingExport } from \\"../../db/accounting-export.model\\";\\nimport { PaginatedResponse } from \\"../../db/paginated-response.model\\";\\n\\nexport interface BusinessCentralAccountingExport extends AccountingExport {\\n    business_central_errors: any;\\n    purchase_invoice_id: null | number;\\n    journal_entry_id: null | number;\\n    business_central_reimbursement: null | number;\\n}\\n\\nexport interface BusinessCentralAccountingExportResponse extends PaginatedResponse {\\n    results: BusinessCentralAccountingExport[];\\n}","properties":[{"name":"business_central_errors","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":5},{"name":"business_central_reimbursement","deprecated":false,"deprecationMessage":"","type":"null | number","optional":false,"description":"","line":8},{"name":"journal_entry_id","deprecated":false,"deprecationMessage":"","type":"null | number","optional":false,"description":"","line":7},{"name":"purchase_invoice_id","deprecated":false,"deprecationMessage":"","type":"null | number","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":171,"methods":[],"extends":["AccountingExport"]},{"name":"BusinessCentralAccountingExportResponse","id":"interface-BusinessCentralAccountingExportResponse-166f45e5262c7020f6a90db2d52a9ca7bf6baaa0d90d60bb1e8117f9d70c49659384faf7e2570c9e13f0bd749e9c492ab0e7180a8a3aa7a0987a7bd1d2700a96","file":"src/app/core/models/business-central/db/business-central-accounting-export.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AccountingExport } from \\"../../db/accounting-export.model\\";\\nimport { PaginatedResponse } from \\"../../db/paginated-response.model\\";\\n\\nexport interface BusinessCentralAccountingExport extends AccountingExport {\\n    business_central_errors: any;\\n    purchase_invoice_id: null | number;\\n    journal_entry_id: null | number;\\n    business_central_reimbursement: null | number;\\n}\\n\\nexport interface BusinessCentralAccountingExportResponse extends PaginatedResponse {\\n    results: BusinessCentralAccountingExport[];\\n}","properties":[{"name":"results","deprecated":false,"deprecationMessage":"","type":"BusinessCentralAccountingExport[]","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":171,"methods":[],"extends":["PaginatedResponse"]},{"name":"BusinessCentralAdvancedSettingsGet","id":"interface-BusinessCentralAdvancedSettingsGet-b34c0db255e5588a657b2a74b76e2ee655a6a36bb40dbd03190c54d1c7a629eafcb555069d3707c428463722300c0cf8f560021a7c3bfef6e29fc5021c208f67","file":"src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ConditionField, ExpenseFilterPayload, ExpenseFilterPost } from \\"../../common/advanced-settings.model\\";\\nimport { JoinOption, Operator } from \\"../../enum/enum.model\\";\\n\\nexport type BusinessCentralAdvancedSettings = {\\n    top_memo_structure: string[],\\n    expense_memo_structure: string[],\\n    schedule_is_enabled: boolean,\\n    interval_hours: number\\n}\\n\\nexport interface BusinessCentralAdvancedSettingsGet extends BusinessCentralAdvancedSettings {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    workspace: number\\n}\\n\\nexport interface BusinessCentralAdvancedSettingsPost extends BusinessCentralAdvancedSettings { }\\n\\nexport class BusinessCentralAdvancedSettingsModel {\\n\\n  static mapAPIResponseToFormGroup(advancedSettings: BusinessCentralAdvancedSettingsGet | null, isSkipExportEnabled: boolean): FormGroup {\\n    const defaultMemoOptions: string[] = [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n    return new FormGroup({\\n      memoStructure: new FormControl(advancedSettings?.expense_memo_structure ? advancedSettings?.expense_memo_structure : defaultMemoOptions),\\n      scheduleEnabled: new FormControl(advancedSettings?.schedule_is_enabled ? true : false),\\n      scheduleAutoExportFrequency: new FormControl(advancedSettings?.interval_hours ? advancedSettings.interval_hours : 1),\\n      topMemo: new FormControl(advancedSettings?.top_memo_structure ? advancedSettings?.top_memo_structure : defaultMemoOptions[0]),\\n      skipExport: new FormControl(isSkipExportEnabled)\\n    });\\n  }\\n\\n  static createAdvancedSettingPayload(advancedSettingsForm: FormGroup): BusinessCentralAdvancedSettingsPost {\\n    return {\\n      top_memo_structure: advancedSettingsForm.get(\'topMemo\')?.value ? advancedSettingsForm.get(\'topMemo\')?.value : null,\\n      expense_memo_structure: advancedSettingsForm.get(\'memoStructure\')?.value ? advancedSettingsForm.get(\'memoStructure\')?.value : null,\\n      schedule_is_enabled: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleEnabled\')?.value : false,\\n      interval_hours: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleAutoExportFrequency\')?.value : null\\n    };\\n  }\\n}\\n\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":14},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":15},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16}],"indexSignatures":[],"kind":171,"methods":[],"extends":["BusinessCentralAdvancedSettings"]},{"name":"BusinessCentralAdvancedSettingsPost","id":"interface-BusinessCentralAdvancedSettingsPost-b34c0db255e5588a657b2a74b76e2ee655a6a36bb40dbd03190c54d1c7a629eafcb555069d3707c428463722300c0cf8f560021a7c3bfef6e29fc5021c208f67","file":"src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ConditionField, ExpenseFilterPayload, ExpenseFilterPost } from \\"../../common/advanced-settings.model\\";\\nimport { JoinOption, Operator } from \\"../../enum/enum.model\\";\\n\\nexport type BusinessCentralAdvancedSettings = {\\n    top_memo_structure: string[],\\n    expense_memo_structure: string[],\\n    schedule_is_enabled: boolean,\\n    interval_hours: number\\n}\\n\\nexport interface BusinessCentralAdvancedSettingsGet extends BusinessCentralAdvancedSettings {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    workspace: number\\n}\\n\\nexport interface BusinessCentralAdvancedSettingsPost extends BusinessCentralAdvancedSettings { }\\n\\nexport class BusinessCentralAdvancedSettingsModel {\\n\\n  static mapAPIResponseToFormGroup(advancedSettings: BusinessCentralAdvancedSettingsGet | null, isSkipExportEnabled: boolean): FormGroup {\\n    const defaultMemoOptions: string[] = [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n    return new FormGroup({\\n      memoStructure: new FormControl(advancedSettings?.expense_memo_structure ? advancedSettings?.expense_memo_structure : defaultMemoOptions),\\n      scheduleEnabled: new FormControl(advancedSettings?.schedule_is_enabled ? true : false),\\n      scheduleAutoExportFrequency: new FormControl(advancedSettings?.interval_hours ? advancedSettings.interval_hours : 1),\\n      topMemo: new FormControl(advancedSettings?.top_memo_structure ? advancedSettings?.top_memo_structure : defaultMemoOptions[0]),\\n      skipExport: new FormControl(isSkipExportEnabled)\\n    });\\n  }\\n\\n  static createAdvancedSettingPayload(advancedSettingsForm: FormGroup): BusinessCentralAdvancedSettingsPost {\\n    return {\\n      top_memo_structure: advancedSettingsForm.get(\'topMemo\')?.value ? advancedSettingsForm.get(\'topMemo\')?.value : null,\\n      expense_memo_structure: advancedSettingsForm.get(\'memoStructure\')?.value ? advancedSettingsForm.get(\'memoStructure\')?.value : null,\\n      schedule_is_enabled: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleEnabled\')?.value : false,\\n      interval_hours: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleAutoExportFrequency\')?.value : null\\n    };\\n  }\\n}\\n\\n","properties":[],"indexSignatures":[],"methods":[],"extends":["BusinessCentralAdvancedSettings"]},{"name":"BusinessCentralCompanyDetails","id":"interface-BusinessCentralCompanyDetails-e385e84004b36ad7c08bd43f78094b3a4b59ef44efb624efb08050a3b320f861509eb516ea8d1c4766bf6d202f1af88deaab0f5e5da265ff001c86bcfe3d1b15","file":"src/app/core/models/business-central/db/business-central-credentials.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { BusinessCentralWorkspace } from \\"./business-central-workspace.model\\";\\n\\nexport type BusinessCentralCredential = {\\n    id: number;\\n    refresh_token: string;\\n    is_expired: boolean;\\n    country: string;\\n    created_at: Date;\\n    updated_at: Date;\\n    workspace: number;\\n}\\n\\nexport interface BusinessCentralCompanyDetails extends BusinessCentralWorkspace {\\n    business_central_company: string;\\n}","properties":[{"name":"business_central_company","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":171,"methods":[],"extends":["BusinessCentralWorkspace"]},{"name":"BusinessCentralConnectorPost","id":"interface-BusinessCentralConnectorPost-4446a8117fd647251e00a77a11d489c910d3101c11298d679ad2d9a53cdc63d5a7dc6f3a49bc4aefa73d0c120e429e9c4b5b9f8a8d064cd2bf9af78d59c26773","file":"src/app/core/models/business-central/business-central-configuration/business-central-connector.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { environment } from \\"src/environments/environment\\";\\n\\nexport type BusinessCentralConnector = {\\n  code: string;\\n  callback_url: string;\\n  workspace: number\\n}\\n\\nexport interface BusinessCentralConnectorPost extends BusinessCentralConnector {}\\n\\nexport class BusinessCentralConnectorModel {\\n  static constructPayload(code: string, workspaceId: number): BusinessCentralConnectorPost {\\n    return {\\n      code,\\n      callback_url: `${environment.business_central_oauth_redirect_uri}`,\\n      workspace: workspaceId\\n    };\\n  }\\n}","properties":[],"indexSignatures":[],"methods":[],"extends":["BusinessCentralConnector"]},{"name":"BusinessCentralDestinationAttributes","id":"interface-BusinessCentralDestinationAttributes-3fd150e0215284a227871a53d1f0a40392794b3245a8900fdfc3667fe45f0767b1d642ad88c68f157f1665738fc3916f0d4a5a62d8ee6ed94c5f6b5222d0a83a","file":"src/app/core/models/business-central/db/business-central-destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { DestinationAttribute, GroupedDestinationAttribute } from \\"../../db/destination-attribute.model\\";\\n\\ntype EmployeeMappingDetail = {\\n    email: string | null;\\n}\\n\\ntype TaxMappingDetails = {\\n    customer_id: string | null,\\n    customer_name: string | null\\n}\\n\\nexport interface BusinessCentralDestinationAttributes extends DestinationAttribute {\\n    auto_created: boolean;\\n    detail: EmployeeMappingDetail | TaxMappingDetails | null;\\n}\\n","properties":[{"name":"auto_created","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":13},{"name":"detail","deprecated":false,"deprecationMessage":"","type":"EmployeeMappingDetail | TaxMappingDetails | null","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":171,"methods":[],"extends":["DestinationAttribute"]},{"name":"BusinessCentralExportSettingGet","id":"interface-BusinessCentralExportSettingGet-e4250055edf1de6ab7ff6cd015055bbf9d0b9f7a35620e305f7e7e5767c13e28c2d40bc9983be92b8b2cac2afd07145c9fdbe20172a885e3ab8328364b836432","file":"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormGroup, FormControl } from \\"@angular/forms\\";\\nimport { AutoMapEmployeeOptions, BusinessCentralExportType, CCCExpenseState, ExpenseGroupedBy, ExpenseState, ExportDateType, FyleField } from \\"../../enum/enum.model\\";\\n\\nexport type BusinessCentralExportSetting = {\\n    reimbursable_expenses_export_type: BusinessCentralExportType,\\n    reimbursable_expense_state: ExpenseState,\\n    reimbursable_expense_date: ExportDateType,\\n    reimbursable_expense_grouped_by: ExpenseGroupedBy,\\n    credit_card_expense_export_type: BusinessCentralExportType,\\n    credit_card_expense_state: CCCExpenseState,\\n    credit_card_expense_grouped_by: ExpenseGroupedBy,\\n    credit_card_expense_date: ExportDateType,\\n    default_credit_card_account_name: string,\\n    default_credit_card_account_id: string,\\n    default_bank_account_name: string,\\n    default_bank_account_id: string,\\n    credit_card_entity_name_preference: string,\\n    employee_mapping: string\\n}\\n\\nexport interface BusinessCentralExportSettingGet extends BusinessCentralExportSetting {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    workspace: number\\n}\\n\\nexport interface BusinessCentralExportSettingPost extends BusinessCentralExportSetting {}\\n\\nexport type BusinessCentralExportSettingFormOption = {\\n    label: string,\\n    value: ExpenseState | CCCExpenseState | FyleField | ExpenseGroupedBy | BusinessCentralExportType | ExportDateType | AutoMapEmployeeOptions;\\n}\\n\\nexport class BusinessCentralExportSettingModel {\\n\\n    static getExpenseGroupByOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Expense\',\\n            value: ExpenseGroupedBy.EXPENSE\\n          },\\n          {\\n            label: \'Expense Report\',\\n            value: ExpenseGroupedBy.REPORT\\n          }\\n        ];\\n    }\\n\\n    static getExpenseGroupingDateOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Current Date\',\\n            value: ExportDateType.CURRENT_DATE\\n          },\\n          {\\n            label: \'Approval Date\',\\n            value: ExportDateType.APPROVAL_DATE\\n          },\\n          {\\n            label: \'Last Spent At\',\\n            value: ExportDateType.LAST_SPENT_AT\\n          },\\n          {\\n            label: \'Spent Date\',\\n            value: ExportDateType.SPENT_AT\\n          }\\n        ];\\n    }\\n\\n    static getReimbursableExpensesExportTypeOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Accounts Payable Invoice\',\\n            value: BusinessCentralExportType.PURCHASE_INVOICE\\n          },\\n          {\\n            label: \'Journal Entry\',\\n            value: BusinessCentralExportType.JOURNAL_ENTRY\\n          }\\n        ];\\n    }\\n\\n    static getCCCExpensesExportTypeOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Journal Entry\',\\n            value: BusinessCentralExportType.JOURNAL_ENTRY\\n          }\\n        ];\\n    }\\n\\n    static getExpenseState(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Processing\',\\n            value: ExpenseState.PAYMENT_PROCESSING\\n          },\\n          {\\n            label: \'Closed\',\\n            value: ExpenseState.PAID\\n          }\\n        ];\\n    }\\n\\n    static getEntityOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n            {\\n              label: \'Employee\',\\n              value: FyleField.EMPLOYEE\\n            },\\n            {\\n              label: \'Vendor\',\\n              value: FyleField.VENDOR\\n            }\\n        ];\\n    }\\n\\n    static getEmployeeMappingOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n            { label: \'Based on Employee E-mail ID\', value: AutoMapEmployeeOptions.EMAIL },\\n            { label: \'Based on Employee Name\', value: AutoMapEmployeeOptions.NAME },\\n            { label: \'Based on Employee Code\', value: AutoMapEmployeeOptions.EMPLOYEE_CODE }\\n        ];\\n    }\\n\\n    static mapAPIResponseToFormGroup(exportSettings: BusinessCentralExportSettingGet | null): FormGroup {\\n        return new FormGroup({\\n            reimbursableExpense: new FormControl(exportSettings?.reimbursable_expenses_export_type ? true : false),\\n            reimbursableExportType: new FormControl(exportSettings?.reimbursable_expenses_export_type ? exportSettings.reimbursable_expenses_export_type : null),\\n            reimbursableExpenseState: new FormControl(exportSettings?.reimbursable_expense_state ? exportSettings?.reimbursable_expense_state : null),\\n            reimbursableExportDate: new FormControl(exportSettings?.reimbursable_expense_date ? exportSettings?.reimbursable_expense_date : null),\\n            reimbursableExportGroup: new FormControl(exportSettings?.reimbursable_expense_grouped_by ? exportSettings?.reimbursable_expense_grouped_by: null),\\n            creditCardExpense: new FormControl(exportSettings?.credit_card_expense_export_type ? true : false),\\n            cccExportType: new FormControl(exportSettings?.credit_card_expense_export_type ? exportSettings.credit_card_expense_export_type : null),\\n            cccExpenseState: new FormControl(exportSettings?.credit_card_expense_state ? exportSettings?.credit_card_expense_state : null),\\n            cccExportDate: new FormControl(exportSettings?.credit_card_expense_date ? exportSettings?.credit_card_expense_date : null),\\n            cccExportGroup: new FormControl(exportSettings?.credit_card_expense_grouped_by ? exportSettings?.credit_card_expense_grouped_by: null),\\n            defaultCreditCardCCCAccountName: new FormControl(exportSettings?.default_credit_card_account_name ? exportSettings?.default_credit_card_account_name : null),\\n            defaultBankName: new FormControl(exportSettings?.default_bank_account_name ? exportSettings?.default_bank_account_name : null),\\n            entityNamePreference: new FormControl(exportSettings?.credit_card_entity_name_preference ? exportSettings?.credit_card_entity_name_preference : null),\\n            reimbursableEmployeeMapping: new FormControl(exportSettings?.employee_mapping ? exportSettings?.employee_mapping : null)\\n        });\\n    }\\n\\n    static createExportSettingPayload(exportSettingsForm: FormGroup): BusinessCentralExportSettingPost {\\n        return {\\n            reimbursable_expenses_export_type: exportSettingsForm.get(\'reimbursableExportType\')?.value ? exportSettingsForm.get(\'reimbursableExportType\')?.value : null,\\n            reimbursable_expense_state: exportSettingsForm.get(\'reimbursableExpenseState\')?.value ? exportSettingsForm.get(\'reimbursableExpenseState\')?.value : null,\\n            reimbursable_expense_date: exportSettingsForm.get(\'reimbursableExportDate\')?.value ? exportSettingsForm.get(\'reimbursableExportDate\')?.value : null,\\n            reimbursable_expense_grouped_by: exportSettingsForm.get(\'reimbursableExportGroup\')?.value ? exportSettingsForm.get(\'reimbursableExportGroup\')?.value : null,\\n            credit_card_expense_export_type: exportSettingsForm.get(\'cccExportType\')?.value ? exportSettingsForm.get(\'cccExportType\')?.value : null,\\n            credit_card_expense_state: exportSettingsForm.get(\'cccExpenseState\')?.value ? exportSettingsForm.get(\'cccExpenseState\')?.value : null,\\n            credit_card_expense_grouped_by: exportSettingsForm.get(\'cccExportGroup\')?.value ? exportSettingsForm.get(\'cccExportGroup\')?.value : null,\\n            credit_card_expense_date: exportSettingsForm.get(\'cccExportDate\')?.value ? exportSettingsForm.get(\'cccExportDate\')?.value : null,\\n            default_credit_card_account_name: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.value : null,\\n            default_credit_card_account_id: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.destination_id : null,\\n            default_bank_account_name: exportSettingsForm.get(\'defaultBankName\')?.value ? exportSettingsForm.get(\'defaultBankName\')?.value.value : null,\\n            default_bank_account_id: exportSettingsForm.get(\'defaultBankName\')?.value ? exportSettingsForm.get(\'defaultBankName\')?.value.destination_id : null,\\n            credit_card_entity_name_preference: exportSettingsForm.get(\'entityNamePreference\')?.value ? exportSettingsForm.get(\'entityNamePreference\')?.value : null,\\n            employee_mapping: exportSettingsForm.get(\'reimbursableEmployeeMapping\')?.value ? exportSettingsForm.get(\'reimbursableEmployeeMapping\')?.value : null\\n        };\\n    }\\n  }\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":23},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":22},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":24},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":25}],"indexSignatures":[],"kind":171,"methods":[],"extends":["BusinessCentralExportSetting"]},{"name":"BusinessCentralExportSettingPost","id":"interface-BusinessCentralExportSettingPost-e4250055edf1de6ab7ff6cd015055bbf9d0b9f7a35620e305f7e7e5767c13e28c2d40bc9983be92b8b2cac2afd07145c9fdbe20172a885e3ab8328364b836432","file":"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormGroup, FormControl } from \\"@angular/forms\\";\\nimport { AutoMapEmployeeOptions, BusinessCentralExportType, CCCExpenseState, ExpenseGroupedBy, ExpenseState, ExportDateType, FyleField } from \\"../../enum/enum.model\\";\\n\\nexport type BusinessCentralExportSetting = {\\n    reimbursable_expenses_export_type: BusinessCentralExportType,\\n    reimbursable_expense_state: ExpenseState,\\n    reimbursable_expense_date: ExportDateType,\\n    reimbursable_expense_grouped_by: ExpenseGroupedBy,\\n    credit_card_expense_export_type: BusinessCentralExportType,\\n    credit_card_expense_state: CCCExpenseState,\\n    credit_card_expense_grouped_by: ExpenseGroupedBy,\\n    credit_card_expense_date: ExportDateType,\\n    default_credit_card_account_name: string,\\n    default_credit_card_account_id: string,\\n    default_bank_account_name: string,\\n    default_bank_account_id: string,\\n    credit_card_entity_name_preference: string,\\n    employee_mapping: string\\n}\\n\\nexport interface BusinessCentralExportSettingGet extends BusinessCentralExportSetting {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    workspace: number\\n}\\n\\nexport interface BusinessCentralExportSettingPost extends BusinessCentralExportSetting {}\\n\\nexport type BusinessCentralExportSettingFormOption = {\\n    label: string,\\n    value: ExpenseState | CCCExpenseState | FyleField | ExpenseGroupedBy | BusinessCentralExportType | ExportDateType | AutoMapEmployeeOptions;\\n}\\n\\nexport class BusinessCentralExportSettingModel {\\n\\n    static getExpenseGroupByOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Expense\',\\n            value: ExpenseGroupedBy.EXPENSE\\n          },\\n          {\\n            label: \'Expense Report\',\\n            value: ExpenseGroupedBy.REPORT\\n          }\\n        ];\\n    }\\n\\n    static getExpenseGroupingDateOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Current Date\',\\n            value: ExportDateType.CURRENT_DATE\\n          },\\n          {\\n            label: \'Approval Date\',\\n            value: ExportDateType.APPROVAL_DATE\\n          },\\n          {\\n            label: \'Last Spent At\',\\n            value: ExportDateType.LAST_SPENT_AT\\n          },\\n          {\\n            label: \'Spent Date\',\\n            value: ExportDateType.SPENT_AT\\n          }\\n        ];\\n    }\\n\\n    static getReimbursableExpensesExportTypeOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Accounts Payable Invoice\',\\n            value: BusinessCentralExportType.PURCHASE_INVOICE\\n          },\\n          {\\n            label: \'Journal Entry\',\\n            value: BusinessCentralExportType.JOURNAL_ENTRY\\n          }\\n        ];\\n    }\\n\\n    static getCCCExpensesExportTypeOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Journal Entry\',\\n            value: BusinessCentralExportType.JOURNAL_ENTRY\\n          }\\n        ];\\n    }\\n\\n    static getExpenseState(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Processing\',\\n            value: ExpenseState.PAYMENT_PROCESSING\\n          },\\n          {\\n            label: \'Closed\',\\n            value: ExpenseState.PAID\\n          }\\n        ];\\n    }\\n\\n    static getEntityOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n            {\\n              label: \'Employee\',\\n              value: FyleField.EMPLOYEE\\n            },\\n            {\\n              label: \'Vendor\',\\n              value: FyleField.VENDOR\\n            }\\n        ];\\n    }\\n\\n    static getEmployeeMappingOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n            { label: \'Based on Employee E-mail ID\', value: AutoMapEmployeeOptions.EMAIL },\\n            { label: \'Based on Employee Name\', value: AutoMapEmployeeOptions.NAME },\\n            { label: \'Based on Employee Code\', value: AutoMapEmployeeOptions.EMPLOYEE_CODE }\\n        ];\\n    }\\n\\n    static mapAPIResponseToFormGroup(exportSettings: BusinessCentralExportSettingGet | null): FormGroup {\\n        return new FormGroup({\\n            reimbursableExpense: new FormControl(exportSettings?.reimbursable_expenses_export_type ? true : false),\\n            reimbursableExportType: new FormControl(exportSettings?.reimbursable_expenses_export_type ? exportSettings.reimbursable_expenses_export_type : null),\\n            reimbursableExpenseState: new FormControl(exportSettings?.reimbursable_expense_state ? exportSettings?.reimbursable_expense_state : null),\\n            reimbursableExportDate: new FormControl(exportSettings?.reimbursable_expense_date ? exportSettings?.reimbursable_expense_date : null),\\n            reimbursableExportGroup: new FormControl(exportSettings?.reimbursable_expense_grouped_by ? exportSettings?.reimbursable_expense_grouped_by: null),\\n            creditCardExpense: new FormControl(exportSettings?.credit_card_expense_export_type ? true : false),\\n            cccExportType: new FormControl(exportSettings?.credit_card_expense_export_type ? exportSettings.credit_card_expense_export_type : null),\\n            cccExpenseState: new FormControl(exportSettings?.credit_card_expense_state ? exportSettings?.credit_card_expense_state : null),\\n            cccExportDate: new FormControl(exportSettings?.credit_card_expense_date ? exportSettings?.credit_card_expense_date : null),\\n            cccExportGroup: new FormControl(exportSettings?.credit_card_expense_grouped_by ? exportSettings?.credit_card_expense_grouped_by: null),\\n            defaultCreditCardCCCAccountName: new FormControl(exportSettings?.default_credit_card_account_name ? exportSettings?.default_credit_card_account_name : null),\\n            defaultBankName: new FormControl(exportSettings?.default_bank_account_name ? exportSettings?.default_bank_account_name : null),\\n            entityNamePreference: new FormControl(exportSettings?.credit_card_entity_name_preference ? exportSettings?.credit_card_entity_name_preference : null),\\n            reimbursableEmployeeMapping: new FormControl(exportSettings?.employee_mapping ? exportSettings?.employee_mapping : null)\\n        });\\n    }\\n\\n    static createExportSettingPayload(exportSettingsForm: FormGroup): BusinessCentralExportSettingPost {\\n        return {\\n            reimbursable_expenses_export_type: exportSettingsForm.get(\'reimbursableExportType\')?.value ? exportSettingsForm.get(\'reimbursableExportType\')?.value : null,\\n            reimbursable_expense_state: exportSettingsForm.get(\'reimbursableExpenseState\')?.value ? exportSettingsForm.get(\'reimbursableExpenseState\')?.value : null,\\n            reimbursable_expense_date: exportSettingsForm.get(\'reimbursableExportDate\')?.value ? exportSettingsForm.get(\'reimbursableExportDate\')?.value : null,\\n            reimbursable_expense_grouped_by: exportSettingsForm.get(\'reimbursableExportGroup\')?.value ? exportSettingsForm.get(\'reimbursableExportGroup\')?.value : null,\\n            credit_card_expense_export_type: exportSettingsForm.get(\'cccExportType\')?.value ? exportSettingsForm.get(\'cccExportType\')?.value : null,\\n            credit_card_expense_state: exportSettingsForm.get(\'cccExpenseState\')?.value ? exportSettingsForm.get(\'cccExpenseState\')?.value : null,\\n            credit_card_expense_grouped_by: exportSettingsForm.get(\'cccExportGroup\')?.value ? exportSettingsForm.get(\'cccExportGroup\')?.value : null,\\n            credit_card_expense_date: exportSettingsForm.get(\'cccExportDate\')?.value ? exportSettingsForm.get(\'cccExportDate\')?.value : null,\\n            default_credit_card_account_name: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.value : null,\\n            default_credit_card_account_id: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.destination_id : null,\\n            default_bank_account_name: exportSettingsForm.get(\'defaultBankName\')?.value ? exportSettingsForm.get(\'defaultBankName\')?.value.value : null,\\n            default_bank_account_id: exportSettingsForm.get(\'defaultBankName\')?.value ? exportSettingsForm.get(\'defaultBankName\')?.value.destination_id : null,\\n            credit_card_entity_name_preference: exportSettingsForm.get(\'entityNamePreference\')?.value ? exportSettingsForm.get(\'entityNamePreference\')?.value : null,\\n            employee_mapping: exportSettingsForm.get(\'reimbursableEmployeeMapping\')?.value ? exportSettingsForm.get(\'reimbursableEmployeeMapping\')?.value : null\\n        };\\n    }\\n  }\\n","properties":[],"indexSignatures":[],"methods":[],"extends":["BusinessCentralExportSetting"]},{"name":"BusinessCentralImportSettingsGet","id":"interface-BusinessCentralImportSettingsGet-4788a953afa288822c7e0774b5c7640ede8f4ef76e902e0e6e479f8e91c0929bc96b8add350c515516d6e092739033659d588aa9a6337f77afaaff5a5ba883e8","file":"src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormArray, FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ImportSettingMappingRow, ImportSettingsModel } from \\"../../common/import-settings.model\\";\\nimport { IntegrationField } from \\"../../db/mapping.model\\";\\n\\nexport type BusinessCentralImportSettings = {\\n    import_categories: boolean,\\n    mapping_settings: ImportSettingMappingRow[] | []\\n}\\n\\nexport interface BusinessCentralImportSettingsGet extends BusinessCentralImportSettings {\\n    id: number,\\n    workspace_id: number,\\n    created_at: Date,\\n    updated_at: Date\\n}\\n\\nexport interface BusinessCentralImportSettingsPost extends BusinessCentralImportSettings {}\\n\\nexport class BusinessCentralImportSettingsModel extends ImportSettingsModel {\\n\\n    static mapAPIResponseToFormGroup(importSettings: BusinessCentralImportSettingsGet | null, businessCentralFields: IntegrationField[]): FormGroup {\\n        const expenseFieldsArray = importSettings?.mapping_settings ? this.constructFormArray(importSettings.mapping_settings, businessCentralFields) : [] ;\\n        return new FormGroup({\\n            importCategories: new FormControl(importSettings?.import_categories ?? false),\\n            expenseFields: new FormArray(expenseFieldsArray)\\n        });\\n    }\\n\\n    static createImportSettingPayload(importSettingsForm: FormGroup): BusinessCentralImportSettingsPost {\\n        const expenseFieldArray = importSettingsForm.value.expenseFields;\\n        const mappingSettings = this.constructMappingSettingPayload(expenseFieldArray);\\n        return {\\n            import_categories: importSettingsForm.get(\'importCategories\')?.value,\\n            mapping_settings: mappingSettings\\n        };\\n    }\\n\\n}\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":13},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":11},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":14},{"name":"workspace_id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":171,"methods":[],"extends":["BusinessCentralImportSettings"]},{"name":"BusinessCentralImportSettingsPost","id":"interface-BusinessCentralImportSettingsPost-4788a953afa288822c7e0774b5c7640ede8f4ef76e902e0e6e479f8e91c0929bc96b8add350c515516d6e092739033659d588aa9a6337f77afaaff5a5ba883e8","file":"src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormArray, FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ImportSettingMappingRow, ImportSettingsModel } from \\"../../common/import-settings.model\\";\\nimport { IntegrationField } from \\"../../db/mapping.model\\";\\n\\nexport type BusinessCentralImportSettings = {\\n    import_categories: boolean,\\n    mapping_settings: ImportSettingMappingRow[] | []\\n}\\n\\nexport interface BusinessCentralImportSettingsGet extends BusinessCentralImportSettings {\\n    id: number,\\n    workspace_id: number,\\n    created_at: Date,\\n    updated_at: Date\\n}\\n\\nexport interface BusinessCentralImportSettingsPost extends BusinessCentralImportSettings {}\\n\\nexport class BusinessCentralImportSettingsModel extends ImportSettingsModel {\\n\\n    static mapAPIResponseToFormGroup(importSettings: BusinessCentralImportSettingsGet | null, businessCentralFields: IntegrationField[]): FormGroup {\\n        const expenseFieldsArray = importSettings?.mapping_settings ? this.constructFormArray(importSettings.mapping_settings, businessCentralFields) : [] ;\\n        return new FormGroup({\\n            importCategories: new FormControl(importSettings?.import_categories ?? false),\\n            expenseFields: new FormArray(expenseFieldsArray)\\n        });\\n    }\\n\\n    static createImportSettingPayload(importSettingsForm: FormGroup): BusinessCentralImportSettingsPost {\\n        const expenseFieldArray = importSettingsForm.value.expenseFields;\\n        const mappingSettings = this.constructMappingSettingPayload(expenseFieldArray);\\n        return {\\n            import_categories: importSettingsForm.get(\'importCategories\')?.value,\\n            mapping_settings: mappingSettings\\n        };\\n    }\\n\\n}\\n","properties":[],"indexSignatures":[],"methods":[],"extends":["BusinessCentralImportSettings"]},{"name":"BusinessCentralWorkspace","id":"interface-BusinessCentralWorkspace-b5f9a60942507a0abb3bc0020b2f60a4c34403ecd9870bf60ba75c62d6871f5900fb3f0115f8d065826f6980cfe7bb861394026ad4fb120f0af5517bf5944fa3","file":"src/app/core/models/business-central/db/business-central-workspace.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Workspace } from \\"../../db/workspaces.model\\";\\nimport { BusinessCentralOnboardingState } from \\"../../enum/enum.model\\";\\n\\nexport interface BusinessCentralWorkspace extends Workspace {\\n    business_central_currency: string,\\n    last_synced_at: Date,\\n    ccc_last_synced_at: Date,\\n    source_synced_at: Date,\\n    destination_synced_at: Date,\\n    business_central_accounts_last_synced_at: Date,\\n    onboarding_state: BusinessCentralOnboardingState\\n}","properties":[{"name":"business_central_accounts_last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":10},{"name":"business_central_currency","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"ccc_last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":7},{"name":"destination_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":9},{"name":"last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":6},{"name":"onboarding_state","deprecated":false,"deprecationMessage":"","type":"BusinessCentralOnboardingState","optional":false,"description":"","line":11},{"name":"source_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":171,"methods":[],"extends":["Workspace"]},{"name":"CategoryMapping","id":"interface-CategoryMapping-6f65ca297ff6ac71d6bab8acbc8372c2a9a01e195d5695d97da5731da82ddccb8ba3d57b2455541b05226fd171949025a5b7a6435f333c326c161bb1d4f78f9a","file":"src/app/core/models/db/category-mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { DestinationAttribute } from \\"./destination-attribute.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { MappingPrimaryKey } from \\"./mapping.model\\";\\n\\n\\nexport type CategoryMappingPost = {\\n  source_category: MappingPrimaryKey;\\n  destination_account: MappingPrimaryKey;\\n  destination_expense_head: MappingPrimaryKey;\\n  workspace: number;\\n}\\n\\nexport interface CategoryMapping {\\n  id: number,\\n  created_at: Date,\\n  destination_account: DestinationAttribute,\\n  destination_expense_head: DestinationAttribute,\\n  source_category: ExpenseAttribute,\\n  updated_at: Date,\\n  workspace: number\\n}","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":15},{"name":"destination_account","deprecated":false,"deprecationMessage":"","type":"DestinationAttribute","optional":false,"description":"","line":16},{"name":"destination_expense_head","deprecated":false,"deprecationMessage":"","type":"DestinationAttribute","optional":false,"description":"","line":17},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":14},{"name":"source_category","deprecated":false,"deprecationMessage":"","type":"ExpenseAttribute","optional":false,"description":"","line":18},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":19},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":20}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"CategoryMapping","id":"interface-CategoryMapping-aeba56fcee8f4c36e0a946dafcb7c4083cbf813590b3318629ac2876a8161e025f0d03cbabda6edf6022a896655bdac88b925de77eadadb8cdf291e3153c3ed9-1","file":"src/app/core/models/si/db/category-mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ExpenseAttributeDetail } from \\"./expense-attribute-detail.model\\";\\nimport { MappingDestination } from \\"./mapping-destination.model\\";\\nimport { MappingSource } from \\"./mapping-source.model\\";\\n\\n\\nexport type CategoryMappingPost = {\\n  source_category: MappingSource;\\n  destination_account?: MappingDestination;\\n  destination_expense_head?: MappingDestination;\\n  created_at?: Date;\\n  updated_at?: Date;\\n  workspace: number;\\n}\\n\\nexport interface CategoryMapping extends CategoryMappingPost {\\n  id: number;\\n}\\n\\nexport type CategoryMappingResult = {\\n  id: number;\\n  categorymapping: CategoryMapping[];\\n  attribute_type?: string;\\n  display_name?: string;\\n  value?: string;\\n  source_id?: number;\\n  auto_mapped?: boolean;\\n  active?: boolean;\\n  created_at?: Date;\\n  updated_at?: Date;\\n  workspace?: number;\\n  detail?: ExpenseAttributeDetail;\\n};\\n","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16}],"indexSignatures":[],"kind":171,"methods":[],"extends":["CategoryMappingPost"],"isDuplicate":true,"duplicateId":1,"duplicateName":"CategoryMapping-1"},{"name":"Configuration","id":"interface-Configuration-a84ca2b89f78bae6bb65fd040b391965db5388854aeec8e228da6ff7d92b67c7aed4ee3298ccda5a6cfcfa611e0bac40f0e69c1cb91e7ce649a946ff59b85190","file":"src/app/core/models/db/configuration.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AutoMapEmployeeOptions, CorporateCreditCardExpensesObject, FyleField, IntacctReimbursableExpensesObject } from \\"../enum/enum.model\\";\\n\\nexport interface Configuration {\\n    id: number;\\n    workspace: number;\\n    employee_field_mapping: FyleField;\\n    reimbursable_expenses_object?: IntacctReimbursableExpensesObject;\\n    corporate_credit_card_expenses_object?: CorporateCreditCardExpensesObject;\\n    import_projects: boolean;\\n    import_categories: boolean;\\n    sync_fyle_to_sage_intacct_payments: boolean;\\n    sync_sage_intacct_to_fyle_payments: boolean;\\n    auto_map_employees: AutoMapEmployeeOptions | null;\\n    import_tax_codes?: boolean;\\n    memo_structure: string[];\\n    auto_create_destination_entity: boolean;\\n    is_simplify_report_closure_enabled: boolean;\\n    change_accounting_period: boolean;\\n    import_vendors_as_merchants: boolean;\\n    created_at: Date;\\n    updated_at: Date;\\n  }\\n","properties":[{"name":"auto_create_destination_entity","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":16},{"name":"auto_map_employees","deprecated":false,"deprecationMessage":"","type":"AutoMapEmployeeOptions | null","optional":false,"description":"","line":13},{"name":"change_accounting_period","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":18},{"name":"corporate_credit_card_expenses_object","deprecated":false,"deprecationMessage":"","type":"CorporateCreditCardExpensesObject","optional":true,"description":"","line":8},{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":20},{"name":"employee_field_mapping","deprecated":false,"deprecationMessage":"","type":"FyleField","optional":false,"description":"","line":6},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4},{"name":"import_categories","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10},{"name":"import_projects","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":9},{"name":"import_tax_codes","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"","line":14},{"name":"import_vendors_as_merchants","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":19},{"name":"is_simplify_report_closure_enabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":17},{"name":"memo_structure","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":15},{"name":"reimbursable_expenses_object","deprecated":false,"deprecationMessage":"","type":"IntacctReimbursableExpensesObject","optional":true,"description":"","line":7},{"name":"sync_fyle_to_sage_intacct_payments","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":11},{"name":"sync_sage_intacct_to_fyle_payments","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":21},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"Configuration","id":"interface-Configuration-80b31e6728b27952f8e4805037c7ca5838cf2dd46b93b07bb32d8f709368e6165040e6c71912727e8867de9344aab56bdddc1c7d0aedc163614f8791a2170683-1","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\nimport { PaymentSyncDirection } from \\"../../enum/enum.model\\";\\nimport { EmailOptions } from \\"../../qbd/qbd-configuration/advanced-setting.model\\";\\n\\n  export interface GeneralMappingEntity {\\n    id: string;\\n    name: string;\\n  }\\n\\n  export  interface HourOption {\\n    label: string;\\n    value: number;\\n  }\\n\\n  export type EmailOption = {\\n    email: string;\\n    name: string;\\n  }\\n\\n  export type AdvancedSettingFormOption = {\\n    label: string,\\n    value: string | null | PaymentSyncDirection\\n}\\n\\nexport type ConditionField = {\\n  field_name: string;\\n  type: string;\\n  is_custom: boolean;\\n};\\n\\nexport enum Operator {\\n  IsNull = \\"isnull\\",\\n  IExact = \\"iexact\\",\\n  IContains = \\"icontains\\",\\n  LessThan = \\"lt\\",\\n  LessThanOrEqual = \\"lte\\"\\n}\\n\\nexport const JoinOptions = {\\n  AND: \'AND\',\\n  OR: \'OR\'\\n};\\n\\nexport enum JoinOption {\\n  AND = \\"AND\\",\\n  OR = \\"OR\\"\\n}\\n\\nexport enum CustomOperatorOption {\\n  Is = \\"iexact\\",\\n  IsEmpty = \\"is_empty\\",\\n  IsNotEmpty = \\"is_not_empty\\"\\n}\\n\\nexport type SkipExport = {\\n  id?: number;\\n  condition: string;\\n  custom_field_type: any;\\n  operator: Operator.IsNull | Operator.IExact | Operator.IContains | Operator.LessThan | Operator.LessThanOrEqual;\\n  values: string[];\\n  rank: number;\\n  join_by: JoinOption.AND | JoinOption.OR | null;\\n  is_custom: boolean;\\n};\\n\\nexport type ExpenseFilterResponse = {\\n  count: number;\\n  results: SkipExport[];\\n};\\n\\nexport interface Configuration {\\n    change_accounting_period: boolean;\\n    sync_fyle_to_sage_intacct_payments: boolean;\\n    sync_sage_intacct_to_fyle_payments: boolean;\\n    auto_create_destination_entity: boolean;\\n    auto_create_merchant_destination_entity: boolean;\\n    memo_structure: string[];\\n  }\\n\\n  export interface AdvancedSettingGeneralMapping {\\n    payment_account: GeneralMappingEntity;\\n    default_location: GeneralMappingEntity;\\n    default_department: GeneralMappingEntity;\\n    default_class: GeneralMappingEntity;\\n    default_project: GeneralMappingEntity;\\n    default_item: GeneralMappingEntity;\\n    use_intacct_employee_departments: boolean;\\n    use_intacct_employee_locations: boolean;\\n  }\\n\\n  export interface WorkspaceSchedules {\\n    enabled: boolean;\\n    start_datetime: string;\\n    interval_hours: number;\\n    emails_selected: string[] | [];\\n    additional_email_options: EmailOption[];\\n  }\\n\\nexport type AdvancedSettingsGet = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n    workspace_id: number;\\n}\\n\\nexport type AdvancedSettingsPost = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n  }\\n\\n  export class AdvancedSetting {\\n    static constructPayload(advancedSettingsForm: FormGroup): AdvancedSettingsPost {\\n      const getFormValue = (key: string) => advancedSettingsForm.get(key)?.value;\\n\\n      const mapAttribute = (key: string, idKey: string, valueKey: string) => {\\n        const value = getFormValue(key);\\n        return value ? { name: value[valueKey], id: value[idKey] } : { name: null, id: null };\\n      };\\n\\n      const advancedSettingPayload: AdvancedSettingsPost = {\\n        configurations: {\\n          auto_create_merchant_destination_entity: true,\\n          sync_fyle_to_sage_intacct_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.FYLE_TO_INTACCT,\\n          sync_sage_intacct_to_fyle_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.INTACCT_TO_FYLE,\\n          auto_create_destination_entity: getFormValue(\'autoCreateEmployeeVendor\'),\\n          change_accounting_period: !!getFormValue(\'postEntriesCurrentPeriod\'),\\n          memo_structure: getFormValue(\'setDescriptionField\')\\n        },\\n        general_mappings: {\\n          payment_account: mapAttribute(\'defaultPaymentAccount\', \'destination_id\', \'value\'),\\n          default_location: mapAttribute(\'defaultLocation\', \'destination_id\', \'value\'),\\n          default_department: mapAttribute(\'defaultDepartment\', \'destination_id\', \'value\'),\\n          default_class: mapAttribute(\'defaultClass\', \'destination_id\', \'value\'),\\n          default_project: mapAttribute(\'defaultProject\', \'destination_id\', \'value\'),\\n          default_item: mapAttribute(\'defaultItems\', \'destination_id\', \'value\'),\\n          use_intacct_employee_departments: !!getFormValue(\'useEmployeeLocation\'),\\n          use_intacct_employee_locations: !!getFormValue(\'useEmployeeDepartment\')\\n        },\\n        workspace_schedules: {\\n          enabled: !!getFormValue(\'scheduleAutoExport\'),\\n          start_datetime: \'\',\\n          interval_hours: getFormValue(\'scheduleAutoExport\'),\\n          emails_selected: advancedSettingsForm.get(\'email\')?.value ? advancedSettingsForm.get(\'email\')?.value.map((item: EmailOptions) => item.email) : [],\\n          additional_email_options: getFormValue(\'addedEmail\')\\n        }\\n      };\\n\\n      return advancedSettingPayload;\\n    }\\n  }","properties":[{"name":"auto_create_destination_entity","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":75},{"name":"auto_create_merchant_destination_entity","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":76},{"name":"change_accounting_period","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":72},{"name":"memo_structure","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":77},{"name":"sync_fyle_to_sage_intacct_payments","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":73},{"name":"sync_sage_intacct_to_fyle_payments","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":74}],"indexSignatures":[],"kind":171,"methods":[],"extends":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"Configuration-1"},{"name":"DestinationAttributeDetail","id":"interface-DestinationAttributeDetail-5d06a9637f25f6c12a8c3a83b6346487fb029bf28ab65293c716961322e819982634bc4ceff494fc633b0d57420bc6af67b30201bb65a698f9a0864397adc3e9","file":"src/app/core/models/db/error.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AccountingErrorType } from \\"../enum/enum.model\\";\\nimport { AccountingExport } from \\"./accounting-export.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { ExtendedGenericMapping } from \\"./extended-generic-mapping.model\\";\\nimport { PaginatedResponse } from \\"./paginated-response.model\\";\\n\\nexport interface DestinationAttributeDetail {\\n  user_id?: string;\\n  location?: string | null;\\n  full_name?: string;\\n  department?: string | null;\\n  department_id?: string | null;\\n  employee_code?: string | null;\\n  department_code?: string | null;\\n}\\n\\nexport interface Error {\\n  id: number;\\n  expense_attribute: ExpenseAttribute;\\n  expense_group: AccountingExport;\\n  type: AccountingErrorType;\\n  is_resolved: boolean;\\n  error_title: string;\\n  error_detail: string;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport interface ErrorResponse extends PaginatedResponse {\\n  results: Error[];\\n}\\n\\nexport type ErrorStat = {\\n    resolvedCount: number;\\n    totalCount: number;\\n  }\\n\\nexport type AccountingGroupedErrors = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: Error[];\\n    [AccountingErrorType.CATEGORY_MAPPING]: Error[];\\n    [AccountingErrorType.ACCOUNTING_ERROR]: Error[];\\n  }\\n\\nexport type AccountingGroupedErrorStat = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: null | ErrorStat;\\n    [AccountingErrorType.CATEGORY_MAPPING]: null | ErrorStat;\\n  }\\n\\nexport class ErrorModel {\\n  static formatErrors(errors: Error[]): AccountingGroupedErrors {\\n    return errors.reduce((groupedErrors: AccountingGroupedErrors, error: Error) => {\\n      const errorType = error.type === AccountingErrorType.EMPLOYEE_MAPPING || AccountingErrorType.CATEGORY_MAPPING ? error.type : AccountingErrorType.ACCOUNTING_ERROR;\\n      const group: Error[] = groupedErrors[errorType] || [];\\n      group.push(error);\\n      groupedErrors[error.type] = group;\\n\\n      return groupedErrors;\\n    }, {\\n      [AccountingErrorType.EMPLOYEE_MAPPING]: [],\\n      [AccountingErrorType.CATEGORY_MAPPING]: [],\\n      [AccountingErrorType.ACCOUNTING_ERROR]: []\\n    });\\n  }\\n\\n  static getErroredMappings(errors: AccountingGroupedErrors, errorType: AccountingErrorType, isCategoryMappingGeneric?: boolean): ExtendedGenericMapping[] {\\n    const filteredMappings: ExtendedGenericMapping[] = [];\\n\\n    errors[errorType].forEach(element => {\\n      const filteredMapping: ExtendedGenericMapping = element.expense_attribute;\\n      if (errorType === AccountingErrorType.ACCOUNTING_ERROR || isCategoryMappingGeneric) {\\n        filteredMapping.mapping = [];\\n      } else if (errorType === AccountingErrorType.EMPLOYEE_MAPPING) {\\n        filteredMapping.employeemapping = [];\\n      } else if (errorType === AccountingErrorType.CATEGORY_MAPPING) {\\n        filteredMapping.categorymapping = [];\\n      }\\n      filteredMappings.push(filteredMapping);\\n    });\\n\\n    return filteredMappings;\\n  }\\n}\\n","properties":[{"name":"department","deprecated":false,"deprecationMessage":"","type":"string | null","optional":true,"description":"","line":11},{"name":"department_code","deprecated":false,"deprecationMessage":"","type":"string | null","optional":true,"description":"","line":14},{"name":"department_id","deprecated":false,"deprecationMessage":"","type":"string | null","optional":true,"description":"","line":12},{"name":"employee_code","deprecated":false,"deprecationMessage":"","type":"string | null","optional":true,"description":"","line":13},{"name":"full_name","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":10},{"name":"location","deprecated":false,"deprecationMessage":"","type":"string | null","optional":true,"description":"","line":9},{"name":"user_id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":8}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"DestinationFieldMap","id":"interface-DestinationFieldMap-ad15c3e5ae6ba83cf79de327a2fe89a8638aee3d592428081ddd1e4583dde900aa4ede76e3caf8f53c823e25e24cef22fb1599483aeeea7739f9e418889ca0e5","file":"src/app/core/models/db/dashboard.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AccountingErrorType, DefaultImportFields, ExportErrorSourceType, FyleField } from \\"../enum/enum.model\\";\\nimport { AccountingGroupedErrors, Error } from \\"./error.model\\";\\n\\nexport class DashboardModel {\\n    static parseAPIResponseToGroupedError(errors: Error[]): AccountingGroupedErrors {\\n        return errors.reduce((groupedErrors: AccountingGroupedErrors, error: Error) => {\\n          const errorType = error.type === AccountingErrorType.EMPLOYEE_MAPPING || error.type === AccountingErrorType.CATEGORY_MAPPING ? error.type : AccountingErrorType.ACCOUNTING_ERROR;\\n          const group: Error[] = groupedErrors[errorType] || [];\\n          group.push(error);\\n          groupedErrors[errorType] = group;\\n\\n          return groupedErrors;\\n        }, {\\n          [AccountingErrorType.EMPLOYEE_MAPPING]: [],\\n          [AccountingErrorType.CATEGORY_MAPPING]: [],\\n          [AccountingErrorType.ACCOUNTING_ERROR]: []\\n        });\\n      }\\n}\\n\\nexport interface DestinationFieldMap {\\n  [ExportErrorSourceType.EMPLOYEE]: string;\\n  [ExportErrorSourceType.CATEGORY]: string;\\n\\n}","properties":[{"deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22},{"deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"Error","id":"interface-Error-5d06a9637f25f6c12a8c3a83b6346487fb029bf28ab65293c716961322e819982634bc4ceff494fc633b0d57420bc6af67b30201bb65a698f9a0864397adc3e9","file":"src/app/core/models/db/error.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AccountingErrorType } from \\"../enum/enum.model\\";\\nimport { AccountingExport } from \\"./accounting-export.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { ExtendedGenericMapping } from \\"./extended-generic-mapping.model\\";\\nimport { PaginatedResponse } from \\"./paginated-response.model\\";\\n\\nexport interface DestinationAttributeDetail {\\n  user_id?: string;\\n  location?: string | null;\\n  full_name?: string;\\n  department?: string | null;\\n  department_id?: string | null;\\n  employee_code?: string | null;\\n  department_code?: string | null;\\n}\\n\\nexport interface Error {\\n  id: number;\\n  expense_attribute: ExpenseAttribute;\\n  expense_group: AccountingExport;\\n  type: AccountingErrorType;\\n  is_resolved: boolean;\\n  error_title: string;\\n  error_detail: string;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport interface ErrorResponse extends PaginatedResponse {\\n  results: Error[];\\n}\\n\\nexport type ErrorStat = {\\n    resolvedCount: number;\\n    totalCount: number;\\n  }\\n\\nexport type AccountingGroupedErrors = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: Error[];\\n    [AccountingErrorType.CATEGORY_MAPPING]: Error[];\\n    [AccountingErrorType.ACCOUNTING_ERROR]: Error[];\\n  }\\n\\nexport type AccountingGroupedErrorStat = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: null | ErrorStat;\\n    [AccountingErrorType.CATEGORY_MAPPING]: null | ErrorStat;\\n  }\\n\\nexport class ErrorModel {\\n  static formatErrors(errors: Error[]): AccountingGroupedErrors {\\n    return errors.reduce((groupedErrors: AccountingGroupedErrors, error: Error) => {\\n      const errorType = error.type === AccountingErrorType.EMPLOYEE_MAPPING || AccountingErrorType.CATEGORY_MAPPING ? error.type : AccountingErrorType.ACCOUNTING_ERROR;\\n      const group: Error[] = groupedErrors[errorType] || [];\\n      group.push(error);\\n      groupedErrors[error.type] = group;\\n\\n      return groupedErrors;\\n    }, {\\n      [AccountingErrorType.EMPLOYEE_MAPPING]: [],\\n      [AccountingErrorType.CATEGORY_MAPPING]: [],\\n      [AccountingErrorType.ACCOUNTING_ERROR]: []\\n    });\\n  }\\n\\n  static getErroredMappings(errors: AccountingGroupedErrors, errorType: AccountingErrorType, isCategoryMappingGeneric?: boolean): ExtendedGenericMapping[] {\\n    const filteredMappings: ExtendedGenericMapping[] = [];\\n\\n    errors[errorType].forEach(element => {\\n      const filteredMapping: ExtendedGenericMapping = element.expense_attribute;\\n      if (errorType === AccountingErrorType.ACCOUNTING_ERROR || isCategoryMappingGeneric) {\\n        filteredMapping.mapping = [];\\n      } else if (errorType === AccountingErrorType.EMPLOYEE_MAPPING) {\\n        filteredMapping.employeemapping = [];\\n      } else if (errorType === AccountingErrorType.CATEGORY_MAPPING) {\\n        filteredMapping.categorymapping = [];\\n      }\\n      filteredMappings.push(filteredMapping);\\n    });\\n\\n    return filteredMappings;\\n  }\\n}\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":25},{"name":"error_detail","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24},{"name":"error_title","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23},{"name":"expense_attribute","deprecated":false,"deprecationMessage":"","type":"ExpenseAttribute","optional":false,"description":"","line":19},{"name":"expense_group","deprecated":false,"deprecationMessage":"","type":"AccountingExport","optional":false,"description":"","line":20},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":18},{"name":"is_resolved","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"type","deprecated":false,"deprecationMessage":"","type":"AccountingErrorType","optional":false,"description":"","line":21},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":26},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":27}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ErrorResponse","id":"interface-ErrorResponse-5d06a9637f25f6c12a8c3a83b6346487fb029bf28ab65293c716961322e819982634bc4ceff494fc633b0d57420bc6af67b30201bb65a698f9a0864397adc3e9","file":"src/app/core/models/db/error.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AccountingErrorType } from \\"../enum/enum.model\\";\\nimport { AccountingExport } from \\"./accounting-export.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { ExtendedGenericMapping } from \\"./extended-generic-mapping.model\\";\\nimport { PaginatedResponse } from \\"./paginated-response.model\\";\\n\\nexport interface DestinationAttributeDetail {\\n  user_id?: string;\\n  location?: string | null;\\n  full_name?: string;\\n  department?: string | null;\\n  department_id?: string | null;\\n  employee_code?: string | null;\\n  department_code?: string | null;\\n}\\n\\nexport interface Error {\\n  id: number;\\n  expense_attribute: ExpenseAttribute;\\n  expense_group: AccountingExport;\\n  type: AccountingErrorType;\\n  is_resolved: boolean;\\n  error_title: string;\\n  error_detail: string;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport interface ErrorResponse extends PaginatedResponse {\\n  results: Error[];\\n}\\n\\nexport type ErrorStat = {\\n    resolvedCount: number;\\n    totalCount: number;\\n  }\\n\\nexport type AccountingGroupedErrors = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: Error[];\\n    [AccountingErrorType.CATEGORY_MAPPING]: Error[];\\n    [AccountingErrorType.ACCOUNTING_ERROR]: Error[];\\n  }\\n\\nexport type AccountingGroupedErrorStat = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: null | ErrorStat;\\n    [AccountingErrorType.CATEGORY_MAPPING]: null | ErrorStat;\\n  }\\n\\nexport class ErrorModel {\\n  static formatErrors(errors: Error[]): AccountingGroupedErrors {\\n    return errors.reduce((groupedErrors: AccountingGroupedErrors, error: Error) => {\\n      const errorType = error.type === AccountingErrorType.EMPLOYEE_MAPPING || AccountingErrorType.CATEGORY_MAPPING ? error.type : AccountingErrorType.ACCOUNTING_ERROR;\\n      const group: Error[] = groupedErrors[errorType] || [];\\n      group.push(error);\\n      groupedErrors[error.type] = group;\\n\\n      return groupedErrors;\\n    }, {\\n      [AccountingErrorType.EMPLOYEE_MAPPING]: [],\\n      [AccountingErrorType.CATEGORY_MAPPING]: [],\\n      [AccountingErrorType.ACCOUNTING_ERROR]: []\\n    });\\n  }\\n\\n  static getErroredMappings(errors: AccountingGroupedErrors, errorType: AccountingErrorType, isCategoryMappingGeneric?: boolean): ExtendedGenericMapping[] {\\n    const filteredMappings: ExtendedGenericMapping[] = [];\\n\\n    errors[errorType].forEach(element => {\\n      const filteredMapping: ExtendedGenericMapping = element.expense_attribute;\\n      if (errorType === AccountingErrorType.ACCOUNTING_ERROR || isCategoryMappingGeneric) {\\n        filteredMapping.mapping = [];\\n      } else if (errorType === AccountingErrorType.EMPLOYEE_MAPPING) {\\n        filteredMapping.employeemapping = [];\\n      } else if (errorType === AccountingErrorType.CATEGORY_MAPPING) {\\n        filteredMapping.categorymapping = [];\\n      }\\n      filteredMappings.push(filteredMapping);\\n    });\\n\\n    return filteredMappings;\\n  }\\n}\\n","properties":[{"name":"results","deprecated":false,"deprecationMessage":"","type":"Error[]","optional":false,"description":"","line":31}],"indexSignatures":[],"kind":171,"methods":[],"extends":["PaginatedResponse"]},{"name":"ExpenseAttribute","id":"interface-ExpenseAttribute-334d4cfca7769e8587f7db0a9b2bf714e0d82b9494f897d91b8217405c802fc5ee551ef0efebed91f62bab0cffce7095eaa64fba216138977dc905d50d87a8ce","file":"src/app/core/models/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { DestinationAttributeDetail } from \\"./error.model\\";\\n\\nexport interface ExpenseAttribute {\\n    id: number;\\n    attribute_type: string;\\n    display_name: string;\\n    value: string;\\n    source_id: string;\\n    auto_mapped: boolean;\\n    auto_created: boolean;\\n    active: boolean;\\n    detail: DestinationAttributeDetail | null;\\n    created_at: string;\\n    updated_at: string;\\n    workspace: number;\\n}\\n\\nexport type ExpenseAttributeDetail = {\\n  location: string;\\n  full_name: string;\\n  department_id: string;\\n  department: string;\\n  department_code: string;\\n  employee_code: string;\\n};","properties":[{"name":"active","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":11},{"name":"attribute_type","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"auto_created","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10},{"name":"auto_mapped","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":9},{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":13},{"name":"detail","deprecated":false,"deprecationMessage":"","type":"DestinationAttributeDetail | null","optional":false,"description":"","line":12},{"name":"display_name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":4},{"name":"source_id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":14},{"name":"value","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":15}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ExpenseFilter","id":"interface-ExpenseFilter-7b29e3995c6c44abdf943dff49fc8424eb9a447b450a01ed4bb3757467b55424327f2e9f468fa43f334b7e4103d84a18c93eb2a60a4b4a12fdd3b3680fa65960","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { JoinOption, Operator } from \\"../enum/enum.model\\";\\nimport { environment } from \\"src/environments/environment\\";\\n\\nexport type EmailOption = {\\n    email: string;\\n    name: string;\\n};\\n\\nexport  interface HourOption {\\n  label: string;\\n  value: number;\\n}\\n\\nexport type skipExportValidator = {\\n  isChanged: string[];\\n  isNotChanged: string[];\\n}\\n\\nexport type ConditionField = {\\n  field_name: string;\\n  type: string;\\n  is_custom: boolean;\\n};\\n\\nexport type ExpenseFilterPost = {\\n    condition: string;\\n    operator: Operator;\\n    values: string | string[]\\n    rank: number;\\n    join_by:JoinOption | null;\\n    is_custom: boolean;\\n    custom_field_type: string | null;\\n};\\n\\nexport type ExpenseFilterPayload = {\\n    condition: ConditionField,\\n    operator: Operator,\\n    value: string[]\\n    join_by: string,\\n    rank: number\\n  }\\n\\nexport interface ExpenseFilter extends ExpenseFilterPost {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    workspace: number\\n}\\n\\nexport type ExpenseFilterResponse = {\\n    count: number,\\n    next: string | null,\\n    previous: string | null,\\n    results: ExpenseFilter[]\\n};\\n\\nexport type SkipExportValidatorRule = {\\n  condition1: string[];\\n  condition2: string[];\\n  operator1: string[];\\n  operator2: string[];\\n};\\n\\nexport type AdvancedSettingValidatorRule = {\\n  paymentSync: string;\\n  exportSchedule: string;\\n};\\n\\nexport class AdvancedSettingsModel {\\n  static getDefaultMemoOptions(): string[] {\\n    return [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n  }\\n\\n  static formatMemoPreview(memoStructure: string[], defaultMemoOptions: string[]): string {\\n    const time = Date.now();\\n    const today = new Date(time);\\n\\n    const previewValues: { [key: string]: string } = {\\n      employee_email: \'john.doe@acme.com\',\\n      category: \'Meals and Entertainment\',\\n      purpose: \'Client Meeting\',\\n      merchant: \'Pizza Hut\',\\n      report_number: \'C/2021/12/R/1\',\\n      spent_on: today.toLocaleDateString(),\\n      expense_link: `${environment.fyle_app_url}/app/main/#/enterprise/view_expense/`\\n    };\\n    let memoPreviewText = \'\';\\n    const memo: string[] = [];\\n    memoStructure.forEach((field, index) => {\\n      if (field in previewValues) {\\n        const defaultIndex = defaultMemoOptions.indexOf(memoStructure[index]);\\n        memo[defaultIndex] = previewValues[field];\\n      }\\n    });\\n    memo.forEach((field, index) => {\\n      memoPreviewText += field;\\n      if (index + 1 !== memo.length) {\\n        memoPreviewText = memoPreviewText + \' - \';\\n      }\\n    });\\n    return memoPreviewText;\\n  }\\n\\n  static filterAdminEmails = (emailToSearch: string[], adminEmails: EmailOption[]) => {\\n    const adminEmailsList: EmailOption[] = [];\\n    for (const email of emailToSearch) {\\n      adminEmails.find(item => (item.email === email ? adminEmailsList.push(item) : null));\\n    }\\n    return adminEmailsList;\\n};\\n\\n  static formatSelectedEmails(emails: EmailOption[]): string[] {\\n    return emails.map((option: EmailOption) => option.email);\\n  }\\n}\\n\\nexport class SkipExportModel {\\n\\n  static constructSkipExportValue(valueField: any) {\\n    if (valueField.condition1.field_name !== \'report_title\' && valueField.operator1 === \'iexact\') {\\n      valueField.operator1 = \'in\';\\n    }\\n    if (valueField.condition1.is_custom === true) {\\n      if (valueField.operator1 === \'is_empty\') {\\n        valueField.value1 = [\'True\'];\\n        valueField.operator1 = \'isnull\';\\n      } else if (valueField.operator1 === \'is_not_empty\') {\\n        valueField.value1 = [\'False\'];\\n        valueField.operator1 = \'isnull\';\\n      }\\n    }\\n    if (valueField.condition1.field_name === \'spent_at\') {\\n      valueField.value1 = new Date(valueField.value1).toISOString().split(\'T\')[0] + \'T17:00:00.000Z\';\\n    }\\n    if (typeof valueField.value1 === \'string\') {\\n      valueField.value1 = [valueField.value1];\\n    }\\n\\n    if (valueField.condition2 && valueField.operator2) {\\n      if (valueField.condition2.field_name !== \'report_title\' && valueField.operator2 === \'iexact\') {\\n        valueField.operator2 = \'in\';\\n      }\\n      if (valueField.condition2.field_name === \'spent_at\') {\\n        valueField.value2 = new Date(valueField.value2).toISOString().split(\'T\')[0] + \'T17:00:00.000Z\';\\n      }\\n      if (valueField.condition2.is_custom === true) {\\n        if (valueField.operator2 === \'is_empty\') {\\n          valueField.value2 = [\'True\'];\\n          valueField.operator2 = \'isnull\';\\n        } else if (valueField.operator2 === \'is_not_empty\') {\\n          valueField.value2 = [\'False\'];\\n          valueField.operator2 = \'isnull\';\\n        }\\n      }\\n      if (typeof valueField.value2 === \'string\') {\\n        valueField.value2 = [valueField.value2];\\n      }\\n    }\\n    return valueField;\\n  }\\n\\n  static constructExportFilterPayload(valueField: any): ExpenseFilterPayload {\\n    return {\\n      condition: valueField[\'condition\'+valueField.rank] as ConditionField,\\n      operator: valueField[\'operator\'+valueField.rank] as Operator,\\n      value: valueField[\'value\'+valueField.rank],\\n      join_by: valueField?.join_by && valueField.rank === 1 ? valueField?.join_by : null,\\n      rank: valueField.rank\\n    };\\n  }\\n\\n  static constructSkipExportPayload(valueField: ExpenseFilterPayload, valueOption: any[]): ExpenseFilterPost {\\n    return {\\n      condition: valueField.condition.field_name,\\n      operator: valueField.operator,\\n      values:\\n        valueField.condition.type === \'DATE\' ||\\n          valueField.operator === \'isnull\' || valueField.condition.field_name === \'report_title\' ? valueField.value : valueOption,\\n      rank: valueField.rank,\\n      join_by: valueField?.join_by ? JoinOption[valueField.join_by as JoinOption] : null,\\n      is_custom: valueField.condition.is_custom,\\n      custom_field_type: valueField.condition?.is_custom ? valueField.condition.type : null\\n    };\\n  }\\n\\n  static setConditionFields(response: ExpenseFilterResponse, conditionArray: ConditionField[], conditionFieldOptions: ConditionField[]) {\\n    response.results.forEach((element) => {\\n      const type = conditionFieldOptions?.filter( (fieldOption) => fieldOption.field_name === element.condition);\\n      const selectedConditionOption : ConditionField = type[0];\\n      conditionArray.push(selectedConditionOption);\\n    });\\n  }\\n\\n  static getSelectedOperator(operator: string, value: any) {\\n    switch (operator) {\\n      case \'isnull\':\\n        return value === \'True\' ? \'is_empty\' : \'is_not_empty\';\\n      case \'in\':\\n        return \'iexact\';\\n      case \'iexact\':\\n        return operator;\\n      default:\\n        return operator;\\n    }\\n  }\\n\\n  static getFieldValue(value: any, condition: ConditionField, rank: number) {\\n    if (condition?.type === \'DATE\') {\\n      return new Date(value[0]);\\n    } else if (condition?.field_name === \'report_title\') {\\n      return value[0];\\n    }\\n    if (rank === 1) {\\n        return value;\\n    } else if (rank === 2) {\\n        return value;\\n    }\\n    return \'\';\\n\\n  }\\n\\n  static setupSkipExportForm(response: ExpenseFilterResponse, conditionArray: ConditionField[], conditionFieldOptions: ConditionField[]) {\\n    this.setConditionFields(response, conditionArray, conditionFieldOptions);\\n    let [selectedOperator1, valueFC1, customFieldTypeFC1] = [\'\', \'\', \'\'];\\n    let [selectedOperator2, valueFC2] = [\'\', \'\'];\\n    let joinByFC = \'\';\\n    let isDisabledChip2: boolean = false;\\n    let isDisabledChip1: boolean = false;\\n\\n    response.results.forEach((result: ExpenseFilterPost, index: number) => {\\n        if (index === 0) {\\n            selectedOperator1 = this.getSelectedOperator(result.operator, result.values[0]);\\n            if (!(selectedOperator1 === \'is_empty\' || selectedOperator1 === \'is_not_empty\')) {\\n                valueFC1 = this.getFieldValue(result.values, conditionArray[0], result.rank);\\n            } else {\\n                isDisabledChip1 = true;\\n            }\\n            customFieldTypeFC1 = result?.custom_field_type ? result.custom_field_type : \'\';\\n        } else if (index === 1 && response.results[0].join_by !== null) {\\n            selectedOperator2 = this.getSelectedOperator(result.operator, result.values[0]);\\n            joinByFC = response.results[0].join_by;\\n            if (!(selectedOperator2 === \'is_empty\' || selectedOperator2 === \'is_not_empty\')) {\\n                valueFC2 = this.getFieldValue(result.values, conditionArray[1], result.rank);\\n            } else {\\n                isDisabledChip2 = true;\\n            }\\n        }\\n    });\\n\\n    return new FormGroup({\\n      condition1: new FormControl(conditionArray.length > 0 ? conditionArray[0] : \'\'),\\n      operator1: new FormControl(selectedOperator1),\\n      value1: new FormControl(valueFC1),\\n      customFieldType1: new FormControl(customFieldTypeFC1),\\n      join_by: new FormControl(joinByFC),\\n      condition2: new FormControl(joinByFC ? conditionArray[1] : \'\'),\\n      operator2: new FormControl(joinByFC && selectedOperator2 ? selectedOperator2 : \'\'),\\n      value2: new FormControl(valueFC2),\\n      customFieldType2: new FormControl(joinByFC ? response.results[1].custom_field_type : \'\'),\\n      isDisabledChip1: new FormControl(isDisabledChip1),\\n      isDisabledChip2: new FormControl(isDisabledChip2)\\n    });\\n  }\\n}\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":46},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":45},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":47},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":48}],"indexSignatures":[],"kind":171,"methods":[],"extends":["ExpenseFilterPost"]},{"name":"ExpenseGroupList","id":"interface-ExpenseGroupList-7222b3720c59523a4f3c71db96e6e66d437ef55ceee78c33401e15acdda15de3cbdd50c984be03118fbb6470ce451efeb7e60db86606fd64b7435d445cc8efaf","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { PaginatedResponse } from \\"../../db/paginated-response.model\\";\\nimport { FyleReferenceType } from \\"../../enum/enum.model\\";\\nimport { Expense } from \\"./expense.model\\";\\n\\nexport type ExpenseGroupDescription = {\\n  claim_number: string;\\n  employee_email: string;\\n  expense_id: string;\\n  report_id: string;\\n  settlement_id: string;\\n};\\n\\nexport type ExpenseGroup = {\\n  id: number;\\n  fund_source: string;\\n  description: ExpenseGroupDescription;\\n  response_logs: any;\\n  employee_name: string;\\n  created_at: Date;\\n  export_type: string;\\n  exported_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n  expenses: Expense[];\\n};\\n\\nexport type ExpenseGroupResponse = {\\n  count: number;\\n  next: string;\\n  previous: string;\\n  results: ExpenseGroup[];\\n};\\n\\nexport interface ExpenseGroupList {\\n  index?: number;\\n  exportedAt: Date;\\n  employee: [string, string];\\n  expenseType?: \'Corporate Card\' | \'Reimbursable\';\\n  referenceNumber: string;\\n  exportedAs: string;\\n  intacctUrl?: string;\\n  fyleUrl?: string;\\n  fyleReferenceType?: FyleReferenceType | null;\\n  expenses: Expense[];\\n}\\n\\nexport interface SkipExportList {\\n  updated_at: Date;\\n  employee: [string, string];\\n  expenseType: \'Corporate Card\' | \'Reimbursable\';\\n  claim_number: string;\\n  fyleUrl: string;\\n}\\n\\nexport type SkipExportLog = {\\n  employee_name: string;\\n  employee_email: string;\\n  claim_number: string;\\n  updated_at: Date;\\n  fund_source: string;\\n  expense_id: string;\\n  org_id: string;\\n};\\n\\nexport interface SkipExportLogResponse extends PaginatedResponse {\\n  results: SkipExportLog[];\\n}\\n\\nexport type ExportableExpenseGroup = {\\n  exportable_expense_group_ids: number[];\\n};\\n","properties":[{"name":"employee","deprecated":false,"deprecationMessage":"","type":"[string, string]","optional":false,"description":"","line":37},{"name":"expenses","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":44},{"name":"expenseType","deprecated":false,"deprecationMessage":"","type":"\\"Corporate Card\\" | \\"Reimbursable\\"","optional":true,"description":"","line":38},{"name":"exportedAs","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40},{"name":"exportedAt","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":36},{"name":"fyleReferenceType","deprecated":false,"deprecationMessage":"","type":"FyleReferenceType | null","optional":true,"description":"","line":43},{"name":"fyleUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":42},{"name":"index","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"","line":35},{"name":"intacctUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":41},{"name":"referenceNumber","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ExpenseGroupResponse","id":"interface-ExpenseGroupResponse-00441c2435e3210bfaf1910508ef9765850be01ee9514ee3b79fa538c2a5e0318d1f22e1d55199c0120ced2c139f4f0d2944a101c1fd49f6a6f19bc390767896","file":"src/app/core/models/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Expense } from \\"../si/db/expense.model\\";\\nimport { PaginatedResponse } from \\"./paginated-response.model\\";\\n\\nexport type ExpenseGroupDescription = {\\n  claim_number: string;\\n  employee_email: string;\\n  expense_id: string;\\n  report_id: string;\\n  settlement_id: string;\\n};\\n\\nexport type ExpenseGroup = {\\n  id: number;\\n  fund_source: string;\\n  description: ExpenseGroupDescription;\\n  response_logs: any;\\n  employee_name: string;\\n  created_at: Date;\\n  export_type: string;\\n  exported_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n  expenses: Expense[];\\n};\\n\\nexport interface ExpenseGroupResponse extends PaginatedResponse {\\n  results: ExpenseGroup[];\\n}\\n\\nexport type ExpenseGroupParam = {\\n  limit: number;\\n  offset: number;\\n  tasklog__status: string;\\n  exported_at__gte?: string;\\n  exported_at__lte?: string;\\n}\\n","properties":[{"name":"results","deprecated":false,"deprecationMessage":"","type":"ExpenseGroup[]","optional":false,"description":"","line":27}],"indexSignatures":[],"kind":171,"methods":[],"extends":["PaginatedResponse"]},{"name":"ExpenseGroupSetting","id":"interface-ExpenseGroupSetting-920bd38d50278e009927234c9c6e1b0023ab15abf22b116a1bb4bc8f609730eeb965ef8ddb496374277bef1ec548ea2358a10ce79f23936f53428ed2ef04de19","file":"src/app/core/models/db/expense-group-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CCCExpenseState, ExpenseState, ExportDateType } from \\"../enum/enum.model\\";\\n\\nexport type ExpenseGroupSettingPost = {\\n  expense_state: ExpenseState;\\n  ccc_expense_state: CCCExpenseState;\\n  reimbursable_expense_group_fields: string[] | null;\\n  reimbursable_export_date_type: ExportDateType | null;\\n  corporate_credit_card_expense_group_fields: string[] | null;\\n  ccc_export_date_type: ExportDateType | null;\\n};\\n\\nexport interface ExpenseGroupSetting extends ExpenseGroupSettingPost {\\n  id: number;\\n  reimbursable_expense_group_fields: string[];\\n  reimbursable_export_date_type: ExportDateType;\\n  corporate_credit_card_expense_group_fields: string[];\\n  ccc_export_date_type: ExportDateType;\\n  import_card_credits: boolean;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport interface ExpenseGroupSettingGet extends ExpenseGroupSettingPost {}\\n","properties":[{"name":"ccc_export_date_type","deprecated":false,"deprecationMessage":"","type":"ExportDateType","optional":false,"description":"","line":17},{"name":"corporate_credit_card_expense_group_fields","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":16},{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":19},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"import_card_credits","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":18},{"name":"reimbursable_expense_group_fields","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":14},{"name":"reimbursable_export_date_type","deprecated":false,"deprecationMessage":"","type":"ExportDateType","optional":false,"description":"","line":15},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":20},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":21}],"indexSignatures":[],"kind":171,"methods":[],"extends":["ExpenseGroupSettingPost"]},{"name":"ExpenseGroupSettingGet","id":"interface-ExpenseGroupSettingGet-920bd38d50278e009927234c9c6e1b0023ab15abf22b116a1bb4bc8f609730eeb965ef8ddb496374277bef1ec548ea2358a10ce79f23936f53428ed2ef04de19","file":"src/app/core/models/db/expense-group-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CCCExpenseState, ExpenseState, ExportDateType } from \\"../enum/enum.model\\";\\n\\nexport type ExpenseGroupSettingPost = {\\n  expense_state: ExpenseState;\\n  ccc_expense_state: CCCExpenseState;\\n  reimbursable_expense_group_fields: string[] | null;\\n  reimbursable_export_date_type: ExportDateType | null;\\n  corporate_credit_card_expense_group_fields: string[] | null;\\n  ccc_export_date_type: ExportDateType | null;\\n};\\n\\nexport interface ExpenseGroupSetting extends ExpenseGroupSettingPost {\\n  id: number;\\n  reimbursable_expense_group_fields: string[];\\n  reimbursable_export_date_type: ExportDateType;\\n  corporate_credit_card_expense_group_fields: string[];\\n  ccc_export_date_type: ExportDateType;\\n  import_card_credits: boolean;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport interface ExpenseGroupSettingGet extends ExpenseGroupSettingPost {}\\n","properties":[],"indexSignatures":[],"methods":[],"extends":["ExpenseGroupSettingPost"]},{"name":"ExpenseList","id":"interface-ExpenseList-b0cedf4d9c5fe3e1b87581bc489b6d26ef7adae8d53acad1a4418a6ef6ef221a4940c42c08a9c34b0e6ff8878843df93211887d33501f3531a39574c4f79f8d2","file":"src/app/core/models/si/db/expense.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { environment } from \\"src/environments/environment\\";\\n\\nexport type Expense = {\\n  id: number;\\n  employee_email: string;\\n  employee_name: string;\\n  category: string;\\n  sub_category: string;\\n  project: string;\\n  expense_id: string;\\n  org_id: string;\\n  expense_number: string;\\n  claim_number: string;\\n  amount: number;\\n  currency: string;\\n  foreign_amount: number;\\n  foreign_currency: string;\\n  tax_amount: number;\\n  tax_group_id: string;\\n  settlement_id: string;\\n  reimbursable: boolean;\\n  billable: boolean;\\n  state: string;\\n  vendor: string;\\n  cost_center: string;\\n  purpose: string;\\n  report_id: string;\\n  spent_at: Date;\\n  approved_at: Date;\\n  posted_at: Date;\\n  expense_created_at: Date;\\n  expense_updated_at: Date;\\n  created_at: Date;\\n  updated_at: Date;\\n  fund_source: string;\\n  verified_at: Date;\\n  custom_properties: any[];\\n  paid_on_sage_intacct: boolean;\\n  file_ids: string[];\\n  payment_number: string;\\n  corporate_card_id: string;\\n  is_skipped: boolean;\\n  report_title: string;\\n};\\n\\nexport interface ExpenseList {\\n  expenseID: string;\\n  amount?: [number, string];\\n  merchant?: string;\\n  category?: string;\\n  fyleUrl: string;\\n  expenseType?: \'Credit Card\' | \'Reimbursable\';\\n  name?: [string, string];\\n  fundSource?: string;\\n}\\n\\nexport class ExpenseModel {\\n  static constructViewExpenseUrl (expense_id: string) {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}`;\\n    return url;\\n  }\\n}","properties":[{"name":"amount","deprecated":false,"deprecationMessage":"","type":"[number, string]","optional":true,"description":"","line":48},{"name":"category","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":50},{"name":"expenseID","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":47},{"name":"expenseType","deprecated":false,"deprecationMessage":"","type":"\\"Credit Card\\" | \\"Reimbursable\\"","optional":true,"description":"","line":52},{"name":"fundSource","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":54},{"name":"fyleUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":51},{"name":"merchant","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"","line":49},{"name":"name","deprecated":false,"deprecationMessage":"","type":"[string, string]","optional":true,"description":"","line":53}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ExportableAccountingExport","id":"interface-ExportableAccountingExport-2c1527c9453b1f6140475fb479c5dbd80b4eadd3fe8b41f468a5f57ad8c0f39dc2283f96b49dd581062efb31431f9391a14abca53ef232171fb454e4ac9cdb60","file":"src/app/core/models/db/accounting-export.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { SnakeCaseToSpaceCasePipe } from \\"src/app/shared/pipes/snake-case-to-space-case.pipe\\";\\nimport { AccountingExportStatus, AccountingExportType, FundSource, FyleReferenceType } from \\"../enum/enum.model\\";\\nimport { ExpenseGroupDescription, SkipExportList, SkipExportLog } from \\"../si/db/expense-group.model\\";\\nimport { Expense } from \\"../si/db/expense.model\\";\\nimport { TitleCasePipe } from \\"@angular/common\\";\\nimport { ExportLogService } from \\"../../services/common/export-log.service\\";\\nimport { DateFilter } from \\"../qbd/misc/date-filter.model\\";\\nimport { environment } from \\"src/environments/environment\\";\\nimport { ExpenseGroup } from \\"./expense-group.model\\";\\n\\nexport interface AccountingExportCount {\\n    count: number;\\n}\\n\\nexport interface ExportableAccountingExport {\\n  exportable_accounting_export_ids: number[];\\n}\\n\\nexport interface AccountingExportList {\\n    exportedAt: Date;\\n    employee: [string, string];\\n    expenseType: string;\\n    referenceNumber: string;\\n    exportedAs: string;\\n    integrationUrl: string;\\n    fyleUrl: string;\\n    expenses: Expense[];\\n  }\\n\\nexport interface AccountingExport {\\n    id: number;\\n    type: string;\\n    description: ExpenseGroupDescription;\\n    status: AccountingExportStatus;\\n    mapping_errors: {\\n        type: string;\\n        value: string;\\n    }[] | null;\\n    response: Record<string, unknown>;\\n    created_at: Date;\\n    updated_at: Date;\\n    exported_at: Date;\\n    workspace: number;\\n    export_url: string;\\n    expenses: Expense[];\\n    fund_source: FundSource;\\n}\\n\\nexport type AccountingExportGetParam = {\\n    type__in: string[],\\n    status__in: string[],\\n    id__in?: number[],\\n    limit: number,\\n    offset: number,\\n    exported_at__lte?: string,\\n    exported_at__gte?: string\\n}\\n\\nexport class AccountingExportModel {\\n\\n  static getDateOptions(): DateFilter[] {\\n    const currentDateTime = new Date();\\n    const dateOptions: DateFilter[] = [\\n      {\\n        dateRange: \'This Month\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), 1),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'This Week\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), currentDateTime.getDate() - currentDateTime.getDay()),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'Today\',\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: currentDateTime.toLocaleDateString(),\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      }\\n    ];\\n\\n    return dateOptions;\\n  }\\n\\n  static getFyleExpenseUrl(expense_id: string): string {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}`;\\n    return url;\\n  }\\n\\n  static getfilteredAccountingExports(query: string, group: AccountingExportList): boolean {\\n    const employeeName = group.employee ? group.employee[0] : \'\';\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.referenceNumber ? group.referenceNumber : \'\';\\n\\n    return (\\n      employeeName.toLowerCase().includes(query) ||\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static getReferenceType(description: ExpenseGroupDescription): FyleReferenceType {\\n    let referenceType = FyleReferenceType.REPORT_ID;\\n\\n    if (FyleReferenceType.EXPENSE in description) {\\n      referenceType = FyleReferenceType.EXPENSE;\\n    } else if (FyleReferenceType.REPORT_ID in description) {\\n      referenceType = FyleReferenceType.REPORT_ID;\\n    } else if (FyleReferenceType.PAYMENT in description) {\\n      referenceType = FyleReferenceType.PAYMENT;\\n    }\\n\\n    return referenceType;\\n  }\\n\\n  static formatExportType(exportType: string): string {\\n    if (exportType.startsWith(\'CREATING_\')) {\\n      exportType = exportType.substring(\'CREATING_\'.length);\\n    }\\n    exportType = new SnakeCaseToSpaceCasePipe().transform(exportType);\\n    return new TitleCasePipe().transform(exportType);\\n  }\\n\\n  static getFyleReferenceNumber(referenceType: string, expense: Expense): string {\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      return expense.expense_number;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      return expense.payment_number;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      return expense.claim_number;\\n    }\\n    return expense.claim_number;\\n  }\\n\\n  static generateFyleUrl(expense: Expense, referenceType: FyleReferenceType, org_id: string) : string {\\n    let url = `${environment.fyle_app_url}/app/`;\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      url += `admin/#/view_expense/${expense.expense_id}`;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      url += `admin/#/reports/${expense.report_id}`;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      url += `admin/#/settlements/${expense.settlement_id}`;\\n    }\\n    return `${url}?org_id=${org_id}`;\\n  }\\n\\n  static parseAPIResponseToExportLog(accountingExport: AccountingExport, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(accountingExport.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, accountingExport.expenses[0]);\\n    return {\\n      exportedAt: accountingExport.exported_at,\\n      employee: [accountingExport.expenses[0].employee_name, accountingExport.description.employee_email],\\n      expenseType: accountingExport.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: this.formatExportType(accountingExport.type),\\n      fyleUrl: this.generateFyleUrl(accountingExport.expenses[0], referenceType, org_id),\\n      integrationUrl: accountingExport.export_url,\\n      expenses: accountingExport.expenses\\n    };\\n  }\\n\\n  static generateExportTypeAndId(expenseGroup: ExpenseGroup) {\\n    if (!expenseGroup.response_logs) {\\n      return [null, null, null];\\n    }\\n    let exportRedirection = null;\\n    let exportType = null;\\n    let exportId = null;\\n\\n    if (\'Bill\' in expenseGroup.response_logs && expenseGroup.response_logs.Bill) {\\n      exportRedirection = \'bill\';\\n      exportType = exportRedirection;\\n      exportId = expenseGroup.response_logs.Bill.Id;\\n    } else if (\'JournalEntry\' in expenseGroup.response_logs && expenseGroup.response_logs.JournalEntry) {\\n      exportRedirection = \'journal\';\\n      exportType = \'Journal Entry\';\\n      exportId = expenseGroup.response_logs.JournalEntry.Id;\\n    } else if (\'Purchase\' in expenseGroup.response_logs && expenseGroup.response_logs.Purchase) {\\n      exportId = expenseGroup.response_logs.Purchase.Id;\\n      if (expenseGroup.response_logs.Purchase.PaymentType === \'Check\') {\\n        exportRedirection = \'check\';\\n        exportType = exportRedirection;\\n      } else {\\n        exportRedirection = \'expense\';\\n        if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && !expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Purchase\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Credit\';\\n          exportRedirection = \'creditcardcredit\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'Cash\') {\\n          exportType = \'Debit Card Expense\';\\n          exportRedirection = \'expense\';\\n        } else {\\n          exportType = \'expense\';\\n        }\\n      }\\n    }\\n\\n    return [exportRedirection, exportId, exportType];\\n  }\\n\\n  static parseExpenseGroupAPIResponseToExportLog(expenseGroup: ExpenseGroup, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(expenseGroup.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, expenseGroup.expenses[0]);\\n\\n    const [type, id, exportType] = this.generateExportTypeAndId(expenseGroup);\\n\\n    return {\\n      exportedAt: expenseGroup.exported_at,\\n      employee: [expenseGroup.expenses[0].employee_name, expenseGroup.description.employee_email],\\n      expenseType: expenseGroup.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: exportType,\\n      fyleUrl: this.generateFyleUrl(expenseGroup.expenses[0], referenceType, org_id),\\n      integrationUrl: `${environment.qbo_app_url}/app/${type}?txnId=${id}`,\\n      expenses: expenseGroup.expenses\\n    };\\n  }\\n}\\n\\nexport class SkippedAccountingExportModel {\\n  static getfilteredSkippedAccountingExports(query: string, group: SkipExportList): boolean {\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.claim_number ? group.claim_number : \'\';\\n\\n    return (\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static parseAPIResponseToSkipExportList(skippedExpense: SkipExportLog): SkipExportList {\\n    return {\\n      updated_at: skippedExpense.updated_at,\\n      claim_number: skippedExpense.claim_number,\\n      employee: [skippedExpense.employee_name, skippedExpense.employee_email],\\n      expenseType: skippedExpense.fund_source === \'PERSONAL\' ? \'Reimbursable\' : \'Corporate Card\',\\n      fyleUrl: `${environment.fyle_app_url}/app/admin/#/view_expense/${skippedExpense.expense_id}?org_id=${skippedExpense.org_id}`\\n    };\\n  }\\n}\\n","properties":[{"name":"exportable_accounting_export_ids","deprecated":false,"deprecationMessage":"","type":"number[]","optional":false,"description":"","line":16}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"ExtendedExpenseAttribute","id":"interface-ExtendedExpenseAttribute-e3016501488ae2ac1b78794866e79f1ae6fc37fd531d6ba7f67335158468c42e413cbfbe187f4f34a1be5d0319dca1b23149a4c722d3d85b61e49ad7c32ca148","file":"src/app/core/models/si/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { MappingIntacct } from \\"./mapping.model\\";\\n\\n\\nexport type ExpenseAttributeDetail = {\\n  location: string;\\n  full_name: string;\\n  department_id: string;\\n  department: string;\\n  department_code: string;\\n  employee_code: string;\\n};\\n\\nexport type ExpenseAttribute = {\\n  id: number;\\n  attribute_type: string;\\n  display_name: string;\\n  value: string;\\n  source_id: number;\\n  auto_mapped: boolean;\\n  active: boolean;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n  detail: ExpenseAttributeDetail;\\n};\\n\\nexport type MinimalExpenseAttribute = {\\n  id: number\\n};\\n\\nexport interface ExtendedExpenseAttribute extends ExpenseAttribute {\\n  mapping: MappingIntacct[];\\n}\\n\\nexport type ExtendedExpenseAttributeResponse = {\\n  count: number;\\n  next: string;\\n  previous: string;\\n  results: ExtendedExpenseAttribute[];\\n};\\n","properties":[{"name":"mapping","deprecated":false,"deprecationMessage":"","type":"MappingIntacct[]","optional":false,"description":"","line":32}],"indexSignatures":[],"kind":171,"methods":[],"extends":["ExpenseAttribute"]},{"name":"ExtendedGenericMapping","id":"interface-ExtendedGenericMapping-ae43adfe6f26d114cacf09bf4fc77b05cb34531d4f80b94699d23e96ef01000bce3e93353f40066be7e2a8c8ad40ceb1551ef0ff9f29c4969b6605978603edd4","file":"src/app/core/models/db/extended-generic-mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CategoryMapping } from \\"./category-mapping.model\\";\\nimport { EmployeeMapping } from \\"./employee-mapping.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { GenericMapping } from \\"./generic-mapping.model\\";\\nimport { PaginatedResponse } from \\"./paginated-response.model\\";\\n\\n  export interface ExtendedGenericMapping extends ExpenseAttribute {\\n    mapping?: GenericMapping[];\\n    employeemapping?: EmployeeMapping[];\\n    categorymapping?: CategoryMapping[];\\n  }\\n\\n  export interface GenericMappingResponse extends PaginatedResponse {\\n    results: ExtendedGenericMapping[];\\n  }","properties":[{"name":"categorymapping","deprecated":false,"deprecationMessage":"","type":"CategoryMapping[]","optional":true,"description":"","line":10},{"name":"employeemapping","deprecated":false,"deprecationMessage":"","type":"EmployeeMapping[]","optional":true,"description":"","line":9},{"name":"mapping","deprecated":false,"deprecationMessage":"","type":"GenericMapping[]","optional":true,"description":"","line":8}],"indexSignatures":[],"kind":171,"methods":[],"extends":["ExpenseAttribute"]},{"name":"ExtendedGenericMappingV2","id":"interface-ExtendedGenericMappingV2-823665bcca0e0f48a2870273a52ff66ca16b6a792e07a8aa6c3ddb80ceb0dced787c069191edd3529747b0f1af9acadb3e4fd57a9a766b39af1c947470591b47","file":"src/app/core/models/si/db/generic-mapping-v2.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CategoryMapping } from \'./category-mapping.model\';\\nimport { EmployeeMapping } from \'./employee-mapping.model\';\\nimport { ExpenseAttributeDetail } from \'./expense-attribute-detail.model\';\\nimport { MappingIntacct } from \'./mapping.model\';\\n\\nexport type GenericMappingV2 = {\\n  id: number;\\n  attribute_type: string;\\n  display_name: string;\\n  value: string;\\n  source_id: number;\\n  auto_mapped: boolean;\\n  active: boolean;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n  detail: ExpenseAttributeDetail;\\n};\\n\\nexport interface ExtendedGenericMappingV2 extends GenericMappingV2 {\\n  mapping?: MappingIntacct[];\\n  employeemapping?: EmployeeMapping[];\\n  categorymapping?: CategoryMapping[];\\n}\\n\\nexport type GenericMappingV2Response = {\\n  count: number;\\n  next: string;\\n  previous: string;\\n  results: ExtendedGenericMappingV2[];\\n}","properties":[{"name":"categorymapping","deprecated":false,"deprecationMessage":"","type":"CategoryMapping[]","optional":true,"description":"","line":23},{"name":"employeemapping","deprecated":false,"deprecationMessage":"","type":"EmployeeMapping[]","optional":true,"description":"","line":22},{"name":"mapping","deprecated":false,"deprecationMessage":"","type":"MappingIntacct[]","optional":true,"description":"","line":21}],"indexSignatures":[],"kind":171,"methods":[],"extends":["GenericMappingV2"]},{"name":"GeneralMappingEntity","id":"interface-GeneralMappingEntity-80b31e6728b27952f8e4805037c7ca5838cf2dd46b93b07bb32d8f709368e6165040e6c71912727e8867de9344aab56bdddc1c7d0aedc163614f8791a2170683","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\nimport { PaymentSyncDirection } from \\"../../enum/enum.model\\";\\nimport { EmailOptions } from \\"../../qbd/qbd-configuration/advanced-setting.model\\";\\n\\n  export interface GeneralMappingEntity {\\n    id: string;\\n    name: string;\\n  }\\n\\n  export  interface HourOption {\\n    label: string;\\n    value: number;\\n  }\\n\\n  export type EmailOption = {\\n    email: string;\\n    name: string;\\n  }\\n\\n  export type AdvancedSettingFormOption = {\\n    label: string,\\n    value: string | null | PaymentSyncDirection\\n}\\n\\nexport type ConditionField = {\\n  field_name: string;\\n  type: string;\\n  is_custom: boolean;\\n};\\n\\nexport enum Operator {\\n  IsNull = \\"isnull\\",\\n  IExact = \\"iexact\\",\\n  IContains = \\"icontains\\",\\n  LessThan = \\"lt\\",\\n  LessThanOrEqual = \\"lte\\"\\n}\\n\\nexport const JoinOptions = {\\n  AND: \'AND\',\\n  OR: \'OR\'\\n};\\n\\nexport enum JoinOption {\\n  AND = \\"AND\\",\\n  OR = \\"OR\\"\\n}\\n\\nexport enum CustomOperatorOption {\\n  Is = \\"iexact\\",\\n  IsEmpty = \\"is_empty\\",\\n  IsNotEmpty = \\"is_not_empty\\"\\n}\\n\\nexport type SkipExport = {\\n  id?: number;\\n  condition: string;\\n  custom_field_type: any;\\n  operator: Operator.IsNull | Operator.IExact | Operator.IContains | Operator.LessThan | Operator.LessThanOrEqual;\\n  values: string[];\\n  rank: number;\\n  join_by: JoinOption.AND | JoinOption.OR | null;\\n  is_custom: boolean;\\n};\\n\\nexport type ExpenseFilterResponse = {\\n  count: number;\\n  results: SkipExport[];\\n};\\n\\nexport interface Configuration {\\n    change_accounting_period: boolean;\\n    sync_fyle_to_sage_intacct_payments: boolean;\\n    sync_sage_intacct_to_fyle_payments: boolean;\\n    auto_create_destination_entity: boolean;\\n    auto_create_merchant_destination_entity: boolean;\\n    memo_structure: string[];\\n  }\\n\\n  export interface AdvancedSettingGeneralMapping {\\n    payment_account: GeneralMappingEntity;\\n    default_location: GeneralMappingEntity;\\n    default_department: GeneralMappingEntity;\\n    default_class: GeneralMappingEntity;\\n    default_project: GeneralMappingEntity;\\n    default_item: GeneralMappingEntity;\\n    use_intacct_employee_departments: boolean;\\n    use_intacct_employee_locations: boolean;\\n  }\\n\\n  export interface WorkspaceSchedules {\\n    enabled: boolean;\\n    start_datetime: string;\\n    interval_hours: number;\\n    emails_selected: string[] | [];\\n    additional_email_options: EmailOption[];\\n  }\\n\\nexport type AdvancedSettingsGet = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n    workspace_id: number;\\n}\\n\\nexport type AdvancedSettingsPost = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n  }\\n\\n  export class AdvancedSetting {\\n    static constructPayload(advancedSettingsForm: FormGroup): AdvancedSettingsPost {\\n      const getFormValue = (key: string) => advancedSettingsForm.get(key)?.value;\\n\\n      const mapAttribute = (key: string, idKey: string, valueKey: string) => {\\n        const value = getFormValue(key);\\n        return value ? { name: value[valueKey], id: value[idKey] } : { name: null, id: null };\\n      };\\n\\n      const advancedSettingPayload: AdvancedSettingsPost = {\\n        configurations: {\\n          auto_create_merchant_destination_entity: true,\\n          sync_fyle_to_sage_intacct_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.FYLE_TO_INTACCT,\\n          sync_sage_intacct_to_fyle_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.INTACCT_TO_FYLE,\\n          auto_create_destination_entity: getFormValue(\'autoCreateEmployeeVendor\'),\\n          change_accounting_period: !!getFormValue(\'postEntriesCurrentPeriod\'),\\n          memo_structure: getFormValue(\'setDescriptionField\')\\n        },\\n        general_mappings: {\\n          payment_account: mapAttribute(\'defaultPaymentAccount\', \'destination_id\', \'value\'),\\n          default_location: mapAttribute(\'defaultLocation\', \'destination_id\', \'value\'),\\n          default_department: mapAttribute(\'defaultDepartment\', \'destination_id\', \'value\'),\\n          default_class: mapAttribute(\'defaultClass\', \'destination_id\', \'value\'),\\n          default_project: mapAttribute(\'defaultProject\', \'destination_id\', \'value\'),\\n          default_item: mapAttribute(\'defaultItems\', \'destination_id\', \'value\'),\\n          use_intacct_employee_departments: !!getFormValue(\'useEmployeeLocation\'),\\n          use_intacct_employee_locations: !!getFormValue(\'useEmployeeDepartment\')\\n        },\\n        workspace_schedules: {\\n          enabled: !!getFormValue(\'scheduleAutoExport\'),\\n          start_datetime: \'\',\\n          interval_hours: getFormValue(\'scheduleAutoExport\'),\\n          emails_selected: advancedSettingsForm.get(\'email\')?.value ? advancedSettingsForm.get(\'email\')?.value.map((item: EmailOptions) => item.email) : [],\\n          additional_email_options: getFormValue(\'addedEmail\')\\n        }\\n      };\\n\\n      return advancedSettingPayload;\\n    }\\n  }","properties":[{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"GenericMapping","id":"interface-GenericMapping-4373a39b43b0280d6be512eb1d30c77c073118870255eb544cc7f5934dad649b66acd6846358e1dd0d2e9700dc7e87dab1fa9fece5dd23db7bb622a53c1a8a4e","file":"src/app/core/models/db/generic-mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FyleField } from \\"../enum/enum.model\\";\\nimport { CategoryMappingPost } from \\"./category-mapping.model\\";\\nimport { DestinationAttribute } from \\"./destination-attribute.model\\";\\nimport { EmployeeMappingPost } from \\"./employee-mapping.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { ExtendedGenericMapping } from \\"./extended-generic-mapping.model\\";\\n\\nexport type GenericMappingPost = {\\n    source_type: string;\\n    source_value: string;\\n    destination_type: string;\\n    destination_id: string;\\n    destination_value: string;\\n};\\n\\nexport interface GenericMapping {\\n  created_at: Date;\\n  destination: DestinationAttribute;\\n  destination_type: string;\\n  id: number;\\n  source: ExpenseAttribute;\\n  source_type: string,\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport type MinimalMappingSetting = {\\n  source_field: string;\\n  destination_field: string;\\n};\\n\\nexport class MappingClass {\\n\\n  static constructEmployeeMappingPayload(selectedRow: ExtendedGenericMapping, event: any, employeeFieldMapping: FyleField, workspaceId: string) {\\n    const employeeMapping: EmployeeMappingPost = {\\n      source_employee: {\\n        id: selectedRow.id\\n      },\\n      destination_vendor: {\\n        id: employeeFieldMapping===FyleField.VENDOR ? event.value.id : (selectedRow.employeemapping?.length && selectedRow.employeemapping[0].destination_vendor ? selectedRow.employeemapping[0].destination_vendor?.id : null)\\n      },\\n      destination_employee: {\\n        id: employeeFieldMapping===FyleField.EMPLOYEE ? event.value.id : (selectedRow.employeemapping?.length && selectedRow.employeemapping[0].destination_employee ? selectedRow.employeemapping[0].destination_employee?.id : null)\\n      },\\n      destination_card_account: {\\n        id: (selectedRow.employeemapping?.length && selectedRow.employeemapping[0].destination_card_account ? selectedRow.employeemapping[0].destination_card_account?.id : null)\\n      },\\n      workspace: parseInt(workspaceId)\\n    };\\n\\n    return employeeMapping;\\n  }\\n\\n  static constructCategoryMappingPayload(selectedRow: ExtendedGenericMapping, event: any, destinationField: string, workspaceId: string) {\\n    const sourceId = selectedRow.id;\\n\\n    const categoryMappingsPayload: CategoryMappingPost = {\\n      source_category: {\\n        id: sourceId\\n      },\\n      destination_account: {\\n        id: destinationField === \'ACCOUNT\' ? event.value.id : null\\n      },\\n      destination_expense_head: {\\n        id: destinationField !== \'ACCOUNT\' ? event.value.id : null\\n      },\\n      workspace: parseInt(workspaceId)\\n    };\\n\\n    return categoryMappingsPayload;\\n  }\\n\\n  static constructGenericMappingPayload(selectedRow: ExtendedGenericMapping, event: any, mappingSetting: MinimalMappingSetting) {\\n    const genericMappingPayload: GenericMappingPost = {\\n      source_type: mappingSetting.source_field,\\n      source_value: selectedRow.value,\\n      destination_type: mappingSetting.destination_field,\\n      destination_id: event.value.destination_id,\\n      destination_value: event.value.value\\n    };\\n\\n    return genericMappingPayload;\\n  }\\n}","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":18},{"name":"destination","deprecated":false,"deprecationMessage":"","type":"DestinationAttribute","optional":false,"description":"","line":19},{"name":"destination_type","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":20},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":21},{"name":"source","deprecated":false,"deprecationMessage":"","type":"ExpenseAttribute","optional":false,"description":"","line":22},{"name":"source_type","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":24},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":25}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"GenericMappingResponse","id":"interface-GenericMappingResponse-ae43adfe6f26d114cacf09bf4fc77b05cb34531d4f80b94699d23e96ef01000bce3e93353f40066be7e2a8c8ad40ceb1551ef0ff9f29c4969b6605978603edd4","file":"src/app/core/models/db/extended-generic-mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { CategoryMapping } from \\"./category-mapping.model\\";\\nimport { EmployeeMapping } from \\"./employee-mapping.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { GenericMapping } from \\"./generic-mapping.model\\";\\nimport { PaginatedResponse } from \\"./paginated-response.model\\";\\n\\n  export interface ExtendedGenericMapping extends ExpenseAttribute {\\n    mapping?: GenericMapping[];\\n    employeemapping?: EmployeeMapping[];\\n    categorymapping?: CategoryMapping[];\\n  }\\n\\n  export interface GenericMappingResponse extends PaginatedResponse {\\n    results: ExtendedGenericMapping[];\\n  }","properties":[{"name":"results","deprecated":false,"deprecationMessage":"","type":"ExtendedGenericMapping[]","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":171,"methods":[],"extends":["PaginatedResponse"]},{"name":"HourOption","id":"interface-HourOption-7b29e3995c6c44abdf943dff49fc8424eb9a447b450a01ed4bb3757467b55424327f2e9f468fa43f334b7e4103d84a18c93eb2a60a4b4a12fdd3b3680fa65960","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { JoinOption, Operator } from \\"../enum/enum.model\\";\\nimport { environment } from \\"src/environments/environment\\";\\n\\nexport type EmailOption = {\\n    email: string;\\n    name: string;\\n};\\n\\nexport  interface HourOption {\\n  label: string;\\n  value: number;\\n}\\n\\nexport type skipExportValidator = {\\n  isChanged: string[];\\n  isNotChanged: string[];\\n}\\n\\nexport type ConditionField = {\\n  field_name: string;\\n  type: string;\\n  is_custom: boolean;\\n};\\n\\nexport type ExpenseFilterPost = {\\n    condition: string;\\n    operator: Operator;\\n    values: string | string[]\\n    rank: number;\\n    join_by:JoinOption | null;\\n    is_custom: boolean;\\n    custom_field_type: string | null;\\n};\\n\\nexport type ExpenseFilterPayload = {\\n    condition: ConditionField,\\n    operator: Operator,\\n    value: string[]\\n    join_by: string,\\n    rank: number\\n  }\\n\\nexport interface ExpenseFilter extends ExpenseFilterPost {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    workspace: number\\n}\\n\\nexport type ExpenseFilterResponse = {\\n    count: number,\\n    next: string | null,\\n    previous: string | null,\\n    results: ExpenseFilter[]\\n};\\n\\nexport type SkipExportValidatorRule = {\\n  condition1: string[];\\n  condition2: string[];\\n  operator1: string[];\\n  operator2: string[];\\n};\\n\\nexport type AdvancedSettingValidatorRule = {\\n  paymentSync: string;\\n  exportSchedule: string;\\n};\\n\\nexport class AdvancedSettingsModel {\\n  static getDefaultMemoOptions(): string[] {\\n    return [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n  }\\n\\n  static formatMemoPreview(memoStructure: string[], defaultMemoOptions: string[]): string {\\n    const time = Date.now();\\n    const today = new Date(time);\\n\\n    const previewValues: { [key: string]: string } = {\\n      employee_email: \'john.doe@acme.com\',\\n      category: \'Meals and Entertainment\',\\n      purpose: \'Client Meeting\',\\n      merchant: \'Pizza Hut\',\\n      report_number: \'C/2021/12/R/1\',\\n      spent_on: today.toLocaleDateString(),\\n      expense_link: `${environment.fyle_app_url}/app/main/#/enterprise/view_expense/`\\n    };\\n    let memoPreviewText = \'\';\\n    const memo: string[] = [];\\n    memoStructure.forEach((field, index) => {\\n      if (field in previewValues) {\\n        const defaultIndex = defaultMemoOptions.indexOf(memoStructure[index]);\\n        memo[defaultIndex] = previewValues[field];\\n      }\\n    });\\n    memo.forEach((field, index) => {\\n      memoPreviewText += field;\\n      if (index + 1 !== memo.length) {\\n        memoPreviewText = memoPreviewText + \' - \';\\n      }\\n    });\\n    return memoPreviewText;\\n  }\\n\\n  static filterAdminEmails = (emailToSearch: string[], adminEmails: EmailOption[]) => {\\n    const adminEmailsList: EmailOption[] = [];\\n    for (const email of emailToSearch) {\\n      adminEmails.find(item => (item.email === email ? adminEmailsList.push(item) : null));\\n    }\\n    return adminEmailsList;\\n};\\n\\n  static formatSelectedEmails(emails: EmailOption[]): string[] {\\n    return emails.map((option: EmailOption) => option.email);\\n  }\\n}\\n\\nexport class SkipExportModel {\\n\\n  static constructSkipExportValue(valueField: any) {\\n    if (valueField.condition1.field_name !== \'report_title\' && valueField.operator1 === \'iexact\') {\\n      valueField.operator1 = \'in\';\\n    }\\n    if (valueField.condition1.is_custom === true) {\\n      if (valueField.operator1 === \'is_empty\') {\\n        valueField.value1 = [\'True\'];\\n        valueField.operator1 = \'isnull\';\\n      } else if (valueField.operator1 === \'is_not_empty\') {\\n        valueField.value1 = [\'False\'];\\n        valueField.operator1 = \'isnull\';\\n      }\\n    }\\n    if (valueField.condition1.field_name === \'spent_at\') {\\n      valueField.value1 = new Date(valueField.value1).toISOString().split(\'T\')[0] + \'T17:00:00.000Z\';\\n    }\\n    if (typeof valueField.value1 === \'string\') {\\n      valueField.value1 = [valueField.value1];\\n    }\\n\\n    if (valueField.condition2 && valueField.operator2) {\\n      if (valueField.condition2.field_name !== \'report_title\' && valueField.operator2 === \'iexact\') {\\n        valueField.operator2 = \'in\';\\n      }\\n      if (valueField.condition2.field_name === \'spent_at\') {\\n        valueField.value2 = new Date(valueField.value2).toISOString().split(\'T\')[0] + \'T17:00:00.000Z\';\\n      }\\n      if (valueField.condition2.is_custom === true) {\\n        if (valueField.operator2 === \'is_empty\') {\\n          valueField.value2 = [\'True\'];\\n          valueField.operator2 = \'isnull\';\\n        } else if (valueField.operator2 === \'is_not_empty\') {\\n          valueField.value2 = [\'False\'];\\n          valueField.operator2 = \'isnull\';\\n        }\\n      }\\n      if (typeof valueField.value2 === \'string\') {\\n        valueField.value2 = [valueField.value2];\\n      }\\n    }\\n    return valueField;\\n  }\\n\\n  static constructExportFilterPayload(valueField: any): ExpenseFilterPayload {\\n    return {\\n      condition: valueField[\'condition\'+valueField.rank] as ConditionField,\\n      operator: valueField[\'operator\'+valueField.rank] as Operator,\\n      value: valueField[\'value\'+valueField.rank],\\n      join_by: valueField?.join_by && valueField.rank === 1 ? valueField?.join_by : null,\\n      rank: valueField.rank\\n    };\\n  }\\n\\n  static constructSkipExportPayload(valueField: ExpenseFilterPayload, valueOption: any[]): ExpenseFilterPost {\\n    return {\\n      condition: valueField.condition.field_name,\\n      operator: valueField.operator,\\n      values:\\n        valueField.condition.type === \'DATE\' ||\\n          valueField.operator === \'isnull\' || valueField.condition.field_name === \'report_title\' ? valueField.value : valueOption,\\n      rank: valueField.rank,\\n      join_by: valueField?.join_by ? JoinOption[valueField.join_by as JoinOption] : null,\\n      is_custom: valueField.condition.is_custom,\\n      custom_field_type: valueField.condition?.is_custom ? valueField.condition.type : null\\n    };\\n  }\\n\\n  static setConditionFields(response: ExpenseFilterResponse, conditionArray: ConditionField[], conditionFieldOptions: ConditionField[]) {\\n    response.results.forEach((element) => {\\n      const type = conditionFieldOptions?.filter( (fieldOption) => fieldOption.field_name === element.condition);\\n      const selectedConditionOption : ConditionField = type[0];\\n      conditionArray.push(selectedConditionOption);\\n    });\\n  }\\n\\n  static getSelectedOperator(operator: string, value: any) {\\n    switch (operator) {\\n      case \'isnull\':\\n        return value === \'True\' ? \'is_empty\' : \'is_not_empty\';\\n      case \'in\':\\n        return \'iexact\';\\n      case \'iexact\':\\n        return operator;\\n      default:\\n        return operator;\\n    }\\n  }\\n\\n  static getFieldValue(value: any, condition: ConditionField, rank: number) {\\n    if (condition?.type === \'DATE\') {\\n      return new Date(value[0]);\\n    } else if (condition?.field_name === \'report_title\') {\\n      return value[0];\\n    }\\n    if (rank === 1) {\\n        return value;\\n    } else if (rank === 2) {\\n        return value;\\n    }\\n    return \'\';\\n\\n  }\\n\\n  static setupSkipExportForm(response: ExpenseFilterResponse, conditionArray: ConditionField[], conditionFieldOptions: ConditionField[]) {\\n    this.setConditionFields(response, conditionArray, conditionFieldOptions);\\n    let [selectedOperator1, valueFC1, customFieldTypeFC1] = [\'\', \'\', \'\'];\\n    let [selectedOperator2, valueFC2] = [\'\', \'\'];\\n    let joinByFC = \'\';\\n    let isDisabledChip2: boolean = false;\\n    let isDisabledChip1: boolean = false;\\n\\n    response.results.forEach((result: ExpenseFilterPost, index: number) => {\\n        if (index === 0) {\\n            selectedOperator1 = this.getSelectedOperator(result.operator, result.values[0]);\\n            if (!(selectedOperator1 === \'is_empty\' || selectedOperator1 === \'is_not_empty\')) {\\n                valueFC1 = this.getFieldValue(result.values, conditionArray[0], result.rank);\\n            } else {\\n                isDisabledChip1 = true;\\n            }\\n            customFieldTypeFC1 = result?.custom_field_type ? result.custom_field_type : \'\';\\n        } else if (index === 1 && response.results[0].join_by !== null) {\\n            selectedOperator2 = this.getSelectedOperator(result.operator, result.values[0]);\\n            joinByFC = response.results[0].join_by;\\n            if (!(selectedOperator2 === \'is_empty\' || selectedOperator2 === \'is_not_empty\')) {\\n                valueFC2 = this.getFieldValue(result.values, conditionArray[1], result.rank);\\n            } else {\\n                isDisabledChip2 = true;\\n            }\\n        }\\n    });\\n\\n    return new FormGroup({\\n      condition1: new FormControl(conditionArray.length > 0 ? conditionArray[0] : \'\'),\\n      operator1: new FormControl(selectedOperator1),\\n      value1: new FormControl(valueFC1),\\n      customFieldType1: new FormControl(customFieldTypeFC1),\\n      join_by: new FormControl(joinByFC),\\n      condition2: new FormControl(joinByFC ? conditionArray[1] : \'\'),\\n      operator2: new FormControl(joinByFC && selectedOperator2 ? selectedOperator2 : \'\'),\\n      value2: new FormControl(valueFC2),\\n      customFieldType2: new FormControl(joinByFC ? response.results[1].custom_field_type : \'\'),\\n      isDisabledChip1: new FormControl(isDisabledChip1),\\n      isDisabledChip2: new FormControl(isDisabledChip2)\\n    });\\n  }\\n}\\n","properties":[{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"HourOption","id":"interface-HourOption-80b31e6728b27952f8e4805037c7ca5838cf2dd46b93b07bb32d8f709368e6165040e6c71912727e8867de9344aab56bdddc1c7d0aedc163614f8791a2170683-1","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\nimport { PaymentSyncDirection } from \\"../../enum/enum.model\\";\\nimport { EmailOptions } from \\"../../qbd/qbd-configuration/advanced-setting.model\\";\\n\\n  export interface GeneralMappingEntity {\\n    id: string;\\n    name: string;\\n  }\\n\\n  export  interface HourOption {\\n    label: string;\\n    value: number;\\n  }\\n\\n  export type EmailOption = {\\n    email: string;\\n    name: string;\\n  }\\n\\n  export type AdvancedSettingFormOption = {\\n    label: string,\\n    value: string | null | PaymentSyncDirection\\n}\\n\\nexport type ConditionField = {\\n  field_name: string;\\n  type: string;\\n  is_custom: boolean;\\n};\\n\\nexport enum Operator {\\n  IsNull = \\"isnull\\",\\n  IExact = \\"iexact\\",\\n  IContains = \\"icontains\\",\\n  LessThan = \\"lt\\",\\n  LessThanOrEqual = \\"lte\\"\\n}\\n\\nexport const JoinOptions = {\\n  AND: \'AND\',\\n  OR: \'OR\'\\n};\\n\\nexport enum JoinOption {\\n  AND = \\"AND\\",\\n  OR = \\"OR\\"\\n}\\n\\nexport enum CustomOperatorOption {\\n  Is = \\"iexact\\",\\n  IsEmpty = \\"is_empty\\",\\n  IsNotEmpty = \\"is_not_empty\\"\\n}\\n\\nexport type SkipExport = {\\n  id?: number;\\n  condition: string;\\n  custom_field_type: any;\\n  operator: Operator.IsNull | Operator.IExact | Operator.IContains | Operator.LessThan | Operator.LessThanOrEqual;\\n  values: string[];\\n  rank: number;\\n  join_by: JoinOption.AND | JoinOption.OR | null;\\n  is_custom: boolean;\\n};\\n\\nexport type ExpenseFilterResponse = {\\n  count: number;\\n  results: SkipExport[];\\n};\\n\\nexport interface Configuration {\\n    change_accounting_period: boolean;\\n    sync_fyle_to_sage_intacct_payments: boolean;\\n    sync_sage_intacct_to_fyle_payments: boolean;\\n    auto_create_destination_entity: boolean;\\n    auto_create_merchant_destination_entity: boolean;\\n    memo_structure: string[];\\n  }\\n\\n  export interface AdvancedSettingGeneralMapping {\\n    payment_account: GeneralMappingEntity;\\n    default_location: GeneralMappingEntity;\\n    default_department: GeneralMappingEntity;\\n    default_class: GeneralMappingEntity;\\n    default_project: GeneralMappingEntity;\\n    default_item: GeneralMappingEntity;\\n    use_intacct_employee_departments: boolean;\\n    use_intacct_employee_locations: boolean;\\n  }\\n\\n  export interface WorkspaceSchedules {\\n    enabled: boolean;\\n    start_datetime: string;\\n    interval_hours: number;\\n    emails_selected: string[] | [];\\n    additional_email_options: EmailOption[];\\n  }\\n\\nexport type AdvancedSettingsGet = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n    workspace_id: number;\\n}\\n\\nexport type AdvancedSettingsPost = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n  }\\n\\n  export class AdvancedSetting {\\n    static constructPayload(advancedSettingsForm: FormGroup): AdvancedSettingsPost {\\n      const getFormValue = (key: string) => advancedSettingsForm.get(key)?.value;\\n\\n      const mapAttribute = (key: string, idKey: string, valueKey: string) => {\\n        const value = getFormValue(key);\\n        return value ? { name: value[valueKey], id: value[idKey] } : { name: null, id: null };\\n      };\\n\\n      const advancedSettingPayload: AdvancedSettingsPost = {\\n        configurations: {\\n          auto_create_merchant_destination_entity: true,\\n          sync_fyle_to_sage_intacct_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.FYLE_TO_INTACCT,\\n          sync_sage_intacct_to_fyle_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.INTACCT_TO_FYLE,\\n          auto_create_destination_entity: getFormValue(\'autoCreateEmployeeVendor\'),\\n          change_accounting_period: !!getFormValue(\'postEntriesCurrentPeriod\'),\\n          memo_structure: getFormValue(\'setDescriptionField\')\\n        },\\n        general_mappings: {\\n          payment_account: mapAttribute(\'defaultPaymentAccount\', \'destination_id\', \'value\'),\\n          default_location: mapAttribute(\'defaultLocation\', \'destination_id\', \'value\'),\\n          default_department: mapAttribute(\'defaultDepartment\', \'destination_id\', \'value\'),\\n          default_class: mapAttribute(\'defaultClass\', \'destination_id\', \'value\'),\\n          default_project: mapAttribute(\'defaultProject\', \'destination_id\', \'value\'),\\n          default_item: mapAttribute(\'defaultItems\', \'destination_id\', \'value\'),\\n          use_intacct_employee_departments: !!getFormValue(\'useEmployeeLocation\'),\\n          use_intacct_employee_locations: !!getFormValue(\'useEmployeeDepartment\')\\n        },\\n        workspace_schedules: {\\n          enabled: !!getFormValue(\'scheduleAutoExport\'),\\n          start_datetime: \'\',\\n          interval_hours: getFormValue(\'scheduleAutoExport\'),\\n          emails_selected: advancedSettingsForm.get(\'email\')?.value ? advancedSettingsForm.get(\'email\')?.value.map((item: EmailOptions) => item.email) : [],\\n          additional_email_options: getFormValue(\'addedEmail\')\\n        }\\n      };\\n\\n      return advancedSettingPayload;\\n    }\\n  }","properties":[{"name":"label","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":11},{"name":"value","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":171,"methods":[],"extends":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"HourOption-1"},{"name":"IntacctDestinationAttribute","id":"interface-IntacctDestinationAttribute-cf029266bc5724b3c8fe1a0207ac0c4669673606f0ac83525ac3ba2bc8c79d5aaaff25d88602f2df9f3ce261eb0388f3fe844593db9e579c183ec4a6a79e4adc","file":"src/app/core/models/si/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { DestinationAttribute } from \\"../../db/destination-attribute.model\\";\\n\\ntype IntacctDestinationAttributeDetail = {\\n  email?: string;\\n  customer_id?: string;\\n  customer_name?: string;\\n  gl_account_no?: string;\\n  gl_account_title?: string;\\n  is_reimbursable?: boolean;\\n  country?: string;\\n};\\n\\nexport interface IntacctDestinationAttribute extends DestinationAttribute {\\n  detail: IntacctDestinationAttributeDetail;\\n}\\n\\nexport type PaginatedintacctDestinationAttribute = {\\n  count: number;\\n  next: string;\\n  previous: string;\\n  results: IntacctDestinationAttribute[];\\n};\\n\\nexport type ExportSettingDestinationAttributeOption = {\\n  \'VENDOR\': IntacctDestinationAttribute[],\\n  \'ACCOUNT\': IntacctDestinationAttribute[],\\n  \'EXPENSE_PAYMENT_TYPE\': IntacctDestinationAttribute[],\\n  \'CCC_EXPENSE_PAYMENT_TYPE\': IntacctDestinationAttribute[],\\n  \'CHARGE_CARD\': IntacctDestinationAttribute[],\\n}\\n\\nexport type GroupedDestinationAttribute = {\\n  ACCOUNT: IntacctDestinationAttribute[],\\n  EXPENSE_TYPE: IntacctDestinationAttribute[],\\n  EXPENSE_PAYMENT_TYPE: IntacctDestinationAttribute[],\\n  VENDOR: IntacctDestinationAttribute[],\\n  CHARGE_CARD_NUMBER: IntacctDestinationAttribute[],\\n  TAX_DETAIL: IntacctDestinationAttribute[],\\n  LOCATION: IntacctDestinationAttribute[],\\n  DEPARTMENT: IntacctDestinationAttribute[],\\n  PROJECT: IntacctDestinationAttribute[],\\n  CLASS: IntacctDestinationAttribute[],\\n  ITEM: IntacctDestinationAttribute[],\\n  PAYMENT_ACCOUNT: IntacctDestinationAttribute[],\\n  EMPLOYEE: IntacctDestinationAttribute[]\\n};","properties":[{"name":"detail","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttributeDetail","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":171,"methods":[],"extends":["DestinationAttribute"]},{"name":"IntacctWorkspace","id":"interface-IntacctWorkspace-ac66638e26076e8eb8af292e3e64b184d46488dae5f25e19362113d80b2243e22e27dfb0061863c1be0e44b6726821a57e0e02704d72a07b36efa1570bcd8a63","file":"src/app/core/models/si/db/workspaces.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Workspace } from \\"../../db/workspaces.model\\";\\nimport { IntacctOnboardingState } from \\"../../enum/enum.model\\";\\n\\nexport interface IntacctWorkspace extends Workspace {\\n    last_synced_at: Date;\\n    ccc_last_synced_at: Date;\\n    source_synced_at: Date;\\n    cluster_domain: string;\\n    destination_synced_at: Date;\\n    onboarding_state: IntacctOnboardingState;\\n  }","properties":[{"name":"ccc_last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":6},{"name":"cluster_domain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"destination_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":9},{"name":"last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":5},{"name":"onboarding_state","deprecated":false,"deprecationMessage":"","type":"IntacctOnboardingState","optional":false,"description":"","line":10},{"name":"source_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":171,"methods":[],"extends":["Workspace"]},{"name":"Mapping","id":"interface-Mapping-edae5c7149cd8e6c601b2ef99be7655c153d472dcc8dc605ab8fd96fcd3859c8f49c33e9dea9218a4f993525da383e8f7cead0685818cf2a7b59280165e1a852","file":"src/app/core/models/qbd/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export type MappingPost = {\\n  attribute_type: string;\\n  source_value: string;\\n  source_id: string;\\n  destination_value: string | null;\\n};\\n\\nexport interface Mapping extends MappingPost {\\n  id: number;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport type MappingResponse = {\\n  count: number;\\n  next: string;\\n  previous: string;\\n  results: Mapping[];\\n};\\n\\nexport type MappingStats = {\\n  all_attributes_count: number;\\n  unmapped_attributes_count: number;\\n};\\n\\nexport class MappingModel {\\n  static constructPayload(mapping: Mapping): MappingPost {\\n    return {\\n      attribute_type: mapping.attribute_type,\\n      source_value: mapping.source_value,\\n      source_id: mapping.source_id.toString(),\\n      destination_value: mapping.destination_value\\n    };\\n  }\\n}\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":10},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":9},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":11},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":171,"methods":[],"extends":["MappingPost"]},{"name":"MappingIntacct","id":"interface-MappingIntacct-e11b476377c50455fa0a7323b221487cc93b8b58b10dbceabc611ff0daf68885a6a27366a7ff5562b866c60dfc027bdef59d8f58601804e9b22d60e09c8290cf","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { DestinationAttribute } from \\"../../db/destination-attribute.model\\";\\nimport { FyleField, MappingState, SageIntacctField } from \\"../../enum/enum.model\\";\\nimport { EmployeeMapping } from \\"./employee-mapping.model\\";\\nimport { Error } from \\"./error.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { MinimalMappingSetting } from \\"./mapping-setting.model\\";\\n\\nexport type MappingPost = {\\n  source_type: string;\\n  source_value: string;\\n  destination_type: string;\\n  destination_id: string;\\n  destination_value: string;\\n};\\n\\nexport interface MappingIntacct extends MappingPost {\\n  id: number;\\n  source: ExpenseAttribute;\\n  destination: DestinationAttribute;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport type MappingResponse = {\\n  count: number;\\n  next: string;\\n  previous: string;\\n  results: EmployeeMapping[];\\n};\\n\\nexport type MappingList = {\\n  fyle: {\\n    id: number;\\n    value: string;\\n  };\\n  intacct: {\\n    id: number | string;\\n    value: string;\\n  };\\n  preserveDestination?: {\\n    id: number | string;\\n  }\\n  autoMapped: boolean;\\n  state: MappingState;\\n  index: number;\\n};\\n\\nexport type MappingStats = {\\n  all_attributes_count: number;\\n  unmapped_attributes_count: number;\\n};\\n\\nexport type ResolveMappingError = {\\n  sourceType: FyleField;\\n  destinationType: SageIntacctField | FyleField;\\n  fyleAttributes: Error[];\\n  workspaceId: string;\\n};\\n\\nexport class MappingModel {\\n  static constructPayload(mappingSetting: MinimalMappingSetting, mappingRow: MappingList): MappingPost {\\n    return {\\n      source_type: mappingSetting.source_field,\\n      source_value: mappingRow.fyle.value,\\n      destination_type: mappingSetting.destination_field,\\n      destination_id: mappingRow.intacct.id.toString(),\\n      destination_value: mappingRow.intacct.value\\n    };\\n  }\\n}\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":21},{"name":"destination","deprecated":false,"deprecationMessage":"","type":"DestinationAttribute","optional":false,"description":"","line":20},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":18},{"name":"source","deprecated":false,"deprecationMessage":"","type":"ExpenseAttribute","optional":false,"description":"","line":19},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":22},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":23}],"indexSignatures":[],"kind":171,"methods":[],"extends":["MappingPost"]},{"name":"MappingSettingResponse","id":"interface-MappingSettingResponse-cf1a9804fe9e2751cef2ffee1a4c7b7a7831c931e5c926c324878b814113a9167f7780e005733019d25fae0146da5cb88ec6134d431546a2298cff4e171630b8","file":"src/app/core/models/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { PaginatedResponse } from \\"./paginated-response.model\\";\\n\\nexport type MappingSetting = {\\n  id: number;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n  source_field: string;\\n  destination_field: string;\\n  import_to_fyle: boolean;\\n  is_custom: boolean;\\n  source_placeholder: string | null\\n}\\n\\nexport interface MappingSettingResponse extends PaginatedResponse {\\n  results: MappingSetting[];\\n}\\n","properties":[{"name":"results","deprecated":false,"deprecationMessage":"","type":"MappingSetting[]","optional":false,"description":"","line":16}],"indexSignatures":[],"kind":171,"methods":[],"extends":["PaginatedResponse"]},{"name":"PaginatedResponse","id":"interface-PaginatedResponse-688db207286dcb90e2064bc0711693a905ef9565e01807b3936a003a10054a9193215582e1f079a052ce3607ff12482480d33ac8d90ce383a882b4041f318ada","file":"src/app/core/models/db/paginated-response.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export interface PaginatedResponse {\\n    count: number;\\n    next: null | string;\\n    previous: null | string;\\n}","properties":[{"name":"count","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":2},{"name":"next","deprecated":false,"deprecationMessage":"","type":"null | string","optional":false,"description":"","line":3},{"name":"previous","deprecated":false,"deprecationMessage":"","type":"null | string","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"QBDWorkspace","id":"interface-QBDWorkspace-2ff70f2b0b2896664251fff047c3fe01c100f3907c1945a728902faf5c3be6ee43f2eeadc0c9c7071720cee9f97c47144e431c45fdca62af82f148fefa0df760","file":"src/app/core/models/qbd/db/workspaces.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Workspace } from \\"../../db/workspaces.model\\";\\nimport { QBDOnboardingState } from \\"../../enum/enum.model\\";\\n\\nexport interface QBDWorkspace extends Workspace {\\n  reimbursable_last_synced_at: Date | null;\\n  ccc_last_synced_at: Date | null;\\n  onboarding_state: QBDOnboardingState;\\n}","properties":[{"name":"ccc_last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date | null","optional":false,"description":"","line":6},{"name":"onboarding_state","deprecated":false,"deprecationMessage":"","type":"QBDOnboardingState","optional":false,"description":"","line":7},{"name":"reimbursable_last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date | null","optional":false,"description":"","line":5}],"indexSignatures":[],"kind":171,"methods":[],"extends":["Workspace"]},{"name":"QBOConnectorPost","id":"interface-QBOConnectorPost-f4f782f2bd6196b6a34b795f6b92d2335c186e01cdc46521b971ae9a15e524da19b10c762beea68b9b973b88dbd2cd49cf51c5bd7c0b247e08aaabc3811e3d3d","file":"src/app/core/models/qbo/qbo-configuration/qbo-connector.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { environment } from \\"src/environments/environment\\";\\n\\nexport type QBOConnector = {\\n  code: string;\\n  realm_id: string;\\n}\\n\\nexport interface QBOConnectorPost extends QBOConnector {\\n  redirect_uri: string;\\n}\\n\\nexport class QBOConnectorModel {\\n  static constructPayload(code: string, realmId: string): QBOConnectorPost {\\n    return {\\n      code,\\n      realm_id: realmId,\\n      redirect_uri: `${environment.qbo_oauth_redirect_uri}`\\n    };\\n  }\\n}\\n","properties":[{"name":"redirect_uri","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":171,"methods":[],"extends":["QBOConnector"]},{"name":"QBOTaskLog","id":"interface-QBOTaskLog-ac36c5748b17ec4b6f9f86c3f47b0b78496f953c598580dc5f250baccc704919dfaeaec89d430841fc35f001ded55b8c5c0905183a03413308d97f3986bacd7b","file":"src/app/core/models/qbo/db/qbo-task-log.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { PaginatedResponse } from \\"../../db/paginated-response.model\\";\\nimport { TaskLog } from \\"../../db/task-log.model\\";\\nimport { QBOTaskLogType } from \\"../../enum/enum.model\\";\\n\\nexport type QuickbooksError = {\\n  expense_group_id: number;\\n  short_description: string;\\n  long_description: string;\\n  type: string;\\n};\\n\\nexport interface QBOTaskLog extends TaskLog {\\n  quickbooks_errors: QuickbooksError[];\\n  type: QBOTaskLogType;\\n}\\n\\nexport interface QBOTaskResponse extends PaginatedResponse {\\n  results: QBOTaskLog[];\\n}\\n","properties":[{"name":"quickbooks_errors","deprecated":false,"deprecationMessage":"","type":"QuickbooksError[]","optional":false,"description":"","line":13},{"name":"type","deprecated":false,"deprecationMessage":"","type":"QBOTaskLogType","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":171,"methods":[],"extends":["TaskLog"]},{"name":"QBOTaskResponse","id":"interface-QBOTaskResponse-ac36c5748b17ec4b6f9f86c3f47b0b78496f953c598580dc5f250baccc704919dfaeaec89d430841fc35f001ded55b8c5c0905183a03413308d97f3986bacd7b","file":"src/app/core/models/qbo/db/qbo-task-log.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { PaginatedResponse } from \\"../../db/paginated-response.model\\";\\nimport { TaskLog } from \\"../../db/task-log.model\\";\\nimport { QBOTaskLogType } from \\"../../enum/enum.model\\";\\n\\nexport type QuickbooksError = {\\n  expense_group_id: number;\\n  short_description: string;\\n  long_description: string;\\n  type: string;\\n};\\n\\nexport interface QBOTaskLog extends TaskLog {\\n  quickbooks_errors: QuickbooksError[];\\n  type: QBOTaskLogType;\\n}\\n\\nexport interface QBOTaskResponse extends PaginatedResponse {\\n  results: QBOTaskLog[];\\n}\\n","properties":[{"name":"results","deprecated":false,"deprecationMessage":"","type":"QBOTaskLog[]","optional":false,"description":"","line":18}],"indexSignatures":[],"kind":171,"methods":[],"extends":["PaginatedResponse"]},{"name":"QBOWorkspace","id":"interface-QBOWorkspace-c51b5e53ed7938047b6d6e809baf8cd0b63f4555901f71547da59ba137aa83d5e1818f42c86a5f5138c4ba15bdef3469bb3bc6e7b80baa800774ea7db0b2fa51","file":"src/app/core/models/qbo/db/qbo-workspace.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { QBOOnboardingState } from \\"../../enum/enum.model\\";\\nimport { Workspace } from \\"../../db/workspaces.model\\";\\n\\nexport interface QBOWorkspace extends Workspace {\\n    fyle_org_id: string;\\n    fyle_currency: string;\\n    qbo_realm_id: string;\\n    cluster_domain: string;\\n    onboarding_state: QBOOnboardingState;\\n    last_synced_at: Date;\\n    ccc_last_synced_at: Date;\\n    source_synced_at: Date;\\n    destination_synced_at: Date;\\n}","properties":[{"name":"ccc_last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":11},{"name":"cluster_domain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":8},{"name":"destination_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":13},{"name":"fyle_currency","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":6},{"name":"fyle_org_id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":10},{"name":"onboarding_state","deprecated":false,"deprecationMessage":"","type":"QBOOnboardingState","optional":false,"description":"","line":9},{"name":"qbo_realm_id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":7},{"name":"source_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":171,"methods":[],"extends":["Workspace"]},{"name":"Sage300AccountingExport","id":"interface-Sage300AccountingExport-7d00ef9ef1331779772bbc19d8e8ab2d2d749f2db3e99bc8ce2eb1b8786df602f4d3135557fadf34e59284348dd07e52f5a4b7ff13c1df536b66d5e33f1d2e03","file":"src/app/core/models/sage300/db/sage300-accounting-export.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AccountingExport } from \\"../../db/accounting-export.model\\";\\nimport { PaginatedResponse } from \\"../../db/paginated-response.model\\";\\n\\nexport interface Sage300AccountingExport extends AccountingExport {\\n    sage_300_errors: any;\\n    purchase_invoice_id: null | number;\\n    direct_costs_id: null | number;\\n    sage_300_reimbursement: null | number;\\n}\\n\\nexport interface Sage300AccountingExportResponse extends PaginatedResponse {\\n    results: Sage300AccountingExport[];\\n}","properties":[{"name":"direct_costs_id","deprecated":false,"deprecationMessage":"","type":"null | number","optional":false,"description":"","line":7},{"name":"purchase_invoice_id","deprecated":false,"deprecationMessage":"","type":"null | number","optional":false,"description":"","line":6},{"name":"sage_300_errors","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":5},{"name":"sage_300_reimbursement","deprecated":false,"deprecationMessage":"","type":"null | number","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":171,"methods":[],"extends":["AccountingExport"]},{"name":"Sage300AccountingExportResponse","id":"interface-Sage300AccountingExportResponse-7d00ef9ef1331779772bbc19d8e8ab2d2d749f2db3e99bc8ce2eb1b8786df602f4d3135557fadf34e59284348dd07e52f5a4b7ff13c1df536b66d5e33f1d2e03","file":"src/app/core/models/sage300/db/sage300-accounting-export.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AccountingExport } from \\"../../db/accounting-export.model\\";\\nimport { PaginatedResponse } from \\"../../db/paginated-response.model\\";\\n\\nexport interface Sage300AccountingExport extends AccountingExport {\\n    sage_300_errors: any;\\n    purchase_invoice_id: null | number;\\n    direct_costs_id: null | number;\\n    sage_300_reimbursement: null | number;\\n}\\n\\nexport interface Sage300AccountingExportResponse extends PaginatedResponse {\\n    results: Sage300AccountingExport[];\\n}","properties":[{"name":"results","deprecated":false,"deprecationMessage":"","type":"Sage300AccountingExport[]","optional":false,"description":"","line":12}],"indexSignatures":[],"kind":171,"methods":[],"extends":["PaginatedResponse"]},{"name":"Sage300AdvancedSettingGet","id":"interface-Sage300AdvancedSettingGet-4c9912256519b13b5f46e2f6871d48399d3e5f5e5a6a66a5fd1079d708c9300d217156edf863c4ac6a4a233fba7cd37e7e7934d82c9c068f22622baada2d2bda","file":"src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ExpenseFilterPost, ExpenseFilterPayload, ConditionField } from \\"../../common/advanced-settings.model\\";\\nimport { JoinOption, Operator } from \\"../../enum/enum.model\\";\\n\\nexport type Sage300AdvancedSetting = {\\n  memo_structure: string[],\\n  schedule_is_enabled: boolean,\\n  auto_create_vendor: boolean,\\n  interval_hours: number\\n}\\n\\nexport interface Sage300AdvancedSettingGet extends Sage300AdvancedSetting {\\n  id: number,\\n  created_at: Date,\\n  update_at: Date,\\n  workspace: number\\n}\\n\\nexport interface Sage300AdvancedSettingPost extends Sage300AdvancedSetting { }\\n\\nexport class Sage300AdvancedSettingModel {\\n\\n  static mapAPIResponseToFormGroup(advancedSettings: Sage300AdvancedSettingGet | null, isSkipExportEnabled: boolean): FormGroup {\\n    const defaultMemoOptions: string[] = [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n    return new FormGroup({\\n      memoStructure: new FormControl(advancedSettings?.memo_structure ? advancedSettings?.memo_structure : defaultMemoOptions),\\n      scheduleEnabled: new FormControl(advancedSettings?.schedule_is_enabled ? true : false),\\n      autoCreateVendor: new FormControl(advancedSettings?.auto_create_vendor ? true : false),\\n      scheduleAutoExportFrequency: new FormControl(advancedSettings?.interval_hours ? advancedSettings.interval_hours : 1),\\n      skipExport: new FormControl(isSkipExportEnabled)\\n    });\\n  }\\n\\n  static createAdvancedSettingPayload(advancedSettingsForm: FormGroup): Sage300AdvancedSettingPost {\\n    return {\\n      memo_structure: advancedSettingsForm.get(\'memoStructure\')?.value ? advancedSettingsForm.get(\'memoStructure\')?.value : null,\\n      schedule_is_enabled: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleEnabled\')?.value : false,\\n      interval_hours: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleAutoExportFrequency\')?.value : null,\\n      auto_create_vendor: advancedSettingsForm.get(\'autoCreateVendor\')?.value ? advancedSettingsForm.get(\'autoCreateVendor\')?.value : false\\n    };\\n  }\\n}\\n\\n\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":14},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":13},{"name":"update_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":15},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":16}],"indexSignatures":[],"kind":171,"methods":[],"extends":["Sage300AdvancedSetting"]},{"name":"Sage300AdvancedSettingPost","id":"interface-Sage300AdvancedSettingPost-4c9912256519b13b5f46e2f6871d48399d3e5f5e5a6a66a5fd1079d708c9300d217156edf863c4ac6a4a233fba7cd37e7e7934d82c9c068f22622baada2d2bda","file":"src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ExpenseFilterPost, ExpenseFilterPayload, ConditionField } from \\"../../common/advanced-settings.model\\";\\nimport { JoinOption, Operator } from \\"../../enum/enum.model\\";\\n\\nexport type Sage300AdvancedSetting = {\\n  memo_structure: string[],\\n  schedule_is_enabled: boolean,\\n  auto_create_vendor: boolean,\\n  interval_hours: number\\n}\\n\\nexport interface Sage300AdvancedSettingGet extends Sage300AdvancedSetting {\\n  id: number,\\n  created_at: Date,\\n  update_at: Date,\\n  workspace: number\\n}\\n\\nexport interface Sage300AdvancedSettingPost extends Sage300AdvancedSetting { }\\n\\nexport class Sage300AdvancedSettingModel {\\n\\n  static mapAPIResponseToFormGroup(advancedSettings: Sage300AdvancedSettingGet | null, isSkipExportEnabled: boolean): FormGroup {\\n    const defaultMemoOptions: string[] = [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n    return new FormGroup({\\n      memoStructure: new FormControl(advancedSettings?.memo_structure ? advancedSettings?.memo_structure : defaultMemoOptions),\\n      scheduleEnabled: new FormControl(advancedSettings?.schedule_is_enabled ? true : false),\\n      autoCreateVendor: new FormControl(advancedSettings?.auto_create_vendor ? true : false),\\n      scheduleAutoExportFrequency: new FormControl(advancedSettings?.interval_hours ? advancedSettings.interval_hours : 1),\\n      skipExport: new FormControl(isSkipExportEnabled)\\n    });\\n  }\\n\\n  static createAdvancedSettingPayload(advancedSettingsForm: FormGroup): Sage300AdvancedSettingPost {\\n    return {\\n      memo_structure: advancedSettingsForm.get(\'memoStructure\')?.value ? advancedSettingsForm.get(\'memoStructure\')?.value : null,\\n      schedule_is_enabled: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleEnabled\')?.value : false,\\n      interval_hours: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleAutoExportFrequency\')?.value : null,\\n      auto_create_vendor: advancedSettingsForm.get(\'autoCreateVendor\')?.value ? advancedSettingsForm.get(\'autoCreateVendor\')?.value : false\\n    };\\n  }\\n}\\n\\n\\n","properties":[],"indexSignatures":[],"methods":[],"extends":["Sage300AdvancedSetting"]},{"name":"Sage300DestinationAttributes","id":"interface-Sage300DestinationAttributes-3a36edcdef32fa1b33e7d081c4c03e8ae6a897cbe85d9c36a1c778f170b85e25929e0c5b3aa9403a8fc1e14ba4b87ae532bd9c446d2bbf6b3c330fdd1385ea78","file":"src/app/core/models/sage300/db/sage300-destination-attribuite.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { DestinationAttribute, GroupedDestinationAttribute } from \\"../../db/destination-attribute.model\\";\\n\\ntype EmployeeMappingDetail = {\\n    email: string | null;\\n}\\n\\ntype TaxMappingDetails = {\\n    customer_id: string | null,\\n    customer_name: string | null\\n}\\n\\nexport interface Sage300DestinationAttributes extends DestinationAttribute {\\n    auto_created: boolean;\\n    detail: EmployeeMappingDetail | TaxMappingDetails | null;\\n}\\n\\nexport interface Sage300GroupedDestinationAttribute extends GroupedDestinationAttribute {\\n    ACCOUNT: Sage300DestinationAttributes[],\\n    EXPENSE_TYPE: Sage300DestinationAttributes[],\\n    EXPENSE_PAYMENT_TYPE: Sage300DestinationAttributes[],\\n    VENDOR: Sage300DestinationAttributes[],\\n    CHARGE_CARD_NUMBER: Sage300DestinationAttributes[],\\n    TAX_DETAIL: Sage300DestinationAttributes[],\\n    LOCATION: Sage300DestinationAttributes[],\\n    DEPARTMENT: Sage300DestinationAttributes[],\\n    PROJECT: Sage300DestinationAttributes[],\\n    CLASS: Sage300DestinationAttributes[],\\n    ITEM: Sage300DestinationAttributes[],\\n    PAYMENT_ACCOUNT: Sage300DestinationAttributes[],\\n    EMPLOYEE: Sage300DestinationAttributes[],\\n    JOB: Sage300DestinationAttributes[]\\n  }\\n","properties":[{"name":"auto_created","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":13},{"name":"detail","deprecated":false,"deprecationMessage":"","type":"EmployeeMappingDetail | TaxMappingDetails | null","optional":false,"description":"","line":14}],"indexSignatures":[],"kind":171,"methods":[],"extends":["DestinationAttribute"]},{"name":"Sage300ExportSettingGet","id":"interface-Sage300ExportSettingGet-315b491481d061aebb48ee70b75acb8b642c4412fc510eab031f30d5535577178f5cc51e5ba17b608d6b8692f79b2f6482996fe0684c23431355dab981993401","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ExpenseState, CCCExpenseState, Sage300ExpenseDate, Sage300ExportType, FyleField, ExpenseGroupingFieldOption, CorporateCreditCardExpensesObject } from \\"../../enum/enum.model\\";\\nimport { Sage300DestinationAttributes } from \\"../db/sage300-destination-attribuite.model\\";\\nimport { GroupedDestinationAttribute } from \\"../../db/destination-attribute.model\\";\\n\\nexport type Sage300ExportSettingFormOption = {\\n    label: string,\\n    value: ExpenseState | CCCExpenseState | CorporateCreditCardExpensesObject | Sage300ExportType | Sage300ExpenseDate | ExpenseGroupingFieldOption | FyleField\\n}\\n\\nexport type ExportSettingValidatorRule = {\\n  reimbursableExpense: string[];\\n  creditCardExpense: string[];\\n};\\n\\nexport type ExportModuleRule = {\\n  formController: string,\\n  requiredValue: Record<string, string[]>\\n};\\n\\ntype Sage300ExportSetting = {\\n  reimbursable_expenses_export_type: Sage300ExportType,\\n  reimbursable_expense_state: ExpenseState,\\n  reimbursable_expense_date: Sage300ExpenseDate,\\n  reimbursable_expense_grouped_by: string,\\n  credit_card_expense_export_type: Sage300ExportType,\\n  credit_card_expense_state:  CCCExpenseState,\\n  credit_card_expense_grouped_by: string,\\n  credit_card_expense_date: Sage300ExpenseDate,\\n  default_ccc_credit_card_account_name: string,\\n  default_ccc_credit_card_account_id: string,\\n  default_reimbursable_credit_card_account_name: string,\\n  default_reimbursable_credit_card_account_id: string,\\n  default_debit_card_account_name: string,\\n  default_debit_card_account_id: string,\\n  default_vendor_name: string,\\n  default_vendor_id: string,\\n  default_job_name: string,\\n  default_job_id: string\\n};\\n\\nexport interface Sage300ExportSettingGet extends Sage300ExportSetting {\\n    id: number,\\n    created_at: Date,\\n    update_at: Date,\\n    workspace: number\\n}\\n\\nexport interface Sage300ExportSettingPost extends Sage300ExportSetting {}\\n\\nexport class ExportSettingModel {\\n\\n  static mapAPIResponseToFormGroup(exportSettings: Sage300ExportSettingGet | null, destinationAttribute: GroupedDestinationAttribute): FormGroup {\\n    const findObjectByDestinationId = (array: Sage300DestinationAttributes[], id: string) => array?.find(item => item.destination_id === id) || null;\\n    return new FormGroup({\\n      reimbursableExpense: new FormControl(exportSettings?.reimbursable_expenses_export_type ? true : false),\\n      reimbursableExportType: new FormControl(exportSettings?.reimbursable_expenses_export_type ? exportSettings.reimbursable_expenses_export_type : null),\\n      reimbursableExpenseState: new FormControl(exportSettings?.reimbursable_expense_state ? exportSettings?.reimbursable_expense_state : null),\\n      reimbursableExportDate: new FormControl(exportSettings?.reimbursable_expense_date ? exportSettings?.reimbursable_expense_date : null),\\n      reimbursableExportGroup: new FormControl(exportSettings?.reimbursable_expense_grouped_by ? exportSettings?.reimbursable_expense_grouped_by: null),\\n      defaultReimbursableCCCAccountName: new FormControl(exportSettings?.default_reimbursable_credit_card_account_name? exportSettings?.default_reimbursable_credit_card_account_name : null),\\n      creditCardExpense: new FormControl(exportSettings?.credit_card_expense_export_type ? true : false),\\n      cccExportType: new FormControl(exportSettings?.credit_card_expense_export_type ? exportSettings.credit_card_expense_export_type : null),\\n      cccExpenseState: new FormControl(exportSettings?.credit_card_expense_state ? exportSettings?.credit_card_expense_state : null),\\n      cccExportDate: new FormControl(exportSettings?.credit_card_expense_date ? exportSettings?.credit_card_expense_date : null),\\n      cccExportGroup: new FormControl(exportSettings?.credit_card_expense_grouped_by ? exportSettings?.credit_card_expense_grouped_by: null),\\n      defaultCreditCardCCCAccountName: new FormControl(exportSettings?.default_ccc_credit_card_account_name ? findObjectByDestinationId(destinationAttribute.ACCOUNT, exportSettings?.default_ccc_credit_card_account_id) : null),\\n      defaultVendorName: new FormControl(exportSettings?.default_vendor_name ? findObjectByDestinationId(destinationAttribute.VENDOR, exportSettings?.default_vendor_id) : null),\\n      defaultDebitCardAccountName: new FormControl(exportSettings?.default_debit_card_account_name ? findObjectByDestinationId(destinationAttribute.ACCOUNT, exportSettings?.default_debit_card_account_id) : null),\\n      defaultJobName: new FormControl(exportSettings?.default_job_name ? findObjectByDestinationId(destinationAttribute.JOB, exportSettings?.default_job_id) : null)\\n    });\\n  }\\n\\n  /* eslint-disable */\\n  static createExportSettingPayload(exportSettingsForm: FormGroup): Sage300ExportSettingPost {\\n    return {\\n      reimbursable_expenses_export_type: exportSettingsForm.get(\'reimbursableExportType\')?.value ? exportSettingsForm.get(\'reimbursableExportType\')?.value : null,\\n      reimbursable_expense_state: exportSettingsForm.get(\'reimbursableExpenseState\')?.value ? exportSettingsForm.get(\'reimbursableExpenseState\')?.value : null,\\n      reimbursable_expense_date: exportSettingsForm.get(\'reimbursableExportDate\')?.value ? exportSettingsForm.get(\'reimbursableExportDate\')?.value : null,\\n      reimbursable_expense_grouped_by: exportSettingsForm.get(\'reimbursableExportGroup\')?.value ? exportSettingsForm.get(\'reimbursableExportGroup\')?.value : null,\\n      credit_card_expense_export_type: exportSettingsForm.get(\'cccExportType\')?.value ? exportSettingsForm.get(\'cccExportType\')?.value : null,\\n      credit_card_expense_state: exportSettingsForm.get(\'cccExpenseState\')?.value ? exportSettingsForm.get(\'cccExpenseState\')?.value : null,\\n      credit_card_expense_grouped_by: exportSettingsForm.get(\'cccExportGroup\')?.value ? exportSettingsForm.get(\'cccExportGroup\')?.value : null,\\n      credit_card_expense_date: exportSettingsForm.get(\'cccExportDate\')?.value ? exportSettingsForm.get(\'cccExportDate\')?.value : null,\\n      default_ccc_credit_card_account_name: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.value : null,\\n      default_ccc_credit_card_account_id: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.destination_id : null,\\n      default_reimbursable_credit_card_account_name: exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value.value : null,\\n      default_reimbursable_credit_card_account_id: exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value.destination_id : null,\\n      default_vendor_name: exportSettingsForm.get(\'defaultVendorName\')?.value ? exportSettingsForm.get(\'defaultVendorName\')?.value.value : null,\\n      default_vendor_id: exportSettingsForm.get(\'defaultVendorName\')?.value ? exportSettingsForm.get(\'defaultVendorName\')?.value.destination_id : null,\\n      default_debit_card_account_name: exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value ? exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value.value : null,\\n      default_debit_card_account_id: exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value ? exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value.destination_id : null,\\n      default_job_name: exportSettingsForm.get(\'defaultJobName\')?.value ? exportSettingsForm.get(\'defaultJobName\')?.value.value : null,\\n      default_job_id: exportSettingsForm.get(\'defaultJobName\')?.value ? exportSettingsForm.get(\'defaultJobName\')?.value.destination_id : null\\n    };\\n  }\\n}\\n","properties":[{"name":"created_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":44},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":43},{"name":"update_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":45},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":46}],"indexSignatures":[],"kind":171,"methods":[],"extends":["Sage300ExportSetting"]},{"name":"Sage300ExportSettingPost","id":"interface-Sage300ExportSettingPost-315b491481d061aebb48ee70b75acb8b642c4412fc510eab031f30d5535577178f5cc51e5ba17b608d6b8692f79b2f6482996fe0684c23431355dab981993401","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ExpenseState, CCCExpenseState, Sage300ExpenseDate, Sage300ExportType, FyleField, ExpenseGroupingFieldOption, CorporateCreditCardExpensesObject } from \\"../../enum/enum.model\\";\\nimport { Sage300DestinationAttributes } from \\"../db/sage300-destination-attribuite.model\\";\\nimport { GroupedDestinationAttribute } from \\"../../db/destination-attribute.model\\";\\n\\nexport type Sage300ExportSettingFormOption = {\\n    label: string,\\n    value: ExpenseState | CCCExpenseState | CorporateCreditCardExpensesObject | Sage300ExportType | Sage300ExpenseDate | ExpenseGroupingFieldOption | FyleField\\n}\\n\\nexport type ExportSettingValidatorRule = {\\n  reimbursableExpense: string[];\\n  creditCardExpense: string[];\\n};\\n\\nexport type ExportModuleRule = {\\n  formController: string,\\n  requiredValue: Record<string, string[]>\\n};\\n\\ntype Sage300ExportSetting = {\\n  reimbursable_expenses_export_type: Sage300ExportType,\\n  reimbursable_expense_state: ExpenseState,\\n  reimbursable_expense_date: Sage300ExpenseDate,\\n  reimbursable_expense_grouped_by: string,\\n  credit_card_expense_export_type: Sage300ExportType,\\n  credit_card_expense_state:  CCCExpenseState,\\n  credit_card_expense_grouped_by: string,\\n  credit_card_expense_date: Sage300ExpenseDate,\\n  default_ccc_credit_card_account_name: string,\\n  default_ccc_credit_card_account_id: string,\\n  default_reimbursable_credit_card_account_name: string,\\n  default_reimbursable_credit_card_account_id: string,\\n  default_debit_card_account_name: string,\\n  default_debit_card_account_id: string,\\n  default_vendor_name: string,\\n  default_vendor_id: string,\\n  default_job_name: string,\\n  default_job_id: string\\n};\\n\\nexport interface Sage300ExportSettingGet extends Sage300ExportSetting {\\n    id: number,\\n    created_at: Date,\\n    update_at: Date,\\n    workspace: number\\n}\\n\\nexport interface Sage300ExportSettingPost extends Sage300ExportSetting {}\\n\\nexport class ExportSettingModel {\\n\\n  static mapAPIResponseToFormGroup(exportSettings: Sage300ExportSettingGet | null, destinationAttribute: GroupedDestinationAttribute): FormGroup {\\n    const findObjectByDestinationId = (array: Sage300DestinationAttributes[], id: string) => array?.find(item => item.destination_id === id) || null;\\n    return new FormGroup({\\n      reimbursableExpense: new FormControl(exportSettings?.reimbursable_expenses_export_type ? true : false),\\n      reimbursableExportType: new FormControl(exportSettings?.reimbursable_expenses_export_type ? exportSettings.reimbursable_expenses_export_type : null),\\n      reimbursableExpenseState: new FormControl(exportSettings?.reimbursable_expense_state ? exportSettings?.reimbursable_expense_state : null),\\n      reimbursableExportDate: new FormControl(exportSettings?.reimbursable_expense_date ? exportSettings?.reimbursable_expense_date : null),\\n      reimbursableExportGroup: new FormControl(exportSettings?.reimbursable_expense_grouped_by ? exportSettings?.reimbursable_expense_grouped_by: null),\\n      defaultReimbursableCCCAccountName: new FormControl(exportSettings?.default_reimbursable_credit_card_account_name? exportSettings?.default_reimbursable_credit_card_account_name : null),\\n      creditCardExpense: new FormControl(exportSettings?.credit_card_expense_export_type ? true : false),\\n      cccExportType: new FormControl(exportSettings?.credit_card_expense_export_type ? exportSettings.credit_card_expense_export_type : null),\\n      cccExpenseState: new FormControl(exportSettings?.credit_card_expense_state ? exportSettings?.credit_card_expense_state : null),\\n      cccExportDate: new FormControl(exportSettings?.credit_card_expense_date ? exportSettings?.credit_card_expense_date : null),\\n      cccExportGroup: new FormControl(exportSettings?.credit_card_expense_grouped_by ? exportSettings?.credit_card_expense_grouped_by: null),\\n      defaultCreditCardCCCAccountName: new FormControl(exportSettings?.default_ccc_credit_card_account_name ? findObjectByDestinationId(destinationAttribute.ACCOUNT, exportSettings?.default_ccc_credit_card_account_id) : null),\\n      defaultVendorName: new FormControl(exportSettings?.default_vendor_name ? findObjectByDestinationId(destinationAttribute.VENDOR, exportSettings?.default_vendor_id) : null),\\n      defaultDebitCardAccountName: new FormControl(exportSettings?.default_debit_card_account_name ? findObjectByDestinationId(destinationAttribute.ACCOUNT, exportSettings?.default_debit_card_account_id) : null),\\n      defaultJobName: new FormControl(exportSettings?.default_job_name ? findObjectByDestinationId(destinationAttribute.JOB, exportSettings?.default_job_id) : null)\\n    });\\n  }\\n\\n  /* eslint-disable */\\n  static createExportSettingPayload(exportSettingsForm: FormGroup): Sage300ExportSettingPost {\\n    return {\\n      reimbursable_expenses_export_type: exportSettingsForm.get(\'reimbursableExportType\')?.value ? exportSettingsForm.get(\'reimbursableExportType\')?.value : null,\\n      reimbursable_expense_state: exportSettingsForm.get(\'reimbursableExpenseState\')?.value ? exportSettingsForm.get(\'reimbursableExpenseState\')?.value : null,\\n      reimbursable_expense_date: exportSettingsForm.get(\'reimbursableExportDate\')?.value ? exportSettingsForm.get(\'reimbursableExportDate\')?.value : null,\\n      reimbursable_expense_grouped_by: exportSettingsForm.get(\'reimbursableExportGroup\')?.value ? exportSettingsForm.get(\'reimbursableExportGroup\')?.value : null,\\n      credit_card_expense_export_type: exportSettingsForm.get(\'cccExportType\')?.value ? exportSettingsForm.get(\'cccExportType\')?.value : null,\\n      credit_card_expense_state: exportSettingsForm.get(\'cccExpenseState\')?.value ? exportSettingsForm.get(\'cccExpenseState\')?.value : null,\\n      credit_card_expense_grouped_by: exportSettingsForm.get(\'cccExportGroup\')?.value ? exportSettingsForm.get(\'cccExportGroup\')?.value : null,\\n      credit_card_expense_date: exportSettingsForm.get(\'cccExportDate\')?.value ? exportSettingsForm.get(\'cccExportDate\')?.value : null,\\n      default_ccc_credit_card_account_name: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.value : null,\\n      default_ccc_credit_card_account_id: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.destination_id : null,\\n      default_reimbursable_credit_card_account_name: exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value.value : null,\\n      default_reimbursable_credit_card_account_id: exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value.destination_id : null,\\n      default_vendor_name: exportSettingsForm.get(\'defaultVendorName\')?.value ? exportSettingsForm.get(\'defaultVendorName\')?.value.value : null,\\n      default_vendor_id: exportSettingsForm.get(\'defaultVendorName\')?.value ? exportSettingsForm.get(\'defaultVendorName\')?.value.destination_id : null,\\n      default_debit_card_account_name: exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value ? exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value.value : null,\\n      default_debit_card_account_id: exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value ? exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value.destination_id : null,\\n      default_job_name: exportSettingsForm.get(\'defaultJobName\')?.value ? exportSettingsForm.get(\'defaultJobName\')?.value.value : null,\\n      default_job_id: exportSettingsForm.get(\'defaultJobName\')?.value ? exportSettingsForm.get(\'defaultJobName\')?.value.destination_id : null\\n    };\\n  }\\n}\\n","properties":[],"indexSignatures":[],"methods":[],"extends":["Sage300ExportSetting"]},{"name":"Sage300GroupedDestinationAttribute","id":"interface-Sage300GroupedDestinationAttribute-3a36edcdef32fa1b33e7d081c4c03e8ae6a897cbe85d9c36a1c778f170b85e25929e0c5b3aa9403a8fc1e14ba4b87ae532bd9c446d2bbf6b3c330fdd1385ea78","file":"src/app/core/models/sage300/db/sage300-destination-attribuite.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { DestinationAttribute, GroupedDestinationAttribute } from \\"../../db/destination-attribute.model\\";\\n\\ntype EmployeeMappingDetail = {\\n    email: string | null;\\n}\\n\\ntype TaxMappingDetails = {\\n    customer_id: string | null,\\n    customer_name: string | null\\n}\\n\\nexport interface Sage300DestinationAttributes extends DestinationAttribute {\\n    auto_created: boolean;\\n    detail: EmployeeMappingDetail | TaxMappingDetails | null;\\n}\\n\\nexport interface Sage300GroupedDestinationAttribute extends GroupedDestinationAttribute {\\n    ACCOUNT: Sage300DestinationAttributes[],\\n    EXPENSE_TYPE: Sage300DestinationAttributes[],\\n    EXPENSE_PAYMENT_TYPE: Sage300DestinationAttributes[],\\n    VENDOR: Sage300DestinationAttributes[],\\n    CHARGE_CARD_NUMBER: Sage300DestinationAttributes[],\\n    TAX_DETAIL: Sage300DestinationAttributes[],\\n    LOCATION: Sage300DestinationAttributes[],\\n    DEPARTMENT: Sage300DestinationAttributes[],\\n    PROJECT: Sage300DestinationAttributes[],\\n    CLASS: Sage300DestinationAttributes[],\\n    ITEM: Sage300DestinationAttributes[],\\n    PAYMENT_ACCOUNT: Sage300DestinationAttributes[],\\n    EMPLOYEE: Sage300DestinationAttributes[],\\n    JOB: Sage300DestinationAttributes[]\\n  }\\n","properties":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":18},{"name":"CHARGE_CARD_NUMBER","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":22},{"name":"CLASS","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":27},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":25},{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":30},{"name":"EXPENSE_PAYMENT_TYPE","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":20},{"name":"EXPENSE_TYPE","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":19},{"name":"ITEM","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":28},{"name":"JOB","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":31},{"name":"LOCATION","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":24},{"name":"PAYMENT_ACCOUNT","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":29},{"name":"PROJECT","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":26},{"name":"TAX_DETAIL","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":23},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":21}],"indexSignatures":[],"kind":171,"methods":[],"extends":["GroupedDestinationAttribute"]},{"name":"Sage300ImportSettingGet","id":"interface-Sage300ImportSettingGet-1cdc92c5e46e62066ac4ac32840aba10f1f942bc0c39a86680817cc49c3573108bef9ab7f215409d990f9aa6d8b009003c19ec4ed67af2295f2beae6161f5237","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormArray, FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ExpenseField, ImportSettingMappingRow, ImportSettingsCustomFieldRow, ImportSettingsModel } from \\"../../common/import-settings.model\\";\\nimport { IntegrationField } from \\"../../db/mapping.model\\";\\n\\nexport type Sage300DefaultFields = {\\n    destination_field: string,\\n    source_field: string,\\n    formController: string\\n}\\n\\nexport type Sage300DependentImportFields = {\\n    options: ImportSettingsCustomFieldRow[],\\n    source_field: string,\\n    formController: string,\\n    isDisabled: boolean\\n}\\n\\nexport type Sage300ImportSettingsDependentFieldSetting = {\\n    cost_code_field_name: string,\\n    cost_code_placeholder: string,\\n    cost_category_field_name: string,\\n    cost_category_placeholder: string,\\n    is_import_enabled: boolean\\n}\\n\\nexport type Sage300ImportSetting = {\\n    import_settings: {\\n        import_categories: boolean,\\n        import_vendors_as_merchants: boolean\\n    },\\n    mapping_settings: ImportSettingMappingRow[] | [],\\n    dependent_field_settings: Sage300ImportSettingsDependentFieldSetting | null,\\n}\\n\\nexport interface  Sage300ImportSettingGet extends Sage300ImportSetting {\\n    workspaceId: number\\n}\\n\\nexport interface  Sage300ImportSettingPost extends Sage300ImportSetting {}\\n\\nexport class Sage300ImportSettingModel extends ImportSettingsModel {\\n\\n    static generateDependentFieldValue(attribute_type: string, source_placeholder: string): ExpenseField {\\n        return {\\n          attribute_type: attribute_type,\\n          display_name: attribute_type,\\n          source_placeholder: source_placeholder,\\n          is_dependent: true\\n        };\\n    }\\n\\n    static mapAPIResponseToFormGroup(importSettings: Sage300ImportSettingGet | null, sage300Fields: IntegrationField[]): FormGroup {\\n        const expenseFieldsArray = importSettings?.mapping_settings ? this.constructFormArray(importSettings.mapping_settings, sage300Fields) : [] ;\\n        return new FormGroup({\\n            importCategories: new FormControl(importSettings?.import_settings?.import_categories ?? false),\\n            importVendorAsMerchant: new FormControl(importSettings?.import_settings?.import_vendors_as_merchants ?? false),\\n            expenseFields: new FormArray(expenseFieldsArray),\\n            isDependentImportEnabled: new FormControl(importSettings?.dependent_field_settings?.is_import_enabled ? importSettings.dependent_field_settings.is_import_enabled : false),\\n            costCodes: new FormControl(importSettings?.dependent_field_settings?.cost_code_field_name ? this.generateDependentFieldValue(importSettings.dependent_field_settings.cost_code_field_name, importSettings.dependent_field_settings.cost_code_placeholder) : null),\\n            costCategory: new FormControl(importSettings?.dependent_field_settings?.cost_category_field_name ? this.generateDependentFieldValue(importSettings.dependent_field_settings.cost_category_field_name, importSettings.dependent_field_settings.cost_category_placeholder) : null),\\n            dependentFieldImportToggle: new FormControl(true)\\n        });\\n    }\\n\\n    static createImportSettingPayload(importSettingsForm: FormGroup, importSettings: Sage300ImportSettingGet): Sage300ImportSettingPost {\\n        const expenseFieldArray = importSettingsForm.value.expenseFields;\\n        const mappingSettings = this.constructMappingSettingPayload(expenseFieldArray);\\n\\n        return {\\n            import_settings: {\\n                import_categories: importSettingsForm.get(\'importCategories\')?.value,\\n                import_vendors_as_merchants: importSettingsForm.get(\'importVendorAsMerchant\')?.value\\n            },\\n            mapping_settings: mappingSettings,\\n            dependent_field_settings: importSettingsForm.get(\'isDependentImportEnabled\')?.value ? {\\n                cost_code_field_name: importSettingsForm.get(\'costCodes\')?.value ? importSettingsForm.get(\'costCodes\')?.value.attribute_type : (importSettings?.dependent_field_settings?.cost_code_field_name ? importSettings.dependent_field_settings?.cost_code_field_name : null),\\n                cost_code_placeholder: importSettingsForm.get(\'costCodes\')?.value ? importSettingsForm.get(\'costCodes\')?.value.source_placeholder : (importSettings?.dependent_field_settings?.cost_code_placeholder ? importSettings.dependent_field_settings?.cost_code_placeholder : null),\\n                cost_category_field_name: importSettingsForm.get(\'costCategory\')?.value ? importSettingsForm.get(\'costCategory\')?.value.attribute_type : (importSettings?.dependent_field_settings?.cost_category_field_name ? importSettings.dependent_field_settings?.cost_category_field_name : null),\\n                cost_category_placeholder: importSettingsForm.get(\'costCategory\')?.value ? importSettingsForm.get(\'costCategory\')?.value.source_placeholder : (importSettings?.dependent_field_settings?.cost_category_placeholder ? importSettings.dependent_field_settings?.cost_category_placeholder : null),\\n                is_import_enabled: importSettingsForm.get(\'isDependentImportEnabled\')?.value\\n            } : null\\n        };\\n    }\\n\\n}","properties":[{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":36}],"indexSignatures":[],"kind":171,"methods":[],"extends":["Sage300ImportSetting"]},{"name":"Sage300ImportSettingPost","id":"interface-Sage300ImportSettingPost-1cdc92c5e46e62066ac4ac32840aba10f1f942bc0c39a86680817cc49c3573108bef9ab7f215409d990f9aa6d8b009003c19ec4ed67af2295f2beae6161f5237","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormArray, FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ExpenseField, ImportSettingMappingRow, ImportSettingsCustomFieldRow, ImportSettingsModel } from \\"../../common/import-settings.model\\";\\nimport { IntegrationField } from \\"../../db/mapping.model\\";\\n\\nexport type Sage300DefaultFields = {\\n    destination_field: string,\\n    source_field: string,\\n    formController: string\\n}\\n\\nexport type Sage300DependentImportFields = {\\n    options: ImportSettingsCustomFieldRow[],\\n    source_field: string,\\n    formController: string,\\n    isDisabled: boolean\\n}\\n\\nexport type Sage300ImportSettingsDependentFieldSetting = {\\n    cost_code_field_name: string,\\n    cost_code_placeholder: string,\\n    cost_category_field_name: string,\\n    cost_category_placeholder: string,\\n    is_import_enabled: boolean\\n}\\n\\nexport type Sage300ImportSetting = {\\n    import_settings: {\\n        import_categories: boolean,\\n        import_vendors_as_merchants: boolean\\n    },\\n    mapping_settings: ImportSettingMappingRow[] | [],\\n    dependent_field_settings: Sage300ImportSettingsDependentFieldSetting | null,\\n}\\n\\nexport interface  Sage300ImportSettingGet extends Sage300ImportSetting {\\n    workspaceId: number\\n}\\n\\nexport interface  Sage300ImportSettingPost extends Sage300ImportSetting {}\\n\\nexport class Sage300ImportSettingModel extends ImportSettingsModel {\\n\\n    static generateDependentFieldValue(attribute_type: string, source_placeholder: string): ExpenseField {\\n        return {\\n          attribute_type: attribute_type,\\n          display_name: attribute_type,\\n          source_placeholder: source_placeholder,\\n          is_dependent: true\\n        };\\n    }\\n\\n    static mapAPIResponseToFormGroup(importSettings: Sage300ImportSettingGet | null, sage300Fields: IntegrationField[]): FormGroup {\\n        const expenseFieldsArray = importSettings?.mapping_settings ? this.constructFormArray(importSettings.mapping_settings, sage300Fields) : [] ;\\n        return new FormGroup({\\n            importCategories: new FormControl(importSettings?.import_settings?.import_categories ?? false),\\n            importVendorAsMerchant: new FormControl(importSettings?.import_settings?.import_vendors_as_merchants ?? false),\\n            expenseFields: new FormArray(expenseFieldsArray),\\n            isDependentImportEnabled: new FormControl(importSettings?.dependent_field_settings?.is_import_enabled ? importSettings.dependent_field_settings.is_import_enabled : false),\\n            costCodes: new FormControl(importSettings?.dependent_field_settings?.cost_code_field_name ? this.generateDependentFieldValue(importSettings.dependent_field_settings.cost_code_field_name, importSettings.dependent_field_settings.cost_code_placeholder) : null),\\n            costCategory: new FormControl(importSettings?.dependent_field_settings?.cost_category_field_name ? this.generateDependentFieldValue(importSettings.dependent_field_settings.cost_category_field_name, importSettings.dependent_field_settings.cost_category_placeholder) : null),\\n            dependentFieldImportToggle: new FormControl(true)\\n        });\\n    }\\n\\n    static createImportSettingPayload(importSettingsForm: FormGroup, importSettings: Sage300ImportSettingGet): Sage300ImportSettingPost {\\n        const expenseFieldArray = importSettingsForm.value.expenseFields;\\n        const mappingSettings = this.constructMappingSettingPayload(expenseFieldArray);\\n\\n        return {\\n            import_settings: {\\n                import_categories: importSettingsForm.get(\'importCategories\')?.value,\\n                import_vendors_as_merchants: importSettingsForm.get(\'importVendorAsMerchant\')?.value\\n            },\\n            mapping_settings: mappingSettings,\\n            dependent_field_settings: importSettingsForm.get(\'isDependentImportEnabled\')?.value ? {\\n                cost_code_field_name: importSettingsForm.get(\'costCodes\')?.value ? importSettingsForm.get(\'costCodes\')?.value.attribute_type : (importSettings?.dependent_field_settings?.cost_code_field_name ? importSettings.dependent_field_settings?.cost_code_field_name : null),\\n                cost_code_placeholder: importSettingsForm.get(\'costCodes\')?.value ? importSettingsForm.get(\'costCodes\')?.value.source_placeholder : (importSettings?.dependent_field_settings?.cost_code_placeholder ? importSettings.dependent_field_settings?.cost_code_placeholder : null),\\n                cost_category_field_name: importSettingsForm.get(\'costCategory\')?.value ? importSettingsForm.get(\'costCategory\')?.value.attribute_type : (importSettings?.dependent_field_settings?.cost_category_field_name ? importSettings.dependent_field_settings?.cost_category_field_name : null),\\n                cost_category_placeholder: importSettingsForm.get(\'costCategory\')?.value ? importSettingsForm.get(\'costCategory\')?.value.source_placeholder : (importSettings?.dependent_field_settings?.cost_category_placeholder ? importSettings.dependent_field_settings?.cost_category_placeholder : null),\\n                is_import_enabled: importSettingsForm.get(\'isDependentImportEnabled\')?.value\\n            } : null\\n        };\\n    }\\n\\n}","properties":[],"indexSignatures":[],"methods":[],"extends":["Sage300ImportSetting"]},{"name":"Sage300Workspace","id":"interface-Sage300Workspace-d3194acaef7132d7e4323b9645020191e84eee892310c2df89c0283fefe0fd153482ec5888d5b168b968c57e9eec91842984aff9e3e2db7d07b64d9137760730","file":"src/app/core/models/sage300/db/sage300-workspace.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { Sage300OnboardingState } from \\"../../enum/enum.model\\";\\nimport { Workspace } from \\"../../db/workspaces.model\\";\\n\\nexport interface Sage300Workspace extends Workspace {\\n    cluster_domain: string,\\n    last_synced_at: Date,\\n    ccc_last_synced_at: Date,\\n    source_synced_at: Date,\\n    destination_synced_at: Date,\\n    onboarding_state: Sage300OnboardingState\\n}","properties":[{"name":"ccc_last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":7},{"name":"cluster_domain","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":5},{"name":"destination_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":9},{"name":"last_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":6},{"name":"onboarding_state","deprecated":false,"deprecationMessage":"","type":"Sage300OnboardingState","optional":false,"description":"","line":10},{"name":"source_synced_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":8}],"indexSignatures":[],"kind":171,"methods":[],"extends":["Workspace"]},{"name":"SkipExportList","id":"interface-SkipExportList-7222b3720c59523a4f3c71db96e6e66d437ef55ceee78c33401e15acdda15de3cbdd50c984be03118fbb6470ce451efeb7e60db86606fd64b7435d445cc8efaf","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { PaginatedResponse } from \\"../../db/paginated-response.model\\";\\nimport { FyleReferenceType } from \\"../../enum/enum.model\\";\\nimport { Expense } from \\"./expense.model\\";\\n\\nexport type ExpenseGroupDescription = {\\n  claim_number: string;\\n  employee_email: string;\\n  expense_id: string;\\n  report_id: string;\\n  settlement_id: string;\\n};\\n\\nexport type ExpenseGroup = {\\n  id: number;\\n  fund_source: string;\\n  description: ExpenseGroupDescription;\\n  response_logs: any;\\n  employee_name: string;\\n  created_at: Date;\\n  export_type: string;\\n  exported_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n  expenses: Expense[];\\n};\\n\\nexport type ExpenseGroupResponse = {\\n  count: number;\\n  next: string;\\n  previous: string;\\n  results: ExpenseGroup[];\\n};\\n\\nexport interface ExpenseGroupList {\\n  index?: number;\\n  exportedAt: Date;\\n  employee: [string, string];\\n  expenseType?: \'Corporate Card\' | \'Reimbursable\';\\n  referenceNumber: string;\\n  exportedAs: string;\\n  intacctUrl?: string;\\n  fyleUrl?: string;\\n  fyleReferenceType?: FyleReferenceType | null;\\n  expenses: Expense[];\\n}\\n\\nexport interface SkipExportList {\\n  updated_at: Date;\\n  employee: [string, string];\\n  expenseType: \'Corporate Card\' | \'Reimbursable\';\\n  claim_number: string;\\n  fyleUrl: string;\\n}\\n\\nexport type SkipExportLog = {\\n  employee_name: string;\\n  employee_email: string;\\n  claim_number: string;\\n  updated_at: Date;\\n  fund_source: string;\\n  expense_id: string;\\n  org_id: string;\\n};\\n\\nexport interface SkipExportLogResponse extends PaginatedResponse {\\n  results: SkipExportLog[];\\n}\\n\\nexport type ExportableExpenseGroup = {\\n  exportable_expense_group_ids: number[];\\n};\\n","properties":[{"name":"claim_number","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":51},{"name":"employee","deprecated":false,"deprecationMessage":"","type":"[string, string]","optional":false,"description":"","line":49},{"name":"expenseType","deprecated":false,"deprecationMessage":"","type":"\\"Corporate Card\\" | \\"Reimbursable\\"","optional":false,"description":"","line":50},{"name":"fyleUrl","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52},{"name":"updated_at","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":48}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"SkipExportLogResponse","id":"interface-SkipExportLogResponse-7222b3720c59523a4f3c71db96e6e66d437ef55ceee78c33401e15acdda15de3cbdd50c984be03118fbb6470ce451efeb7e60db86606fd64b7435d445cc8efaf","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { PaginatedResponse } from \\"../../db/paginated-response.model\\";\\nimport { FyleReferenceType } from \\"../../enum/enum.model\\";\\nimport { Expense } from \\"./expense.model\\";\\n\\nexport type ExpenseGroupDescription = {\\n  claim_number: string;\\n  employee_email: string;\\n  expense_id: string;\\n  report_id: string;\\n  settlement_id: string;\\n};\\n\\nexport type ExpenseGroup = {\\n  id: number;\\n  fund_source: string;\\n  description: ExpenseGroupDescription;\\n  response_logs: any;\\n  employee_name: string;\\n  created_at: Date;\\n  export_type: string;\\n  exported_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n  expenses: Expense[];\\n};\\n\\nexport type ExpenseGroupResponse = {\\n  count: number;\\n  next: string;\\n  previous: string;\\n  results: ExpenseGroup[];\\n};\\n\\nexport interface ExpenseGroupList {\\n  index?: number;\\n  exportedAt: Date;\\n  employee: [string, string];\\n  expenseType?: \'Corporate Card\' | \'Reimbursable\';\\n  referenceNumber: string;\\n  exportedAs: string;\\n  intacctUrl?: string;\\n  fyleUrl?: string;\\n  fyleReferenceType?: FyleReferenceType | null;\\n  expenses: Expense[];\\n}\\n\\nexport interface SkipExportList {\\n  updated_at: Date;\\n  employee: [string, string];\\n  expenseType: \'Corporate Card\' | \'Reimbursable\';\\n  claim_number: string;\\n  fyleUrl: string;\\n}\\n\\nexport type SkipExportLog = {\\n  employee_name: string;\\n  employee_email: string;\\n  claim_number: string;\\n  updated_at: Date;\\n  fund_source: string;\\n  expense_id: string;\\n  org_id: string;\\n};\\n\\nexport interface SkipExportLogResponse extends PaginatedResponse {\\n  results: SkipExportLog[];\\n}\\n\\nexport type ExportableExpenseGroup = {\\n  exportable_expense_group_ids: number[];\\n};\\n","properties":[{"name":"results","deprecated":false,"deprecationMessage":"","type":"SkipExportLog[]","optional":false,"description":"","line":66}],"indexSignatures":[],"kind":171,"methods":[],"extends":["PaginatedResponse"]},{"name":"TaskResponse","id":"interface-TaskResponse-6ac5b570583c35cd95bd2803a00d946e32f336f83f1eb98b8d8fc69506f9286eba2cef7f535b21355f5181be4eaa5f472cdbce4f6fab52354a458fef0b1c3d9d","file":"src/app/core/models/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { TaskLogState } from \\"../enum/enum.model\\";\\nimport { PaginatedResponse } from \\"./paginated-response.model\\";\\n\\nexport type TaskLog = {\\n  created_at: Date;\\n  detail: any;\\n  expense_group: number;\\n  id: number;\\n  status: TaskLogState;\\n  updated_at: Date;\\n  workspace: number;\\n};\\n\\nexport interface TaskResponse extends PaginatedResponse {\\n  results: TaskLog[];\\n}\\n\\nexport type TaskLogGetParams = {\\n  limit?: number;\\n  offset?: number;\\n  status__in?: string[];\\n  expense_group_id__in?: number[];\\n  type__in?: string[];\\n};\\n","properties":[{"name":"results","deprecated":false,"deprecationMessage":"","type":"TaskLog[]","optional":false,"description":"","line":15}],"indexSignatures":[],"kind":171,"methods":[],"extends":["PaginatedResponse"]},{"name":"User","id":"interface-User-b15ce848b3eccbf078ae65d1425b19884ed1d96187b13cd626bc5736b9c6dbe9da048b6d26227ac7e4918e1755868cd6a925d79740e5ee2bd746d0e8eb996868","file":"src/app/core/models/db/user.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"export type MinimalUser = {\\n  email: string;\\n  access_token: string;\\n  refresh_token: string;\\n  full_name: string;\\n  user_id: string;\\n  org_id: string;\\n  org_name: string;\\n}\\n\\nexport interface User extends MinimalUser {\\n  active: boolean;\\n  admin: boolean;\\n  id: number;\\n  last_login: null;\\n  password: \'\';\\n  staff: boolean;\\n}\\n","properties":[{"name":"active","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12},{"name":"admin","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":13},{"name":"id","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":14},{"name":"last_login","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15},{"name":"password","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"staff","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":17}],"indexSignatures":[],"kind":171,"methods":[],"extends":["MinimalUser"]},{"name":"WorkspaceSchedules","id":"interface-WorkspaceSchedules-80b31e6728b27952f8e4805037c7ca5838cf2dd46b93b07bb32d8f709368e6165040e6c71912727e8867de9344aab56bdddc1c7d0aedc163614f8791a2170683","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\nimport { PaymentSyncDirection } from \\"../../enum/enum.model\\";\\nimport { EmailOptions } from \\"../../qbd/qbd-configuration/advanced-setting.model\\";\\n\\n  export interface GeneralMappingEntity {\\n    id: string;\\n    name: string;\\n  }\\n\\n  export  interface HourOption {\\n    label: string;\\n    value: number;\\n  }\\n\\n  export type EmailOption = {\\n    email: string;\\n    name: string;\\n  }\\n\\n  export type AdvancedSettingFormOption = {\\n    label: string,\\n    value: string | null | PaymentSyncDirection\\n}\\n\\nexport type ConditionField = {\\n  field_name: string;\\n  type: string;\\n  is_custom: boolean;\\n};\\n\\nexport enum Operator {\\n  IsNull = \\"isnull\\",\\n  IExact = \\"iexact\\",\\n  IContains = \\"icontains\\",\\n  LessThan = \\"lt\\",\\n  LessThanOrEqual = \\"lte\\"\\n}\\n\\nexport const JoinOptions = {\\n  AND: \'AND\',\\n  OR: \'OR\'\\n};\\n\\nexport enum JoinOption {\\n  AND = \\"AND\\",\\n  OR = \\"OR\\"\\n}\\n\\nexport enum CustomOperatorOption {\\n  Is = \\"iexact\\",\\n  IsEmpty = \\"is_empty\\",\\n  IsNotEmpty = \\"is_not_empty\\"\\n}\\n\\nexport type SkipExport = {\\n  id?: number;\\n  condition: string;\\n  custom_field_type: any;\\n  operator: Operator.IsNull | Operator.IExact | Operator.IContains | Operator.LessThan | Operator.LessThanOrEqual;\\n  values: string[];\\n  rank: number;\\n  join_by: JoinOption.AND | JoinOption.OR | null;\\n  is_custom: boolean;\\n};\\n\\nexport type ExpenseFilterResponse = {\\n  count: number;\\n  results: SkipExport[];\\n};\\n\\nexport interface Configuration {\\n    change_accounting_period: boolean;\\n    sync_fyle_to_sage_intacct_payments: boolean;\\n    sync_sage_intacct_to_fyle_payments: boolean;\\n    auto_create_destination_entity: boolean;\\n    auto_create_merchant_destination_entity: boolean;\\n    memo_structure: string[];\\n  }\\n\\n  export interface AdvancedSettingGeneralMapping {\\n    payment_account: GeneralMappingEntity;\\n    default_location: GeneralMappingEntity;\\n    default_department: GeneralMappingEntity;\\n    default_class: GeneralMappingEntity;\\n    default_project: GeneralMappingEntity;\\n    default_item: GeneralMappingEntity;\\n    use_intacct_employee_departments: boolean;\\n    use_intacct_employee_locations: boolean;\\n  }\\n\\n  export interface WorkspaceSchedules {\\n    enabled: boolean;\\n    start_datetime: string;\\n    interval_hours: number;\\n    emails_selected: string[] | [];\\n    additional_email_options: EmailOption[];\\n  }\\n\\nexport type AdvancedSettingsGet = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n    workspace_id: number;\\n}\\n\\nexport type AdvancedSettingsPost = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n  }\\n\\n  export class AdvancedSetting {\\n    static constructPayload(advancedSettingsForm: FormGroup): AdvancedSettingsPost {\\n      const getFormValue = (key: string) => advancedSettingsForm.get(key)?.value;\\n\\n      const mapAttribute = (key: string, idKey: string, valueKey: string) => {\\n        const value = getFormValue(key);\\n        return value ? { name: value[valueKey], id: value[idKey] } : { name: null, id: null };\\n      };\\n\\n      const advancedSettingPayload: AdvancedSettingsPost = {\\n        configurations: {\\n          auto_create_merchant_destination_entity: true,\\n          sync_fyle_to_sage_intacct_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.FYLE_TO_INTACCT,\\n          sync_sage_intacct_to_fyle_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.INTACCT_TO_FYLE,\\n          auto_create_destination_entity: getFormValue(\'autoCreateEmployeeVendor\'),\\n          change_accounting_period: !!getFormValue(\'postEntriesCurrentPeriod\'),\\n          memo_structure: getFormValue(\'setDescriptionField\')\\n        },\\n        general_mappings: {\\n          payment_account: mapAttribute(\'defaultPaymentAccount\', \'destination_id\', \'value\'),\\n          default_location: mapAttribute(\'defaultLocation\', \'destination_id\', \'value\'),\\n          default_department: mapAttribute(\'defaultDepartment\', \'destination_id\', \'value\'),\\n          default_class: mapAttribute(\'defaultClass\', \'destination_id\', \'value\'),\\n          default_project: mapAttribute(\'defaultProject\', \'destination_id\', \'value\'),\\n          default_item: mapAttribute(\'defaultItems\', \'destination_id\', \'value\'),\\n          use_intacct_employee_departments: !!getFormValue(\'useEmployeeLocation\'),\\n          use_intacct_employee_locations: !!getFormValue(\'useEmployeeDepartment\')\\n        },\\n        workspace_schedules: {\\n          enabled: !!getFormValue(\'scheduleAutoExport\'),\\n          start_datetime: \'\',\\n          interval_hours: getFormValue(\'scheduleAutoExport\'),\\n          emails_selected: advancedSettingsForm.get(\'email\')?.value ? advancedSettingsForm.get(\'email\')?.value.map((item: EmailOptions) => item.email) : [],\\n          additional_email_options: getFormValue(\'addedEmail\')\\n        }\\n      };\\n\\n      return advancedSettingPayload;\\n    }\\n  }","properties":[{"name":"additional_email_options","deprecated":false,"deprecationMessage":"","type":"EmailOption[]","optional":false,"description":"","line":96},{"name":"emails_selected","deprecated":false,"deprecationMessage":"","type":"string[] | ","optional":false,"description":"","line":95},{"name":"enabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":92},{"name":"interval_hours","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":94},{"name":"start_datetime","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":93}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]}],"injectables":[{"name":"AccountingExportService","id":"injectable-AccountingExportService-0c4907d4ed2f5550853474a170a92eaa0c1153497e7e7dfa413853dc3201e2b6756b09ba5b3e87a4e716f5b9417e31cbdafaeaf99ecaa3cce94b5ef68cfa36be","file":"src/app/core/services/common/accounting-export.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16}],"methods":[{"name":"getAccountingExports","args":[{"name":"type","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"status","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"exportableAccountingExportIds","type":"number[] | null","deprecated":false,"deprecationMessage":""},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"selectedDateFilter","type":"SelectedDateFilter | null","deprecated":false,"deprecationMessage":"","optional":true},{"name":"exportedAt","type":"string | null","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"type","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"status","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportableAccountingExportIds","type":"number[] | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedDateFilter","type":"SelectedDateFilter | null","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"exportedAt","type":"string | null","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getAccountingExportSummary","args":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<AccountingExportSummary>","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getExportableAccountingExportCount","args":[],"optional":false,"returnType":"Observable<AccountingExportCount>","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""},{"name":"importExpensesFromFyle","args":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { AccountingExportStatus, AccountingExportType } from \'../../models/enum/enum.model\';\\nimport { AccountingExportSummary } from \'../../models/db/accounting-export-summary.model\';\\nimport { ApiService } from \'./api.service\';\\nimport { WorkspaceService } from \'./workspace.service\';\\nimport { HelperService } from \'./helper.service\';\\nimport { AccountingExportCount, AccountingExportGetParam } from \'../../models/db/accounting-export.model\';\\nimport { SelectedDateFilter } from \'../../models/qbd/misc/date-filter.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class AccountingExportService {\\n\\n  workspaceId: string = this.workspaceService.getWorkspaceId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    private helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  getAccountingExportSummary(version?: \'v1\'): Observable<AccountingExportSummary> {\\n    if (version === \'v1\') {\\n      return this.apiService.get(`/workspaces/${this.workspaceId}/export_detail/`, {});\\n    }\\n\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/accounting_exports/summary/`, {});\\n  }\\n\\n  getExportableAccountingExportCount(): Observable<AccountingExportCount> {\\n    const apiParams = {\\n      status__in: [AccountingExportStatus.READY, AccountingExportStatus.FAILED, AccountingExportStatus.FATAL]\\n    };\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/accounting_exports/count/`, apiParams);\\n  }\\n\\n  getAccountingExports(type: string[], status: string[], exportableAccountingExportIds: number[] | null, limit: number, offset: number, selectedDateFilter? : SelectedDateFilter | null, exportedAt?: string | null): Observable<any> {\\n    const apiParams: AccountingExportGetParam = {\\n      type__in: type,\\n      status__in: status,\\n      limit: limit,\\n      offset: offset\\n    };\\n\\n    if (exportableAccountingExportIds?.length) {\\n      apiParams.id__in = exportableAccountingExportIds;\\n    }\\n\\n    if (selectedDateFilter) {\\n      const exportedAtLte = selectedDateFilter.startDate.toLocaleDateString().split(\'/\');\\n      const exportedAtGte = selectedDateFilter.endDate.toLocaleDateString().split(\'/\');\\n      apiParams.exported_at__lte = `${exportedAtLte[2]}-${exportedAtLte[1]}-${exportedAtLte[0]}T00:00:00`;\\n      apiParams.exported_at__gte = `${exportedAtGte[2]}-${exportedAtGte[1]}-${exportedAtGte[0]}T23:59:59`;\\n    }\\n\\n    if (exportedAt) {\\n      apiParams.exported_at__gte = exportedAt;\\n    }\\n\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/accounting_exports/`, apiParams);\\n  }\\n\\n  importExpensesFromFyle(version?: \'v1\'): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.workspaceId}/fyle/${version === \'v1\' ? \'expense_groups\' : \'accounting_exports\'}/sync/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"ApiService","id":"injectable-ApiService-05d3d2c316c91b0580562545a6b0c2ad9b07cc0db9e501b52229d23e274f0e04b5ff1fa1f60868b21d7d5273337e09d74944a1f4024c5df68c02300df0e75b0b","file":"src/app/core/services/common/api.service.ts","properties":[],"methods":[{"name":"delete","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"get","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"apiParams","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiParams","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleError","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""},{"name":"httpMethod","type":"string","deprecated":false,"deprecationMessage":""},{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"httpMethod","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"patch","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"post","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"put","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setBaseApiURL","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from \'@angular/common/http\';\\nimport { Injectable } from \'@angular/core\';\\nimport { catchError, Observable } from \'rxjs\';\\nimport { throwError } from \'rxjs\';\\nimport { environment } from \'src/environments/environment\';\\n\\nlet API_BASE_URL = environment.api_url;\\n\\nconst httpOptions = {\\n  headers: new HttpHeaders({\\n    \'Content-Type\': \'application/json\'\\n  }),\\n  body: {}\\n};\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class ApiService {\\n\\n  constructor(\\n    private http: HttpClient\\n  ) { }\\n\\n  setBaseApiURL(url: string): void {\\n    API_BASE_URL = url;\\n  }\\n\\n  private handleError(error: HttpErrorResponse, httpMethod: string, url: string) {\\n    if (error.error instanceof ErrorEvent) {\\n      console.error(\'An error occurred:\', error.error.message);\\n    } else {\\n      console.error(\\n        `Backend returned code ${error.status}, url was: ${url} method was: ${httpMethod}, body was: ${JSON.stringify(error.error)}`\\n      );\\n    }\\n    return throwError(error);\\n  }\\n\\n  post(endpoint: string, body: {}): Observable<any> {\\n    const url = API_BASE_URL + endpoint;\\n    return this.http.post(url, body, httpOptions).pipe(catchError(error => {\\n      return this.handleError(error, \'POST\', url);\\n    }));\\n  }\\n\\n  get(endpoint: string, apiParams: any): Observable<any> {\\n    let params = new HttpParams();\\n    Object.keys(apiParams).forEach(key => {\\n      params = params.set(key, apiParams[key]);\\n    });\\n    const url = API_BASE_URL + endpoint;\\n    return this.http.get(url, { params }).pipe(catchError(error => {\\n      return this.handleError(error, \'GET\', url);\\n    }));\\n  }\\n\\n  patch(endpoint: string, body: {}): Observable<any> {\\n    const url = API_BASE_URL + endpoint;\\n    return this.http.patch(url, body, httpOptions).pipe(catchError(error => {\\n      return this.handleError(error, \'PATCH\', url);\\n    }));\\n  }\\n\\n  put(endpoint: string, body: {}): Observable<any> {\\n    const url = API_BASE_URL + endpoint;\\n    return this.http.put(url, body, httpOptions).pipe(catchError(error => {\\n      return this.handleError(error, \'PUT\', url);\\n    }));\\n  }\\n\\n  delete(endpoint: string, body: {}): Observable<any> {\\n    httpOptions.body = body;\\n    const url = API_BASE_URL + endpoint;\\n    return this.http.delete(url, httpOptions).pipe(catchError(error => {\\n      return this.handleError(error, \'DELETE\', url);\\n    }));\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":19,"jsdoctags":[{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"AppcuesService","id":"injectable-AppcuesService-6ebfc84163ebc064c3fe4221b967d1f61d06db7a6a51bf3097ca020a37a35e3af5350c1f33b226854b78358830afc499528023f7a1bf7b3f14f1d3562d377da7","file":"src/app/core/services/integration/appcues.service.ts","properties":[{"name":"user","defaultValue":"this.userService.getUserProfile()","deprecated":false,"deprecationMessage":"","type":"MinimalUser","optional":false,"description":"","line":13}],"methods":[{"name":"initialiseAppcues","args":[{"name":"appName","type":"AppName","deprecated":false,"deprecationMessage":""},{"name":"workspace_created_at","type":"Date","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"appName","type":"AppName","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspace_created_at","type":"Date","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { UserService } from \'../misc/user.service\';\\nimport { AppName } from \'../../models/enum/enum.model\';\\nimport { SiWorkspaceService } from \'../si/si-core/si-workspace.service\';\\nimport { MinimalUser } from \'../../models/db/user.model\';\\nimport { IntacctWorkspace } from \'../../models/si/db/workspaces.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class AppcuesService {\\n\\n  user: MinimalUser = this.userService.getUserProfile();\\n\\n  constructor(\\n    private userService: UserService\\n  ) { }\\n\\n  get appcues() {\\n    return (window as any).Appcues;\\n  }\\n\\n  initialiseAppcues(appName: AppName, workspace_created_at: Date): void {\\n    workspace_created_at = new Date(workspace_created_at);\\n    if (this.appcues) {\\n      const user = this.userService.getUserProfile();\\n      this.appcues.identify(user.user_id, {\\n        email: user.email,\\n        name: user.full_name,\\n        \'Org ID\': user.org_id,\\n        \'Workspace Name\': user.org_name,\\n        source: \'Fyle Integration Settings\',\\n        \'App Name\': appName,\\n        \'Flow Version\': workspace_created_at > new Date(\'2023-10-03T07:30:00.000Z\') ? \'NEW\' : \'OLD\'\\n      });\\n    }\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"appcues":{"name":"appcues","getSignature":{"name":"appcues","type":"","returnType":"","line":19}}},"extends":[],"type":"injectable"},{"name":"AuthService","id":"injectable-AuthService-39ae2908206af51913ef7f382e1b1fde9e55e0cb2b7d5e24c9c32d3d81c29184aab7bfbd9f564d0f990a8b78b149534511589a4f85e758726d090b5b33cf1a36","file":"src/app/core/services/common/auth.service.ts","properties":[],"methods":[{"name":"checkLoginStatusAndLogout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":""},{"name":"getAccessToken","args":[],"optional":false,"returnType":"string | null","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""},{"name":"getRefreshToken","args":[],"optional":false,"returnType":"string | null","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""},{"name":"isLoggedIn","args":[],"optional":false,"returnType":"boolean | null","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""},{"name":"login","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Token>","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"logout","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":""},{"name":"refreshAccessToken","args":[{"name":"refreshToken","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Token>","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"refreshToken","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateAccessToken","args":[{"name":"accessToken","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string | null","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"accessToken","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { MinimalUser } from \'../../models/db/user.model\';\\nimport { Token } from \'../../models/misc/token.model\';\\nimport { UserService } from \'../misc/user.service\';\\nimport { ApiService } from \'./api.service\';\\nimport { StorageService } from \'./storage.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class AuthService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private storageService: StorageService,\\n    private userService: UserService\\n  ) { }\\n\\n  isLoggedIn(): boolean | null {\\n    return this.userService.getUserProfile() !== null;\\n  }\\n\\n  login(code: string): Observable<Token> {\\n    return this.apiService.post(\'/auth/login/\', { code: code });\\n  }\\n\\n  getAccessToken(): string | null {\\n    const user: MinimalUser | null = this.userService.getUserProfile();\\n\\n    return user ? user.access_token : null;\\n  }\\n\\n  getRefreshToken(): string | null {\\n    const user: MinimalUser | null = this.userService.getUserProfile();\\n\\n    return user ? user.refresh_token : null;\\n  }\\n\\n  refreshAccessToken(refreshToken: string): Observable<Token> {\\n    return this.apiService.post(\'/auth/refresh/\', { refresh_token: refreshToken });\\n  }\\n\\n  updateAccessToken(accessToken: string): string | null {\\n    const user: MinimalUser | null = this.userService.getUserProfile();\\n\\n    if (user) {\\n      user.access_token = accessToken;\\n      this.userService.storeUserProfile(user);\\n      return accessToken;\\n    }\\n\\n    return null;\\n  }\\n\\n  logout(): void {\\n    this.storageService.remove(\'user\');\\n  }\\n\\n  checkLoginStatusAndLogout(): void {\\n    if (this.isLoggedIn()) {\\n      this.logout();\\n    }\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"BambooHrService","id":"injectable-BambooHrService-9e8e85a791de94f8d6fab1a741ac906b036afda16e427ced20e2779d4910db424cbd9747ace522c1aab7fcbb4f66f7682f7eb9a3dad4710cb414242e348e2ce2","file":"src/app/core/services/bamboo-hr/bamboo-hr.service.ts","properties":[{"name":"orgId","defaultValue":"this.orgService.getOrgId()","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":12}],"methods":[{"name":"connectBambooHR","args":[{"name":"payload","type":"BambooHrConnection","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"payload","type":"BambooHrConnection","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"createFolder","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""},{"name":"disconnectBambooHr","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":""},{"name":"getBambooHRData","args":[],"optional":false,"returnType":"Observable<BambooHr>","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""},{"name":"getConfigurations","args":[],"optional":false,"returnType":"Observable<BambooHRConfiguration>","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":""},{"name":"postConfigurations","args":[{"name":"payload","type":"BambooHRConfigurationPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<BambooHRConfiguration>","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"payload","type":"BambooHRConfigurationPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"syncEmployees","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"uploadPackage","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { BambooHr, BambooHRConfiguration, BambooHRConfigurationPost, BambooHrConnection } from \'../../models/bamboo-hr/bamboo-hr.model\';\\nimport { ApiService } from \'../common/api.service\';\\nimport { OrgService } from \'../org/org.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BambooHrService {\\n\\n  orgId: string = this.orgService.getOrgId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private orgService: OrgService\\n  ) { }\\n\\n  getBambooHRData(): Observable<BambooHr> {\\n    return this.apiService.get(`/orgs/${this.orgId}/bamboohr/`, {});\\n  }\\n\\n  createFolder(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/bamboohr/folder/`, {});\\n  }\\n\\n  uploadPackage(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/bamboohr/packages/`, {});\\n  }\\n\\n  connectBambooHR(payload: BambooHrConnection): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/bamboohr/bamboo_connection/`, payload);\\n  }\\n\\n  getConfigurations(): Observable<BambooHRConfiguration> {\\n    return this.apiService.get(`/orgs/${this.orgId}/bamboohr/configuration/`, {\\n      org_id: this.orgId\\n    });\\n  }\\n\\n  postConfigurations(payload: BambooHRConfigurationPost): Observable<BambooHRConfiguration> {\\n    return this.apiService.post(`/orgs/${this.orgId}/bamboohr/configuration/`, payload);\\n  }\\n\\n  disconnectBambooHr(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/bamboohr/disconnect/`, {});\\n  }\\n\\n  syncEmployees(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/bamboohr/refresh_employees/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"BrandingService","id":"injectable-BrandingService-a22641c30ff45d5207e183c3f7da82a8b2767152fd9d3dca33bcf93e0706fc100445cdd8e6c9d4bc1a7aeeeb4d2ec40f987c04b14e75bf4d594001db8f5e6fb6","file":"src/app/core/services/common/branding.service.ts","properties":[],"methods":[{"name":"init","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""},{"name":"setupBrandingConfig","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { DOCUMENT } from \'@angular/common\';\\nimport { Inject, Injectable } from \'@angular/core\';\\nimport { Title } from \'@angular/platform-browser\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BrandingService {\\n\\n  constructor(\\n    @Inject(DOCUMENT) private document: Document,\\n    private title: Title\\n  ) { }\\n\\n  private setupBrandingConfig(): void {\\n    this.title.setTitle(brandingConfig.webpageTitle);\\n    this.document.getElementById(\'appFavicon\')?.setAttribute(\'href\', `assets/${brandingConfig.brandId}/favicon.ico`);\\n    this.document.documentElement.setAttribute(\'data-theme\', brandingConfig.brandId);\\n  }\\n\\n  init(): void {\\n    this.setupBrandingConfig();\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"document","type":"Document","deprecated":false,"deprecationMessage":""},{"name":"title","type":"Title","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"document","type":"Document","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"title","type":"Title","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"BusinessCentralAdvancedSettingsService","id":"injectable-BusinessCentralAdvancedSettingsService-ed7bf1c3f32b344ec8b4b568dd2042d94782809edf2cf5050790caf6bdf8c121bf9a12019ea2be842eca3fdea9a95fa1b9b6cdf4a1d5d40a3acda81c3a4d89e1","file":"src/app/core/services/business-central/business-central-configuration/business-central-advanced-settings.service.ts","properties":[],"methods":[{"name":"getAdvancedSettings","args":[],"optional":false,"returnType":"Observable<BusinessCentralAdvancedSettingsGet>","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: businessCentralAdvancedSettingGetCache$}"}],"modifierKind":[170]},{"name":"postAdvancedSettings","args":[{"name":"advancedSettingsPayload","type":"BusinessCentralAdvancedSettingsPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<BusinessCentralAdvancedSettingsGet>","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: businessCentralAdvancedSettingGetCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"advancedSettingsPayload","type":"BusinessCentralAdvancedSettingsPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { BusinessCentralAdvancedSettingsGet, BusinessCentralAdvancedSettingsPost } from \'src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model\';\\nimport { CacheBuster, Cacheable } from \'ts-cacheable\';\\nimport { ConditionField, EmailOption, ExpenseFilter, ExpenseFilterPost, ExpenseFilterResponse } from \'src/app/core/models/common/advanced-settings.model\';\\n\\nconst businessCentralAdvancedSettingGetCache$ = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BusinessCentralAdvancedSettingsService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: businessCentralAdvancedSettingGetCache$\\n  })\\n  getAdvancedSettings(): Observable<BusinessCentralAdvancedSettingsGet> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/advanced_settings/`, {});\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: businessCentralAdvancedSettingGetCache$\\n  })\\n  postAdvancedSettings(advancedSettingsPayload: BusinessCentralAdvancedSettingsPost): Observable<BusinessCentralAdvancedSettingsGet> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/advanced_settings/`, advancedSettingsPayload);\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"BusinessCentralAuthService","id":"injectable-BusinessCentralAuthService-b27bffe153a0a4169aff3ae6aef40f7e6d403b617c4945036aabed6efda5569a9ac0f00d838dd6332f015c16c77e1ca1eb15a1926ee8d79fb4acdd4575a1a51f","file":"src/app/core/services/business-central/business-central-core/business-central-auth.service.ts","properties":[],"methods":[{"name":"loginWithRefreshToken","args":[{"name":"refresh_token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Token>","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"refresh_token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { Observable } from \'rxjs\';\\nimport { Token } from \'src/app/core/models/misc/token.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BusinessCentralAuthService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  loginWithRefreshToken(refresh_token: string): Observable<Token> {\\n    return this.apiService.post(\'/auth/login_with_refresh_token/\', { refresh_token });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"BusinessCentralConnectorService","id":"injectable-BusinessCentralConnectorService-5e54aad4477b8863cc8c92fd9d62daf7ff17a87fcb26b6141b444a395563e8de9b6552e0883fdf9d5e1125e71f743bcff1f39560d3d2394daec2c61df728da59","file":"src/app/core/services/business-central/business-central-configuration/business-central-connector.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123,148]}],"methods":[{"name":"connectBusinessCentral","args":[{"name":"businessCentralConnector","type":"BusinessCentralConnectorPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<BusinessCentralCredential>","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: businessCentralCredentialsCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"businessCentralConnector","type":"BusinessCentralConnectorPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"disconnectBusinessCentralConnection","args":[],"optional":false,"returnType":"Observable<BusinessCentralCredential>","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: businessCentralCredentialsCache$}"}],"modifierKind":[170]},{"name":"getBusinessCentralCompany","args":[],"optional":false,"returnType":"Observable<BusinessCentralCompanyDetails>","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":""},{"name":"getBusinessCentralCredentials","args":[],"optional":false,"returnType":"Observable<BusinessCentralCredential>","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: businessCentralCredentialsCache$}"}],"modifierKind":[170]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { CacheBuster, Cacheable, globalCacheBusterNotifier } from \'ts-cacheable\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { BusinessCentralCompanyDetails, BusinessCentralCredential } from \'src/app/core/models/business-central/db/business-central-credentials.model\';\\nimport { BusinessCentralConnectorPost } from \'src/app/core/models/business-central/business-central-configuration/business-central-connector.model\';\\n\\nconst businessCentralCredentialsCache$ = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BusinessCentralConnectorService {\\n\\n  private readonly workspaceId = this.workspaceService.getWorkspaceId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: businessCentralCredentialsCache$\\n  })\\n  connectBusinessCentral(businessCentralConnector: BusinessCentralConnectorPost): Observable<BusinessCentralCredential> {\\n    globalCacheBusterNotifier.next();\\n    return this.apiService.post(`/workspaces/${this.workspaceId}/connect_business_central/authorization_code/`, businessCentralConnector);\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: businessCentralCredentialsCache$\\n  })\\n  getBusinessCentralCredentials(): Observable<BusinessCentralCredential> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/credentials/business_central/`, {});\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: businessCentralCredentialsCache$\\n  })\\n  disconnectBusinessCentralConnection(): Observable<BusinessCentralCredential> {\\n    globalCacheBusterNotifier.next();\\n    return this.apiService.patch(`/workspaces/${this.workspaceId}/credentials/business_central/`, {});\\n  }\\n\\n  getBusinessCentralCompany(): Observable<BusinessCentralCompanyDetails> {\\n    return this.apiService.get(`/workspace/${this.workspaceId}/business_central/company/`, {});\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"BusinessCentralExportSettingsService","id":"injectable-BusinessCentralExportSettingsService-c2f9bc0771a0799b803d7fc46525b311eb7296bd4338bb0effd0785dd74be1e39a2b1e33f66d4f4bc88ac34b0af192024c4105c7e948bc033a7b11afe23b28cd","file":"src/app/core/services/business-central/business-central-configuration/business-central-export-settings.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16,"modifierKind":[123,148]}],"methods":[{"name":"getExportSettings","args":[],"optional":false,"returnType":"Observable<BusinessCentralExportSettingGet>","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: businessCentralExportSettingCache$}"}],"modifierKind":[170]},{"name":"postExportSettings","args":[{"name":"exportSettingsPayload","type":"BusinessCentralExportSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<BusinessCentralExportSettingGet>","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: businessCentralExportSettingCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"exportSettingsPayload","type":"BusinessCentralExportSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { BusinessCentralExportSettingGet, BusinessCentralExportSettingPost } from \'src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { CacheBuster, Cacheable } from \'ts-cacheable\';\\n\\nconst businessCentralExportSettingCache$ = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BusinessCentralExportSettingsService {\\n\\n  private readonly workspaceId = this.workspaceService.getWorkspaceId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: businessCentralExportSettingCache$\\n  })\\n  getExportSettings(): Observable<BusinessCentralExportSettingGet> {\\n    return this.apiService.get(`workspaces/${this.workspaceId}/export_settings/`, {});\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: businessCentralExportSettingCache$\\n  })\\n  postExportSettings(exportSettingsPayload: BusinessCentralExportSettingPost): Observable<BusinessCentralExportSettingGet> {\\n    return this.apiService.post(`/workspaces/${this.workspaceId}/export_settings/`, exportSettingsPayload);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"BusinessCentralHelperService","id":"injectable-BusinessCentralHelperService-309cad34e7761d99ab82008f04862192b22eab4c3f4007473bfe36a947397c93260312dcf63bc8490645ee293eeea9b7015b25506de192da6d0b5c6de784e2bf","file":"src/app/core/services/business-central/business-central-core/business-central-helper.service.ts","properties":[],"methods":[{"name":"importAttributes","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refreshBusinessCentralDimensions","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { Cacheable } from \'ts-cacheable\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { IntegrationsToastService } from \'../../common/integrations-toast.service\';\\nimport { BusinessCentralMappingService } from \'../business-central-mapping/business-central-mapping.service\';\\nimport { ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BusinessCentralHelperService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    private mappingService: BusinessCentralMappingService,\\n    private toastService: IntegrationsToastService\\n  ) { }\\n\\n  refreshBusinessCentralDimensions(): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/Business_Central/import_attribut/`, {});\\n  }\\n\\n  importAttributes(isRefresh: boolean): void {\\n    this.workspaceService.importFyleAttributes(isRefresh).subscribe();\\n    this.mappingService.importBusinessCentralAttributes(isRefresh).subscribe();\\n    this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Refreshing data dimensions from Dynamics 360 Business Central\');\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"BusinessCentralMappingService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"BusinessCentralMappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"BusinessCentralImportSettingsService","id":"injectable-BusinessCentralImportSettingsService-a065e407261c1e3585fc604f9484495b5028e3a641b44567aa36bd30f9bb2ad541e7b3f4d67f3c393138c0fa3f578dfa1a0bb83b9cd4306cd0859a5f016828ac","file":"src/app/core/services/business-central/business-central-configuration/business-central-import-settings.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":24}],"methods":[{"name":"getBusinessCentralImportSettings","args":[],"optional":false,"returnType":"Observable<BusinessCentralImportSettingsGet>","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: businessCentralImportSettingGetCache$}"}],"modifierKind":[170]},{"name":"postBusinessCentralImportSettings","args":[{"name":"importSettingsPayload","type":"BusinessCentralImportSettingsPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<BusinessCentralImportSettingsGet>","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: businessCentralImportSettingGetCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"importSettingsPayload","type":"BusinessCentralImportSettingsPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { Subject, Observable } from \'rxjs\';\\nimport { BusinessCentralImportSettingsGet, BusinessCentralImportSettingsPost } from \'src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model\';\\nimport { Cacheable, CacheBuster } from \'ts-cacheable\';\\n\\nconst businessCentralImportSettingGetCache$ = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BusinessCentralImportSettingsService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    private helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  workspaceId: string = this.workspaceService.getWorkspaceId();\\n\\n  @Cacheable({\\n    cacheBusterObserver: businessCentralImportSettingGetCache$\\n  })\\n  getBusinessCentralImportSettings(): Observable<BusinessCentralImportSettingsGet> {\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/import_settings/`, {});\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: businessCentralImportSettingGetCache$\\n  })\\n  postBusinessCentralImportSettings(importSettingsPayload: BusinessCentralImportSettingsPost): Observable<BusinessCentralImportSettingsGet> {\\n    return this.apiService.put(`/workspaces/${this.workspaceId}/import_settings/`, importSettingsPayload);\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"BusinessCentralMappingService","id":"injectable-BusinessCentralMappingService-da9b640c60ea584ca593ead339307158d297c72a23a34538806c310f2e0df4d4f3d96c9fb9ff437c962e82ae16fc4162d85f99f46ed3bad669e2e96297baaef8","file":"src/app/core/services/business-central/business-central-mapping/business-central-mapping.service.ts","properties":[],"methods":[{"name":"importBusinessCentralAttributes","args":[{"name":"refresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"refresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { Observable } from \'rxjs/internal/Observable\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BusinessCentralMappingService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  importBusinessCentralAttributes(refresh: boolean): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/business_central/import_attributes/`, {refresh});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"BusinessCentralOnboardingService","id":"injectable-BusinessCentralOnboardingService-2a6324aae30864aa6d7868402904d934b56eeace94b4ea6b1f871198fce0b852462ed0e717a440e78d82642e3c4742e1ec41e32481fb0401ac72fd5b77a91e1a","file":"src/app/core/services/business-central/business-central-configuration/business-central-onboarding.service.ts","properties":[{"name":"onboardingState","deprecated":false,"deprecationMessage":"","type":"BusinessCentralOnboardingState","optional":false,"description":"","line":75,"modifierKind":[123]},{"name":"onboardingStateStepMap","defaultValue":"{\\n    [BusinessCentralOnboardingState.CONNECTION]: 1,\\n    [BusinessCentralOnboardingState.EXPORT_SETTINGS]: 2,\\n    [BusinessCentralOnboardingState.IMPORT_SETTINGS]: 3,\\n    [BusinessCentralOnboardingState.ADVANCED_SETTINGS]: 4,\\n    [BusinessCentralOnboardingState.COMPLETE]: 5\\n  }","deprecated":false,"deprecationMessage":"","type":"BusinessCentralOnboardingStepperMap","optional":false,"description":"","line":12},{"name":"onboardingSteps","defaultValue":"[\\n    {\\n      active: false,\\n      completed: false,\\n      number: 1,\\n      step: \'Connect to Dynamics \\\\n 365 Business Central\',\\n      icon: \'connector\',\\n      route: \'/integrations/business_central/onboarding/connector\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-connector--text tw-pl-12-px tw-whitespace-pre-line\', \'step-name-connector--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 2,\\n      step: \'Export Settings\',\\n      icon: \'export-setting\',\\n      route: \'/integrations/business_central/onboarding/export_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-export--text\', \'step-name-export--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 3,\\n      step: \'Import Settings\',\\n      icon: \'import-setting\',\\n      route: \'/integrations/business_central/onboarding/import_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-import--text\', \'step-name-import--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 4,\\n      step: \'Advanced Settings\',\\n      icon: \'advanced-setting\',\\n      route: \'/integrations/business_central/onboarding/advanced_settings\',\\n      size: {\\n        height: \'20px\',\\n        width: \'20px\'\\n      },\\n      styleClasses: [\'step-name-advanced--text\', \'step-name-advanced--icon\']\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":20,"modifierKind":[123,148]}],"methods":[{"name":"getOnboardingSteps","args":[{"name":"currentStep","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OnboardingStepper[]","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"currentStep","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { BusinessCentralOnboardingStepperMap } from \'src/app/core/models/business-central/business-central-configuration/business-central-onboarding.model\';\\nimport { BusinessCentralOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BusinessCentralOnboardingService {\\n\\n  onboardingStateStepMap: BusinessCentralOnboardingStepperMap = {\\n    [BusinessCentralOnboardingState.CONNECTION]: 1,\\n    [BusinessCentralOnboardingState.EXPORT_SETTINGS]: 2,\\n    [BusinessCentralOnboardingState.IMPORT_SETTINGS]: 3,\\n    [BusinessCentralOnboardingState.ADVANCED_SETTINGS]: 4,\\n    [BusinessCentralOnboardingState.COMPLETE]: 5\\n  };\\n\\n  private readonly onboardingSteps: OnboardingStepper[] = [\\n    {\\n      active: false,\\n      completed: false,\\n      number: 1,\\n      step: \'Connect to Dynamics \\\\n 365 Business Central\',\\n      icon: \'connector\',\\n      route: \'/integrations/business_central/onboarding/connector\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-connector--text tw-pl-12-px tw-whitespace-pre-line\', \'step-name-connector--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 2,\\n      step: \'Export Settings\',\\n      icon: \'export-setting\',\\n      route: \'/integrations/business_central/onboarding/export_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-export--text\', \'step-name-export--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 3,\\n      step: \'Import Settings\',\\n      icon: \'import-setting\',\\n      route: \'/integrations/business_central/onboarding/import_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-import--text\', \'step-name-import--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 4,\\n      step: \'Advanced Settings\',\\n      icon: \'advanced-setting\',\\n      route: \'/integrations/business_central/onboarding/advanced_settings\',\\n      size: {\\n        height: \'20px\',\\n        width: \'20px\'\\n      },\\n      styleClasses: [\'step-name-advanced--text\', \'step-name-advanced--icon\']\\n    }\\n  ];\\n\\n  private onboardingState: BusinessCentralOnboardingState;\\n\\n  constructor(\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  getOnboardingSteps(currentStep: string): OnboardingStepper[] {\\n    this.onboardingState = this.workspaceService.getOnboardingState();\\n    this.onboardingSteps.forEach(step => {\\n      if (step.step.toLowerCase() === currentStep.toLowerCase()) {\\n        step.active = true;\\n      } else {\\n        step.active = false;\\n      }\\n    });\\n\\n    for (let index = this.onboardingStateStepMap[this.onboardingState] - 1; index > 0; index--) {\\n      this.onboardingSteps[index - 1].completed = true;\\n    }\\n\\n    return this.onboardingSteps;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":75,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"CloneSettingService","id":"injectable-CloneSettingService-b3bd11884b3828538e1af4ef459449605ff87c54ecfbc403f39ef17170d2a33bec420b0ac783c1b5dad6d2c1d4965d56b517b18f9195a193ba130c0df4b9a43a","file":"src/app/core/services/common/clone-setting.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":14}],"methods":[{"name":"checkCloneSettingsExists","args":[],"optional":false,"returnType":"Observable<CloneSettingExist>","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""},{"name":"getCloneSettings","args":[],"optional":false,"returnType":"Observable<QBOCloneSetting>","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":""},{"name":"postCloneSettings","args":[{"name":"cloneSettingsPayload","type":"QBOCloneSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QBOCloneSetting>","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"cloneSettingsPayload","type":"QBOCloneSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { ApiService } from \'./api.service\';\\nimport { WorkspaceService } from \'./workspace.service\';\\nimport { CloneSettingExist } from \'../../models/common/clone-setting.model\';\\nimport { QBOCloneSetting, QBOCloneSettingPost } from \'../../models/qbo/qbo-configuration/qbo-clone-setting.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\n\\nexport class CloneSettingService {\\n\\n  workspaceId = this.workspaceService.getWorkspaceId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  checkCloneSettingsExists(): Observable<CloneSettingExist> {\\n    return this.apiService.get(`/user/clone_settings/exists/`, {});\\n  }\\n\\n  getCloneSettings(): Observable<QBOCloneSetting> {\\n    return this.apiService.get(`/v2/workspaces/${this.workspaceId}/clone_settings/`, {});\\n  }\\n\\n  postCloneSettings(cloneSettingsPayload: QBOCloneSettingPost): Observable<QBOCloneSetting> {\\n    return this.apiService.put(`/v2/workspaces/${this.workspaceId}/clone_settings/`, cloneSettingsPayload);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"ConfigurationService","id":"injectable-ConfigurationService-c86626c61dbe6ec79b33ba945cdd56792663ebeedd177f469ffba03ea9fe9bdca6a2eda0a321478e92012f0a6ce1a840aab9ab6ac8b9b1aff28e068544dc049b","file":"src/app/core/services/common/configuration.service.ts","properties":[],"methods":[{"name":"getAdditionalEmails","args":[],"optional":false,"returnType":"Observable<EmailOption[]>","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { EmailOption } from \'../../models/common/advanced-settings.model\';\\nimport { ApiService } from \'./api.service\';\\nimport { WorkspaceService } from \'./workspace.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class ConfigurationService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  getAdditionalEmails(): Observable<EmailOption[]> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/admins/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"DashboardService","id":"injectable-DashboardService-1c72e070a38aea0670fbb91503fcb4bcebee5d205260d6adf60478a8d574f1556ed682b0f6464d502ebf458d2a9937fd5e619ee3c944f901a0de3cb628a936a2","file":"src/app/core/services/common/dashboard.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":16}],"methods":[{"name":"getAllTasks","args":[{"name":"status","type":"TaskLogState[]","deprecated":false,"deprecationMessage":""},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"},{"name":"taskType","type":"string[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"status","type":"TaskLogState[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}},{"name":"taskType","type":"string[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"getAllTasksInternal","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":""},{"name":"taskType","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"allTasks","type":"TaskResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<TaskResponse>","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"status","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskType","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"allTasks","type":"TaskResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExportableAccountingExportIds","args":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getExportErrors","args":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getTasks","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":""},{"name":"taskType","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"next","type":"string | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"status","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskType","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"next","type":"string | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"triggerAccountingExport","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'./api.service\';\\nimport { WorkspaceService } from \'./workspace.service\';\\nimport { Observable, from } from \'rxjs\';\\nimport { Error, ErrorResponse } from \'../../models/db/error.model\';\\nimport { HelperService } from \'./helper.service\';\\nimport { ExportableAccountingExport } from \'../../models/db/accounting-export.model\';\\nimport { TaskLogState } from \'../../models/enum/enum.model\';\\nimport { TaskLogGetParams, TaskResponse } from \'../../models/db/task-log.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class DashboardService {\\n\\n  workspaceId: string = this.workspaceService.getWorkspaceId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    private helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  getExportableAccountingExportIds(version?: \'v1\'): Observable<any> {\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/fyle/${version === \'v1\' ? \'exportable_expense_groups\' : \'exportable_accounting_exports\'}/`, {});\\n  }\\n\\n  triggerAccountingExport(): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.workspaceId}/exports/trigger/`, {});\\n  }\\n\\n  getExportErrors(version?: \'v1\'): Observable<any> {\\n    if (version === \'v1\') {\\n      return this.apiService.get(`/v2/workspaces/${this.workspaceId}/errors/`, {is_resolved: false});\\n    }\\n\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/accounting_exports/errors/`, {is_resolved: false});\\n  }\\n\\n  private getTasks(limit: number, status: string[], expenseGroupIds: number[], taskType: string[], next: string | null): Observable<any> {\\n    const offset = 0;\\n    const apiParams: TaskLogGetParams = {\\n      limit: limit,\\n      offset: offset\\n    };\\n    if (status.length) {\\n      const statusKey = \'status__in\';\\n      apiParams[statusKey] = status;\\n    }\\n\\n    if (expenseGroupIds.length) {\\n      const expenseKey = \'expense_group_id__in\';\\n      apiParams[expenseKey] = expenseGroupIds;\\n    }\\n\\n    if (taskType) {\\n      const typeKey = \'type__in\';\\n      apiParams[typeKey] = taskType;\\n    }\\n\\n    if (next) {\\n      return this.apiService.get(next.split(\'/api\')[1], {});\\n    }\\n\\n    return this.apiService.get(\\n      `/workspaces/${this.workspaceId}/tasks/all/`, apiParams\\n    );\\n  }\\n\\n  private getAllTasksInternal(limit: number, status: string[], expenseGroupIds: number[], taskType: string[], allTasks: TaskResponse): Promise<TaskResponse> {\\n    const that = this;\\n    return that.getTasks(limit, status, expenseGroupIds, taskType, allTasks.next).toPromise().then((taskResponse) => {\\n\\n      if (allTasks.count === 0) {\\n        allTasks = taskResponse;\\n      } else {\\n        allTasks.count = taskResponse.count;\\n        allTasks.next = taskResponse.next;\\n        allTasks.previous = taskResponse.previous;\\n        allTasks.results = allTasks.results.concat(taskResponse.results);\\n      }\\n\\n      if (taskResponse.next) {\\n        return that.getAllTasksInternal(limit, status, expenseGroupIds, taskType, allTasks);\\n      }\\n\\n      return allTasks;\\n    });\\n  }\\n\\n  getAllTasks(status: TaskLogState[], expenseGroupIds: number[] = [], taskType: string[] = []): Observable<any> {\\n    const limit = 500;\\n    const allTasks = {\\n      count: 0,\\n      next: null,\\n      previous: null,\\n      results: []\\n    };\\n\\n    return from(this.getAllTasksInternal(limit, status, expenseGroupIds, taskType, allTasks));\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"DashboardService","id":"injectable-DashboardService-2b14b8811a9748f82c4765cb258b5c141bbf68ea2beeb535b20516e1d5dd5ec5835bc6542e66a14636ce6b9f59de5f9373d5a79432a48a8e860678b498f666f0-1","file":"src/app/core/services/si/si-core/dashboard.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":17}],"methods":[{"name":"exportExpenseGroups","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":""},{"name":"getAllTasks","args":[{"name":"status","type":"TaskLogState[]","deprecated":false,"deprecationMessage":""},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"},{"name":"taskType","type":"TaskLogType[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"Observable<TaskResponse>","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"status","type":"TaskLogState[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}},{"name":"taskType","type":"TaskLogType[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"getAllTasksInternal","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":""},{"name":"taskType","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"allTasks","type":"TaskResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Promise<TaskResponse>","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[123,134],"jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"status","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskType","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"allTasks","type":"TaskResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExportableGroupsIds","args":[],"optional":false,"returnType":"Observable<ExportableExpenseGroup>","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""},{"name":"getExportErrors","args":[],"optional":false,"returnType":"Observable<Error[]>","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":""},{"name":"getLastExport","args":[],"optional":false,"returnType":"Observable<LastExport>","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"getTasks","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":""},{"name":"taskType","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"next","type":"string | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<TaskResponse>","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"status","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"expenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"taskType","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"next","type":"string | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"importExpenseGroups","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":""}],"modifierKind":[170]},{"name":"syncExpensesFromFyle","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { firstValueFrom, from, Observable } from \'rxjs\';\\nimport { Cacheable } from \'ts-cacheable\';\\nimport { SiApiService } from \'./si-api.service\';\\nimport { SiWorkspaceService } from \'./si-workspace.service\';\\nimport { LastExport } from \'src/app/core/models/si/db/last-export.model\';\\nimport { TaskLogState, TaskLogType } from \'src/app/core/models/enum/enum.model\';\\nimport { TaskGetParams, TaskResponse } from \'src/app/core/models/si/db/task-log.model\';\\nimport { Error } from \'src/app/core/models/si/db/error.model\';\\nimport { ExportableExpenseGroup } from \'src/app/core/models/si/db/expense-group.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class DashboardService {\\n\\n  workspaceId: string = this.workspaceService.getWorkspaceId();\\n\\n  constructor(\\n    private apiService: SiApiService,\\n    private workspaceService: SiWorkspaceService\\n  ) { }\\n\\n  // TODO: cleanup all methods once dashboard impl is done\\n\\n  getExportableGroupsIds(): Observable<ExportableExpenseGroup> {\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/fyle/exportable_expense_groups/`, {});\\n  }\\n\\n  getExportErrors(): Observable<Error[]> {\\n    return this.apiService.get(`/v2/workspaces/${this.workspaceId}/errors/`, {is_resolved: false});\\n  }\\n\\n  syncExpensesFromFyle(): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.workspaceId}/fyle/expense_groups/sync/`, {});\\n  }\\n\\n  @Cacheable()\\n  importExpenseGroups(): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.workspaceId}/fyle/expense_groups/sync/`, {});\\n  }\\n\\n  exportExpenseGroups(): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.workspaceId}/exports/trigger/`, {});\\n  }\\n\\n  getLastExport(): Observable<LastExport> {\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/export_detail/`, {});\\n  }\\n\\n  getAllTasks(status: TaskLogState[], expenseGroupIds: number[] = [], taskType: TaskLogType[] = []): Observable<TaskResponse> {\\n    const limit = 500;\\n    const allTasks: TaskResponse = {\\n      count: 0,\\n      next: null,\\n      previous: null,\\n      results: []\\n    };\\n\\n    return from(this.getAllTasksInternal(limit, status, expenseGroupIds, taskType, allTasks));\\n  }\\n\\n  private async getAllTasksInternal(limit: number, status: string[], expenseGroupIds: number[], taskType: string[], allTasks: TaskResponse): Promise<TaskResponse> {\\n    const taskResponse = await firstValueFrom(this.getTasks(limit, status, expenseGroupIds, taskType, allTasks.next));\\n\\n    if (allTasks.count === 0) {\\n      allTasks = taskResponse;\\n    } else {\\n      allTasks.count = taskResponse.count;\\n      allTasks.next = taskResponse.next;\\n      allTasks.previous = taskResponse.previous;\\n      allTasks.results = allTasks.results.concat(taskResponse.results);\\n    }\\n\\n    if (taskResponse.next) {\\n      return this.getAllTasksInternal(limit, status, expenseGroupIds, taskType, allTasks);\\n    }\\n\\n    return allTasks;\\n  }\\n\\n  getTasks(limit: number, status: string[], expenseGroupIds: number[], taskType: string[], next: string | null): Observable<TaskResponse> {\\n    const offset = 0;\\n    const apiParams: TaskGetParams = {\\n      limit: limit,\\n      offset: offset\\n    };\\n    if (status.length) {\\n      const statusKey = \'status\';\\n      apiParams[statusKey] = status;\\n    }\\n\\n    if (expenseGroupIds.length) {\\n      const expenseKey = \'expense_group_ids\';\\n      apiParams[expenseKey] = expenseGroupIds;\\n    }\\n\\n    if (taskType) {\\n      const typeKey = \'task_type\';\\n      apiParams[typeKey] = taskType;\\n    }\\n\\n    if (next) {\\n      return this.apiService.get(next.split(\'/api\')[1], {});\\n    }\\n\\n    return this.apiService.get(\\n      `/workspaces/${this.workspaceId}/tasks/v2/all/`, apiParams\\n    );\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable","isDuplicate":true,"duplicateId":1,"duplicateName":"DashboardService-1"},{"name":"EventsService","id":"injectable-EventsService-77d7e3bc2760d7ad59c02ec3f3bf58ab4e8444e297771bd8d42574eed46ac03ce9c5c9e2621be4cf7d018d914ba4dffab2178975c977fefc4bea2f87c5b8bada","file":"src/app/core/services/common/events.service.ts","properties":[{"name":"history","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":22}],"methods":[{"name":"checkStateAndNavigate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigateBack","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"postEvent","args":[{"name":"payload","type":"Object","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"payload","type":"Object","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"receiveEvent","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"setupRouteWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { EventEmitter, Injectable, Output } from \'@angular/core\';\\nimport { environment } from \'src/environments/environment\';\\nimport { WorkatoConnectionStatus } from \'../../models/travelperk/travelperk.model\';\\nimport { WindowService } from \'./window.service\';\\nimport { NavigationStart, Router } from \'@angular/router\';\\nimport { Location } from \'@angular/common\';\\n\\nexport const EXPOSE_INTACCT_NEW_APP = true;\\nconst MODULE_PATHS = [\'mapping\', \'export_log\', \'configuration\', \'intacct\', \'qbd\'];\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class EventsService {\\n\\n  @Output() getWorkatoConnectionStatus: EventEmitter<WorkatoConnectionStatus> = new EventEmitter();\\n\\n  @Output() sageIntacctLogin: EventEmitter<string> = new EventEmitter();\\n\\n  @Output() redirectToOldIntacctApp: EventEmitter<string> = new EventEmitter();\\n\\n  history: string[] = [];\\n\\n  constructor(\\n    private location: Location,\\n    private router: Router,\\n    private windowService: WindowService\\n  ) { }\\n\\n  private navigateBack(): void {\\n    this.location.back();\\n    this.history.pop();\\n  }\\n\\n  private checkStateAndNavigate(): void {\\n    this.navigateBack();\\n\\n    // Pick last item from history\\n    const lastItem: string = this.history[this.history.length - 1];\\n\\n    // If last item is module path, then go back again\\n    if (lastItem && MODULE_PATHS.indexOf((lastItem.split(\'/\').pop() as string)) > -1) {\\n      this.navigateBack();\\n    } else {\\n      return;\\n    }\\n  }\\n\\n  receiveEvent(): void {\\n    this.windowService.nativeWindow.addEventListener(\'message\', (message) => {\\n      if (message.data && message.data.redirectUri && message.origin === environment.fyle_app_url) {\\n        if (EXPOSE_INTACCT_NEW_APP && message.data.redirectUri.includes(\'sage-intacct\')) {\\n          this.sageIntacctLogin.emit(message.data.redirectUri);\\n          this.redirectToOldIntacctApp.emit(message.data.redirectUri);\\n        } else {\\n          this.windowService.openInNewTab(message.data.redirectUri);\\n        }\\n      } else if (message.data && message.data.navigateBack) {\\n        this.checkStateAndNavigate();\\n      } else if (message.data && typeof (message.data) !== \'object\' && JSON.parse(message.data).type === \'connectionStatusChange\' && message.origin.includes(\'workato\')) {\\n        this.getWorkatoConnectionStatus.emit(JSON.parse(message.data));\\n      }\\n    }, false);\\n  }\\n\\n  postEvent(payload: Object): void {\\n    this.windowService.nativeWindow.parent.postMessage(payload, environment.fyle_app_url);\\n  }\\n\\n  setupRouteWatcher(): void {\\n    // Updating the iframe app navigation availability to true on page load\\n    this.postEvent({ updateIframedAppNavigationAvailability: true });\\n    this.router.events.subscribe((routerEvent) => {\\n      if (routerEvent instanceof NavigationStart) {\\n        // Add the current route to the history stack only if the user is navigating forward\\n        if (!routerEvent.restoredState) {\\n          this.history.push(routerEvent.url);\\n        }\\n        // Updating the iframe app navigation availability to false when user comes back to the initial page\\n        if (routerEvent.restoredState && routerEvent.restoredState.navigationId <= 3) {\\n          this.postEvent({ updateIframedAppNavigationAvailability: false });\\n        } else {\\n          // Keep updating the current route to the parent app to help in navigation during browser refresh\\n          const payload = { currentRoute: routerEvent.url.substring(1) };\\n          this.postEvent(payload);\\n        }\\n      }\\n    });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":22,"jsdoctags":[{"name":"location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"ExportLogService","id":"injectable-ExportLogService-edffbf55927930e3f9551ab70c8d9003f537aa3675533a77fb7ab454ab22d3aac9751985eeccf8053ad51fab99e232cd51c73922f3f9924bc05b2e1f15d7dbf7","file":"src/app/core/services/common/export-log.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":18}],"methods":[{"name":"getExpenseGroups","args":[{"name":"state","type":"TaskLogState","deprecated":false,"deprecationMessage":""},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"selectedDateFilter","type":"SelectedDateFilter | null","deprecated":false,"deprecationMessage":""},{"name":"exportedAt","type":"string | null","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<ExpenseGroupResponse>","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"TaskLogState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedDateFilter","type":"SelectedDateFilter | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportedAt","type":"string | null","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getSkippedExpenses","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<SkipExportLogResponse>","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'./api.service\';\\nimport { UserService } from \'../misc/user.service\';\\nimport { WorkspaceService } from \'./workspace.service\';\\nimport { environment } from \'src/environments/environment\';\\nimport { SkipExportLogResponse } from \'../../models/si/db/expense-group.model\';\\nimport { FyleReferenceType, TaskLogState } from \'../../models/enum/enum.model\';\\nimport { Observable } from \'rxjs\';\\nimport { AccountingExport } from \'../../models/db/accounting-export.model\';\\nimport { SelectedDateFilter } from \'../../models/qbd/misc/date-filter.model\';\\nimport { ExpenseGroupParam, ExpenseGroupResponse } from \'../../models/db/expense-group.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class ExportLogService {\\n\\n  workspaceId: string = this.workspaceService.getWorkspaceId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private userService: UserService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  getSkippedExpenses(limit: number, offset: number): Observable<SkipExportLogResponse> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    const org_id = this.userService.getUserProfile().org_id;\\n\\n    return this.apiService.get(`/workspaces/${workspaceId}/fyle/expenses/`, {limit, offset, org_id: org_id, is_skipped: true});\\n  }\\n\\n  getExpenseGroups(state: TaskLogState, limit: number, offset: number, selectedDateFilter: SelectedDateFilter | null, exportedAt?: string | null): Observable<ExpenseGroupResponse> {\\n    const params: ExpenseGroupParam = {\\n      limit,\\n      offset,\\n      tasklog__status: state\\n    };\\n\\n    if (selectedDateFilter) {\\n      const startDate = selectedDateFilter.startDate.toLocaleDateString().split(\'/\');\\n      const endDate = selectedDateFilter.endDate.toLocaleDateString().split(\'/\');\\n      params.exported_at__gte = `${startDate[2]}-${startDate[1]}-${startDate[0]}T00:00:00`;\\n      params.exported_at__lte = `${endDate[2]}-${endDate[1]}-${endDate[0]}T23:59:59`;\\n    }\\n\\n    if (exportedAt) {\\n      params.exported_at__gte = exportedAt;\\n    }\\n\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/fyle/expense_groups/`, params);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"ExportLogService","id":"injectable-ExportLogService-ee1d3d19683d7954f7429c26e51a40eed510c8e787d9825a06a983d2d2dab453150d588898619d88ae65024f30714b8f68341c2679cece7f9a149f03257ac1aa-1","file":"src/app/core/services/si/export-log/export-log.service.ts","properties":[{"name":"org_id","defaultValue":"this.userService.getUserProfile().org_id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21,"modifierKind":[123]},{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19}],"methods":[{"name":"generateFyleUrl","args":[{"name":"expenseGroup","type":"ExpenseGroup","deprecated":false,"deprecationMessage":""},{"name":"referenceType","type":"FyleReferenceType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expenseGroup","type":"ExpenseGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"referenceType","type":"FyleReferenceType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExpenseGroups","args":[{"name":"state","type":"TaskLogState | TaskLogState.COMPLETE","deprecated":false,"deprecationMessage":""},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"selectedDateFilter","type":"SelectedDateFilter | null","deprecated":false,"deprecationMessage":""},{"name":"exportedAt","type":"Date | void | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<ExpenseGroupResponse>","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"TaskLogState | TaskLogState.COMPLETE","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedDateFilter","type":"SelectedDateFilter | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportedAt","type":"Date | void | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExpenseGroupSettings","args":[],"optional":false,"returnType":"Observable<ExpenseGroupSetting>","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""},{"name":"getReferenceType","args":[{"name":"description","type":"Partial<ExpenseGroupDescription>","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FyleReferenceType","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"description","type":"Partial<ExpenseGroupDescription>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSkipExportLogs","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<SkipExportLogResponse>","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable, from, mergeMap, of, reduce, takeWhile } from \'rxjs\';\\nimport { environment } from \'src/environments/environment\';\\nimport { Cacheable } from \'ts-cacheable\';\\nimport { SiApiService } from \'../si-core/si-api.service\';\\nimport { UserService } from \'../../misc/user.service\';\\nimport { SiWorkspaceService } from \'../si-core/si-workspace.service\';\\nimport { FyleReferenceType, TaskLogState } from \'src/app/core/models/enum/enum.model\';\\nimport { SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { ExpenseGroup, ExpenseGroupDescription, ExpenseGroupResponse, SkipExportLogResponse } from \'src/app/core/models/si/db/expense-group.model\';\\nimport { ExpenseGroupSetting } from \'src/app/core/models/db/expense-group-setting.model\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class ExportLogService {\\n\\n  workspaceId: string = this.workspaceService.getWorkspaceId();\\n\\n  private org_id: string = this.userService.getUserProfile().org_id;\\n\\n  constructor(\\n    private apiService: SiApiService,\\n    private userService: UserService,\\n    private workspaceService: SiWorkspaceService\\n  ) { }\\n\\n  getExpenseGroups(state: TaskLogState | TaskLogState.COMPLETE, limit: number, offset: number, selectedDateFilter: SelectedDateFilter | null, exportedAt: Date | void | null): Observable<ExpenseGroupResponse> {\\n    const params: any = {\\n      limit,\\n      offset\\n    };\\n    params.state = state;\\n\\n    if (selectedDateFilter) {\\n      const startDate = selectedDateFilter.startDate.toLocaleDateString().split(\'/\');\\n      const endDate = selectedDateFilter.endDate.toLocaleDateString().split(\'/\');\\n      params.start_date = `${startDate[2]}-${startDate[1]}-${startDate[0]}T00:00:00`;\\n      params.end_date = `${endDate[2]}-${endDate[1]}-${endDate[0]}T23:59:59`;\\n    }\\n\\n    if (exportedAt) {\\n      params.exported_at = exportedAt;\\n    }\\n\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/fyle/expense_groups/`, params);\\n  }\\n\\n  getReferenceType(description: Partial<ExpenseGroupDescription>): FyleReferenceType {\\n    let referenceType = FyleReferenceType.EXPENSE_REPORT;\\n\\n    if (FyleReferenceType.EXPENSE in description) {\\n      referenceType = FyleReferenceType.EXPENSE;\\n    } else if (FyleReferenceType.EXPENSE_REPORT in description) {\\n      referenceType = FyleReferenceType.EXPENSE_REPORT;\\n    } else if (FyleReferenceType.PAYMENT in description) {\\n      referenceType = FyleReferenceType.PAYMENT;\\n    }\\n\\n    return referenceType;\\n  }\\n\\n  getSkipExportLogs(limit: number, offset: number): Observable<SkipExportLogResponse> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n\\n    return this.apiService.get(`/workspaces/${workspaceId}/fyle/expenses/`, {limit, offset});\\n  }\\n\\n  getExpenseGroupSettings(): Observable<ExpenseGroupSetting> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    return this.apiService.get(`/workspaces/${workspaceId}/fyle/expense_group_settings/`, {});\\n  }\\n\\n  generateFyleUrl(expenseGroup: ExpenseGroup, referenceType: FyleReferenceType) : string {\\n    let url = `${environment.fyle_app_url}/app/`;\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      url += `admin/#/view_expense/${expenseGroup.expenses[0].expense_id}`;\\n    } else if (referenceType === FyleReferenceType.EXPENSE_REPORT) {\\n      url += `admin/#/reports/${expenseGroup.expenses[0].report_id}`;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      url += `admin/#/settlements/${expenseGroup.expenses[0].settlement_id}`;\\n    }\\n\\n    return `${url}?org_id=${this.org_id}`;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":21,"jsdoctags":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable","isDuplicate":true,"duplicateId":1,"duplicateName":"ExportLogService-1"},{"name":"GlobalErrorHandler","id":"injectable-GlobalErrorHandler-bccaddeac1462d2178a36e383f9e2a2f7982403222b01079c8351a97209ddf68a3df4a3d211179e6331cdbc6f784a164d9592b0c5493b7de9acc97fe20bf8b25","file":"src/app/app.error-handling.ts","properties":[],"methods":[{"name":"handleError","args":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":6,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"error","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { ErrorHandler, Injectable } from \'@angular/core\';\\n\\n@Injectable()\\nexport class GlobalErrorHandler implements ErrorHandler {\\n\\n  handleError(error: any): void {\\n    console.error(error);\\n   const chunkFailedMessage = /Loading chunk [\\\\d]+ failed/;\\n\\n    if (chunkFailedMessage.test(error.message)) {\\n      window.location.reload();\\n    }\\n  }\\n}\\n","extends":[],"type":"injectable"},{"name":"GustoService","id":"injectable-GustoService-fde4809669f17d74483bd0e3a942f101c8e07dffeb7439dfc5813c29fb436bcf8adbf5ca1e64dd9fdeb9b9ab4ebcc94146101784d31fc2f8f4e390023225d343","file":"src/app/core/services/gusto/gusto.service.ts","properties":[{"name":"orgId","defaultValue":"this.orgService.getOrgId()","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15}],"methods":[{"name":"connect","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""},{"name":"createFolder","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""},{"name":"getConfigurations","args":[],"optional":false,"returnType":"Observable<GustoConfiguration>","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: gustoConfigurationCache$}"}],"modifierKind":[170]},{"name":"getGustoData","args":[],"optional":false,"returnType":"Observable<Gusto>","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""},{"name":"patchConfigurations","args":[{"name":"recipe_status","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<GustoConfiguration>","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: gustoConfigurationCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"recipe_status","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postConfigurations","args":[{"name":"payload","type":"GustoConfigurationPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<GustoConfiguration>","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: gustoConfigurationCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"payload","type":"GustoConfigurationPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"syncEmployees","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":""},{"name":"uploadPackage","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { Cacheable, CacheBuster } from \'ts-cacheable\';\\nimport { Gusto, GustoConfiguration, GustoConfigurationPost } from \'../../models/gusto/gusto.model\';\\nimport { ApiService } from \'../common/api.service\';\\nimport { OrgService } from \'../org/org.service\';\\n\\nconst gustoConfigurationCache$ = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class GustoService {\\n\\n  orgId: string = this.orgService.getOrgId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private orgService: OrgService\\n  ) { }\\n\\n  getGustoData(): Observable<Gusto> {\\n    return this.apiService.get(`/orgs/${this.orgId}/gusto/`, {});\\n  }\\n\\n  createFolder(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/gusto/folder/`, {});\\n  }\\n\\n  uploadPackage(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/gusto/packages/`, {});\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: gustoConfigurationCache$\\n  })\\n  getConfigurations(): Observable<GustoConfiguration> {\\n    return this.apiService.get(`/orgs/${this.orgId}/gusto/configuration/`, {\\n      org_id: this.orgId\\n    });\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: gustoConfigurationCache$\\n  })\\n  postConfigurations(payload: GustoConfigurationPost): Observable<GustoConfiguration> {\\n    return this.apiService.post(`/orgs/${this.orgId}/gusto/configuration/`, payload);\\n  }\\n\\n  connect(): Observable<{message: {connection_id: string}}>{\\n    return this.apiService.post(`/orgs/${this.orgId}/gusto/connection/`, {});\\n  }\\n\\n  syncEmployees(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/gusto/refresh_employees/`, {});\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: gustoConfigurationCache$\\n  })\\n  patchConfigurations(recipe_status: boolean): Observable<GustoConfiguration> {\\n    return this.apiService.patch(`/orgs/${this.orgId}/gusto/recipe_status/`, {\\n      org_id: this.orgId,\\n      recipe_status: recipe_status\\n    });\\n  }\\n}","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"HelperService","id":"injectable-HelperService-1e10cf9222677cfe14963e05b4200c9d62ba42aa1f844bd6ec6cd57054c55030ce3a4d220cec4403eb92db0a0c01ca6de85bc114b2ead76e36ac8533deffd45b","file":"src/app/core/services/common/helper.service.ts","properties":[],"methods":[{"name":"addExportSettingFormValidator","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":210,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clearValidatorAndResetValue","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"disableFormField","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"enableFormField","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"exportSelectionValidator","args":[{"name":"exportSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ValidatorFn","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAppName","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":""},{"name":"getExportType","args":[{"name":"exportType","type":"string | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportType","type":"string | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getPhase","args":[{"name":"isOnboarding","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ProgressPhase","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isOnboarding","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleSkipExportFormInAdvancedSettingsUpdates","args":[{"name":"skipExportForm","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"fields","type":"skipExportValidator","deprecated":false,"deprecationMessage":""},{"name":"advancedSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":167,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"skipExportForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fields","type":"skipExportValidator","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"advancedSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleSkipExportFormUpdates","args":[{"name":"skipExportForm","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"fields","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"isChanged","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"skipExportForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fields","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isChanged","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isFieldRequired","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"markControllerAsRequired","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"oauthHandler","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":193,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"resetForm","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setBaseApiURL","args":[{"name":"appUrl","type":"string | void","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"appUrl","type":"string | void","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setConfigurationSettingValidatorsAndWatchers","args":[{"name":"validatorRule","type":"ExportSettingValidatorRule | SkipExportValidatorRule","deprecated":false,"deprecationMessage":""},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"validatorRule","type":"ExportSettingValidatorRule | SkipExportValidatorRule","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setExportTypeValidatorsAndWatchers","args":[{"name":"exportTypeValidatorRule","type":"ExportModuleRule[]","deprecated":false,"deprecationMessage":""},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportTypeValidatorRule","type":"ExportModuleRule[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setOrClearValidators","args":[{"name":"selectedValue","type":"string","deprecated":false,"deprecationMessage":""},{"name":"value","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedValue","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setSage300ExportTypeControllerValue","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { EventEmitter, Injectable, Output } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { ApiService } from \'./api.service\';\\nimport { environment } from \'src/environments/environment\';\\nimport { AppUrlMap } from \'../../models/integrations/integrations.model\';\\nimport { AppUrl, ExpenseState, ProgressPhase, Sage300ExportType } from \'../../models/enum/enum.model\';\\nimport { AbstractControl, FormGroup, ValidatorFn, Validators } from \'@angular/forms\';\\nimport { ExportModuleRule, ExportSettingValidatorRule } from \'../../models/sage300/sage300-configuration/sage300-export-setting.model\';\\nimport { TitleCasePipe } from \'@angular/common\';\\nimport { SnakeCaseToSpaceCasePipe } from \'src/app/shared/pipes/snake-case-to-space-case.pipe\';\\nimport { SkipExportValidatorRule, skipExportValidator } from \'../../models/common/advanced-settings.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class HelperService {\\n\\n  @Output() oauthCallbackUrl: EventEmitter<string> = new EventEmitter();\\n\\n  constructor(\\n    private router: Router,\\n    private apiService: ApiService\\n  ) {}\\n\\n  setBaseApiURL(appUrl: string| void): void {\\n    const urlSplit = this.router.url.split(\'/\');\\n    let module: AppUrl;\\n\\n    if (appUrl) {\\n      // Condition 1: If appUrl is truthy, use it as AppUrl\\n      module = appUrl as AppUrl;\\n    } else {\\n      // Condition 2: If appUrl is falsy, determine module based on urlSplit length\\n      module = (urlSplit.length > 2 ? urlSplit[2] : urlSplit[1]) as AppUrl;\\n    }\\n\\n    const apiUrlMap: AppUrlMap = {\\n      [AppUrl.INTACCT]: environment.si_api_url,\\n      [AppUrl.QBD]: environment.qbd_api_url,\\n      [AppUrl.TRAVELPERK]: environment.api_url,\\n      [AppUrl.BAMBOO_HR]: environment.api_url,\\n      [AppUrl.GUSTO]: environment.api_url,\\n      [AppUrl.SAGE300]: environment.sage300_api_url,\\n      [AppUrl.INTEGRATION]: environment.api_url,\\n      [AppUrl.BUSINESS_CENTRAL]: environment.business_central_api_url,\\n      [AppUrl.QBO]: environment.qbo_api_url\\n    };\\n\\n    const apiUrl = apiUrlMap[module] ?? apiUrlMap.integration;\\n    this.apiService.setBaseApiURL(apiUrl);\\n  }\\n\\n  getAppName(): string {\\n    const appName = this.router.url.split(\'/\')[2];\\n    return appName;\\n  }\\n\\n  isFieldRequired(form: FormGroup, controllerName: string): boolean {\\n    return form.controls[controllerName].hasValidator(Validators.required);\\n  }\\n\\n  markControllerAsRequired(form: FormGroup, controllerName: string): void {\\n    form.controls[controllerName].addValidators(Validators.required);\\n  }\\n\\n  clearValidatorAndResetValue(form: FormGroup, controllerName: string): void {\\n    form.controls[controllerName].clearValidators();\\n    form.controls[controllerName].setValue(null);\\n  }\\n\\n  setSage300ExportTypeControllerValue(form: FormGroup, controllerName: string): void {\\n    form.controls[controllerName].setValue(Sage300ExportType.PURCHASE_INVOICE);\\n  }\\n\\n  enableFormField(form: FormGroup, controllerName: string): void {\\n    form.controls[controllerName].enable();\\n  }\\n\\n  disableFormField(form: FormGroup, controllerName: string): void {\\n    form.controls[controllerName].disable();\\n  }\\n\\n  getExportType(exportType: string | null): string {\\n    return exportType ? new SnakeCaseToSpaceCasePipe().transform(new TitleCasePipe().transform(exportType)): \'expense\';\\n  }\\n\\n  setOrClearValidators(selectedValue: string, value: string[], form: FormGroup): void {\\n    if (selectedValue) {\\n      value.forEach((controllerName: string) => {\\n        this.markControllerAsRequired(form, controllerName);\\n        const urlSplit = this.router.url.split(\'/\');\\n        if (urlSplit[2] === AppUrl.SAGE300 && (controllerName === \'cccExportType\' || controllerName === \'reimbursableExportType\')) {\\n          this.setSage300ExportTypeControllerValue(form, controllerName);\\n        }\\n      });\\n    } else {\\n      value.forEach((controllerName: string) => {\\n        this.clearValidatorAndResetValue(form, controllerName);\\n      });\\n    }\\n  }\\n\\n  setConfigurationSettingValidatorsAndWatchers(validatorRule: ExportSettingValidatorRule | SkipExportValidatorRule, form: FormGroup) {\\n    const keys = Object.keys(validatorRule);\\n    Object.values(validatorRule).forEach((value, index) => {\\n      form.controls[keys[index]].valueChanges.subscribe((selectedValue) => {\\n        this.setOrClearValidators(selectedValue, value, form);\\n      });\\n    });\\n  }\\n\\n  setExportTypeValidatorsAndWatchers(exportTypeValidatorRule: ExportModuleRule[], form: FormGroup): void {\\n    Object.values(exportTypeValidatorRule).forEach((values) => {\\n      form.controls[values.formController].valueChanges.subscribe((isSelected) => {\\n        Object.entries(values.requiredValue).forEach(([key, value]) => {\\n          if (key === isSelected) {\\n            value.forEach((element: any) => {\\n              this.markControllerAsRequired(form, element);\\n            });\\n          } else {\\n            value.forEach((element: any) => {\\n              this.clearValidatorAndResetValue(form, element);\\n            });\\n          }\\n        });\\n      });\\n    });\\n  }\\n\\n  exportSelectionValidator(exportSettingForm: FormGroup): ValidatorFn {\\n    return (control: AbstractControl): {[key: string]: object} | null => {\\n      let forbidden = true;\\n      if (exportSettingForm) {\\n        if (typeof control.value === \'boolean\') {\\n          if (control.value) {\\n            forbidden = false;\\n          } else {\\n            if (control.parent?.get(\'reimbursableExpense\')?.value || control.parent?.get(\'creditCardExpense\')?.value) {\\n              forbidden = false;\\n            }\\n          }\\n        } else if ((control.value === ExpenseState.PAID || control.value === ExpenseState.PAYMENT_PROCESSING) && (control.parent?.get(\'reimbursableExpense\')?.value || control.parent?.get(\'creditCardExpense\')?.value)) {\\n          forbidden = false;\\n        }\\n        if (!forbidden) {\\n          control.parent?.get(\'reimbursableExpense\')?.setErrors(null);\\n          control.parent?.get(\'creditCardExpense\')?.setErrors(null);\\n          return null;\\n        }\\n      }\\n      return {\\n        forbiddenOption: {\\n          value: control.value\\n        }\\n      };\\n    };\\n  }\\n\\n  getPhase(isOnboarding: boolean): ProgressPhase {\\n    return isOnboarding ? ProgressPhase.ONBOARDING : ProgressPhase.POST_ONBOARDING;\\n  }\\n\\n  resetForm(form: FormGroup): void {\\n    form.reset();\\n  }\\n\\n  handleSkipExportFormInAdvancedSettingsUpdates(skipExportForm: FormGroup, fields: skipExportValidator, advancedSettingForm: FormGroup): void {\\n    advancedSettingForm.controls.skipExport.valueChanges.subscribe((isChanged) => {\\n      if (isChanged) {\\n        fields.isChanged.forEach((value: string) => {\\n          this.markControllerAsRequired(skipExportForm, value);\\n        });\\n      } else {\\n        fields.isNotChanged.forEach((value: string) => {\\n          this.clearValidatorAndResetValue(skipExportForm, value);\\n        });\\n      }\\n    });\\n  }\\n\\n  handleSkipExportFormUpdates(skipExportForm: FormGroup, fields: string[], isChanged: boolean): void {\\n    if (isChanged) {\\n      fields.forEach((value: string) => {\\n        this.markControllerAsRequired(skipExportForm, value);\\n      });\\n    } else {\\n      fields.forEach((value: string) => {\\n        this.clearValidatorAndResetValue(skipExportForm, value);\\n      });\\n    }\\n  }\\n\\n  oauthHandler(url: string): void {\\n    const popup = window.open(url, \'popup\', \'popup=true, width=500, height=800, left=500\');\\n\\n    const activePopup = setInterval(() => {\\n      if (popup?.location?.href?.includes(\'code\')) {\\n        const callbackURL = popup?.location.href;\\n        this.oauthCallbackUrl.emit(callbackURL);\\n\\n        popup.close();\\n      } else if (!popup || !popup.closed) {\\n        return;\\n      }\\n\\n      clearInterval(activePopup);\\n    }, 500);\\n  }\\n\\n  addExportSettingFormValidator(form: FormGroup): void {\\n    form.controls.reimbursableExpense.setValidators(this.exportSelectionValidator(form));\\n    form.controls.creditCardExpense.setValidators(this.exportSelectionValidator(form));\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"IntacctConnectorService","id":"injectable-IntacctConnectorService-d07d814dfacaee2c2952a5d56b26c66d8b9a6f483cc3f3a6847714c6460fecd2ff9016c290428927009aa15cf336387de2365901c07a770713bd69248d5d09fd","file":"src/app/core/services/si/si-core/intacct-connector.service.ts","properties":[{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":19}],"methods":[{"name":"connectSageIntacct","args":[{"name":"data","type":"SageIntacctCredential","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<SageIntacctCredential>","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: sageIntacctCredentialCache}"}],"modifierKind":[170],"jsdoctags":[{"name":"data","type":"SageIntacctCredential","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getLocationEntityMapping","args":[],"optional":false,"returnType":"Observable<LocationEntityMapping>","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":""},{"name":"getSageIntacctCredential","args":[],"optional":false,"returnType":"Observable<SageIntacctCredential>","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: sageIntacctCredentialCache}"}],"modifierKind":[170]},{"name":"postLocationEntityMapping","args":[{"name":"locationEntityMappingPayload","type":"LocationEntityMapping","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<LocationEntityMapping>","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"locationEntityMappingPayload","type":"LocationEntityMapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { LocationEntityMapping } from \'src/app/core/models/si/db/location-entity-mapping.model\';\\nimport { DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { SiApiService } from \'./si-api.service\';\\nimport { SiWorkspaceService } from \'./si-workspace.service\';\\nimport { StorageService } from \'../../common/storage.service\';\\nimport { Cacheable, CacheBuster, globalCacheBusterNotifier } from \'ts-cacheable\';\\nimport { SageIntacctCredential } from \'src/app/core/models/si/db/sage-credentials.model\';\\n\\n\\nconst sageIntacctCredentialCache = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class IntacctConnectorService {\\n\\n  workspaceId: number;\\n\\n  constructor(\\n    private apiService: SiApiService,\\n    private workspaceService: SiWorkspaceService,\\n    private workspace: SiWorkspaceService,\\n    private storageService: StorageService\\n  ) { }\\n\\n  @Cacheable({\\n    cacheBusterObserver: sageIntacctCredentialCache\\n  })\\n  getSageIntacctCredential(): Observable<SageIntacctCredential> {\\n    this.workspaceId = this.storageService.get(\'si.workspaceId\');\\n    return this.apiService.get(\'/workspaces/\' + this.workspaceId + \'/credentials/sage_intacct/\', {});\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: sageIntacctCredentialCache\\n  })\\n  connectSageIntacct(data: SageIntacctCredential): Observable<SageIntacctCredential> {\\n    this.workspaceId = this.storageService.get(\'si.workspaceId\');\\n    globalCacheBusterNotifier.next();\\n    return this.apiService.post(\'/workspaces/\' + this.workspaceId + \'/credentials/sage_intacct/\', data);\\n  }\\n\\n  postLocationEntityMapping(locationEntityMappingPayload: LocationEntityMapping): Observable<LocationEntityMapping> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n\\n    return this.apiService.post(`/workspaces/${workspaceId}/mappings/location_entity/`, locationEntityMappingPayload);\\n  }\\n\\n  getLocationEntityMapping(): Observable<LocationEntityMapping> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    return this.apiService.get(\\n      `/workspaces/${workspaceId}/mappings/location_entity/`, {}\\n    );\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"workspace","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""}],"line":19,"jsdoctags":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspace","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"IntegrationsToastService","id":"injectable-IntegrationsToastService-896e30abc451cd96cc6813e5a1d3afcc109298c3d5a7f76471c21d1eb6c723bc3fd1c96a53f8dfd9254ae9a6fa423809f86909be237408ed6228dad38dd34879","file":"src/app/core/services/common/integrations-toast.service.ts","properties":[],"methods":[{"name":"displayToastMessage","args":[{"name":"severity","type":"ToastSeverity","deprecated":false,"deprecationMessage":""},{"name":"summary","type":"string","deprecated":false,"deprecationMessage":""},{"name":"life","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"3000"}],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"severity","type":"ToastSeverity","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"summary","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"life","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"3000","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { MessageService } from \'primeng/api\';\\nimport { ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class IntegrationsToastService {\\n\\n  constructor(\\n    private messageService: MessageService\\n  ) { }\\n\\n  displayToastMessage(severity: ToastSeverity, summary: string, life: number = 3000): void {\\n    this.messageService.add({\\n      severity,\\n      summary,\\n      life\\n    });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"messageService","type":"MessageService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"messageService","type":"MessageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"IntegrationsUserService","id":"injectable-IntegrationsUserService-39770e30cac6017dc0d5116cb3482a270255c6308833671549f5a67f544f81832bcdd1558b28bca659e141f87846120933bacb23a9340066204345b219ad5054","file":"src/app/core/services/common/integrations-user.service.ts","properties":[],"methods":[{"name":"getUserProfile","args":[],"optional":false,"returnType":"MinimalUser","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { MinimalUser } from \'src/app/core/models/db/user.model\';\\nimport { StorageService } from \'./storage.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class IntegrationsUserService {\\n\\n  constructor(\\n    private storageService: StorageService\\n  ) { }\\n\\n  getUserProfile(): MinimalUser {\\n    return this.storageService.get(\'user\');\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"MappingService","id":"injectable-MappingService-73239199706a955964222f6eba26731596da7b26ecd9a4c0714fc019bcd69a8adb08d48087140dd2107ad10e0370dce9c2e371e7f84c270ad5d8d021228b413b","file":"src/app/core/services/common/mapping.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29}],"methods":[{"name":"getDestinationAttributes","args":[{"name":"attributeTypes","type":"string | string[]","deprecated":false,"deprecationMessage":""},{"name":"version","type":"\\"v1\\" | \\"v2\\"","deprecated":false,"deprecationMessage":""},{"name":"apiPath","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"accountType","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"active","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true},{"name":"displayName","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"attributeTypes","type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"version","type":"\\"v1\\" | \\"v2\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiPath","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"accountType","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"active","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"displayName","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getEndpoint","args":[{"name":"mappingPage","type":"string","deprecated":false,"deprecationMessage":""},{"name":"isCategoryMappingGeneric","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"string","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"mappingPage","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isCategoryMappingGeneric","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getExportSettings","args":[],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":""},{"name":"getFyleFields","args":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<FyleField[]>","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getGenericMappingsV2","args":[{"name":"pageLimit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"pageOffset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"destinationType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"mappingState","type":"MappingState","deprecated":false,"deprecationMessage":""},{"name":"alphabetsFilter","type":"string","deprecated":false,"deprecationMessage":""},{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"isCategoryMappingGeneric","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<GenericMappingResponse>","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"pageLimit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageOffset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"destinationType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingState","type":"MappingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"alphabetsFilter","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isCategoryMappingGeneric","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getGroupedDestinationAttributes","args":[{"name":"attributeTypes","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"version","type":"\\"v1\\" | \\"v2\\"","deprecated":false,"deprecationMessage":""},{"name":"apiPath","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<GroupedDestinationAttribute>","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"attributeTypes","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"version","type":"\\"v1\\" | \\"v2\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiPath","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getIntegrationsFields","args":[{"name":"app_name","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<IntegrationField[]>","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"app_name","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getMappingSettings","args":[],"optional":false,"returnType":"Observable<MappingSettingResponse>","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":""},{"name":"getMappingStats","args":[{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"destinationType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"appName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<MappingStats>","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"destinationType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"appName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postCategoryMappings","args":[{"name":"mapping","type":"CategoryMappingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<CategoryMapping>","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mapping","type":"CategoryMappingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postEmployeeMappings","args":[{"name":"employeeMapping","type":"EmployeeMappingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<EmployeeMapping>","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"employeeMapping","type":"EmployeeMappingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postMapping","args":[{"name":"mapping","type":"GenericMappingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<GenericMapping>","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mapping","type":"GenericMappingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"triggerAutoMapEmployees","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'./api.service\';\\nimport { WorkspaceService } from \'./workspace.service\';\\nimport { Observable, from } from \'rxjs\';\\nimport { HelperService } from \'./helper.service\';\\nimport { GroupedDestinationAttribute } from \'../../models/db/destination-attribute.model\';\\nimport { IntegrationField, FyleField, MappingStats, GenericMappingApiParams } from \'../../models/db/mapping.model\';\\nimport { EmployeeMapping, EmployeeMappingPost } from \'../../models/db/employee-mapping.model\';\\nimport { AccountingDisplayName, MappingState } from \'../../models/enum/enum.model\';\\nimport { GenericMappingResponse } from \'../../models/db/extended-generic-mapping.model\';\\nimport { CategoryMapping, CategoryMappingPost } from \'../../models/db/category-mapping.model\';\\nimport { GenericMapping, GenericMappingPost } from \'../../models/db/generic-mapping.model\';\\nimport { MappingSettingResponse } from \'../../models/db/mapping-setting.model\';\\n\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class MappingService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  workspaceId = this.workspaceService.getWorkspaceId();\\n\\n  getExportSettings(): Observable<any> {\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/export_settings/`, {});\\n  }\\n\\n  getDestinationAttributes(attributeTypes: string | string[], version: \'v1\' | \'v2\', apiPath?: string, accountType?: string, active?: boolean, displayName?: string): Observable<any> {\\n    const params: {attribute_type__in: string | string[], account_type?: string, active?: boolean, display_name__in?: string} = {\\n      attribute_type__in: attributeTypes\\n    };\\n\\n    if (accountType) {\\n      params.account_type = accountType;\\n    }\\n    if (active) {\\n      params.active = active;\\n    }\\n\\n    if (displayName) {\\n      params.display_name__in = displayName;\\n    }\\n\\n    if (version === \'v1\') {\\n      return this.apiService.get(`/workspaces/${this.workspaceId}/${apiPath}/destination_attributes/`, params);\\n    }\\n\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/mappings/destination_attributes/`, params);\\n  }\\n\\n  getGroupedDestinationAttributes(attributeTypes: string[], version: \'v1\' | \'v2\', apiPath?: string): Observable<GroupedDestinationAttribute> {\\n    return from(this.getDestinationAttributes(attributeTypes, version, apiPath).toPromise().then((response: any | undefined) => {\\n      return response?.reduce((groupedAttributes: any, attribute: any) => {\\n        const group: any = groupedAttributes[attribute.attribute_type] || [];\\n        group.push(attribute);\\n        groupedAttributes[attribute.attribute_type] = group;\\n        return groupedAttributes;\\n      }, {\\n        ACCOUNT: [],\\n        EXPENSE_TYPE: [],\\n        EXPENSE_PAYMENT_TYPE: [],\\n        VENDOR: [],\\n        EMPLOYEE: [],\\n        CHARGE_CARD_NUMBER: [],\\n        TAX_DETAIL: [],\\n        JOB: [],\\n        BANK_ACCOUNT: [],\\n        CREDIT_CARD_ACCOUNT: [],\\n        ACCOUNTS_PAYABLE: [],\\n        TAX_CODE: []\\n      });\\n    }));\\n  }\\n\\n  getIntegrationsFields(app_name: string): Observable<IntegrationField[]> {\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/${app_name}/fields/`, {});\\n  }\\n\\n  getFyleFields(version?: \'v1\'): Observable<FyleField[]> {\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/fyle/${version === \'v1\' ? \'expense_fields\' : \'fields\'}/`, {});\\n  }\\n\\n  postEmployeeMappings(employeeMapping: EmployeeMappingPost): Observable<EmployeeMapping> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/mappings/employee/`, employeeMapping);\\n  }\\n\\n  getMappingSettings(): Observable<MappingSettingResponse> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/mappings/settings/`, {});\\n  }\\n\\n  triggerAutoMapEmployees() {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/mappings/auto_map_employees/trigger/`, {});\\n  }\\n\\n  private getEndpoint(mappingPage: string, isCategoryMappingGeneric?: boolean): string {\\n    if (isCategoryMappingGeneric) {\\n      return \'expense_attributes\';\\n    }\\n\\n    switch (mappingPage) {\\n      case \'EMPLOYEE\':\\n        return \'employee_attributes\';\\n      case \'CATEGORY\':\\n        return \'category_attributes\';\\n      default:\\n        return \'expense_attributes\';\\n    }\\n  }\\n\\n  getGenericMappingsV2(pageLimit: number, pageOffset: number, destinationType: string, mappingState: MappingState, alphabetsFilter: string, sourceType: string, isCategoryMappingGeneric?: boolean): Observable<GenericMappingResponse> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    const isMapped: boolean = mappingState === MappingState.UNMAPPED ? false : true;\\n    const params: GenericMappingApiParams = {\\n      limit: pageLimit,\\n      offset: pageOffset,\\n      mapped: mappingState === MappingState.ALL ? MappingState.ALL : isMapped,\\n      destination_type: destinationType,\\n      source_type: sourceType\\n    };\\n\\n    if (alphabetsFilter && alphabetsFilter !== \'All\') {\\n      params.mapping_source_alphabets = alphabetsFilter;\\n    }\\n\\n    const endpoint = this.getEndpoint(sourceType, isCategoryMappingGeneric);\\n\\n    return this.apiService.get(`/workspaces/${workspaceId}/mappings/${endpoint}/`, params);\\n  }\\n\\n  getMappingStats(sourceType: string, destinationType: string, appName: string): Observable<MappingStats> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n\\n    return this.apiService.get(`/workspaces/${workspaceId}/mappings/stats/`, {\\n      source_type: sourceType,\\n      destination_type: destinationType,\\n      app_name: appName\\n    });\\n  }\\n\\n  postCategoryMappings(mapping: CategoryMappingPost): Observable<CategoryMapping> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    return this.apiService.post(`/workspaces/${workspaceId}/mappings/category/`, mapping);\\n  }\\n\\n  postMapping(mapping: GenericMappingPost): Observable<GenericMapping> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/mappings/`, mapping);\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":19,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"OrgService","id":"injectable-OrgService-2277f62ca07af98ee4158dcfd829a56c07af33b15c2f7b76638484bc1e8ddb0f987bbb8a8409be3e73552687084015ed6b5a34531c31eda70eb9c5a9e2074c67","file":"src/app/core/services/org/org.service.ts","properties":[],"methods":[{"name":"connectFyle","args":[{"name":"appName","type":"AppName","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"appName","type":"AppName","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"connectSendgrid","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""},{"name":"createOrg","args":[],"optional":false,"returnType":"Observable<Org>","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":""},{"name":"createWorkatoWorkspace","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":""},{"name":"generateToken","args":[{"name":"managedUserId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<GeneratedToken>","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"managedUserId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAdditionalEmails","args":[],"optional":false,"returnType":"Observable<EmailOption[]>","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":""},{"name":"getCachedOrg","args":[],"optional":false,"returnType":"Org","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""},{"name":"getOrgId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""},{"name":"getOrgs","args":[{"name":"orgId","type":"string | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Org>","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"orgId","type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"sanitizeUrl","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"SafeResourceUrl","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { DomSanitizer, SafeResourceUrl } from \'@angular/platform-browser\';\\nimport { Observable } from \'rxjs\';\\nimport { Cacheable } from \'ts-cacheable\';\\nimport { EmailOption } from \'../../models/bamboo-hr/bamboo-hr.model\';\\nimport { AppName, AppUrl } from \'../../models/enum/enum.model\';\\nimport { GeneratedToken, Org } from \'../../models/org/org.model\';\\nimport { ApiService } from \'../common/api.service\';\\nimport { StorageService } from \'../common/storage.service\';\\nimport { HelperService } from \'../common/helper.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class OrgService {\\n\\n  constructor(\\n    private sanitizer: DomSanitizer,\\n    private apiService: ApiService,\\n    private storageService: StorageService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL(AppUrl.INTEGRATION);\\n   }\\n\\n  getOrgId(): string {\\n    return this.storageService.get(\'orgId\');\\n  }\\n\\n  createOrg(): Observable<Org> {\\n    return this.apiService.patch(\'/orgs/\', {});\\n  }\\n\\n  getOrgs(orgId: string | undefined): Observable<Org> {\\n    return this.apiService.get(`/orgs/`, {\\n      org_id: orgId\\n    });\\n  }\\n\\n  getCachedOrg(): Org {\\n    return this.storageService.get(\'org\');\\n  }\\n\\n  createWorkatoWorkspace(): Observable<{}> {\\n    return this.apiService.patch(`/orgs/${this.getOrgId()}/workato_workspace/`, {});\\n  }\\n\\n  connectFyle(appName?: AppName): Observable<{}> {\\n    const payload: {app_name?: AppName} = {};\\n\\n    if (appName) {\\n      payload.app_name = appName;\\n    }\\n\\n    return this.apiService.post(`/orgs/${this.getOrgId()}/connect_fyle/`, payload);\\n  }\\n\\n  getAdditionalEmails(): Observable<EmailOption[]> {\\n    return this.apiService.get(`/orgs/${this.getOrgId()}/admins/`, {});\\n  }\\n\\n  connectSendgrid(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.getOrgId()}/sendgrid_connection/`, {});\\n  }\\n\\n  sanitizeUrl(url: string): SafeResourceUrl {\\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\\n  }\\n\\n  generateToken(managedUserId: string): Observable<GeneratedToken> {\\n    return this.apiService.get(`/orgs/${this.getOrgId()}/generate_token/`, {\\n      managed_user_id: managedUserId\\n    });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"sanitizer","type":"DomSanitizer","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"sanitizer","type":"DomSanitizer","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"PaginatorService","id":"injectable-PaginatorService-18c0d7461f02264b1b724c779a918d592c9f48b1a083a4d2420d6a42f267c38016c443fd3d3561ed8a84acb796c3c724f5aa97efe872d4d110e1add95c10fc49","file":"src/app/core/services/common/paginator.service.ts","properties":[],"methods":[{"name":"getPageSize","args":[{"name":"module","type":"PaginatorPage","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Paginator","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"module","type":"PaginatorPage","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"storePageSize","args":[{"name":"module","type":"PaginatorPage","deprecated":false,"deprecationMessage":""},{"name":"pageSize","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"module","type":"PaginatorPage","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageSize","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { StorageService } from \'./storage.service\';\\nimport { PaginatorPage } from \'../../models/enum/enum.model\';\\nimport { Paginator } from \\"src/app/core/models/misc/paginator.model\\";\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class PaginatorService {\\n\\n  constructor(private storageService: StorageService) { }\\n\\n  getPageSize(module: PaginatorPage): Paginator {\\n    const defaultPageSize = 50;\\n\\n    return {\\n      limit: this.storageService.get(`page-size.${module}`) || defaultPageSize,\\n      offset: 0\\n    };\\n  }\\n\\n  storePageSize(module: PaginatorPage, pageSize: number): void {\\n    this.storageService.set(`page-size.${module}`, pageSize);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"PaginatorService","id":"injectable-PaginatorService-bb0befd90772ac2a1014903cd5e9fe1789fa810e7d5c8b6152b8cf75ef6ff034e345b98569b2c0e28d6c7d78593956e9dad08b816e2dfe5e640f70028d0d4827-1","file":"src/app/core/services/si/si-core/paginator.service.ts","properties":[],"methods":[{"name":"getPageSize","args":[{"name":"module","type":"PaginatorPage","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Paginator","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"module","type":"PaginatorPage","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"storePageSize","args":[{"name":"module","type":"PaginatorPage","deprecated":false,"deprecationMessage":""},{"name":"pageSize","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"module","type":"PaginatorPage","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageSize","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \\"@angular/core\\";\\nimport { StorageService } from \\"../../common/storage.service\\";\\nimport { Paginator } from \\"src/app/core/models/misc/paginator.model\\";\\nimport { PaginatorPage } from \\"src/app/core/models/enum/enum.model\\";\\n\\n\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class PaginatorService {\\n\\n  constructor(private storageService: StorageService) { }\\n\\n  getPageSize(module: PaginatorPage): Paginator {\\n    const defaultPageSize = 50;\\n\\n    return {\\n      limit: this.storageService.get(`page-size.${module}`) || defaultPageSize,\\n      offset: 0\\n    };\\n  }\\n\\n  storePageSize(module: PaginatorPage, pageSize: number): void {\\n    this.storageService.set(`page-size.${module}`, pageSize);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable","isDuplicate":true,"duplicateId":1,"duplicateName":"PaginatorService-1"},{"name":"QbdAdvancedSettingService","id":"injectable-QbdAdvancedSettingService-92fb0b663c664f2b3c9213a672d3b92cb952e3ed39af1f0afa3536f77b25dbd4e30a4304dedf1c16c7a92ea5da1a50448da103cc86895e2585b0988a1be54b4a","file":"src/app/core/services/qbd/qbd-configuration/qbd-advanced-setting.service.ts","properties":[],"methods":[{"name":"getQbdAdvancedSettings","args":[],"optional":false,"returnType":"Observable<QBDAdvancedSettingsGet>","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""},{"name":"postQbdAdvancedSettings","args":[{"name":"advancedSettingPayload","type":"QBDAdvancedSettingsPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QBDAdvancedSettingsGet>","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"advancedSettingPayload","type":"QBDAdvancedSettingsPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { QBDAdvancedSettingsGet, QBDAdvancedSettingsPost } from \'src/app/core/models/qbd/qbd-configuration/advanced-setting.model\';\\nimport { QbdApiService } from \'../qbd-core/qbd-api.service\';\\nimport { QbdWorkspaceService } from \'../qbd-core/qbd-workspace.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QbdAdvancedSettingService {\\n\\n  constructor(\\n    private apiService: QbdApiService,\\n    private workspaceService: QbdWorkspaceService\\n  ) { }\\n\\n  getQbdAdvancedSettings(): Observable<QBDAdvancedSettingsGet> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/advanced_settings/`, {});\\n  }\\n\\n  postQbdAdvancedSettings(advancedSettingPayload:QBDAdvancedSettingsPost): Observable<QBDAdvancedSettingsGet> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/advanced_settings/`, advancedSettingPayload);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QbdApiService","id":"injectable-QbdApiService-2baedf6cefd708c640987443a2bb127934266c9d6ec9c63fa5f4ee95be1a96695d499ceccea90c66d2ce437a3f3132db50d7c45b8df91e862475e98c5091e43f","file":"src/app/core/services/qbd/qbd-core/qbd-api.service.ts","properties":[],"methods":[{"name":"get","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"apiParams","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiParams","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleError","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""},{"name":"httpMethod","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"httpMethod","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"patch","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"post","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"put","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from \'@angular/common/http\';\\nimport { Injectable } from \'@angular/core\';\\nimport { catchError, Observable } from \'rxjs\';\\nimport { throwError } from \'rxjs\';\\nimport { environment } from \'src/environments/environment\';\\n\\nconst API_BASE_URL = environment.qbd_api_url;\\n\\nconst httpOptions = {\\n  headers: new HttpHeaders({\\n    \'Content-Type\': \'application/json\'\\n  })\\n};\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QbdApiService {\\n\\n  constructor(\\n    private http: HttpClient\\n  ) { }\\n\\n  private handleError(error: HttpErrorResponse, httpMethod: string) {\\n    if (error.error instanceof ErrorEvent) {\\n      console.error(\'An error occurred:\', error.error.message);\\n    } else {\\n      console.error(\\n        `Backend returned code ${error.status}, method was: ${httpMethod}, body was: ${JSON.stringify(error.error)}`\\n      );\\n    }\\n    return throwError(error);\\n  }\\n\\n  // Having any here is ok\\n  post(endpoint: string, body: {}): Observable<any> {\\n    return this.http.post(API_BASE_URL + endpoint, body, httpOptions).pipe(catchError(error => {\\n      return this.handleError(error, \'POST\');\\n    }));\\n  }\\n\\n  // Having any here is ok\\n  get(endpoint: string, apiParams: any): Observable<any> {\\n    let params = new HttpParams();\\n    Object.keys(apiParams).forEach(key => {\\n      params = params.set(key, apiParams[key]);\\n    });\\n\\n    return this.http.get(API_BASE_URL + endpoint, { params }).pipe(catchError(error => {\\n      return this.handleError(error, \'GET\');\\n    }));\\n  }\\n\\n  // Having any here is ok\\n  patch(endpoint: string, body: {}): Observable<any> {\\n    return this.http.patch(API_BASE_URL + endpoint, body, httpOptions).pipe(catchError(error => {\\n      return this.handleError(error, \'PATCH\');\\n    }));\\n  }\\n\\n  // Having any here is ok\\n  put(endpoint: string, body: {}): Observable<any> {\\n    return this.http.put(API_BASE_URL + endpoint, body, httpOptions).pipe(catchError(error => {\\n      return this.handleError(error, \'PUT\');\\n    }));\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QbdAuthService","id":"injectable-QbdAuthService-73c61f9844cf5edcd5dd634362be19da8732795232b9a132b9fb8d04d3aab453bfea535550afb063788c6b50a258d1f09454d723511763f02fa56daed5daf647","file":"src/app/core/services/qbd/qbd-core/qbd-auth.service.ts","properties":[],"methods":[{"name":"qbdLogin","args":[{"name":"refresh_token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Token>","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"refresh_token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { Token } from \'src/app/core/models/misc/token.model\';\\nimport { QbdApiService } from \'./qbd-api.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QbdAuthService {\\n\\n  constructor(\\n    private apiService: QbdApiService\\n  ) { }\\n\\n  qbdLogin(refresh_token: string): Observable<Token> {\\n    return this.apiService.post(\'/auth/login_with_refresh_token/\', { refresh_token: refresh_token });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QbdExportSettingService","id":"injectable-QbdExportSettingService-4ec0dfc772e037403fe47e73eb599fadf1bde81e7568a59146493898fa3a79a3f0c41b784d34b43cacd85f35fa0434471c1cbd230eae21883a743860778a332b","file":"src/app/core/services/qbd/qbd-configuration/qbd-export-setting.service.ts","properties":[],"methods":[{"name":"getQbdExportSettings","args":[],"optional":false,"returnType":"Observable<QBDExportSettingGet>","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""},{"name":"postQbdExportSettings","args":[{"name":"exportSettingsPayload","type":"QBDExportSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QBDExportSettingGet>","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportSettingsPayload","type":"QBDExportSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { QBDExportSettingGet, QBDExportSettingPost } from \'src/app/core/models/qbd/qbd-configuration/export-setting.model\';\\nimport { QbdApiService } from \'../qbd-core/qbd-api.service\';\\nimport { QbdWorkspaceService } from \'../qbd-core/qbd-workspace.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QbdExportSettingService {\\n\\n  constructor(\\n    private apiService: QbdApiService,\\n    private workspaceService: QbdWorkspaceService\\n  ) { }\\n\\n  getQbdExportSettings(): Observable<QBDExportSettingGet>{\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/export_settings/`, {});\\n  }\\n\\n  postQbdExportSettings(exportSettingsPayload: QBDExportSettingPost): Observable<QBDExportSettingGet> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/export_settings/`, exportSettingsPayload);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QbdFieldMappingService","id":"injectable-QbdFieldMappingService-eceb35aaf9943b42e436519027feb481b2503d5a2f7cd9dd807e2d5e5718dc86c532bbb742df3450393506b5af51bc04a282e519e3a5aae76f18535f1f2f650e","file":"src/app/core/services/qbd/qbd-configuration/qbd-field-mapping.service.ts","properties":[],"methods":[{"name":"getQbdFieldMapping","args":[],"optional":false,"returnType":"Observable<QBDFieldMappingGet>","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""},{"name":"postQbdFieldMapping","args":[{"name":"fieldMappingPayload","type":"QBDFieldMappingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QBDFieldMappingGet>","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"fieldMappingPayload","type":"QBDFieldMappingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { QBDFieldMappingGet, QBDFieldMappingPost } from \'src/app/core/models/qbd/qbd-configuration/field-mapping.model\';\\nimport { QbdApiService } from \'../qbd-core/qbd-api.service\';\\nimport { QbdWorkspaceService } from \'../qbd-core/qbd-workspace.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QbdFieldMappingService {\\n\\n  constructor(\\n    private apiService: QbdApiService,\\n    private workspaceService: QbdWorkspaceService\\n  ) { }\\n\\n  getQbdFieldMapping(): Observable<QBDFieldMappingGet> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/field_mappings/`, {});\\n  }\\n\\n  postQbdFieldMapping(fieldMappingPayload: QBDFieldMappingPost): Observable<QBDFieldMappingGet> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/field_mappings/`, fieldMappingPayload);\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QbdIifLogsService","id":"injectable-QbdIifLogsService-ea520cb419cd7ad1e66dfd2f85363ccc101568a54c0b52fbaea8c398e85343c90fb1afab2d90bf90ca3e0cc46541caba5296db156bd0b5015e50d8a0e599ae7f","file":"src/app/core/services/qbd/qbd-iif-log/qbd-iif-logs.service.ts","properties":[],"methods":[{"name":"getQbdAccountingExports","args":[{"name":"status","type":"string | String[]","deprecated":false,"deprecationMessage":""},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"selectedDateFilter","type":"SelectedDateFilter | null","deprecated":false,"deprecationMessage":""},{"name":"type","type":"string[] | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QbdExportTriggerResponse>","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"status","type":"string | String[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedDateFilter","type":"SelectedDateFilter | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"type","type":"string[] | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postQbdAccountingExports","args":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QbdAccountingExportDownload>","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"id","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"triggerQBDExport","args":[],"optional":false,"returnType":"Observable<QbdExportTriggerGet>","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { QbdExportTriggerResponse, QbdAccountingExportDownload, QbdExportTriggerGet } from \'src/app/core/models/qbd/db/iif-logs.model\';\\nimport { SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { QbdApiService } from \'../qbd-core/qbd-api.service\';\\nimport { QbdWorkspaceService } from \'../qbd-core/qbd-workspace.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QbdIifLogsService {\\n\\n  constructor(\\n    private apiService: QbdApiService,\\n    private workspaceService: QbdWorkspaceService\\n  ) { }\\n\\n  getQbdAccountingExports(status: string | String[], limit: number, offset: number, selectedDateFilter: SelectedDateFilter | null, type: string[] | null): Observable<QbdExportTriggerResponse> {\\n    const params: any = {\\n      limit,\\n      offset,\\n      status\\n    };\\n\\n    if (selectedDateFilter) {\\n      const startDate = selectedDateFilter.startDate.toLocaleDateString().split(\'/\');\\n      const endDate = selectedDateFilter.endDate.toLocaleDateString().split(\'/\');\\n      params.start_date = `${startDate[2]}-${startDate[1]}-${startDate[0]}T00:00:00`;\\n      params.end_date = `${endDate[2]}-${endDate[1]}-${endDate[0]}T23:59:59`;\\n    }\\n\\n    if (type) {\\n      params.type = type;\\n    }\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/accounting_exports/`, params);\\n  }\\n\\n  postQbdAccountingExports(id: number): Observable<QbdAccountingExportDownload> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/accounting_exports/${id}/download/`, {});\\n  }\\n\\n  triggerQBDExport(): Observable<QbdExportTriggerGet> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/trigger_export/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QbdMappingService","id":"injectable-QbdMappingService-cf33d596c72b1eddb1515dc6700070c95bd258101c9bcf4f97a7a577e774aab9bc03e9f48170aa993fc344b458f17562b2179dbca1c9a6bb0c91a2cc838ee638","file":"src/app/core/services/qbd/qbd-mapping/qbd-mapping.service.ts","properties":[],"methods":[{"name":"getMappings","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"mappingState","type":"MappingState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<MappingResponse>","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingState","type":"MappingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getMappingStats","args":[{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<MappingStats>","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postMappings","args":[{"name":"mappingPayload","type":"MappingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Mapping>","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mappingPayload","type":"MappingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refreshMappingPages","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { EventEmitter, Injectable, Output } from \'@angular/core\';\\nimport { QbdApiService } from \'../qbd-core/qbd-api.service\';\\nimport { QbdWorkspaceService } from \'../qbd-core/qbd-workspace.service\';\\nimport { Mapping, MappingPost, MappingResponse, MappingStats } from \'src/app/core/models/qbd/db/mapping.model\';\\nimport { Observable } from \'rxjs\';\\nimport { QBDExportSettingGet } from \'src/app/core/models/qbd/qbd-configuration/export-setting.model\';\\nimport { MappingState } from \'src/app/core/models/enum/enum.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QbdMappingService {\\n\\n  @Output() getMappingPagesForSideNavBar: EventEmitter<Boolean> = new EventEmitter();\\n\\n  constructor(\\n    private apiService: QbdApiService,\\n    private workspaceService: QbdWorkspaceService\\n  ) { }\\n\\n  getMappings(limit: number, offset: number, sourceType: string, mappingState: MappingState): Observable<MappingResponse> {\\n    const params: any = {\\n      limit,\\n      offset,\\n      attribute_type: sourceType.toUpperCase()\\n    };\\n\\n\\t\\tif (mappingState === MappingState.MAPPED){\\n\\t\\t\\tparams.destination_value__isnull = false;\\n\\t\\t} else if (mappingState === MappingState.UNMAPPED){\\n\\t\\t\\tparams.destination_value__isnull = true;\\n\\t\\t}\\n\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/qbd_mappings/`, params);\\n  }\\n\\n  postMappings(mappingPayload: MappingPost): Observable<Mapping> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/qbd_mappings/`, mappingPayload);\\n  }\\n\\n  getMappingStats(sourceType: string): Observable<MappingStats> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/qbd_mappings/stats/`, { source_type: sourceType.toUpperCase() });\\n  }\\n\\n  refreshMappingPages(): void {\\n    this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/export_settings/`, {}).subscribe((exportSettingResponse : QBDExportSettingGet) => {\\n      const showMapping = exportSettingResponse.credit_card_expense_export_type ? true : false;\\n      this.getMappingPagesForSideNavBar.emit(showMapping);\\n    });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QbdWorkspaceService","id":"injectable-QbdWorkspaceService-95466ca28e5607396fe28a33686a39ee15b669aa60f51baff6eb423870d6a5c746678f43346a58d9b6d6c1d295705bf7a04e789084dab0dd3d84c2ad4b72a972","file":"src/app/core/services/qbd/qbd-core/qbd-workspace.service.ts","properties":[],"methods":[{"name":"getOnboardingState","args":[],"optional":false,"returnType":"QBDOnboardingState","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":""},{"name":"getQBDWorkspace","args":[{"name":"orgId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QBDWorkspace>","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":""}],"modifierKind":[170],"jsdoctags":[{"name":"orgId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getWorkspaceId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""},{"name":"postQBDWorkspace","args":[],"optional":false,"returnType":"Observable<QBDWorkspace>","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""},{"name":"setOnboardingState","args":[{"name":"onboardingState","type":"QBDOnboardingState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"onboardingState","type":"QBDOnboardingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"syncFyleDimensions","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { QBDOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { QBDWorkspace } from \'src/app/core/models/qbd/db/workspaces.model\';\\nimport { Cacheable } from \'ts-cacheable\';\\nimport { StorageService } from \'../../common/storage.service\';\\nimport { QbdApiService } from \'./qbd-api.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QbdWorkspaceService {\\n\\n  constructor(\\n    private apiService: QbdApiService,\\n    private storageService: StorageService\\n  ) { }\\n\\n  @Cacheable()\\n  getQBDWorkspace(orgId: string): Observable<QBDWorkspace> {\\n    return this.apiService.get(\'/workspaces/\', {org_id: orgId});\\n  }\\n\\n  postQBDWorkspace(): Observable<QBDWorkspace> {\\n    return this.apiService.post(\'/workspaces/\', {});\\n  }\\n\\n  getWorkspaceId(): string {\\n    return this.storageService.get(\'workspaceId\');\\n  }\\n\\n  setOnboardingState(onboardingState: QBDOnboardingState): void {\\n    return this.storageService.set(\'QBDOnboardingState\', onboardingState);\\n  }\\n\\n  getOnboardingState(): QBDOnboardingState {\\n    const onboardingState = this.storageService.get(\'QBDOnboardingState\');\\n    return onboardingState ? onboardingState : QBDOnboardingState.EXPORT_SETTINGS;\\n  }\\n\\n  syncFyleDimensions() {\\n    return this.apiService.post(`/workspaces/${this.getWorkspaceId()}/fyle/sync_dimensions/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"apiService","type":"QbdApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QboAdvancedSettingsService","id":"injectable-QboAdvancedSettingsService-a6449c41e2272ccc483c2eb403d0003024c76928df98e98eb7eca64b582b713580a91e83fcdd96380857caf15eef5f6a7590a37e90393bf1d7d7b0ac4b610603","file":"src/app/core/services/qbo/qbo-configuration/qbo-advanced-settings.service.ts","properties":[],"methods":[{"name":"getAdvancedSettings","args":[],"optional":false,"returnType":"Observable<QBOAdvancedSettingGet>","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: advancedSettingsCache$}"}],"modifierKind":[170]},{"name":"postAdvancedSettings","args":[{"name":"exportSettingsPayload","type":"QBOAdvancedSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QBOAdvancedSettingGet>","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: advancedSettingsCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"exportSettingsPayload","type":"QBOAdvancedSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { CacheBuster, Cacheable } from \'ts-cacheable\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { QBOAdvancedSettingGet, QBOAdvancedSettingPost } from \'src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model\';\\n\\nconst advancedSettingsCache$ = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QboAdvancedSettingsService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  @Cacheable({\\n    cacheBusterObserver: advancedSettingsCache$\\n  })\\n  getAdvancedSettings(): Observable<QBOAdvancedSettingGet> {\\n    return this.apiService.get(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/advanced_configurations/`, {});\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: advancedSettingsCache$\\n  })\\n  postAdvancedSettings(exportSettingsPayload: QBOAdvancedSettingPost): Observable<QBOAdvancedSettingGet> {\\n    return this.apiService.put(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/advanced_configurations/`, exportSettingsPayload);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QboAuthService","id":"injectable-QboAuthService-0807f42cf500a16e9b4143b387969b5ac84a6d581dff88262722ab40224ce8841a7edb1c66ffd1e91bdfa6f73ff6ffd203eb8e4ae05d0d8caafa05e60b5f31b3","file":"src/app/core/services/qbo/qbo-core/qbo-auth.service.ts","properties":[],"methods":[{"name":"loginWithRefreshToken","args":[{"name":"refresh_token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Token>","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"refresh_token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { Token } from \'src/app/core/models/misc/token.model\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { AppUrl } from \'src/app/core/models/enum/enum.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QboAuthService {\\n\\n  constructor(\\n    private apiService: ApiService\\n  ) {}\\n\\n  loginWithRefreshToken(refresh_token: string): Observable<Token> {\\n    return this.apiService.post(\'/auth/login_with_refresh_token/\', { refresh_token });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QboConnectorService","id":"injectable-QboConnectorService-20084589cc7c1b08cf2fbef7aa1dff20e7ad89292fba3227567273d8ce17c9a4582cc766c494edb038d6ce6b540cdc3f8f69d3c95f1701fd8725f2ac0e9eb0e1","file":"src/app/core/services/qbo/qbo-configuration/qbo-connector.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":18,"modifierKind":[123,148]}],"methods":[{"name":"connectQBO","args":[{"name":"qboConnector","type":"QBOConnectorPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QBOCredential>","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: qboCredentialsCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"qboConnector","type":"QBOConnectorPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"disconnectQBOConnection","args":[],"optional":false,"returnType":"Observable<QBOCredential>","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: qboCredentialsCache$}"}],"modifierKind":[170]},{"name":"getPreferences","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":""}],"modifierKind":[170]},{"name":"getQBOCredentials","args":[],"optional":false,"returnType":"Observable<QBOCredential>","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: qboCredentialsCache$}"}],"modifierKind":[170]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { QBOCredential } from \'src/app/core/models/qbo/db/qbo-credential.model\';\\nimport { QBOConnectorPost } from \'src/app/core/models/qbo/qbo-configuration/qbo-connector.model\';\\nimport { CacheBuster, Cacheable, globalCacheBusterNotifier } from \'ts-cacheable\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { AppUrl } from \'src/app/core/models/enum/enum.model\';\\n\\nconst qboCredentialsCache$ = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QboConnectorService {\\n\\n  private readonly workspaceId = this.workspaceService.getWorkspaceId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    private helperService: HelperService\\n  ) {\\n    helperService.setBaseApiURL(AppUrl.QBO);\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: qboCredentialsCache$\\n  })\\n  connectQBO(qboConnector: QBOConnectorPost): Observable<QBOCredential> {\\n    globalCacheBusterNotifier.next();\\n    return this.apiService.post(`/workspaces/${this.workspaceId}/connect_qbo/authorization_code/`, qboConnector);\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: qboCredentialsCache$\\n  })\\n  getQBOCredentials(): Observable<QBOCredential> {\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/credentials/qbo/`, {});\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: qboCredentialsCache$\\n  })\\n  disconnectQBOConnection(): Observable<QBOCredential> {\\n    globalCacheBusterNotifier.next();\\n    return this.apiService.patch(`/workspaces/${this.workspaceId}/credentials/qbo/`, {});\\n  }\\n\\n  @Cacheable()\\n  getPreferences(): Observable<{}> {\\n    return this.apiService.get(`/workspaces/${this.workspaceId}/qbo/preferences/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QboEmployeeSettingsService","id":"injectable-QboEmployeeSettingsService-45ed3ad43ab0bebb442d8e9ad7bf80bc4bfefc68ae031bb486a7af77827ba520a05c63d7a202f4316a7a94aa924fe22f17adcb54204e8207714606665916529e","file":"src/app/core/services/qbo/qbo-configuration/qbo-employee-settings.service.ts","properties":[],"methods":[{"name":"getDistinctQBODestinationAttributes","args":[{"name":"attributeTypes","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<DestinationAttribute[]>","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"attributeTypes","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getEmployeeSettings","args":[],"optional":false,"returnType":"Observable<QBOEmployeeSettingGet>","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: employeeSettingsCache$}"}],"modifierKind":[170]},{"name":"postEmployeeSettings","args":[{"name":"employeeSettingsPayload","type":"QBOEmployeeSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QBOEmployeeSettingGet>","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: employeeSettingsCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"employeeSettingsPayload","type":"QBOEmployeeSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { CacheBuster, Cacheable } from \'ts-cacheable\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { QBOEmployeeSettingGet, QBOEmployeeSettingPost } from \'src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model\';\\nimport { DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\n\\nconst employeeSettingsCache$ = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QboEmployeeSettingsService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  @Cacheable({\\n    cacheBusterObserver: employeeSettingsCache$\\n  })\\n  getEmployeeSettings(): Observable<QBOEmployeeSettingGet> {\\n    return this.apiService.get(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/map_employees/`, {});\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: employeeSettingsCache$\\n  })\\n  postEmployeeSettings(employeeSettingsPayload: QBOEmployeeSettingPost): Observable<QBOEmployeeSettingGet> {\\n    return this.apiService.put(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/map_employees/`, employeeSettingsPayload);\\n  }\\n\\n  getDistinctQBODestinationAttributes(attributeTypes: string[]): Observable<DestinationAttribute[]> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/qbo/qbo_attributes/`, {\\n      attribute_type__in: attributeTypes\\n    });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QboExportSettingsService","id":"injectable-QboExportSettingsService-32e4370b72a5d5fcd16e5f1ec31b6635e79bb39b27a787d73ce86c8f9288bc8c85b9ed36a201c0ff8887921ba9116ed73efea47482b43f32e977749f41a089fb","file":"src/app/core/services/qbo/qbo-configuration/qbo-export-settings.service.ts","properties":[{"name":"mandatoryFormController","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":15,"modifierKind":[123]}],"methods":[{"name":"getExportSettings","args":[],"optional":false,"returnType":"Observable<QBOExportSettingGet>","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""},{"name":"postExportSettings","args":[{"name":"exportSettingsPayload","type":"QBOExportSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QBOExportSettingGet>","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportSettingsPayload","type":"QBOExportSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setExportTypeValidatorsAndWatchers","args":[{"name":"exportTypeValidatorRule","type":"ExportModuleRule[]","deprecated":false,"deprecationMessage":""},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportTypeValidatorRule","type":"ExportModuleRule[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupDynamicValidators","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"values","type":"ExportModuleRule","deprecated":false,"deprecationMessage":""},{"name":"selectedValue","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"values","type":"ExportModuleRule","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedValue","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { EventEmitter, Injectable, Output } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { QBOExportSettingGet, QBOExportSettingModel, QBOExportSettingPost } from \'src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model\';\\nimport { ExportModuleRule } from \'src/app/core/models/common/export-settings.model\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { HelperUtility } from \'src/app/core/models/common/helper.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QboExportSettingsService {\\n\\n  private mandatoryFormController: string[] = [];\\n\\n  @Output() creditCardExportTypeChange: EventEmitter<string> = new EventEmitter();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  getExportSettings(): Observable<QBOExportSettingGet>{\\n    return this.apiService.get(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/export_settings/`, {});\\n  }\\n\\n  postExportSettings(exportSettingsPayload: QBOExportSettingPost): Observable<QBOExportSettingGet> {\\n    return this.apiService.put(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/export_settings/`, exportSettingsPayload);\\n  }\\n\\n  setupDynamicValidators(form: FormGroup, values: ExportModuleRule, selectedValue: string): void {\\n    Object.entries(values.requiredValue).forEach(([key, value]) => {\\n      if (key === selectedValue) {\\n        value.forEach((formController: string) => {\\n          if (values.formController === \'creditCardExportType\') {\\n            this.creditCardExportTypeChange.emit(selectedValue);\\n          }\\n\\n          const isFieldMandatory = QBOExportSettingModel.getMandatoryField(form, formController);\\n          if (isFieldMandatory) {\\n            this.mandatoryFormController.push(formController);\\n            HelperUtility.markControllerAsRequired(form, formController);\\n          } else {\\n            HelperUtility.clearValidatorAndResetValue(form, formController);\\n          }\\n        });\\n      } else {\\n        value.forEach((formController: string) => {\\n          if (!this.mandatoryFormController.includes(formController)) {\\n            HelperUtility.clearValidatorAndResetValue(form, formController);\\n          }\\n        });\\n      }\\n    });\\n  }\\n\\n  setExportTypeValidatorsAndWatchers(exportTypeValidatorRule: ExportModuleRule[], form: FormGroup): void {\\n    Object.values(exportTypeValidatorRule).forEach((values) => {\\n      form.controls[values.formController].valueChanges.subscribe((selectedValue) => {\\n        this.mandatoryFormController = [];\\n        this.setupDynamicValidators(form, values, selectedValue);\\n      });\\n    });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QboHelperService","id":"injectable-QboHelperService-0139afd69081eb509896a34bad50aec5fcce8b784c8e3a689c65a71e21edd0798e65b81104bad7319f856f3f2a0011f8e9774f7916271161a7b8f8a5383f638b","file":"src/app/core/services/qbo/qbo-core/qbo-helper.service.ts","properties":[],"methods":[{"name":"refreshFyleDimensions","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":""},{"name":"refreshQBODimensions","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":""},{"name":"syncFyleDimensions","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":""}],"modifierKind":[170]},{"name":"syncQBODimensions","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":""}],"modifierKind":[170]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { Cacheable } from \'ts-cacheable\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QboHelperService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  @Cacheable()\\n  syncFyleDimensions() {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/fyle/sync_dimensions/`, {});\\n  }\\n\\n  @Cacheable()\\n  syncQBODimensions() {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/qbo/sync_dimensions/`, {});\\n  }\\n\\n  refreshFyleDimensions(): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/fyle/refresh_dimensions/`, {});\\n  }\\n\\n  refreshQBODimensions(): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/qbo/refresh_dimensions/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"QboImportSettingsService","id":"injectable-QboImportSettingsService-3cb2fb5d09413bc27c1c5bb0e5acf4d9e989a5de6a88d694bc2845b8cbce83ee2810940a092872d600946cbb84515184258aff0074d8a41c10857bf84c935631","file":"src/app/core/services/qbo/qbo-configuration/qbo-import-settings.service.ts","properties":[{"name":"workspaceId","defaultValue":"this.workspaceService.getWorkspaceId()","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15}],"methods":[{"name":"getImportSettings","args":[],"optional":false,"returnType":"Observable<QBOImportSettingGet>","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: qboImportSettingGetCache$}"}],"modifierKind":[170]},{"name":"postImportSettings","args":[{"name":"importSettingsPayload","type":"QBOImportSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<QBOImportSettingGet>","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: qboImportSettingGetCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"importSettingsPayload","type":"QBOImportSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { CacheBuster, Cacheable } from \'ts-cacheable\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { QBOImportSettingGet, QBOImportSettingPost } from \'src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model\';\\nimport { ApiService } from \'../../common/api.service\';\\n\\nconst qboImportSettingGetCache$ = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QboImportSettingsService {\\n\\n  workspaceId: string = this.workspaceService.getWorkspaceId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  @Cacheable({\\n    cacheBusterObserver: qboImportSettingGetCache$\\n  })\\n  getImportSettings(): Observable<QBOImportSettingGet> {\\n    return this.apiService.get(`/v2/workspaces/${this.workspaceId}/import_settings/`, {});\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: qboImportSettingGetCache$\\n  })\\n  postImportSettings(importSettingsPayload: QBOImportSettingPost): Observable<QBOImportSettingGet> {\\n    return this.apiService.put(`/v2/workspaces/${this.workspaceId}/import_settings/`, importSettingsPayload);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"RefinerService","id":"injectable-RefinerService-703e5c264f409f719c88e94796d057cda03fd60f368246e1d110becd3523a287aeddf0f33906252c895cb010509ed93d874f478a91e5d3dfeb4aa9bc3b136131","file":"src/app/core/services/integration/refiner.service.ts","properties":[{"name":"user","defaultValue":"this.userService.getUserProfile()","deprecated":false,"deprecationMessage":"","type":"MinimalUser","optional":false,"description":"","line":11,"modifierKind":[123,148]}],"methods":[{"name":"triggerSurvey","args":[{"name":"appName","type":"AppName","deprecated":false,"deprecationMessage":""},{"name":"surveyID","type":"string","deprecated":false,"deprecationMessage":""},{"name":"actionName","type":"RefinerSurveyType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"appName","type":"AppName","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"surveyID","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"actionName","type":"RefinerSurveyType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { MinimalUser } from \'../../models/db/user.model\';\\nimport { AppName, RefinerSurveyType } from \'../../models/enum/enum.model\';\\nimport { UserService } from \'../misc/user.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class RefinerService {\\n\\n  private readonly user: MinimalUser = this.userService.getUserProfile();\\n\\n  constructor(\\n    private userService: UserService\\n  ) { }\\n\\n  get refiner() {\\n    return (window as any)._refiner;\\n  }\\n\\n  triggerSurvey(appName: AppName, surveyID: string, actionName: RefinerSurveyType): void {\\n    if (this.refiner) {\\n      this.refiner(\'identifyUser\', {\\n        id: this.user.org_id,\\n        email: this.user.email,\\n        name: this.user.full_name,\\n        account: {\\n          workspace_name: this.user.org_name\\n        },\\n        source: \'Fyle Integration Settings\',\\n        action_name: actionName,\\n        \'App Name\': appName\\n      });\\n      this.refiner(\'showForm\', surveyID);\\n    }\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"accessors":{"refiner":{"name":"refiner","getSignature":{"name":"refiner","type":"","returnType":"","line":17}}},"extends":[],"type":"injectable"},{"name":"Sage300AdvancedSettingsService","id":"injectable-Sage300AdvancedSettingsService-ea3696f881ed7c32c8c36f96c5e7bdd3457cbff559db3e5944b39931146e64878ab0b397a29b761b9247632544aec65a2e86d03d778780dd5b3f929d6a93ac48","file":"src/app/core/services/sage300/sage300-configuration/sage300-advanced-settings.service.ts","properties":[],"methods":[{"name":"getAdvancedSettings","args":[],"optional":false,"returnType":"Observable<Sage300AdvancedSettingGet>","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: sage300AdvancedSettingGetCache}"}],"modifierKind":[170]},{"name":"postAdvancedSettings","args":[{"name":"advancedSettingsPayload","type":"Sage300AdvancedSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Sage300AdvancedSettingGet>","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: sage300AdvancedSettingGetCache}"}],"modifierKind":[170],"jsdoctags":[{"name":"advancedSettingsPayload","type":"Sage300AdvancedSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { CacheBuster, Cacheable } from \'ts-cacheable\';\\nimport { Sage300AdvancedSettingGet, Sage300AdvancedSettingPost } from \'src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model\';\\nimport { ConditionField, EmailOption, ExpenseFilterPost, ExpenseFilterResponse, ExpenseFilter } from \'src/app/core/models/common/advanced-settings.model\';\\n\\nconst sage300AdvancedSettingGetCache = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class Sage300AdvancedSettingsService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: sage300AdvancedSettingGetCache\\n  })\\n  getAdvancedSettings(): Observable<Sage300AdvancedSettingGet> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/advanced_settings/`, {});\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: sage300AdvancedSettingGetCache\\n  })\\n  postAdvancedSettings(advancedSettingsPayload: Sage300AdvancedSettingPost): Observable<Sage300AdvancedSettingGet> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/advanced_settings/`, advancedSettingsPayload);\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"Sage300AuthService","id":"injectable-Sage300AuthService-f8d79d9334bb217e2a2ac1a1d2928f79af0d5953860c43b15b7d27b3328a4bd2c95ec857a109d9525cac634dfbfd2955cf99a0957e26c29e3ed8100888d6cd72","file":"src/app/core/services/sage300/sage300-core/sage300-auth.service.ts","properties":[],"methods":[{"name":"loginWithRefreshToken","args":[{"name":"refresh_token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Token>","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"refresh_token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { Observable } from \'rxjs/internal/Observable\';\\nimport { Token } from \'src/app/core/models/misc/token.model\';\\nimport { AppUrl } from \'src/app/core/models/enum/enum.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class Sage300AuthService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL(AppUrl.SAGE300);\\n  }\\n\\n  loginWithRefreshToken(refresh_token: string): Observable<Token> {\\n    return this.apiService.post(\'/auth/login_with_refresh_token/\', { refresh_token });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"Sage300ConnectorService","id":"injectable-Sage300ConnectorService-fe8cc75bfec563bb55801c2b99cb2a43a5b244183f1ef9219216c4a1c40bf23b8fe2f574473134f5ab72d2621957ad06ec5524e6e4dc65be51300811a4f7eb7b","file":"src/app/core/services/sage300/sage300-configuration/sage300-connector.service.ts","properties":[],"methods":[{"name":"connectSage300","args":[{"name":"data","type":"Sage300Credential","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Sage300Credential>","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: sage300CredentialCache}"}],"modifierKind":[170],"jsdoctags":[{"name":"data","type":"Sage300Credential","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSage300Credential","args":[],"optional":false,"returnType":"Observable<Sage300Credential>","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: sage300CredentialCache}"}],"modifierKind":[170]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { StorageService } from \'../../common/storage.service\';\\nimport { CacheBuster, Cacheable, globalCacheBusterNotifier } from \'ts-cacheable\';\\nimport { Sage300Credential } from \'src/app/core/models/sage300/db/sage300-credentials.model\';\\n\\nconst sage300CredentialCache = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\n\\nexport class Sage300ConnectorService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private storageService: StorageService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: sage300CredentialCache\\n  })\\n  getSage300Credential(): Observable<Sage300Credential> {\\n    return this.apiService.get(`/workspaces/${this.storageService.get(\'workspaceId\')}/credentials/sage300/`, {});\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: sage300CredentialCache\\n  })\\n  connectSage300(data: Sage300Credential): Observable<Sage300Credential> {\\n    globalCacheBusterNotifier.next();\\n    return this.apiService.post(`/workspaces/${this.storageService.get(\'workspaceId\')}/credentials/sage300/`, data);\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"Sage300ExportSettingService","id":"injectable-Sage300ExportSettingService-86d7cfb02c51609fe6b61ba4b4cc47d217d3c91445317a33f09aebd6de940cf740c3fd799b5d447f3cd4eefe795dfeea123e77f3152a537809c6e438ab2786fd","file":"src/app/core/services/sage300/sage300-configuration/sage300-export-setting.service.ts","properties":[],"methods":[{"name":"getCCCExpenseGroupingDateOptions","args":[],"optional":false,"returnType":"Sage300ExportSettingFormOption[]","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""},{"name":"getCCCExpenseState","args":[],"optional":false,"returnType":"Sage300ExportSettingFormOption[]","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":""},{"name":"getDestinationAttributes","args":[{"name":"attributeType","type":"string[] | string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Sage300DestinationAttributes[]>","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"attributeType","type":"string[] | string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExpenseGroupByOptions","args":[],"optional":false,"returnType":"Sage300ExportSettingFormOption[]","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"getExpensesExportTypeOptions","args":[],"optional":false,"returnType":"Sage300ExportSettingFormOption[]","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":""},{"name":"getReimbursableExpenseGroupingDateOptions","args":[],"optional":false,"returnType":"Sage300ExportSettingFormOption[]","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":""},{"name":"getReimbursableExpenseState","args":[],"optional":false,"returnType":"Sage300ExportSettingFormOption[]","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":""},{"name":"getSage300ExportSettings","args":[],"optional":false,"returnType":"Observable<Sage300ExportSettingGet>","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: sage300ExportSettingGetCache}"}],"modifierKind":[170]},{"name":"postExportSettings","args":[{"name":"exportSettingsPayload","type":"Sage300ExportSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Sage300ExportSettingGet>","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: sage300ExportSettingGetCache}"}],"modifierKind":[170],"jsdoctags":[{"name":"exportSettingsPayload","type":"Sage300ExportSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { Observable } from \'rxjs/internal/Observable\';\\nimport { Sage300ExportSettingFormOption, Sage300ExportSettingGet, Sage300ExportSettingPost } from \'src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model\';\\nimport { Subject } from \'rxjs\';\\nimport { CacheBuster, Cacheable } from \'ts-cacheable\';\\nimport { CCCExpenseState, ExpenseGroupingFieldOption, ExpenseState, Sage300ExpenseDate, Sage300ExportType } from \'src/app/core/models/enum/enum.model\';\\nimport { Sage300DestinationAttributes } from \'src/app/core/models/sage300/db/sage300-destination-attribuite.model\';\\n\\nconst sage300ExportSettingGetCache = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class Sage300ExportSettingService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: sage300ExportSettingGetCache\\n  })\\n  getSage300ExportSettings(): Observable<Sage300ExportSettingGet> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/export_settings/`, {});\\n  }\\n\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: sage300ExportSettingGetCache\\n  })\\n  postExportSettings(exportSettingsPayload: Sage300ExportSettingPost): Observable<Sage300ExportSettingGet> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/export_settings/`, exportSettingsPayload);\\n  }\\n\\n  getDestinationAttributes(attributeType: string[] | string): Observable<Sage300DestinationAttributes[]> {\\n    const params = {\\n      attribute_type__in: attributeType\\n    };\\n    return this.apiService.get(`workspaces/${this.workspaceService.getWorkspaceId()}/mappings/destination_attributes/`, params);\\n  }\\n\\n  getExpenseGroupByOptions(): Sage300ExportSettingFormOption[] {\\n    return [\\n      {\\n        label: \'Expense\',\\n        value: ExpenseGroupingFieldOption.EXPENSE\\n      },\\n      {\\n        label: \'Expense Report\',\\n        value: ExpenseGroupingFieldOption.REPORT\\n      }\\n    ];\\n  }\\n\\n  getCCCExpenseGroupingDateOptions(): Sage300ExportSettingFormOption[] {\\n    return [\\n      {\\n        label: \'Card Transaction Post date\',\\n        value: Sage300ExpenseDate.POSTED_AT\\n      },\\n      {\\n        label: \'Last Spent Date\',\\n        value: Sage300ExpenseDate.LAST_SPENT_AT\\n      }\\n    ];\\n  }\\n\\n  getReimbursableExpenseGroupingDateOptions(): Sage300ExportSettingFormOption[] {\\n    return [\\n      {\\n        label: \'Current Date\',\\n        value: Sage300ExpenseDate.CURRENT_DATE\\n      },\\n      {\\n        label: \'Spent Date\',\\n        value: Sage300ExpenseDate.SPENT_AT\\n      },\\n      {\\n        label: \'Last Spent Date\',\\n        value: Sage300ExpenseDate.LAST_SPENT_AT\\n      }\\n    ];\\n  }\\n\\n  getExpensesExportTypeOptions(): Sage300ExportSettingFormOption[] {\\n    return [\\n      {\\n        label: \'Accounts Payable Invoice\',\\n        value: Sage300ExportType.PURCHASE_INVOICE\\n      },\\n      {\\n        label: \'Direct Cost\',\\n        value: Sage300ExportType.DIRECT_COST\\n      }\\n    ];\\n  }\\n\\n  getReimbursableExpenseState(): Sage300ExportSettingFormOption[] {\\n    return [\\n      {\\n        label: \'Processing\',\\n        value: ExpenseState.PAYMENT_PROCESSING\\n      },\\n      {\\n        label: \'Closed\',\\n        value: ExpenseState.PAID\\n      }\\n    ];\\n  }\\n\\n  getCCCExpenseState(): Sage300ExportSettingFormOption[] {\\n    return [\\n      {\\n        label: \'Approved\',\\n        value: CCCExpenseState.APPROVED\\n      },\\n      {\\n        label: \'Closed\',\\n        value: CCCExpenseState.PAID\\n      }\\n    ];\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"Sage300HelperService","id":"injectable-Sage300HelperService-e5f9167ba16a7454143faea1a18ab5b50f7196054cb643950d79ee16939d615fbd01bfe2e01ca6453ffb0c90cb56efcaa2bd2dc48a0c863850581b8106b6302d","file":"src/app/core/services/sage300/sage300-helper/sage300-helper.service.ts","properties":[],"methods":[{"name":"importAttributes","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { Sage300MappingService } from \'../sage300-mapping/sage300-mapping.service\';\\nimport { IntegrationsToastService } from \'../../common/integrations-toast.service\';\\nimport { ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class Sage300HelperService {\\n\\n  constructor(\\n    private workspaceService: WorkspaceService,\\n    private mappingService: Sage300MappingService,\\n    private toastService: IntegrationsToastService\\n  ) { }\\n\\n  importAttributes(isRefresh: boolean): void {\\n    this.workspaceService.importFyleAttributes(isRefresh).subscribe();\\n    this.mappingService.importSage300Attributes(isRefresh).subscribe();\\n    this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Refreshing data dimensions from Sage 300 CRE\');\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"Sage300MappingService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"Sage300MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"Sage300ImportSettingsService","id":"injectable-Sage300ImportSettingsService-ec0ab6fdf833d489c30df5e21829654749d7fd78b2961e64c0d3e3cf0faa149bdcf23f5e21fca6db53504a83012ec7d6a34fdcdca039a8f72d7e9ce733fcff8f","file":"src/app/core/services/sage300/sage300-configuration/sage300-import-settings.service.ts","properties":[],"methods":[{"name":"getSage300ImportSettings","args":[],"optional":false,"returnType":"Observable<Sage300ImportSettingGet>","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: sage300ImportSettingGetCache}"}],"modifierKind":[170]},{"name":"postImportSettings","args":[{"name":"importSettingsPayload","type":"Sage300ImportSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Sage300ImportSettingGet>","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: sage300ImportSettingGetCache}"}],"modifierKind":[170],"jsdoctags":[{"name":"importSettingsPayload","type":"Sage300ImportSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { HelperService } from \'../../common/helper.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { CacheBuster, Cacheable } from \'ts-cacheable\';\\nimport { Observable } from \'rxjs/internal/Observable\';\\nimport { Subject } from \'rxjs\';\\nimport { Sage300ImportSettingGet, Sage300ImportSettingPost } from \'src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model\';\\n\\nconst sage300ImportSettingGetCache = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class Sage300ImportSettingsService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: sage300ImportSettingGetCache\\n  })\\n  getSage300ImportSettings(): Observable<Sage300ImportSettingGet> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/import_settings/`, {});\\n  }\\n\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: sage300ImportSettingGetCache\\n  })\\n  postImportSettings(importSettingsPayload: Sage300ImportSettingPost): Observable<Sage300ImportSettingGet> {\\n    return this.apiService.put(`/workspaces/${this.workspaceService.getWorkspaceId()}/import_settings/`, importSettingsPayload);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"Sage300MappingService","id":"injectable-Sage300MappingService-4f38f6c2302d117dc7afdb7357b97768b49efd849a4aae3416b10ad2d8daebd7b2ebc0f1d2b70e1b66bfa09e874927d40ba1f6a761e6d3808d665297774c030f","file":"src/app/core/services/sage300/sage300-mapping/sage300-mapping.service.ts","properties":[],"methods":[{"name":"importSage300Attributes","args":[{"name":"refresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"refresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ApiService } from \'../../common/api.service\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\nimport { Observable } from \'rxjs\';\\nimport { HelperService } from \'../../common/helper.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class Sage300MappingService {\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private workspaceService: WorkspaceService,\\n    helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  importSage300Attributes(refresh: boolean): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/sage300/import_attributes/`, {refresh});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"Sage300OnboardingService","id":"injectable-Sage300OnboardingService-9d4033a1d00c0bf6f9520186ab2969a6cd3555a08b6be8a80c91064691b296500746e59dddb20f4295134fd03fa8eabfa9ffb4002e78d2af8e3bcb24fbd6627c","file":"src/app/core/services/sage300/sage300-configuration/sage300-onboarding.service.ts","properties":[{"name":"onboardingState","deprecated":false,"deprecationMessage":"","type":"Sage300OnboardingState","optional":false,"description":"","line":75,"modifierKind":[123]},{"name":"onboardingStateStepMap","defaultValue":"{\\n    [Sage300OnboardingState.CONNECTION]: 1,\\n    [Sage300OnboardingState.EXPORT_SETTINGS]: 2,\\n    [Sage300OnboardingState.IMPORT_SETTINGS]: 3,\\n    [Sage300OnboardingState.ADVANCED_SETTINGS]: 4,\\n    [Sage300OnboardingState.COMPLETE]: 5\\n  }","deprecated":false,"deprecationMessage":"","type":"Sage300OnboardingStepperMap","optional":false,"description":"","line":12},{"name":"onboardingSteps","defaultValue":"[\\n    {\\n      active: false,\\n      completed: false,\\n      number: 1,\\n      step: \'Connect to Sage 300 CRE\',\\n      icon: \'connector\',\\n      route: \'/integrations/sage300/onboarding/connector\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-connector--text\', \'step-name-connector--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 2,\\n      step: \'Export Settings\',\\n      icon: \'export-setting\',\\n      route: \'/integrations/sage300/onboarding/export_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-export--text\', \'step-name-export--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 3,\\n      step: \'Import Settings\',\\n      icon: \'import-setting\',\\n      route: \'/integrations/sage300/onboarding/import_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-import--text\', \'step-name-import--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 4,\\n      step: \'Advanced Settings\',\\n      icon: \'advanced-setting\',\\n      route: \'/integrations/sage300/onboarding/advanced_settings\',\\n      size: {\\n        height: \'20px\',\\n        width: \'20px\'\\n      },\\n      styleClasses: [\'step-name-advanced--text\', \'step-name-advanced--icon\']\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":20,"modifierKind":[123,148]}],"methods":[{"name":"getOnboardingSteps","args":[{"name":"currentStep","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OnboardingStepper[]","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"currentStep","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Sage300OnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { Sage300OnboardingStepperMap } from \'src/app/core/models/sage300/sage300-configuration/sage300-onboarding-stepper/sage300-onboarding-stepper.model\';\\nimport { WorkspaceService } from \'../../common/workspace.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class Sage300OnboardingService {\\n\\n  onboardingStateStepMap: Sage300OnboardingStepperMap = {\\n    [Sage300OnboardingState.CONNECTION]: 1,\\n    [Sage300OnboardingState.EXPORT_SETTINGS]: 2,\\n    [Sage300OnboardingState.IMPORT_SETTINGS]: 3,\\n    [Sage300OnboardingState.ADVANCED_SETTINGS]: 4,\\n    [Sage300OnboardingState.COMPLETE]: 5\\n  };\\n\\n  private readonly onboardingSteps: OnboardingStepper[] = [\\n    {\\n      active: false,\\n      completed: false,\\n      number: 1,\\n      step: \'Connect to Sage 300 CRE\',\\n      icon: \'connector\',\\n      route: \'/integrations/sage300/onboarding/connector\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-connector--text\', \'step-name-connector--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 2,\\n      step: \'Export Settings\',\\n      icon: \'export-setting\',\\n      route: \'/integrations/sage300/onboarding/export_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-export--text\', \'step-name-export--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 3,\\n      step: \'Import Settings\',\\n      icon: \'import-setting\',\\n      route: \'/integrations/sage300/onboarding/import_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      },\\n      styleClasses: [\'step-name-import--text\', \'step-name-import--icon\']\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 4,\\n      step: \'Advanced Settings\',\\n      icon: \'advanced-setting\',\\n      route: \'/integrations/sage300/onboarding/advanced_settings\',\\n      size: {\\n        height: \'20px\',\\n        width: \'20px\'\\n      },\\n      styleClasses: [\'step-name-advanced--text\', \'step-name-advanced--icon\']\\n    }\\n  ];\\n\\n  private onboardingState: Sage300OnboardingState;\\n\\n  constructor(\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  getOnboardingSteps(currentStep: string): OnboardingStepper[] {\\n    this.onboardingState = this.workspaceService.getOnboardingState();\\n    this.onboardingSteps.forEach(step => {\\n      if (step.step.toLowerCase() === currentStep.toLowerCase()) {\\n        step.active = true;\\n      } else {\\n        step.active = false;\\n      }\\n    });\\n\\n    for (let index = this.onboardingStateStepMap[this.onboardingState] - 1; index > 0; index--) {\\n      this.onboardingSteps[index - 1].completed = true;\\n    }\\n\\n    return this.onboardingSteps;\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":75,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"SiAdvancedSettingService","id":"injectable-SiAdvancedSettingService-729cab36a16d78215b08e4532dc7da0f7a59fead8f539fb458258e93ce29f38810407bb00ecf492f9a4cae292dff481c3acc97ada6e2090420ba621a982b0948","file":"src/app/core/services/si/si-configuration/si-advanced-setting.service.ts","properties":[],"methods":[{"name":"deleteExpenseFilter","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<SkipExport>","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAdditionalEmails","args":[],"optional":false,"returnType":"Observable<EmailOption[]>","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":""},{"name":"getAdvancedSettings","args":[],"optional":false,"returnType":"Observable<AdvancedSettingsGet>","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":""},{"name":"getExpenseFilter","args":[],"optional":false,"returnType":"Observable<ExpenseFilterResponse>","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""},{"name":"getFyleCustomFields","args":[],"optional":false,"returnType":"Observable<ConditionField[]>","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""},{"name":"postAdvancedSettings","args":[{"name":"advancedSettingsPayload","type":"AdvancedSettingsPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<AdvancedSettingsGet>","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"advancedSettingsPayload","type":"AdvancedSettingsPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postExpenseFilter","args":[{"name":"skipExport","type":"SkipExport","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<SkipExport>","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"skipExport","type":"SkipExport","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { SiApiService } from \'../si-core/si-api.service\';\\nimport { SiWorkspaceService } from \'../si-core/si-workspace.service\';\\nimport { Observable } from \'rxjs\';\\nimport { AdvancedSettingsGet, AdvancedSettingsPost, ConditionField, ExpenseFilterResponse, SkipExport } from \'src/app/core/models/si/si-configuration/advanced-settings.model\';\\nimport { EmailOption } from \'src/app/core/models/bamboo-hr/bamboo-hr.model\';\\nimport { StorageService } from \'../../common/storage.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SiAdvancedSettingService {\\n\\n  constructor(\\n    private apiService: SiApiService,\\n    private storageService: StorageService,\\n    private workspaceService: SiWorkspaceService\\n  ) { }\\n\\n  getFyleCustomFields(): Observable<ConditionField[]> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/fyle/custom_fields/`, {});\\n  }\\n\\n  postExpenseFilter(skipExport: SkipExport): Observable<SkipExport> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/fyle/expense_filters/`, skipExport);\\n  }\\n\\n  getExpenseFilter(): Observable<ExpenseFilterResponse> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/fyle/expense_filters/`, {});\\n  }\\n\\n  deleteExpenseFilter(rank: number): Observable<SkipExport> {\\n    return this.apiService.delete(`/workspaces/${this.workspaceService.getWorkspaceId()}/fyle/expense_filters/`, { rank });\\n  }\\n\\n  getAdvancedSettings(): Observable<AdvancedSettingsGet>{\\n    return this.apiService.get(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/advanced_settings/`, {});\\n  }\\n\\n  postAdvancedSettings(advancedSettingsPayload: AdvancedSettingsPost): Observable<AdvancedSettingsGet> {\\n    return this.apiService.put(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/advanced_settings/`, advancedSettingsPayload);\\n  }\\n\\n  getAdditionalEmails(): Observable<EmailOption[]> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/admins/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"SiApiService","id":"injectable-SiApiService-ec65f4d8429eaf50438f5fa94d00818d0d02878b608697fb53aa7791d675b8995805eeb93d77af488e4d1c0c00dbe839599fbe983751974e20d60aadf4c7a4ec","file":"src/app/core/services/si/si-core/si-api.service.ts","properties":[],"methods":[{"name":"delete","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"get","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"apiParams","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiParams","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleError","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""},{"name":"httpMethod","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"httpMethod","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"patch","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"post","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"put","args":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":""},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"endpoint","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"body","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from \'@angular/common/http\';\\nimport { Injectable } from \'@angular/core\';\\nimport { catchError, Observable } from \'rxjs\';\\nimport { throwError } from \'rxjs\';\\nimport { environment } from \'src/environments/environment\';\\n\\nconst API_BASE_URL = environment.si_api_url;\\n\\nconst httpOptions = {\\n  headers: new HttpHeaders({\\n    \'Content-Type\': \'application/json\'\\n  }),\\n  body: {}\\n};\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SiApiService {\\n\\n  constructor(private http: HttpClient) { }\\n\\n\\n  private handleError(error: HttpErrorResponse, httpMethod: string) {\\n    if (error.error instanceof ErrorEvent) {\\n      console.error(\'An error occurred:\', error.error.message);\\n    } else {\\n      if (error.status >= 500 && httpMethod === \'GET\') {\\n        console.error(\\n          `Backend returned code ${error.status}, ` + `body was: ${JSON.stringify(error.error)}`\\n        );\\n      } else if (error.status >= 400 && httpMethod === \'POST\') {\\n        console.error(\\n          `Backend returned code ${error.status}, ` + `body was: ${JSON.stringify(error.error)}`\\n        );\\n      }\\n    }\\n    return throwError(error);\\n  }\\n\\n  // Having any here is ok\\n  post(endpoint: string, body: {}): Observable<any> {\\n    return this.http\\n      .post(\\n        API_BASE_URL + endpoint,\\n        body,\\n        httpOptions\\n      )\\n      .pipe(catchError(error => {\\n        return this.handleError(error, \'POST\');\\n      }));\\n  }\\n\\n    // Having any here is ok\\n    put(endpoint: string, body: {}): Observable<any> {\\n      return this.http.put(API_BASE_URL + endpoint, body, httpOptions).pipe(catchError(error => {\\n        return this.handleError(error, \'PUT\');\\n      }));\\n    }\\n\\n  patch(endpoint: string, body: {}): Observable<any> {\\n    return this.http\\n      .patch(\\n        API_BASE_URL + endpoint,\\n        body,\\n        httpOptions\\n      )\\n      .pipe(catchError(error => {\\n        return this.handleError(error, \'PATCH\');\\n      }));\\n  }\\n\\n  // Having any here is ok\\n  get(endpoint: string, apiParams: any): Observable<any> {\\n    let params = new HttpParams();\\n    Object.keys(apiParams).forEach(key => {\\n      params = params.set(key, apiParams[key]);\\n    });\\n    return this.http.get(API_BASE_URL + endpoint, { params }).pipe(catchError(error => {\\n      return this.handleError(error, \'GET\');\\n    }));\\n  }\\n\\n  // Having any here is ok\\n  delete(endpoint: string, body: {}): Observable<any> {\\n    httpOptions.body = body;\\n    return this.http.delete(API_BASE_URL + endpoint, httpOptions).pipe(catchError(error => {\\n      return this.handleError(error, \'DELETE\');\\n    }));\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":""}],"line":19,"jsdoctags":[{"name":"http","type":"HttpClient","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"SiAuthService","id":"injectable-SiAuthService-3ee1f298bc1185e86a92bc8e18acde411ded26c27bbfb1dec35779ed0e89cd0e3b40f161568f138ebfe430be3ef27c40e02c6cd57ee414da2c425724d58cfc18","file":"src/app/core/services/si/si-core/si-auth.service.ts","properties":[],"methods":[{"name":"loginWithAuthCode","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Token>","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"loginWithRefreshToken","args":[{"name":"refresh_token","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Token>","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"refresh_token","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refreshAccessToken","args":[{"name":"refreshToken","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<Token>","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"refreshToken","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { Token } from \'src/app/core/models/misc/token.model\';\\nimport { SiApiService } from \'./si-api.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SiAuthService {\\n\\n  constructor(\\n    private apiService: SiApiService\\n  ) { }\\n\\n  loginWithRefreshToken(refresh_token: string): Observable<Token> {\\n    return this.apiService.post(\'/auth/login_with_refresh_token/\', { refresh_token });\\n  }\\n\\n  loginWithAuthCode(code: string): Observable<Token> {\\n    return this.apiService.post(\'/auth/login/\', { code });\\n  }\\n\\n  refreshAccessToken(refreshToken: string): Observable<Token> {\\n    return this.apiService.post(\'/auth/refresh/\', { refresh_token: refreshToken });\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"SiExportSettingService","id":"injectable-SiExportSettingService-7b4ac73251e3b26c3c62ca6eabb1c10f71f1e76d84e1a85ed29c129fea09dea3df7f8a62ce7e4e8f48f2d33b1bb6f6e476551c508e092c1673a99877a9464163","file":"src/app/core/services/si/si-configuration/si-export-setting.service.ts","properties":[],"methods":[{"name":"getExportSettings","args":[],"optional":false,"returnType":"Observable<ExportSettingGet>","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""},{"name":"postExportSettings","args":[{"name":"exportSettingsPayload","type":"ExportSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<ExportSettingGet>","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportSettingsPayload","type":"ExportSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { SiWorkspaceService } from \'../si-core/si-workspace.service\';\\nimport { SiApiService } from \'../si-core/si-api.service\';\\nimport { Observable } from \'rxjs\';\\nimport { ExportSettingGet, ExportSettingPost } from \'src/app/core/models/si/si-configuration/export-settings.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SiExportSettingService {\\n\\n  constructor(\\n    private apiService: SiApiService,\\n    private workspaceService: SiWorkspaceService\\n  ) { }\\n\\n  getExportSettings(): Observable<ExportSettingGet>{\\n    return this.apiService.get(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/export_settings/`, {});\\n  }\\n\\n  postExportSettings(exportSettingsPayload: ExportSettingPost): Observable<ExportSettingGet> {\\n    return this.apiService.put(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/export_settings/`, exportSettingsPayload);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"SiImportSettingService","id":"injectable-SiImportSettingService-142fe0e212b30d656168713fe2866dd99defd2e2c52d96c9056cae19e85432987eca2a479a094e961934487e47116c4b2ea5006a32d56ee90d0c79ee31282279","file":"src/app/core/services/si/si-configuration/si-import-setting.service.ts","properties":[],"methods":[{"name":"getImportSettings","args":[],"optional":false,"returnType":"Observable<ImportSettingGet>","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""},{"name":"postImportSettings","args":[{"name":"importSettingsPayload","type":"ImportSettingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<ImportSettingGet>","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"importSettingsPayload","type":"ImportSettingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { SiApiService } from \'../si-core/si-api.service\';\\nimport { SiWorkspaceService } from \'../si-core/si-workspace.service\';\\nimport { Observable } from \'rxjs\';\\nimport { ImportSettingGet, ImportSettingPost, MappingSetting } from \'src/app/core/models/si/si-configuration/import-settings.model\';\\n\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SiImportSettingService {\\n\\n  constructor(\\n    private apiService: SiApiService,\\n    private workspaceService: SiWorkspaceService\\n  ) { }\\n\\n  getImportSettings(): Observable<ImportSettingGet>{\\n    return this.apiService.get(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/import_settings/`, {});\\n  }\\n\\n  postImportSettings(importSettingsPayload: ImportSettingPost): Observable<ImportSettingGet> {\\n    return this.apiService.put(`/v2/workspaces/${this.workspaceService.getWorkspaceId()}/import_settings/`, importSettingsPayload);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"SiMappingsService","id":"injectable-SiMappingsService-7982e649e5193ee000fd1fc1a575fd6f017ef95ee6d435d32916521d4e3d29fe7675af959ecb5071862e7bc412dcc48205b71a7e3fe72784a255b84fa3cf86a8","file":"src/app/core/services/si/si-core/si-mappings.service.ts","properties":[],"methods":[{"name":"getCategoryMappings","args":[{"name":"pageLimit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"pageOffset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"mappingState","type":"MappingState","deprecated":false,"deprecationMessage":""},{"name":"alphabetsFilter","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<CategoryMappingsResponse>","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"pageLimit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageOffset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingState","type":"MappingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"alphabetsFilter","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getConfiguration","args":[],"optional":false,"returnType":"Observable<Configuration>","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":""},{"name":"getEmployeeMappings","args":[{"name":"pageLimit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"pageOffset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"mappingState","type":"MappingState","deprecated":false,"deprecationMessage":""},{"name":"alphabetsFilter","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<EmployeeMappingsResponse>","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"pageLimit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"pageOffset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingState","type":"MappingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"alphabetsFilter","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFyleExpenseAttributes","args":[{"name":"attributeType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"active","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<MappingSource[]>","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"attributeType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"active","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getFyleFields","args":[],"optional":false,"returnType":"Observable<ExpenseField[]>","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""},{"name":"getGroupedDestinationAttributes","args":[{"name":"attributeTypes","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<GroupedDestinationAttribute>","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"attributeTypes","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getMappings","args":[{"name":"mappingState","type":"MappingState","deprecated":false,"deprecationMessage":""},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"destinationType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"alphabetsFilter","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<ExtendedExpenseAttributeResponse>","typeParameters":[],"line":193,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mappingState","type":"MappingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"destinationType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"alphabetsFilter","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getMappingSettings","args":[],"optional":false,"returnType":"Observable<MappingSettingResponse>","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":""},{"name":"getMappingStats","args":[{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"destinationType","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<MappingStats>","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"sourceType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"destinationType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getPaginatedDestinationAttributes","args":[{"name":"attributeType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<PaginatedintacctDestinationAttribute>","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"attributeType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getSageIntacctDestinationAttributes","args":[{"name":"attributeTypes","type":"string | string[]","deprecated":false,"deprecationMessage":""},{"name":"accountType","type":"string","deprecated":false,"deprecationMessage":"","optional":true},{"name":"active","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<IntacctDestinationAttribute[]>","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"attributeTypes","type":"string | string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountType","type":"string","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}},{"name":"active","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getSageIntacctFields","args":[],"optional":false,"returnType":"Observable<ExpenseField[]>","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":""},{"name":"postCategoryMappings","args":[{"name":"mapping","type":"CategoryMappingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<CategoryMapping>","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mapping","type":"CategoryMappingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postEmployeeMappings","args":[{"name":"employeeMapping","type":"EmployeeMappingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<EmployeeMapping>","typeParameters":[],"line":177,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"employeeMapping","type":"EmployeeMappingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postMapping","args":[{"name":"mapping","type":"MappingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<MappingIntacct>","typeParameters":[],"line":210,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mapping","type":"MappingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postMappingSettings","args":[{"name":"mappingSettings","type":"MappingSetting[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<MappingSetting[]>","typeParameters":[],"line":185,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mappingSettings","type":"MappingSetting[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refreshFyleDimensions","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":""},{"name":"refreshSageIntacctDimensions","args":[{"name":"dimensionsToSync","type":"string[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"any","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"dimensionsToSync","type":"string[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"triggerAutoMapEmployees","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":189,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable, from } from \'rxjs\';\\nimport { SiApiService } from \'./si-api.service\';\\nimport { SiWorkspaceService } from \'./si-workspace.service\';\\nimport { ExpenseField } from \'src/app/core/models/si/db/expense-field.model\';\\nimport { Configuration } from \'src/app/core/models/db/configuration.model\';\\nimport { MappingSetting, MappingSettingResponse } from \'src/app/core/models/si/db/mapping-setting.model\';\\nimport { CategoryMappingsResponse } from \'src/app/core/models/si/db/category-mapping-response.model\';\\nimport { EmployeeMapping, EmployeeMappingPost, EmployeeMappingsResponse } from \'src/app/core/models/si/db/employee-mapping.model\';\\nimport { MappingSource } from \'src/app/core/models/si/db/mapping-source.model\';\\nimport { MappingIntacct, MappingPost, MappingStats } from \'src/app/core/models/si/db/mapping.model\';\\nimport { MappingState } from \'src/app/core/models/enum/enum.model\';\\nimport { CategoryMapping, CategoryMappingPost } from \'src/app/core/models/si/db/category-mapping.model\';\\nimport { ExtendedExpenseAttributeResponse } from \'src/app/core/models/si/db/expense-attribute.model\';\\nimport { GroupedDestinationAttribute, IntacctDestinationAttribute, PaginatedintacctDestinationAttribute } from \'src/app/core/models/si/db/destination-attribute.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SiMappingsService {\\n\\n  constructor(\\n    private apiService: SiApiService,\\n    private workspaceService: SiWorkspaceService\\n  ) { }\\n\\n  refreshSageIntacctDimensions(dimensionsToSync: string[] = []) {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n\\n    return this.apiService.post(`/workspaces/${workspaceId}/sage_intacct/refresh_dimensions/`, {\\n      dimensions_to_sync: dimensionsToSync\\n    });\\n  }\\n\\n  refreshFyleDimensions() {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n\\n    return this.apiService.post(`/workspaces/${workspaceId}/fyle/refresh_dimensions/`, {});\\n  }\\n\\n  getMappingStats(sourceType: string, destinationType: string): Observable<MappingStats> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n\\n    return this.apiService.get(`/workspaces/${workspaceId}/mappings/stats/`, {\\n      source_type: sourceType,\\n      destination_type: destinationType,\\n      app_name: \'INTACCT\'\\n    });\\n  }\\n\\n  getConfiguration(): Observable<Configuration>{\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    return this.apiService.get(`/workspaces/${workspaceId}/configuration/`, {});\\n  }\\n\\n  getSageIntacctFields(): Observable<ExpenseField[]> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n\\n    return this.apiService.get(`/workspaces/${workspaceId}/sage_intacct/sage_intacct_fields/`, {});\\n  }\\n\\n  getFyleFields(): Observable<ExpenseField[]> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n\\n    return this.apiService.get(`/workspaces/${workspaceId}/fyle/fyle_fields/`, {}\\n    );\\n  }\\n\\n  getFyleExpenseAttributes(attributeType: string, active?: boolean): Observable<MappingSource[]> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    const params: {attribute_type: string, active?: boolean} = {\\n      attribute_type: attributeType\\n    };\\n\\n    if (active) {\\n      params.active = active;\\n    }\\n\\n    return this.apiService.get(`/workspaces/${workspaceId}/fyle/expense_attributes/`, params);\\n  }\\n\\n  getPaginatedDestinationAttributes(attributeType: string, value?: string): Observable<PaginatedintacctDestinationAttribute> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    const params: {limit: number, offset: number, attribute_type: string, value?: string} = {\\n      limit: 100,\\n      offset: 0,\\n      attribute_type: attributeType\\n    };\\n\\n    if (value) {\\n      params.value = value;\\n    }\\n\\n    return this.apiService.get(`/workspaces/${workspaceId}/sage_intacct/paginated_destination_attributes/`, params);\\n  }\\n\\n  getSageIntacctDestinationAttributes(attributeTypes: string | string[], accountType?: string, active?: boolean): Observable<IntacctDestinationAttribute[]> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    const params: {attribute_types: string | string[], account_type?: string, active?: boolean} = {\\n      attribute_types: attributeTypes\\n    };\\n\\n    if (accountType) {\\n      params.account_type = accountType;\\n    }\\n    if (active) {\\n      params.active = active;\\n    }\\n\\n    return this.apiService.get(`/workspaces/${workspaceId}/sage_intacct/destination_attributes/`, params);\\n  }\\n\\n  getGroupedDestinationAttributes(attributeTypes: string[]): Observable<GroupedDestinationAttribute> {\\n    return from(this.getSageIntacctDestinationAttributes(attributeTypes).toPromise().then((response: IntacctDestinationAttribute[] | undefined) => {\\n      return response?.reduce((groupedAttributes: GroupedDestinationAttribute | any, attribute: IntacctDestinationAttribute) => {\\n        const group: IntacctDestinationAttribute[] = groupedAttributes[attribute.attribute_type] || [];\\n        group.push(attribute);\\n        groupedAttributes[attribute.attribute_type] = group;\\n\\n        return groupedAttributes;\\n      }, {\\n        ACCOUNT: [],\\n        EXPENSE_TYPE: [],\\n        EXPENSE_PAYMENT_TYPE: [],\\n        VENDOR: [],\\n        EMPLOYEE: [],\\n        CHARGE_CARD_NUMBER: [],\\n        TAX_DETAIL: []\\n      });\\n    }));\\n  }\\n\\n  getCategoryMappings(pageLimit: number, pageOffset: number, sourceType: string, mappingState: MappingState, alphabetsFilter: string): Observable<CategoryMappingsResponse> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    const isMapped: boolean = (mappingState===\'UNMAPPED\' ? false : true);\\n\\n    const params: { limit: number, offset: number, mapped: boolean | MappingState, destination_type: string, mapping_source_alphabets?: string } = {\\n      limit: pageLimit,\\n      offset: pageOffset,\\n      mapped: mappingState===MappingState.ALL ? MappingState.ALL : isMapped,\\n      destination_type: sourceType\\n    };\\n\\n    if (alphabetsFilter && alphabetsFilter !== \'All\') {\\n      params.mapping_source_alphabets = alphabetsFilter;\\n    }\\n\\n    return this.apiService.get(\\n      `/workspaces/${workspaceId}/mappings/category_attributes/`, params\\n    );\\n  }\\n\\n  postCategoryMappings(mapping: CategoryMappingPost): Observable<CategoryMapping> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    return this.apiService.post(`/workspaces/${workspaceId}/mappings/category/`, mapping);\\n  }\\n\\n  getEmployeeMappings(pageLimit: number, pageOffset: number, sourceType: string, mappingState: MappingState, alphabetsFilter: string): Observable<EmployeeMappingsResponse> {\\n    const workspaceId = this.workspaceService.getWorkspaceId();\\n    const isMapped: boolean = mappingState===\'UNMAPPED\' ? false : true;\\n    const params: { limit: number, offset: number, mapped: boolean | MappingState, destination_type: string, mapping_source_alphabets?: string } = {\\n      limit: pageLimit,\\n      offset: pageOffset,\\n      mapped: mappingState === MappingState.ALL ? MappingState.ALL : isMapped,\\n      destination_type: sourceType\\n    };\\n\\n    if (alphabetsFilter && alphabetsFilter !== \'All\') {\\n      params.mapping_source_alphabets = alphabetsFilter;\\n    }\\n\\n    return this.apiService.get(\\n      `/workspaces/${workspaceId}/mappings/employee_attributes/`, params\\n    );\\n  }\\n\\n  postEmployeeMappings(employeeMapping: EmployeeMappingPost): Observable<EmployeeMapping> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/mappings/employee/`, employeeMapping);\\n  }\\n\\n  getMappingSettings(): Observable<MappingSettingResponse> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/mappings/settings/`, {});\\n  }\\n\\n  postMappingSettings(mappingSettings: MappingSetting[]): Observable<MappingSetting[]> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/mappings/settings/`, mappingSettings);\\n  }\\n\\n  triggerAutoMapEmployees() {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/mappings/auto_map_employees/trigger/`, {});\\n  }\\n\\n  getMappings(mappingState: MappingState, limit: number, offset: number, sourceType: string, destinationType: string, alphabetsFilter: string): Observable<ExtendedExpenseAttributeResponse> {\\n    const isMapped: boolean = (mappingState===\'UNMAPPED\' ? false : true);\\n    const params: any = {\\n      limit,\\n      offset,\\n      mapped: mappingState===MappingState.ALL ? MappingState.ALL : isMapped,\\n      source_type: sourceType.toUpperCase(),\\n      destination_type: destinationType\\n    };\\n\\n    if (alphabetsFilter && alphabetsFilter !== \'All\') {\\n      params.mapping_source_alphabets = alphabetsFilter;\\n    }\\n\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/mappings/expense_attributes/`, params);\\n  }\\n\\n  postMapping(mapping: MappingPost): Observable<MappingIntacct> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/mappings/`, mapping);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"SiUserService","id":"injectable-SiUserService-fde1307aff1b4fcdbc228f544f810c5f3c78060459827f5a1bab2b968aa16cc38f007ef2608ef01213d95e0da330b8183007770f76000c7a009a6a357193b30d","file":"src/app/core/services/si/si-core/si-user.service.ts","properties":[],"methods":[],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SiUserService {\\n\\n  constructor() { }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"extends":[],"type":"injectable"},{"name":"SiWorkspaceService","id":"injectable-SiWorkspaceService-8be03aa08cced6ea84d5af7c3d857667a7c875333593b7bd928307bef3270974f750905dbd9433bd15f3833e6157ba1c57a0692f13c3290d24eafb68f6b25e3f","file":"src/app/core/services/si/si-core/si-workspace.service.ts","properties":[],"methods":[{"name":"getConfiguration","args":[],"optional":false,"returnType":"Observable<Configuration>","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":""},{"name":"getIntacctOnboardingState","args":[],"optional":false,"returnType":"IntacctOnboardingState","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"getWorkspace","args":[{"name":"orgId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<IntacctWorkspace[]>","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":""}],"modifierKind":[170],"jsdoctags":[{"name":"orgId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getWorkspaceId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""},{"name":"postWorkspace","args":[],"optional":false,"returnType":"Observable<IntacctWorkspace>","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":""},{"name":"setIntacctOnboardingState","args":[{"name":"onboardingState","type":"IntacctOnboardingState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"onboardingState","type":"IntacctOnboardingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"syncFyleDimensions","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":""}],"modifierKind":[170]},{"name":"syncIntacctDimensions","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":""}],"modifierKind":[170]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable } from \'rxjs\';\\nimport { IntacctOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { IntacctWorkspace } from \'src/app/core/models/si/db/workspaces.model\';\\nimport { Cacheable } from \'ts-cacheable\';\\nimport { StorageService } from \'../../common/storage.service\';\\nimport { SiApiService } from \'./si-api.service\';\\nimport { Configuration } from \'src/app/core/models/si/db/configuration.model\';\\nimport { HelperService } from \'../../common/helper.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SiWorkspaceService {\\n\\n  constructor(\\n    private storageService: StorageService,\\n    private apiService: SiApiService\\n  ) {\\n  }\\n\\n  @Cacheable()\\n  syncFyleDimensions() {\\n    return this.apiService.post(`/workspaces/${this.getWorkspaceId()}/fyle/sync_dimensions/`, {});\\n  }\\n\\n  @Cacheable()\\n  syncIntacctDimensions() {\\n    return this.apiService.post(`/workspaces/${this.getWorkspaceId()}/sage_intacct/sync_dimensions/`, {});\\n  }\\n\\n  @Cacheable()\\n  getWorkspace(orgId: string): Observable<IntacctWorkspace[]> {\\n    return this.apiService.get(\'/workspaces/\', {org_id: orgId});\\n  }\\n\\n  postWorkspace(): Observable<IntacctWorkspace> {\\n    return this.apiService.post(\'/workspaces/\', {});\\n  }\\n\\n  getWorkspaceId(): string {\\n    return this.storageService.get(\'si.workspaceId\');\\n  }\\n\\n  setIntacctOnboardingState(onboardingState: IntacctOnboardingState): void {\\n    return this.storageService.set(\'si.onboardingState\', onboardingState);\\n  }\\n\\n  getIntacctOnboardingState(): IntacctOnboardingState {\\n    const onboardingState = this.storageService.get(\'si.onboardingState\');\\n    return onboardingState ? onboardingState : IntacctOnboardingState.CONNECTION;\\n  }\\n\\n  getConfiguration(): Observable<Configuration> {\\n    return this.apiService.get(`/workspaces/${this.getWorkspaceId()}/configuration/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"SiApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"SkipExportService","id":"injectable-SkipExportService-a647a40b9f2929846033a8459b346db5ccc59fc79c9dadcc55d0c25a964d57c3121bc68f00a693f360663f561a4c010bcab0b8e99bea96635c69e0655c01b412","file":"src/app/core/services/common/skip-export.service.ts","properties":[],"methods":[{"name":"deleteExpenseFilter","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAdminEmail","args":[],"optional":false,"returnType":"Observable<EmailOption[]>","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":""},{"name":"getExpenseFields","args":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"Observable<ConditionField[]>","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"version","type":"","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getExpenseFilter","args":[],"optional":false,"returnType":"Observable<ExpenseFilterResponse>","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":""},{"name":"postExpenseFilter","args":[{"name":"expenseFilter","type":"ExpenseFilterPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<ExpenseFilter>","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expenseFilter","type":"ExpenseFilterPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { WorkspaceService } from \'./workspace.service\';\\nimport { ApiService } from \'./api.service\';\\nimport { HelperService } from \'./helper.service\';\\nimport { Observable } from \'rxjs\';\\nimport { ConditionField, EmailOption, ExpenseFilterResponse, ExpenseFilterPost, ExpenseFilter } from \'../../models/common/advanced-settings.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class SkipExportService {\\n\\n  constructor(\\n    private workspaceService: WorkspaceService,\\n    private apiService: ApiService,\\n    private helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n  }\\n\\n  getExpenseFields(version?: \'v1\'): Observable<ConditionField[]> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/fyle/${version === \'v1\' ? \'custom_fields\': \'expense_fields\'}/`, {});\\n  }\\n\\n  getAdminEmail(): Observable<EmailOption[]> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/admin`, {});\\n  }\\n\\n  getExpenseFilter(): Observable<ExpenseFilterResponse> {\\n    return this.apiService.get(`/workspaces/${this.workspaceService.getWorkspaceId()}/fyle/expense_filters/`, {});\\n  }\\n\\n  postExpenseFilter(expenseFilter: ExpenseFilterPost): Observable<ExpenseFilter> {\\n    return this.apiService.post(`/workspaces/${this.workspaceService.getWorkspaceId()}/fyle/expense_filters/`, expenseFilter);\\n  }\\n\\n  deleteExpenseFilter(rank: number): Observable<{}> {\\n    return this.apiService.delete(`/workspaces/${this.workspaceService.getWorkspaceId()}/fyle/expense_filters/`, { rank });\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"StorageService","id":"injectable-StorageService-f656073d9994a11f0a046a503cc977d00fd2654e26403b0f5934999da3ee6d3187d1476e7489cdce70f04910586fecefa876d7198033f96cbe2b52b399536fc5","file":"src/app/core/services/common/storage.service.ts","properties":[],"methods":[{"name":"get","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"remove","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"set","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""},{"name":"data","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"data","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class StorageService {\\n\\n  constructor() { }\\n\\n\\n  // Having any here is okay, since we store different types of data in localstorage\\n  set(key: string, data: any): void {\\n    localStorage.setItem(key, JSON.stringify(data));\\n  }\\n\\n  // Having any here is okay, since we get different types of data in localstorage\\n  get(key: string) {\\n    const stringifiedItem = localStorage.getItem(key);\\n    return stringifiedItem ? JSON.parse(stringifiedItem) : null;\\n\\n  }\\n\\n  remove(key: string): void {\\n    localStorage.removeItem(key);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":6},"extends":[],"type":"injectable"},{"name":"TrackingService","id":"injectable-TrackingService-b5c6bcbdb3dabd92774dd6ee351b704f007f67049a78393c9ac4e4a0dee3187084df49cbbc49279346294ced5e73da45645b36437c6e0a9dd81da15a01487b70","file":"src/app/core/services/integration/tracking.service.ts","properties":[{"name":"identityEmail","deprecated":false,"deprecationMessage":"","type":"string | undefined","optional":false,"description":"","line":23,"modifierKind":[123]}],"methods":[{"name":"eventTrack","args":[{"name":"action","type":"string","deprecated":false,"deprecationMessage":""},{"name":"properties","type":"any","deprecated":false,"deprecationMessage":"","defaultValue":"{}"}],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"action","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"properties","type":"any","deprecated":false,"deprecationMessage":"","defaultValue":"{}","tagName":{"text":"param"}}]},{"name":"flattenObject","args":[{"name":"ob","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"ob","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"intacctUpdateEvent","args":[{"name":"eventName","type":"IntacctUpdateEvent","deprecated":false,"deprecationMessage":""},{"name":"additionalProperties","type":"Partial<UpdateIntacctEventAdditionalProperty> | void","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"eventName","type":"IntacctUpdateEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"additionalProperties","type":"Partial<UpdateIntacctEventAdditionalProperty> | void","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"integrationsOnboardingCompletion","args":[{"name":"eventName","type":"IntacctOnboardingState","deprecated":false,"deprecationMessage":""},{"name":"stepNumber","type":"number","deprecated":false,"deprecationMessage":""},{"name":"additionalProperties","type":"LocationEntityPost | ExportSettingPost | ImportSettingPost | AdvancedSettingsPost | void","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"eventName","type":"IntacctOnboardingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"stepNumber","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"additionalProperties","type":"LocationEntityPost | ExportSettingPost | ImportSettingPost | AdvancedSettingsPost | void","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onClickEvent","args":[{"name":"eventName","type":"ClickEvent","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"eventName","type":"ClickEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onDateFilter","args":[{"name":"properties","type":"literal type","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"properties","type":"literal type","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onErrorPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":""},{"name":"onErrorResolve","args":[{"name":"properties","type":"ResolveMappingErrorProperty","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"properties","type":"ResolveMappingErrorProperty","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onMappingsAlphabeticalFilter","args":[{"name":"properties","type":"MappingAlphabeticalFilterAdditionalProperty","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"properties","type":"MappingAlphabeticalFilterAdditionalProperty","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOnboardingStepCompletion","args":[{"name":"eventName","type":"QBDOnboardingState | Sage300OnboardingState | BusinessCentralOnboardingState","deprecated":false,"deprecationMessage":""},{"name":"stepNumber","type":"number","deprecated":false,"deprecationMessage":""},{"name":"additionalProperties","type":"QBDExportSettingPost | QBDFieldMappingPost | QBDAdvancedSettingsPost | void | Sage300ExportSettingPost | Sage300ImportSettingPost | Sage300AdvancedSettingPost | BusinessCentralExportSettingPost | BusinessCentralImportSettingsPost | BusinessCentralAdvancedSettingsPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"eventName","type":"QBDOnboardingState | Sage300OnboardingState | BusinessCentralOnboardingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"stepNumber","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"additionalProperties","type":"QBDExportSettingPost | QBDFieldMappingPost | QBDAdvancedSettingsPost | void | Sage300ExportSettingPost | Sage300ImportSettingPost | Sage300AdvancedSettingPost | BusinessCentralExportSettingPost | BusinessCentralImportSettingsPost | BusinessCentralAdvancedSettingsPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onOpenLandingPage","args":[{"name":"email","type":"string | undefined","deprecated":false,"deprecationMessage":""},{"name":"orgId","type":"number","deprecated":false,"deprecationMessage":""},{"name":"orgName","type":"string","deprecated":false,"deprecationMessage":""},{"name":"fyleOrgId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"email","type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fyleOrgId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onUpdateEvent","args":[{"name":"eventName","type":"UpdateEvent | Sage300UpdateEvent | BusinessCentralUpdateEvent","deprecated":false,"deprecationMessage":""},{"name":"additionalProperties","type":"Partial<UpdateEventAdditionalProperty> | void","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"eventName","type":"UpdateEvent | Sage300UpdateEvent | BusinessCentralUpdateEvent","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"additionalProperties","type":"Partial<UpdateEventAdditionalProperty> | void","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"trackTimeSpent","args":[{"name":"page","type":"Page","deprecated":false,"deprecationMessage":""},{"name":"sessionStartTime","type":"Date","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"page","type":"Page","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sessionStartTime","type":"Date","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { BusinessCentralOnboardingState, BusinessCentralUpdateEvent, ClickEvent, IntacctOnboardingState, IntacctUpdateEvent, Page, QBDOnboardingState, Sage300OnboardingState, Sage300UpdateEvent, UpdateEvent } from \'../../models/enum/enum.model\';\\nimport { MappingAlphabeticalFilterAdditionalProperty, ResolveMappingErrorProperty, UpdateEventAdditionalProperty, UpdateIntacctEventAdditionalProperty } from \'../../models/misc/tracking.model\';\\nimport { QBDAdvancedSettingsPost } from \'../../models/qbd/qbd-configuration/advanced-setting.model\';\\nimport { QBDExportSettingPost } from \'../../models/qbd/qbd-configuration/export-setting.model\';\\nimport { QBDFieldMappingPost } from \'../../models/qbd/qbd-configuration/field-mapping.model\';\\nimport { LocationEntityPost } from \'../../models/si/si-configuration/connector.model\';\\nimport { ExportSettingPost } from \'../../models/si/si-configuration/export-settings.model\';\\nimport { ImportSettingPost } from \'../../models/si/si-configuration/import-settings.model\';\\nimport { AdvancedSettingsPost } from \'../../models/si/si-configuration/advanced-settings.model\';\\nimport { Sage300ExportSettingPost } from \'../../models/sage300/sage300-configuration/sage300-export-setting.model\';\\nimport { Sage300ImportSettingPost } from \'../../models/sage300/sage300-configuration/sage300-import-settings.model\';\\nimport { Sage300AdvancedSettingPost } from \'../../models/sage300/sage300-configuration/sage300-advanced-settings.model\';\\nimport { BusinessCentralExportSettingPost } from \'../../models/business-central/business-central-configuration/business-central-export-setting.model\';\\nimport { BusinessCentralImportSettingsPost } from \'../../models/business-central/business-central-configuration/business-central-import-settings.model\';\\nimport { BusinessCentralAdvancedSettingsPost } from \'../../models/business-central/business-central-configuration/business-central-advanced-settings.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class TrackingService {\\n\\n  private identityEmail: string | undefined;\\n\\n  constructor() { }\\n\\n  private flattenObject(ob: any): any {\\n    const toReturn: any = {};\\n\\n    for (const i in ob) {\\n        if (!ob.hasOwnProperty(i)) {\\n          continue;\\n        }\\n\\n        if ((typeof ob[i]) === \'object\' && ob[i] !== null) {\\n          const flatObject = this.flattenObject(ob[i]);\\n            for (const x in flatObject) {\\n                if (!flatObject.hasOwnProperty(x)) {\\n                  continue;\\n                }\\n\\n                toReturn[i + \'.\' + x] = flatObject[x];\\n            }\\n        } else {\\n            toReturn[i] = ob[i];\\n        }\\n    }\\n    return toReturn;\\n}\\n\\n  get tracking() {\\n    return (window as any).analytics;\\n  }\\n\\n  eventTrack(action: string, properties: any = {}): void {\\n    const flattenedObject = this.flattenObject(properties);\\n    properties = {\\n      ...flattenedObject,\\n      Asset: \'Integration Settings Web\'\\n    };\\n    if (this.tracking) {\\n      this.tracking.track(action, properties);\\n    }\\n  }\\n\\n  onOpenLandingPage(email: string | undefined, orgId: number, orgName: string, fyleOrgId: string): void {\\n    if (this.tracking) {\\n      this.tracking.identify(email, {\\n        orgId,\\n        orgName,\\n        fyleOrgId\\n      });\\n      this.identityEmail = email;\\n    }\\n    this.eventTrack(\'Opened Landing Page\');\\n  }\\n\\n  onClickEvent(eventName: ClickEvent): void {\\n    this.eventTrack(`Click event: ${eventName}`);\\n  }\\n\\n  onErrorPage(): void {\\n    this.eventTrack(\'Error Page shown\');\\n  }\\n\\n  trackTimeSpent(page: Page, sessionStartTime: Date): void {\\n    const differenceInMs = new Date().getTime() - sessionStartTime.getTime();\\n    this.eventTrack(`Time Spent on ${page} page`, {durationInSeconds: differenceInMs / 1000});\\n  }\\n\\n  onOnboardingStepCompletion(eventName: QBDOnboardingState | Sage300OnboardingState | BusinessCentralOnboardingState, stepNumber: number, additionalProperties: QBDExportSettingPost | QBDFieldMappingPost | QBDAdvancedSettingsPost | void | Sage300ExportSettingPost | Sage300ImportSettingPost | Sage300AdvancedSettingPost | BusinessCentralExportSettingPost | BusinessCentralImportSettingsPost |BusinessCentralAdvancedSettingsPost ): void {\\n    this.eventTrack(`Step ${stepNumber} completed: ${eventName}`, additionalProperties);\\n  }\\n\\n  integrationsOnboardingCompletion(eventName: IntacctOnboardingState, stepNumber: number, additionalProperties: LocationEntityPost | ExportSettingPost | ImportSettingPost | AdvancedSettingsPost | void): void {\\n    this.eventTrack(`Step ${stepNumber} completed: ${eventName}`, additionalProperties);\\n  }\\n\\n  onUpdateEvent(eventName: UpdateEvent | Sage300UpdateEvent | BusinessCentralUpdateEvent, additionalProperties: Partial<UpdateEventAdditionalProperty> | void): void {\\n    this.eventTrack(`Update event: ${eventName}`, additionalProperties);\\n  }\\n\\n  intacctUpdateEvent (eventName: IntacctUpdateEvent, additionalProperties: Partial<UpdateIntacctEventAdditionalProperty> | void): void {\\n    this.eventTrack(`Update event: ${eventName}`, additionalProperties);\\n  }\\n\\n  onDateFilter(properties: {filterType: \'existing\' | \'custom\', startDate: Date, endDate: Date}): void {\\n    this.eventTrack(\'Date filter\', properties);\\n  }\\n\\n  onMappingsAlphabeticalFilter(properties: MappingAlphabeticalFilterAdditionalProperty): void {\\n    this.eventTrack(\'Mappings Alphabetical Filter\', properties);\\n  }\\n\\n  onErrorResolve(properties: ResolveMappingErrorProperty): void {\\n    this.eventTrack(\'Resolve Mapping Error\', properties);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":23},"accessors":{"tracking":{"name":"tracking","getSignature":{"name":"tracking","type":"","returnType":"","line":51}}},"extends":[],"type":"injectable"},{"name":"TravelperkService","id":"injectable-TravelperkService-3d7d99bea8523ebcef85595e6f667a83e58881d98ece555508b7925b35396c5d9febe6c645b656dc5ecf0ce4c374179814e73d00e8c8c7bef9c9ae3cf8e13115","file":"src/app/core/services/travelperk/travelperk.service.ts","properties":[{"name":"orgId","defaultValue":"this.orgService.getOrgId()","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15}],"methods":[{"name":"connect","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""},{"name":"orgId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"connectAwsS3","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":""},{"name":"connectTravelperk","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""},{"name":"createFolder","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""},{"name":"disconnect","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":""},{"name":"getConfigurations","args":[],"optional":false,"returnType":"Observable<TravelperkConfiguration>","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"Cacheable","stringifiedArguments":"{cacheBusterObserver: travelPerkConfigurationCache$}"}],"modifierKind":[170]},{"name":"getTravelperkData","args":[],"optional":false,"returnType":"Observable<Travelperk>","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":""},{"name":"patchConfigurations","args":[{"name":"recipe_status","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<TravelperkConfiguration>","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: travelPerkConfigurationCache$}"}],"modifierKind":[170],"jsdoctags":[{"name":"recipe_status","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postConfigurations","args":[],"optional":false,"returnType":"Observable<TravelperkConfiguration>","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","decorators":[{"name":"CacheBuster","stringifiedArguments":"{cacheBusterNotifier: travelPerkConfigurationCache$}"}],"modifierKind":[170]},{"name":"uploadPackage","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { Observable, Subject } from \'rxjs\';\\nimport { Cacheable, CacheBuster } from \'ts-cacheable\';\\nimport { Travelperk, TravelperkConfiguration } from \'../../models/travelperk/travelperk.model\';\\nimport { ApiService } from \'../common/api.service\';\\nimport { OrgService } from \'../org/org.service\';\\n\\nconst travelPerkConfigurationCache$ = new Subject<void>();\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class TravelperkService {\\n\\n  orgId: string = this.orgService.getOrgId();\\n\\n  constructor(\\n    private apiService: ApiService,\\n    private orgService: OrgService\\n  ) { }\\n\\n  createFolder(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/travelperk/folder/`, {});\\n  }\\n\\n  uploadPackage(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/travelperk/packages/`, {});\\n  }\\n\\n  getTravelperkData(): Observable<Travelperk> {\\n    return this.apiService.get(`/orgs/${this.orgId}/travelperk/`, {});\\n  }\\n\\n  connectTravelperk(): Observable<{}>{\\n    return this.apiService.post(`/orgs/${this.orgId}/travelperk/travelperk_connection/`, {});\\n  }\\n\\n  connectAwsS3(): Observable<{}>{\\n    return this.apiService.post(`/orgs/${this.orgId}/travelperk/s3_connection/`, {});\\n  }\\n\\n  @Cacheable({\\n    cacheBusterObserver: travelPerkConfigurationCache$\\n  })\\n  getConfigurations(): Observable<TravelperkConfiguration> {\\n    return this.apiService.get(`/orgs/${this.orgId}/travelperk/configurations/`, {\\n      org_id: this.orgId\\n    });\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: travelPerkConfigurationCache$\\n  })\\n  postConfigurations(): Observable<TravelperkConfiguration> {\\n    return this.apiService.post(`/orgs/${this.orgId}/travelperk/configurations/`, {\\n      org: this.orgId\\n    });\\n  }\\n\\n  @CacheBuster({\\n    cacheBusterNotifier: travelPerkConfigurationCache$\\n  })\\n  patchConfigurations(recipe_status: boolean): Observable<TravelperkConfiguration> {\\n    return this.apiService.patch(`/orgs/${this.orgId}/travelperk/recipe_status/`, {\\n      org_id: this.orgId,\\n      recipe_status: recipe_status\\n    });\\n  }\\n\\n  connect(code: string, orgId: string): Observable<{}> {\\n    return this.apiService.post(`/orgs/${orgId}/travelperk/connect/`, { code });\\n  }\\n\\n  disconnect(): Observable<{}> {\\n    return this.apiService.post(`/orgs/${this.orgId}/travelperk/disconnect/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"UserService","id":"injectable-UserService-cc45545b9b0d33f8f2cba07d7c28eb94f9692aac0a2b7bbd7e005713c3bbe44bd7d0372f498aca173d8fde8034d70ec9c69a818b16d29384102fc1558d32a3e7","file":"src/app/core/services/misc/user.service.ts","properties":[],"methods":[{"name":"getUserProfile","args":[],"optional":false,"returnType":"MinimalUser","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""},{"name":"storeUserProfile","args":[{"name":"userProfile","type":"MinimalUser","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"userProfile","type":"MinimalUser","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { MinimalUser } from \'../../models/db/user.model\';\\nimport { StorageService } from \'../common/storage.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class UserService {\\n\\n  constructor(\\n    private storageService: StorageService\\n  ) { }\\n\\n  storeUserProfile(userProfile: MinimalUser): void {\\n    this.storageService.set(\'user\', userProfile);\\n  }\\n\\n  getUserProfile(): MinimalUser {\\n    return this.storageService.get(\'user\');\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"},{"name":"WindowService","id":"injectable-WindowService-a65209922dae9cfa8988fdb7eb8e1113237e2002f5e0b7f29c553f6d40832ff8472cb5dc4a2ef1b12e53bcd59729bbc18ea6332e32e781edda25d3f5063c0a70","file":"src/app/core/services/common/window.service.ts","properties":[],"methods":[{"name":"getOperatingSystem","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""},{"name":"openInNewTab","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"redirect","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { OperatingSystem } from \'../../models/enum/enum.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class WindowService {\\n\\n  constructor() { }\\n\\n  get nativeWindow(): Window {\\n    return window;\\n  }\\n\\n  redirect(url: string): void {\\n    this.nativeWindow.location.href = url;\\n  }\\n\\n  openInNewTab(url: string): void {\\n    this.nativeWindow.open(url, \'_blank\');\\n  }\\n\\n  getOperatingSystem(): string {\\n    const userAgent = this.nativeWindow.navigator.userAgent;\\n\\n    if (userAgent.includes(OperatingSystem.WIN)) {\\n      return OperatingSystem.WIN;\\n    } else if (userAgent.includes(OperatingSystem.MAC)) {\\n      return OperatingSystem.MAC;\\n    }\\n      return \'\';\\n\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":7},"accessors":{"nativeWindow":{"name":"nativeWindow","getSignature":{"name":"nativeWindow","type":"","returnType":"Window","line":11}}},"extends":[],"type":"injectable"},{"name":"WorkspaceService","id":"injectable-WorkspaceService-240ecf3c5b6f3609c6a1a5e322880a295be3360eca1c45b02f4dd7eab2cb9b1e2ce764389cb71271d742f4bf3203cc4c1a825cf2c61db12cb1384499116e7fec","file":"src/app/core/services/common/workspace.service.ts","properties":[],"methods":[{"name":"getConfiguration","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":""},{"name":"getOnboardingState","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"getWorkspace","args":[{"name":"orgId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"orgId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getWorkspaceGeneralSettings","args":[],"optional":false,"returnType":"Observable<any>","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""},{"name":"getWorkspaceId","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":""},{"name":"importFyleAttributes","args":[{"name":"refresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"refresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postWorkspace","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""},{"name":"setOnboardingState","args":[{"name":"onboardingState","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"onboardingState","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setWorkspaceId","args":[{"name":"workspaceId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"workspaceId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { StorageService } from \'./storage.service\';\\nimport { Observable } from \'rxjs\';\\nimport { AppUrl, BusinessCentralOnboardingState, IntacctOnboardingState, QBDOnboardingState, QBOOnboardingState, Sage300OnboardingState } from \'../../models/enum/enum.model\';\\nimport { ApiService } from \'./api.service\';\\nimport { HelperService } from \'./helper.service\';\\nimport { AppUrlMap } from \'../../models/integrations/integrations.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class WorkspaceService {\\n\\n  constructor(\\n    private storageService: StorageService,\\n    private apiService: ApiService,\\n    private helper: HelperService\\n  ) {\\n    helper.setBaseApiURL();\\n   }\\n\\n  importFyleAttributes(refresh: boolean): Observable<{}> {\\n    return this.apiService.post(`/workspaces/${this.getWorkspaceId()}/fyle/import_attributes/`, {refresh});\\n  }\\n\\n  // The return type is made any intentionally, the caller can specify the return type to be aligned with the app\\n  getWorkspace(orgId: string): any {\\n    return this.apiService.get(\'/workspaces/\', {org_id: orgId});\\n  }\\n\\n  // The return type is made any intentionally, the caller can specify the return type to be aligned with the app\\n  postWorkspace(): any {\\n    return this.apiService.post(\'/workspaces/\', {});\\n  }\\n\\n  getWorkspaceId(): string {\\n    return this.storageService.get(\'workspaceId\');\\n  }\\n\\n  setWorkspaceId(workspaceId: number): void {\\n    this.storageService.set(\'workspaceId\', workspaceId);\\n  }\\n\\n  setOnboardingState(onboardingState: string): void {\\n    this.storageService.set(\'onboarding-state\', onboardingState);\\n  }\\n\\n// The return type is made any intentionally, the caller can specify the return type to be aligned with the app\\n  getOnboardingState(): any {\\n    const appInitialOnboardingState: AppUrlMap = {\\n      [AppUrl.INTACCT]: IntacctOnboardingState.CONNECTION,\\n      [AppUrl.GUSTO]: null,\\n      [AppUrl.SAGE300]: Sage300OnboardingState.CONNECTION,\\n      [AppUrl.BAMBOO_HR]: null,\\n      [AppUrl.QBD]: QBDOnboardingState.CONNECTION,\\n      [AppUrl.TRAVELPERK]: null,\\n      [AppUrl.INTEGRATION]: \'\',\\n      [AppUrl.BUSINESS_CENTRAL]: BusinessCentralOnboardingState.CONNECTION,\\n      [AppUrl.QBO]: QBOOnboardingState.CONNECTION\\n    };\\n    const onboardingState = this.storageService.get(\'onboarding-state\');\\n    return onboardingState ? onboardingState : appInitialOnboardingState[(this.helper.getAppName()) as AppUrl];\\n  }\\n\\n  // The return type is made any intentionally, the caller can specify the return type to be aligned with the app\\n  getConfiguration(): any {\\n    return this.apiService.get(`/workspaces/${this.getWorkspaceId()}/configuration/`, {});\\n  }\\n\\n  getWorkspaceGeneralSettings(): Observable<any> {\\n    return this.apiService.get(`/workspaces/${this.getWorkspaceId()}/settings/general/`, {});\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"apiService","type":"ApiService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"injectable"}],"guards":[{"name":"AuthGuard","id":"injectable-AuthGuard-afab8ab34b04335538b62a0fe3f4e397a25487569f5a132efcf79c91ac7361fdb99bdea2d8666a363ece7c19e4c1ca5834f710d1bd0cfd663622981a2306e46a","file":"src/app/core/guard/auth.guard.ts","properties":[],"methods":[{"name":"canActivate","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { CanActivate, Router } from \'@angular/router\';\\nimport { AuthService } from \'../services/common/auth.service\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class AuthGuard implements CanActivate {\\n\\n  constructor(\\n    private router: Router,\\n    private authService: AuthService\\n  ) { }\\n\\n  canActivate() {\\n    if (!this.authService.isLoggedIn()) {\\n      this.router.navigate([\'/auth\']);\\n      return false;\\n    }\\n\\n    return true;\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""}],"line":8,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"guard"},{"name":"BusinessCentralTokenGuard","id":"injectable-BusinessCentralTokenGuard-7089209a22eb2af3cfc6de7f1ec2e6c6722f668ea06874fa78f43bcdfb8cdc4f53f8d40c53126e55f8150bdb06645718dc543a26a493dbcb120387f79a7db5dd","file":"src/app/core/guard/business-central-token.guard.ts","properties":[],"methods":[{"name":"canActivate","args":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable | Promise | boolean | UrlTree","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \'@angular/router\';\\nimport { Observable, catchError, forkJoin, map, throwError } from \'rxjs\';\\nimport { BusinessCentralConnectorService } from \'../services/business-central/business-central-configuration/business-central-connector.service\';\\nimport { IntegrationsToastService } from \'../services/common/integrations-toast.service\';\\nimport { WorkspaceService } from \'../services/common/workspace.service\';\\nimport { globalCacheBusterNotifier } from \'ts-cacheable\';\\nimport { BusinessCentralOnboardingState, ToastSeverity } from \'../models/enum/enum.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class BusinessCentralTokenGuard implements CanActivate {\\n\\n  constructor(\\n    private businessCentralConnectorService: BusinessCentralConnectorService,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  canActivate(\\n    route: ActivatedRouteSnapshot,\\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\\n      const workspaceId = this.workspaceService.getWorkspaceId();\\n\\n      if (!workspaceId) {\\n        return this.router.navigateByUrl(`integrations/business_central/`);\\n      }\\n\\n      return forkJoin(\\n        [\\n          this.businessCentralConnectorService.getBusinessCentralCredentials()\\n        ]\\n      ).pipe(\\n        map(response => !!response),\\n        catchError(error => {\\n          if (error.status === 400) {\\n            globalCacheBusterNotifier.next();\\n            this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Oops! Your Dynamic 360 Business Central connection expired, please connect again\');\\n\\n            const onboardingState: BusinessCentralOnboardingState = this.workspaceService.getOnboardingState();\\n\\n            if (onboardingState !==  BusinessCentralOnboardingState.COMPLETE) {\\n              return this.router.navigateByUrl(\'integrations/business_central/onboarding/connector\');\\n            }\\n\\n            return this.router.navigateByUrl(\'integrations/business_central/onboarding/landing\');\\n          }\\n\\n          return throwError(error);\\n        })\\n      );\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"businessCentralConnectorService","type":"BusinessCentralConnectorService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"businessCentralConnectorService","type":"BusinessCentralConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"guard"},{"name":"QboTokenGuard","id":"injectable-QboTokenGuard-002b39258086df3c8483e672772faaa7c55075e3904af255195c7f8f39fc7a9bc0a50e5c4df1cba7075e813745ee5f45cda7fab4b91dbe498d950abf59acb877","file":"src/app/core/guard/qbo-token.guard.ts","properties":[],"methods":[{"name":"canActivate","args":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":""},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable | Promise | boolean | UrlTree","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"route","type":"ActivatedRouteSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"state","type":"RouterStateSnapshot","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \'@angular/router\';\\nimport { Observable, catchError, forkJoin, map, throwError } from \'rxjs\';\\nimport { WorkspaceService } from \'../services/common/workspace.service\';\\nimport { QboConnectorService } from \'../services/qbo/qbo-configuration/qbo-connector.service\';\\nimport { globalCacheBusterNotifier } from \'ts-cacheable\';\\nimport { IntegrationsToastService } from \'../services/common/integrations-toast.service\';\\nimport { QBOOnboardingState, ToastSeverity } from \'../models/enum/enum.model\';\\n\\n@Injectable({\\n  providedIn: \'root\'\\n})\\nexport class QboTokenGuard implements CanActivate {\\n\\n  constructor(\\n    private qboConnectorService: QboConnectorService,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  canActivate(\\n    route: ActivatedRouteSnapshot,\\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\\n\\n      const workspaceId = this.workspaceService.getWorkspaceId();\\n\\n      if (!workspaceId) {\\n        return this.router.navigateByUrl(`workspaces`);\\n      }\\n\\n      return forkJoin(\\n        [\\n          this.qboConnectorService.getQBOCredentials(),\\n          this.qboConnectorService.getPreferences()\\n        ]\\n      ).pipe(\\n        map(response => !!response),\\n        catchError(error => {\\n          if (error.status === 400) {\\n            globalCacheBusterNotifier.next();\\n            this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Oops! Your QuickBooks Online connection expired, please connect again\');\\n\\n            const onboardingState: QBOOnboardingState = this.workspaceService.getOnboardingState();\\n\\n            if (onboardingState !== QBOOnboardingState.COMPLETE) {\\n              return this.router.navigateByUrl(\'integrations/qbo/onboarding/connector\');\\n            }\\n\\n            return this.router.navigateByUrl(\'integrations/qbo/onboarding/landing\');\\n          }\\n\\n          return throwError(error);\\n        })\\n      );\\n  }\\n\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"qboConnectorService","type":"QboConnectorService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"qboConnectorService","type":"QboConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"guard"}],"interceptors":[{"name":"JwtInterceptor","id":"injectable-JwtInterceptor-9599954a5a6ac9162788e4f5aee4c901085dac04ceb8ce3b405a79f3b5ff08ccf9860394b3687642c951c5f53bc60bfd97e5a25f3184ffefe11013f6d3e46007","file":"src/app/core/interceptor/jwt.interceptor.ts","properties":[{"name":"refreshTokenInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[123]},{"name":"refreshTokenSubject","defaultValue":"new BehaviorSubject<string | null>(null)","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[123]}],"methods":[{"name":"executeHttpRequest","args":[{"name":"request","type":"HttpRequest<any>","deprecated":false,"deprecationMessage":""},{"name":"next","type":"HttpHandler","deprecated":false,"deprecationMessage":""},{"name":"accessToken","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"request","type":"HttpRequest<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"next","type":"HttpHandler","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accessToken","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAccessToken","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<string | null>","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThis method get current accessToken from Storage, check if this token is expiring or not.\\nIf the token is expiring it will get another accessToken from API and return the new accessToken\\nIf multiple API call initiated then `this.refreshTokenInProgress` will block multiple access_token call\\nReference: https://stackoverflow.com/a/57638101\\n","description":"<p>This method get current accessToken from Storage, check if this token is expiring or not.\\nIf the token is expiring it will get another accessToken from API and return the new accessToken\\nIf multiple API call initiated then <code>this.refreshTokenInProgress</code> will block multiple access_token call\\nReference: <a href=\\"https://stackoverflow.com/a/57638101\\">https://stackoverflow.com/a/57638101</a></p>\\n","modifierKind":[123],"jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleError","args":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<never>","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"error","type":"HttpErrorResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"intercept","args":[{"name":"request","type":"HttpRequest<any>","deprecated":false,"deprecationMessage":""},{"name":"next","type":"HttpHandler","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<HttpEvent<any>>","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"request","type":"HttpRequest<any>","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"next","type":"HttpHandler","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isTokenExpiring","args":[{"name":"accessToken","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"accessToken","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isTokenMandatory","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refreshAccessToken","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Observable<string | null>","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","description":"","rawdescription":"\\n","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport {\\n  HttpRequest,\\n  HttpHandler,\\n  HttpEvent,\\n  HttpInterceptor,\\n  HttpErrorResponse\\n} from \'@angular/common/http\';\\n\\nimport { BehaviorSubject, Observable, of, throwError } from \'rxjs\';\\nimport { catchError, filter, map, switchMap, take } from \'rxjs/operators\';\\nimport { globalCacheBusterNotifier } from \'ts-cacheable\';\\nimport { JwtHelperService } from \'@auth0/angular-jwt\';\\nimport { Token } from \'../models/misc/token.model\';\\nimport { AuthService } from \'../services/common/auth.service\';\\n\\n@Injectable()\\nexport class JwtInterceptor implements HttpInterceptor {\\n\\n  constructor(\\n    private authService: AuthService,\\n    private jwtHelpter: JwtHelperService\\n  ) { }\\n\\n  private refreshTokenInProgress = false;\\n\\n  private refreshTokenSubject = new BehaviorSubject<string | null>(null);\\n\\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\\n    if (this.isTokenMandatory(request.url)) {\\n      return this.getAccessToken(request.url).pipe(\\n        switchMap((accessToken) => {\\n          if (!accessToken) {\\n            return this.handleError({ status: 401, error: \'Unauthorized\' } as HttpErrorResponse);\\n          }\\n          return this.executeHttpRequest(request, next, accessToken);\\n        })\\n      );\\n    }\\n\\n    request = request.clone({ url: request.url });\\n    return next.handle(request);\\n  }\\n\\n  // Certain api\'s do not require token in headers.\\n  private isTokenMandatory(url: string): boolean {\\n    const endpointWithoutToken = url.includes(\'/api/auth/\') || url.includes(\'/travelperk/connect\');\\n    return !endpointWithoutToken;\\n  }\\n\\n  private executeHttpRequest(request: HttpRequest<any>, next: HttpHandler, accessToken: string) {\\n    request = request.clone({\\n      url: request.url,\\n      headers: request.headers.set(\'Authorization\', `Bearer ${accessToken}`)\\n    });\\n    return next.handle(request).pipe(catchError((error: HttpErrorResponse) => this.handleError(error)));\\n  }\\n\\n  /**\\n   * This method get current accessToken from Storage, check if this token is expiring or not.\\n   * If the token is expiring it will get another accessToken from API and return the new accessToken\\n   * If multiple API call initiated then `this.refreshTokenInProgress` will block multiple access_token call\\n   * Reference: https://stackoverflow.com/a/57638101\\n   */\\n  private getAccessToken(url: string): Observable<string | null> {\\n    const accessToken = this.authService.getAccessToken();\\n\\n    if (accessToken && !this.isTokenExpiring(accessToken)) {\\n      return of(accessToken);\\n    }\\n\\n    if (!this.refreshTokenInProgress) {\\n      this.refreshTokenInProgress = true;\\n      this.refreshTokenSubject.next(null);\\n      return this.refreshAccessToken(url).pipe(\\n        switchMap((newAccessToken) => {\\n          this.refreshTokenInProgress = false;\\n          this.refreshTokenSubject.next(newAccessToken);\\n          return of(newAccessToken);\\n        })\\n      );\\n    }\\n\\n    return this.refreshTokenSubject.pipe(\\n      filter((result) => result !== null),\\n      take(1),\\n      map(() => this.authService.getAccessToken())\\n    );\\n  }\\n\\n  private isTokenExpiring(accessToken: string): boolean {\\n    try {\\n      const expiryDate = this.jwtHelpter.getTokenExpirationDate(accessToken);\\n      const now = new Date().toISOString();\\n      const isoExpiredDate = expiryDate ? expiryDate.toISOString() : now;\\n\\n      const differenceSeconds = new Date(isoExpiredDate).valueOf() - new Date(now).valueOf();\\n      const maxRefreshDifferenceSeconds = 2 * 60;\\n\\n      return differenceSeconds < maxRefreshDifferenceSeconds;\\n    } catch (err) {\\n      return true;\\n    }\\n  }\\n\\n  private refreshAccessToken(url: string): Observable<string | null> {\\n    const refreshToken = this.authService.getRefreshToken();\\n\\n    if (refreshToken) {\\n      return this.authService.refreshAccessToken(refreshToken).pipe(\\n        catchError((error) => this.handleError(error)),\\n        map((token: Token) => this.authService.updateAccessToken(token.access_token))\\n      );\\n    }\\n\\n    return of(null);\\n  }\\n\\n  private handleError(error: HttpErrorResponse): Observable<never> {\\n    if (error.status === 401) {\\n      this.authService.logout();\\n      globalCacheBusterNotifier.next();\\n    }\\n    return throwError(error);\\n  }\\n}\\n","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"jwtHelpter","type":"JwtHelperService","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"jwtHelpter","type":"JwtHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"type":"interceptor"}],"classes":[{"name":"AccountingExportModel","id":"class-AccountingExportModel-2c1527c9453b1f6140475fb479c5dbd80b4eadd3fe8b41f468a5f57ad8c0f39dc2283f96b49dd581062efb31431f9391a14abca53ef232171fb454e4ac9cdb60","file":"src/app/core/models/db/accounting-export.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { SnakeCaseToSpaceCasePipe } from \\"src/app/shared/pipes/snake-case-to-space-case.pipe\\";\\nimport { AccountingExportStatus, AccountingExportType, FundSource, FyleReferenceType } from \\"../enum/enum.model\\";\\nimport { ExpenseGroupDescription, SkipExportList, SkipExportLog } from \\"../si/db/expense-group.model\\";\\nimport { Expense } from \\"../si/db/expense.model\\";\\nimport { TitleCasePipe } from \\"@angular/common\\";\\nimport { ExportLogService } from \\"../../services/common/export-log.service\\";\\nimport { DateFilter } from \\"../qbd/misc/date-filter.model\\";\\nimport { environment } from \\"src/environments/environment\\";\\nimport { ExpenseGroup } from \\"./expense-group.model\\";\\n\\nexport interface AccountingExportCount {\\n    count: number;\\n}\\n\\nexport interface ExportableAccountingExport {\\n  exportable_accounting_export_ids: number[];\\n}\\n\\nexport interface AccountingExportList {\\n    exportedAt: Date;\\n    employee: [string, string];\\n    expenseType: string;\\n    referenceNumber: string;\\n    exportedAs: string;\\n    integrationUrl: string;\\n    fyleUrl: string;\\n    expenses: Expense[];\\n  }\\n\\nexport interface AccountingExport {\\n    id: number;\\n    type: string;\\n    description: ExpenseGroupDescription;\\n    status: AccountingExportStatus;\\n    mapping_errors: {\\n        type: string;\\n        value: string;\\n    }[] | null;\\n    response: Record<string, unknown>;\\n    created_at: Date;\\n    updated_at: Date;\\n    exported_at: Date;\\n    workspace: number;\\n    export_url: string;\\n    expenses: Expense[];\\n    fund_source: FundSource;\\n}\\n\\nexport type AccountingExportGetParam = {\\n    type__in: string[],\\n    status__in: string[],\\n    id__in?: number[],\\n    limit: number,\\n    offset: number,\\n    exported_at__lte?: string,\\n    exported_at__gte?: string\\n}\\n\\nexport class AccountingExportModel {\\n\\n  static getDateOptions(): DateFilter[] {\\n    const currentDateTime = new Date();\\n    const dateOptions: DateFilter[] = [\\n      {\\n        dateRange: \'This Month\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), 1),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'This Week\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), currentDateTime.getDate() - currentDateTime.getDay()),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'Today\',\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: currentDateTime.toLocaleDateString(),\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      }\\n    ];\\n\\n    return dateOptions;\\n  }\\n\\n  static getFyleExpenseUrl(expense_id: string): string {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}`;\\n    return url;\\n  }\\n\\n  static getfilteredAccountingExports(query: string, group: AccountingExportList): boolean {\\n    const employeeName = group.employee ? group.employee[0] : \'\';\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.referenceNumber ? group.referenceNumber : \'\';\\n\\n    return (\\n      employeeName.toLowerCase().includes(query) ||\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static getReferenceType(description: ExpenseGroupDescription): FyleReferenceType {\\n    let referenceType = FyleReferenceType.REPORT_ID;\\n\\n    if (FyleReferenceType.EXPENSE in description) {\\n      referenceType = FyleReferenceType.EXPENSE;\\n    } else if (FyleReferenceType.REPORT_ID in description) {\\n      referenceType = FyleReferenceType.REPORT_ID;\\n    } else if (FyleReferenceType.PAYMENT in description) {\\n      referenceType = FyleReferenceType.PAYMENT;\\n    }\\n\\n    return referenceType;\\n  }\\n\\n  static formatExportType(exportType: string): string {\\n    if (exportType.startsWith(\'CREATING_\')) {\\n      exportType = exportType.substring(\'CREATING_\'.length);\\n    }\\n    exportType = new SnakeCaseToSpaceCasePipe().transform(exportType);\\n    return new TitleCasePipe().transform(exportType);\\n  }\\n\\n  static getFyleReferenceNumber(referenceType: string, expense: Expense): string {\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      return expense.expense_number;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      return expense.payment_number;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      return expense.claim_number;\\n    }\\n    return expense.claim_number;\\n  }\\n\\n  static generateFyleUrl(expense: Expense, referenceType: FyleReferenceType, org_id: string) : string {\\n    let url = `${environment.fyle_app_url}/app/`;\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      url += `admin/#/view_expense/${expense.expense_id}`;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      url += `admin/#/reports/${expense.report_id}`;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      url += `admin/#/settlements/${expense.settlement_id}`;\\n    }\\n    return `${url}?org_id=${org_id}`;\\n  }\\n\\n  static parseAPIResponseToExportLog(accountingExport: AccountingExport, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(accountingExport.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, accountingExport.expenses[0]);\\n    return {\\n      exportedAt: accountingExport.exported_at,\\n      employee: [accountingExport.expenses[0].employee_name, accountingExport.description.employee_email],\\n      expenseType: accountingExport.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: this.formatExportType(accountingExport.type),\\n      fyleUrl: this.generateFyleUrl(accountingExport.expenses[0], referenceType, org_id),\\n      integrationUrl: accountingExport.export_url,\\n      expenses: accountingExport.expenses\\n    };\\n  }\\n\\n  static generateExportTypeAndId(expenseGroup: ExpenseGroup) {\\n    if (!expenseGroup.response_logs) {\\n      return [null, null, null];\\n    }\\n    let exportRedirection = null;\\n    let exportType = null;\\n    let exportId = null;\\n\\n    if (\'Bill\' in expenseGroup.response_logs && expenseGroup.response_logs.Bill) {\\n      exportRedirection = \'bill\';\\n      exportType = exportRedirection;\\n      exportId = expenseGroup.response_logs.Bill.Id;\\n    } else if (\'JournalEntry\' in expenseGroup.response_logs && expenseGroup.response_logs.JournalEntry) {\\n      exportRedirection = \'journal\';\\n      exportType = \'Journal Entry\';\\n      exportId = expenseGroup.response_logs.JournalEntry.Id;\\n    } else if (\'Purchase\' in expenseGroup.response_logs && expenseGroup.response_logs.Purchase) {\\n      exportId = expenseGroup.response_logs.Purchase.Id;\\n      if (expenseGroup.response_logs.Purchase.PaymentType === \'Check\') {\\n        exportRedirection = \'check\';\\n        exportType = exportRedirection;\\n      } else {\\n        exportRedirection = \'expense\';\\n        if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && !expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Purchase\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Credit\';\\n          exportRedirection = \'creditcardcredit\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'Cash\') {\\n          exportType = \'Debit Card Expense\';\\n          exportRedirection = \'expense\';\\n        } else {\\n          exportType = \'expense\';\\n        }\\n      }\\n    }\\n\\n    return [exportRedirection, exportId, exportType];\\n  }\\n\\n  static parseExpenseGroupAPIResponseToExportLog(expenseGroup: ExpenseGroup, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(expenseGroup.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, expenseGroup.expenses[0]);\\n\\n    const [type, id, exportType] = this.generateExportTypeAndId(expenseGroup);\\n\\n    return {\\n      exportedAt: expenseGroup.exported_at,\\n      employee: [expenseGroup.expenses[0].employee_name, expenseGroup.description.employee_email],\\n      expenseType: expenseGroup.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: exportType,\\n      fyleUrl: this.generateFyleUrl(expenseGroup.expenses[0], referenceType, org_id),\\n      integrationUrl: `${environment.qbo_app_url}/app/${type}?txnId=${id}`,\\n      expenses: expenseGroup.expenses\\n    };\\n  }\\n}\\n\\nexport class SkippedAccountingExportModel {\\n  static getfilteredSkippedAccountingExports(query: string, group: SkipExportList): boolean {\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.claim_number ? group.claim_number : \'\';\\n\\n    return (\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static parseAPIResponseToSkipExportList(skippedExpense: SkipExportLog): SkipExportList {\\n    return {\\n      updated_at: skippedExpense.updated_at,\\n      claim_number: skippedExpense.claim_number,\\n      employee: [skippedExpense.employee_name, skippedExpense.employee_email],\\n      expenseType: skippedExpense.fund_source === \'PERSONAL\' ? \'Reimbursable\' : \'Corporate Card\',\\n      fyleUrl: `${environment.fyle_app_url}/app/admin/#/view_expense/${skippedExpense.expense_id}?org_id=${skippedExpense.org_id}`\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"formatExportType","args":[{"name":"exportType","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateExportTypeAndId","args":[{"name":"expenseGroup","type":"ExpenseGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":168,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"expenseGroup","type":"ExpenseGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateFyleUrl","args":[{"name":"expense","type":"Expense","deprecated":false,"deprecationMessage":""},{"name":"referenceType","type":"FyleReferenceType","deprecated":false,"deprecationMessage":""},{"name":"org_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"expense","type":"Expense","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"referenceType","type":"FyleReferenceType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"org_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDateOptions","args":[],"optional":false,"returnType":"DateFilter[]","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getfilteredAccountingExports","args":[{"name":"query","type":"string","deprecated":false,"deprecationMessage":""},{"name":"group","type":"AccountingExportList","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"query","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"group","type":"AccountingExportList","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFyleExpenseUrl","args":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFyleReferenceNumber","args":[{"name":"referenceType","type":"string","deprecated":false,"deprecationMessage":""},{"name":"expense","type":"Expense","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"referenceType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"expense","type":"Expense","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getReferenceType","args":[{"name":"description","type":"ExpenseGroupDescription","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FyleReferenceType","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"description","type":"ExpenseGroupDescription","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"parseAPIResponseToExportLog","args":[{"name":"accountingExport","type":"AccountingExport","deprecated":false,"deprecationMessage":""},{"name":"org_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"AccountingExportList","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"accountingExport","type":"AccountingExport","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"org_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"parseExpenseGroupAPIResponseToExportLog","args":[{"name":"expenseGroup","type":"ExpenseGroup","deprecated":false,"deprecationMessage":""},{"name":"org_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"AccountingExportList","typeParameters":[],"line":208,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"expenseGroup","type":"ExpenseGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"org_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"AccountingExportSummaryModel","id":"class-AccountingExportSummaryModel-8e2036944a889ba1f78e46369f27dc11ffa7712cdc006aae5f0ffc24e03bd173f90ddf57acad1c1ea19918fdf8f1f0938e12966d1d3c5bd91b54fdba3ad219f2","file":"src/app/core/models/db/accounting-export-summary.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export interface AccountingExportSummary {\\n    id: number;\\n    last_exported_at: string;\\n    next_export_at: string;\\n    export_mode: string;\\n    total_accounting_export_count: number;\\n    successful_accounting_export_count: number;\\n    failed_accounting_export_count: number;\\n    created_at: string;\\n    updated_at: string;\\n    workspace: number;\\n}\\n\\nexport class AccountingExportSummaryModel {\\n    static parseAPIResponseToAccountingSummary(response: any): AccountingExportSummary {\\n        return {\\n            id: response.id,\\n            last_exported_at: response.last_exported_at,\\n            next_export_at: response.next_export_at,\\n            export_mode: response.export_mode,\\n            total_accounting_export_count: response.total_expense_groups_count,\\n            successful_accounting_export_count: response.successful_expense_groups_count,\\n            failed_accounting_export_count: response.failed_expense_groups_count,\\n            created_at: response.created_at,\\n            updated_at: response.updated_at,\\n            workspace: response.workspace\\n        };\\n    }\\n}\\n","properties":[],"methods":[{"name":"parseAPIResponseToAccountingSummary","args":[{"name":"response","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"AccountingExportSummary","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"response","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"AdvancedSetting","id":"class-AdvancedSetting-80b31e6728b27952f8e4805037c7ca5838cf2dd46b93b07bb32d8f709368e6165040e6c71912727e8867de9344aab56bdddc1c7d0aedc163614f8791a2170683","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\nimport { PaymentSyncDirection } from \\"../../enum/enum.model\\";\\nimport { EmailOptions } from \\"../../qbd/qbd-configuration/advanced-setting.model\\";\\n\\n  export interface GeneralMappingEntity {\\n    id: string;\\n    name: string;\\n  }\\n\\n  export  interface HourOption {\\n    label: string;\\n    value: number;\\n  }\\n\\n  export type EmailOption = {\\n    email: string;\\n    name: string;\\n  }\\n\\n  export type AdvancedSettingFormOption = {\\n    label: string,\\n    value: string | null | PaymentSyncDirection\\n}\\n\\nexport type ConditionField = {\\n  field_name: string;\\n  type: string;\\n  is_custom: boolean;\\n};\\n\\nexport enum Operator {\\n  IsNull = \\"isnull\\",\\n  IExact = \\"iexact\\",\\n  IContains = \\"icontains\\",\\n  LessThan = \\"lt\\",\\n  LessThanOrEqual = \\"lte\\"\\n}\\n\\nexport const JoinOptions = {\\n  AND: \'AND\',\\n  OR: \'OR\'\\n};\\n\\nexport enum JoinOption {\\n  AND = \\"AND\\",\\n  OR = \\"OR\\"\\n}\\n\\nexport enum CustomOperatorOption {\\n  Is = \\"iexact\\",\\n  IsEmpty = \\"is_empty\\",\\n  IsNotEmpty = \\"is_not_empty\\"\\n}\\n\\nexport type SkipExport = {\\n  id?: number;\\n  condition: string;\\n  custom_field_type: any;\\n  operator: Operator.IsNull | Operator.IExact | Operator.IContains | Operator.LessThan | Operator.LessThanOrEqual;\\n  values: string[];\\n  rank: number;\\n  join_by: JoinOption.AND | JoinOption.OR | null;\\n  is_custom: boolean;\\n};\\n\\nexport type ExpenseFilterResponse = {\\n  count: number;\\n  results: SkipExport[];\\n};\\n\\nexport interface Configuration {\\n    change_accounting_period: boolean;\\n    sync_fyle_to_sage_intacct_payments: boolean;\\n    sync_sage_intacct_to_fyle_payments: boolean;\\n    auto_create_destination_entity: boolean;\\n    auto_create_merchant_destination_entity: boolean;\\n    memo_structure: string[];\\n  }\\n\\n  export interface AdvancedSettingGeneralMapping {\\n    payment_account: GeneralMappingEntity;\\n    default_location: GeneralMappingEntity;\\n    default_department: GeneralMappingEntity;\\n    default_class: GeneralMappingEntity;\\n    default_project: GeneralMappingEntity;\\n    default_item: GeneralMappingEntity;\\n    use_intacct_employee_departments: boolean;\\n    use_intacct_employee_locations: boolean;\\n  }\\n\\n  export interface WorkspaceSchedules {\\n    enabled: boolean;\\n    start_datetime: string;\\n    interval_hours: number;\\n    emails_selected: string[] | [];\\n    additional_email_options: EmailOption[];\\n  }\\n\\nexport type AdvancedSettingsGet = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n    workspace_id: number;\\n}\\n\\nexport type AdvancedSettingsPost = {\\n    configurations: Configuration;\\n    general_mappings: AdvancedSettingGeneralMapping;\\n    workspace_schedules: WorkspaceSchedules;\\n  }\\n\\n  export class AdvancedSetting {\\n    static constructPayload(advancedSettingsForm: FormGroup): AdvancedSettingsPost {\\n      const getFormValue = (key: string) => advancedSettingsForm.get(key)?.value;\\n\\n      const mapAttribute = (key: string, idKey: string, valueKey: string) => {\\n        const value = getFormValue(key);\\n        return value ? { name: value[valueKey], id: value[idKey] } : { name: null, id: null };\\n      };\\n\\n      const advancedSettingPayload: AdvancedSettingsPost = {\\n        configurations: {\\n          auto_create_merchant_destination_entity: true,\\n          sync_fyle_to_sage_intacct_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.FYLE_TO_INTACCT,\\n          sync_sage_intacct_to_fyle_payments: getFormValue(\'autoSyncPayments\') === PaymentSyncDirection.INTACCT_TO_FYLE,\\n          auto_create_destination_entity: getFormValue(\'autoCreateEmployeeVendor\'),\\n          change_accounting_period: !!getFormValue(\'postEntriesCurrentPeriod\'),\\n          memo_structure: getFormValue(\'setDescriptionField\')\\n        },\\n        general_mappings: {\\n          payment_account: mapAttribute(\'defaultPaymentAccount\', \'destination_id\', \'value\'),\\n          default_location: mapAttribute(\'defaultLocation\', \'destination_id\', \'value\'),\\n          default_department: mapAttribute(\'defaultDepartment\', \'destination_id\', \'value\'),\\n          default_class: mapAttribute(\'defaultClass\', \'destination_id\', \'value\'),\\n          default_project: mapAttribute(\'defaultProject\', \'destination_id\', \'value\'),\\n          default_item: mapAttribute(\'defaultItems\', \'destination_id\', \'value\'),\\n          use_intacct_employee_departments: !!getFormValue(\'useEmployeeLocation\'),\\n          use_intacct_employee_locations: !!getFormValue(\'useEmployeeDepartment\')\\n        },\\n        workspace_schedules: {\\n          enabled: !!getFormValue(\'scheduleAutoExport\'),\\n          start_datetime: \'\',\\n          interval_hours: getFormValue(\'scheduleAutoExport\'),\\n          emails_selected: advancedSettingsForm.get(\'email\')?.value ? advancedSettingsForm.get(\'email\')?.value.map((item: EmailOptions) => item.email) : [],\\n          additional_email_options: getFormValue(\'addedEmail\')\\n        }\\n      };\\n\\n      return advancedSettingPayload;\\n    }\\n  }","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"advancedSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"AdvancedSettingsPost","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"advancedSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"AdvancedSettingModel","id":"class-AdvancedSettingModel-40901199c4aae54062a1f9abe02e548cd72ffbc8b4d16bb6a790fe8cccf510dbb867c578e0f5ee6ae3de4d68bffe8f3c0668f8015e28e22cb57922dd98de52d9","file":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\nimport { QBDScheduleFrequency } from \\"../../enum/enum.model\\";\\n\\nexport type EmailOptions = {\\n    name: string,\\n    email: string\\n}\\n\\nexport type QBDAdvancedSettingsPost = {\\n    expense_memo_structure: string[],\\n    top_memo_structure: string[] | null,\\n    schedule_is_enabled: boolean,\\n    emails_selected: EmailOptions[],\\n    day_of_month: string | null,\\n    day_of_week: string | null,\\n    frequency: QBDScheduleFrequency | null,\\n    time_of_day: string | null,\\n}\\n\\nexport type QBDAdvancedSettingsGet = {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    expense_memo_structure: string[],\\n    top_memo_structure: string[],\\n    schedule_is_enabled: boolean,\\n    schedule_id: number | null,\\n    emails_selected: EmailOptions[],\\n    day_of_month: string | null,\\n    day_of_week: string | null,\\n    frequency: QBDScheduleFrequency | null,\\n    time_of_day: string | null,\\n    workspace: number\\n}\\n\\nfunction getFrequencyTime(advancedSettingForm: FormGroup) {\\n    if (advancedSettingForm.get(\'frequency\')?.value){\\n        const currentDate = `${advancedSettingForm.controls.timeOfDay.value} ${advancedSettingForm.controls.meridiem.value}`; // Create a new Date object with the current date and time in IST\\n        const date = new Date(`01/01/2000 ${currentDate}`);\\n\\n        const hours = date.getUTCHours();\\n        const minutes = date.getUTCMinutes();\\n\\n        // Convert the hours to a 2-digit string\\n        const hour = hours.toString().padStart(2, \'0\');\\n        const minute = minutes.toString().padStart(2, \'0\');\\n        // Create the 24-hour GMT time string\\n        const gmtTime24 = `${hour}:${minute}:00`;\\n        return gmtTime24;\\n    }\\n    return null;\\n}\\n\\nexport class AdvancedSettingModel {\\n    static constructPayload(advancedSettingForm: FormGroup): QBDAdvancedSettingsPost {\\n        const topMemo: string[] = [];\\n        topMemo.push(advancedSettingForm.value.topMemoStructure);\\n        const time = getFrequencyTime(advancedSettingForm);\\n        const advancedSettingPayload: QBDAdvancedSettingsPost = {\\n            expense_memo_structure: advancedSettingForm.get(\'expenseMemoStructure\')?.value ? advancedSettingForm.get(\'expenseMemoStructure\')?.value : null,\\n            top_memo_structure: advancedSettingForm.get(\'topMemoStructure\')?.value ? topMemo : null,\\n            schedule_is_enabled: advancedSettingForm.get(\'exportSchedule\')?.value ? advancedSettingForm.get(\'exportSchedule\')?.value : false,\\n            emails_selected: advancedSettingForm.get(\'email\')?.value ? advancedSettingForm.get(\'email\')?.value : null,\\n            day_of_month: advancedSettingForm.get(\'dayOfMonth\')?.value ? advancedSettingForm.get(\'dayOfMonth\')?.value : null,\\n            day_of_week: advancedSettingForm.get(\'dayOfWeek\')?.value ? advancedSettingForm.get(\'dayOfWeek\')?.value : null,\\n            frequency: advancedSettingForm.get(\'frequency\')?.value ? advancedSettingForm.get(\'frequency\')?.value : null,\\n            time_of_day: advancedSettingForm.get(\'frequency\')?.value ? time : null\\n        };\\n        return advancedSettingPayload;\\n    }\\n}\\n","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"advancedSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"QBDAdvancedSettingsPost","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"advancedSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"AdvancedSettingsModel","id":"class-AdvancedSettingsModel-7b29e3995c6c44abdf943dff49fc8424eb9a447b450a01ed4bb3757467b55424327f2e9f468fa43f334b7e4103d84a18c93eb2a60a4b4a12fdd3b3680fa65960","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { JoinOption, Operator } from \\"../enum/enum.model\\";\\nimport { environment } from \\"src/environments/environment\\";\\n\\nexport type EmailOption = {\\n    email: string;\\n    name: string;\\n};\\n\\nexport  interface HourOption {\\n  label: string;\\n  value: number;\\n}\\n\\nexport type skipExportValidator = {\\n  isChanged: string[];\\n  isNotChanged: string[];\\n}\\n\\nexport type ConditionField = {\\n  field_name: string;\\n  type: string;\\n  is_custom: boolean;\\n};\\n\\nexport type ExpenseFilterPost = {\\n    condition: string;\\n    operator: Operator;\\n    values: string | string[]\\n    rank: number;\\n    join_by:JoinOption | null;\\n    is_custom: boolean;\\n    custom_field_type: string | null;\\n};\\n\\nexport type ExpenseFilterPayload = {\\n    condition: ConditionField,\\n    operator: Operator,\\n    value: string[]\\n    join_by: string,\\n    rank: number\\n  }\\n\\nexport interface ExpenseFilter extends ExpenseFilterPost {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    workspace: number\\n}\\n\\nexport type ExpenseFilterResponse = {\\n    count: number,\\n    next: string | null,\\n    previous: string | null,\\n    results: ExpenseFilter[]\\n};\\n\\nexport type SkipExportValidatorRule = {\\n  condition1: string[];\\n  condition2: string[];\\n  operator1: string[];\\n  operator2: string[];\\n};\\n\\nexport type AdvancedSettingValidatorRule = {\\n  paymentSync: string;\\n  exportSchedule: string;\\n};\\n\\nexport class AdvancedSettingsModel {\\n  static getDefaultMemoOptions(): string[] {\\n    return [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n  }\\n\\n  static formatMemoPreview(memoStructure: string[], defaultMemoOptions: string[]): string {\\n    const time = Date.now();\\n    const today = new Date(time);\\n\\n    const previewValues: { [key: string]: string } = {\\n      employee_email: \'john.doe@acme.com\',\\n      category: \'Meals and Entertainment\',\\n      purpose: \'Client Meeting\',\\n      merchant: \'Pizza Hut\',\\n      report_number: \'C/2021/12/R/1\',\\n      spent_on: today.toLocaleDateString(),\\n      expense_link: `${environment.fyle_app_url}/app/main/#/enterprise/view_expense/`\\n    };\\n    let memoPreviewText = \'\';\\n    const memo: string[] = [];\\n    memoStructure.forEach((field, index) => {\\n      if (field in previewValues) {\\n        const defaultIndex = defaultMemoOptions.indexOf(memoStructure[index]);\\n        memo[defaultIndex] = previewValues[field];\\n      }\\n    });\\n    memo.forEach((field, index) => {\\n      memoPreviewText += field;\\n      if (index + 1 !== memo.length) {\\n        memoPreviewText = memoPreviewText + \' - \';\\n      }\\n    });\\n    return memoPreviewText;\\n  }\\n\\n  static filterAdminEmails = (emailToSearch: string[], adminEmails: EmailOption[]) => {\\n    const adminEmailsList: EmailOption[] = [];\\n    for (const email of emailToSearch) {\\n      adminEmails.find(item => (item.email === email ? adminEmailsList.push(item) : null));\\n    }\\n    return adminEmailsList;\\n};\\n\\n  static formatSelectedEmails(emails: EmailOption[]): string[] {\\n    return emails.map((option: EmailOption) => option.email);\\n  }\\n}\\n\\nexport class SkipExportModel {\\n\\n  static constructSkipExportValue(valueField: any) {\\n    if (valueField.condition1.field_name !== \'report_title\' && valueField.operator1 === \'iexact\') {\\n      valueField.operator1 = \'in\';\\n    }\\n    if (valueField.condition1.is_custom === true) {\\n      if (valueField.operator1 === \'is_empty\') {\\n        valueField.value1 = [\'True\'];\\n        valueField.operator1 = \'isnull\';\\n      } else if (valueField.operator1 === \'is_not_empty\') {\\n        valueField.value1 = [\'False\'];\\n        valueField.operator1 = \'isnull\';\\n      }\\n    }\\n    if (valueField.condition1.field_name === \'spent_at\') {\\n      valueField.value1 = new Date(valueField.value1).toISOString().split(\'T\')[0] + \'T17:00:00.000Z\';\\n    }\\n    if (typeof valueField.value1 === \'string\') {\\n      valueField.value1 = [valueField.value1];\\n    }\\n\\n    if (valueField.condition2 && valueField.operator2) {\\n      if (valueField.condition2.field_name !== \'report_title\' && valueField.operator2 === \'iexact\') {\\n        valueField.operator2 = \'in\';\\n      }\\n      if (valueField.condition2.field_name === \'spent_at\') {\\n        valueField.value2 = new Date(valueField.value2).toISOString().split(\'T\')[0] + \'T17:00:00.000Z\';\\n      }\\n      if (valueField.condition2.is_custom === true) {\\n        if (valueField.operator2 === \'is_empty\') {\\n          valueField.value2 = [\'True\'];\\n          valueField.operator2 = \'isnull\';\\n        } else if (valueField.operator2 === \'is_not_empty\') {\\n          valueField.value2 = [\'False\'];\\n          valueField.operator2 = \'isnull\';\\n        }\\n      }\\n      if (typeof valueField.value2 === \'string\') {\\n        valueField.value2 = [valueField.value2];\\n      }\\n    }\\n    return valueField;\\n  }\\n\\n  static constructExportFilterPayload(valueField: any): ExpenseFilterPayload {\\n    return {\\n      condition: valueField[\'condition\'+valueField.rank] as ConditionField,\\n      operator: valueField[\'operator\'+valueField.rank] as Operator,\\n      value: valueField[\'value\'+valueField.rank],\\n      join_by: valueField?.join_by && valueField.rank === 1 ? valueField?.join_by : null,\\n      rank: valueField.rank\\n    };\\n  }\\n\\n  static constructSkipExportPayload(valueField: ExpenseFilterPayload, valueOption: any[]): ExpenseFilterPost {\\n    return {\\n      condition: valueField.condition.field_name,\\n      operator: valueField.operator,\\n      values:\\n        valueField.condition.type === \'DATE\' ||\\n          valueField.operator === \'isnull\' || valueField.condition.field_name === \'report_title\' ? valueField.value : valueOption,\\n      rank: valueField.rank,\\n      join_by: valueField?.join_by ? JoinOption[valueField.join_by as JoinOption] : null,\\n      is_custom: valueField.condition.is_custom,\\n      custom_field_type: valueField.condition?.is_custom ? valueField.condition.type : null\\n    };\\n  }\\n\\n  static setConditionFields(response: ExpenseFilterResponse, conditionArray: ConditionField[], conditionFieldOptions: ConditionField[]) {\\n    response.results.forEach((element) => {\\n      const type = conditionFieldOptions?.filter( (fieldOption) => fieldOption.field_name === element.condition);\\n      const selectedConditionOption : ConditionField = type[0];\\n      conditionArray.push(selectedConditionOption);\\n    });\\n  }\\n\\n  static getSelectedOperator(operator: string, value: any) {\\n    switch (operator) {\\n      case \'isnull\':\\n        return value === \'True\' ? \'is_empty\' : \'is_not_empty\';\\n      case \'in\':\\n        return \'iexact\';\\n      case \'iexact\':\\n        return operator;\\n      default:\\n        return operator;\\n    }\\n  }\\n\\n  static getFieldValue(value: any, condition: ConditionField, rank: number) {\\n    if (condition?.type === \'DATE\') {\\n      return new Date(value[0]);\\n    } else if (condition?.field_name === \'report_title\') {\\n      return value[0];\\n    }\\n    if (rank === 1) {\\n        return value;\\n    } else if (rank === 2) {\\n        return value;\\n    }\\n    return \'\';\\n\\n  }\\n\\n  static setupSkipExportForm(response: ExpenseFilterResponse, conditionArray: ConditionField[], conditionFieldOptions: ConditionField[]) {\\n    this.setConditionFields(response, conditionArray, conditionFieldOptions);\\n    let [selectedOperator1, valueFC1, customFieldTypeFC1] = [\'\', \'\', \'\'];\\n    let [selectedOperator2, valueFC2] = [\'\', \'\'];\\n    let joinByFC = \'\';\\n    let isDisabledChip2: boolean = false;\\n    let isDisabledChip1: boolean = false;\\n\\n    response.results.forEach((result: ExpenseFilterPost, index: number) => {\\n        if (index === 0) {\\n            selectedOperator1 = this.getSelectedOperator(result.operator, result.values[0]);\\n            if (!(selectedOperator1 === \'is_empty\' || selectedOperator1 === \'is_not_empty\')) {\\n                valueFC1 = this.getFieldValue(result.values, conditionArray[0], result.rank);\\n            } else {\\n                isDisabledChip1 = true;\\n            }\\n            customFieldTypeFC1 = result?.custom_field_type ? result.custom_field_type : \'\';\\n        } else if (index === 1 && response.results[0].join_by !== null) {\\n            selectedOperator2 = this.getSelectedOperator(result.operator, result.values[0]);\\n            joinByFC = response.results[0].join_by;\\n            if (!(selectedOperator2 === \'is_empty\' || selectedOperator2 === \'is_not_empty\')) {\\n                valueFC2 = this.getFieldValue(result.values, conditionArray[1], result.rank);\\n            } else {\\n                isDisabledChip2 = true;\\n            }\\n        }\\n    });\\n\\n    return new FormGroup({\\n      condition1: new FormControl(conditionArray.length > 0 ? conditionArray[0] : \'\'),\\n      operator1: new FormControl(selectedOperator1),\\n      value1: new FormControl(valueFC1),\\n      customFieldType1: new FormControl(customFieldTypeFC1),\\n      join_by: new FormControl(joinByFC),\\n      condition2: new FormControl(joinByFC ? conditionArray[1] : \'\'),\\n      operator2: new FormControl(joinByFC && selectedOperator2 ? selectedOperator2 : \'\'),\\n      value2: new FormControl(valueFC2),\\n      customFieldType2: new FormControl(joinByFC ? response.results[1].custom_field_type : \'\'),\\n      isDisabledChip1: new FormControl(isDisabledChip1),\\n      isDisabledChip2: new FormControl(isDisabledChip2)\\n    });\\n  }\\n}\\n","properties":[{"name":"filterAdminEmails","defaultValue":"() => {...}","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":105,"modifierKind":[126]}],"methods":[{"name":"formatMemoPreview","args":[{"name":"memoStructure","type":"string[]","deprecated":false,"deprecationMessage":""},{"name":"defaultMemoOptions","type":"string[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"memoStructure","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"defaultMemoOptions","type":"string[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"formatSelectedEmails","args":[{"name":"emails","type":"EmailOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string[]","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"emails","type":"EmailOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDefaultMemoOptions","args":[],"optional":false,"returnType":"string[]","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","modifierKind":[126]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"BambooHrModel","id":"class-BambooHrModel-f9d83732803390c68f3966b602c91d29c0b3f06f585a7996da8e998947c7b5f65a718e9b3f3325874ded74bb346980a14dd0273a6d402503355b897982baca65","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\n\\nexport type EmailOption = {\\n  email: string;\\n  name: string;\\n}\\n\\nexport type BambooHr = {\\n  id: number;\\n  org: number;\\n  folder_id: string;\\n  package_id: string;\\n  api_token: string;\\n  sub_domain: string;\\n  created_at: Date;\\n  updated_at: Date;\\n}\\n\\nexport type BambooHRConfiguration = {\\n  id: number;\\n  org: number;\\n  recipe_id: string;\\n  recipe_data: string;\\n  recipe_status: boolean;\\n  additional_email_options: EmailOption[];\\n  emails_selected: EmailOption[];\\n}\\n\\nexport type BambooHRConfigurationPost = {\\n  org: number;\\n  additional_email_options: EmailOption[];\\n  emails_selected: EmailOption[];\\n}\\n\\nexport type BambooHrConnection = {\\n  input: {\\n    api_token : string;\\n    subdomain: string;\\n  }\\n}\\n\\nexport class BambooHrModel {\\n  static constructBambooConnectionPayload(bambooConnectionForm: FormGroup): BambooHrConnection {\\n    return {\\n      input: {\\n        api_token: bambooConnectionForm.value.apiToken,\\n        subdomain: bambooConnectionForm.value.subDomain\\n      }\\n    };\\n  }\\n\\n  static constructBambooConfigurationPayload(bambooHrConfigurationForm: FormGroup, orgId: number): BambooHRConfigurationPost {\\n    return {\\n      org: orgId,\\n      additional_email_options: bambooHrConfigurationForm.value.additionalEmails ? bambooHrConfigurationForm.value.additionalEmails : [],\\n      emails_selected: bambooHrConfigurationForm.value.emails\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"constructBambooConfigurationPayload","args":[{"name":"bambooHrConfigurationForm","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"orgId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"BambooHRConfigurationPost","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"bambooHrConfigurationForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructBambooConnectionPayload","args":[{"name":"bambooConnectionForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"BambooHrConnection","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"bambooConnectionForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"BusinessCentralAdvancedSettingsModel","id":"class-BusinessCentralAdvancedSettingsModel-b34c0db255e5588a657b2a74b76e2ee655a6a36bb40dbd03190c54d1c7a629eafcb555069d3707c428463722300c0cf8f560021a7c3bfef6e29fc5021c208f67","file":"src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ConditionField, ExpenseFilterPayload, ExpenseFilterPost } from \\"../../common/advanced-settings.model\\";\\nimport { JoinOption, Operator } from \\"../../enum/enum.model\\";\\n\\nexport type BusinessCentralAdvancedSettings = {\\n    top_memo_structure: string[],\\n    expense_memo_structure: string[],\\n    schedule_is_enabled: boolean,\\n    interval_hours: number\\n}\\n\\nexport interface BusinessCentralAdvancedSettingsGet extends BusinessCentralAdvancedSettings {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    workspace: number\\n}\\n\\nexport interface BusinessCentralAdvancedSettingsPost extends BusinessCentralAdvancedSettings { }\\n\\nexport class BusinessCentralAdvancedSettingsModel {\\n\\n  static mapAPIResponseToFormGroup(advancedSettings: BusinessCentralAdvancedSettingsGet | null, isSkipExportEnabled: boolean): FormGroup {\\n    const defaultMemoOptions: string[] = [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n    return new FormGroup({\\n      memoStructure: new FormControl(advancedSettings?.expense_memo_structure ? advancedSettings?.expense_memo_structure : defaultMemoOptions),\\n      scheduleEnabled: new FormControl(advancedSettings?.schedule_is_enabled ? true : false),\\n      scheduleAutoExportFrequency: new FormControl(advancedSettings?.interval_hours ? advancedSettings.interval_hours : 1),\\n      topMemo: new FormControl(advancedSettings?.top_memo_structure ? advancedSettings?.top_memo_structure : defaultMemoOptions[0]),\\n      skipExport: new FormControl(isSkipExportEnabled)\\n    });\\n  }\\n\\n  static createAdvancedSettingPayload(advancedSettingsForm: FormGroup): BusinessCentralAdvancedSettingsPost {\\n    return {\\n      top_memo_structure: advancedSettingsForm.get(\'topMemo\')?.value ? advancedSettingsForm.get(\'topMemo\')?.value : null,\\n      expense_memo_structure: advancedSettingsForm.get(\'memoStructure\')?.value ? advancedSettingsForm.get(\'memoStructure\')?.value : null,\\n      schedule_is_enabled: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleEnabled\')?.value : false,\\n      interval_hours: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleAutoExportFrequency\')?.value : null\\n    };\\n  }\\n}\\n\\n","properties":[],"methods":[{"name":"createAdvancedSettingPayload","args":[{"name":"advancedSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"BusinessCentralAdvancedSettingsPost","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"advancedSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mapAPIResponseToFormGroup","args":[{"name":"advancedSettings","type":"BusinessCentralAdvancedSettingsGet | null","deprecated":false,"deprecationMessage":""},{"name":"isSkipExportEnabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"advancedSettings","type":"BusinessCentralAdvancedSettingsGet | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isSkipExportEnabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"BusinessCentralConnectorModel","id":"class-BusinessCentralConnectorModel-4446a8117fd647251e00a77a11d489c910d3101c11298d679ad2d9a53cdc63d5a7dc6f3a49bc4aefa73d0c120e429e9c4b5b9f8a8d064cd2bf9af78d59c26773","file":"src/app/core/models/business-central/business-central-configuration/business-central-connector.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { environment } from \\"src/environments/environment\\";\\n\\nexport type BusinessCentralConnector = {\\n  code: string;\\n  callback_url: string;\\n  workspace: number\\n}\\n\\nexport interface BusinessCentralConnectorPost extends BusinessCentralConnector {}\\n\\nexport class BusinessCentralConnectorModel {\\n  static constructPayload(code: string, workspaceId: number): BusinessCentralConnectorPost {\\n    return {\\n      code,\\n      callback_url: `${environment.business_central_oauth_redirect_uri}`,\\n      workspace: workspaceId\\n    };\\n  }\\n}","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""},{"name":"workspaceId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"BusinessCentralConnectorPost","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"BusinessCentralExportSettingModel","id":"class-BusinessCentralExportSettingModel-e4250055edf1de6ab7ff6cd015055bbf9d0b9f7a35620e305f7e7e5767c13e28c2d40bc9983be92b8b2cac2afd07145c9fdbe20172a885e3ab8328364b836432","file":"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormGroup, FormControl } from \\"@angular/forms\\";\\nimport { AutoMapEmployeeOptions, BusinessCentralExportType, CCCExpenseState, ExpenseGroupedBy, ExpenseState, ExportDateType, FyleField } from \\"../../enum/enum.model\\";\\n\\nexport type BusinessCentralExportSetting = {\\n    reimbursable_expenses_export_type: BusinessCentralExportType,\\n    reimbursable_expense_state: ExpenseState,\\n    reimbursable_expense_date: ExportDateType,\\n    reimbursable_expense_grouped_by: ExpenseGroupedBy,\\n    credit_card_expense_export_type: BusinessCentralExportType,\\n    credit_card_expense_state: CCCExpenseState,\\n    credit_card_expense_grouped_by: ExpenseGroupedBy,\\n    credit_card_expense_date: ExportDateType,\\n    default_credit_card_account_name: string,\\n    default_credit_card_account_id: string,\\n    default_bank_account_name: string,\\n    default_bank_account_id: string,\\n    credit_card_entity_name_preference: string,\\n    employee_mapping: string\\n}\\n\\nexport interface BusinessCentralExportSettingGet extends BusinessCentralExportSetting {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    workspace: number\\n}\\n\\nexport interface BusinessCentralExportSettingPost extends BusinessCentralExportSetting {}\\n\\nexport type BusinessCentralExportSettingFormOption = {\\n    label: string,\\n    value: ExpenseState | CCCExpenseState | FyleField | ExpenseGroupedBy | BusinessCentralExportType | ExportDateType | AutoMapEmployeeOptions;\\n}\\n\\nexport class BusinessCentralExportSettingModel {\\n\\n    static getExpenseGroupByOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Expense\',\\n            value: ExpenseGroupedBy.EXPENSE\\n          },\\n          {\\n            label: \'Expense Report\',\\n            value: ExpenseGroupedBy.REPORT\\n          }\\n        ];\\n    }\\n\\n    static getExpenseGroupingDateOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Current Date\',\\n            value: ExportDateType.CURRENT_DATE\\n          },\\n          {\\n            label: \'Approval Date\',\\n            value: ExportDateType.APPROVAL_DATE\\n          },\\n          {\\n            label: \'Last Spent At\',\\n            value: ExportDateType.LAST_SPENT_AT\\n          },\\n          {\\n            label: \'Spent Date\',\\n            value: ExportDateType.SPENT_AT\\n          }\\n        ];\\n    }\\n\\n    static getReimbursableExpensesExportTypeOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Accounts Payable Invoice\',\\n            value: BusinessCentralExportType.PURCHASE_INVOICE\\n          },\\n          {\\n            label: \'Journal Entry\',\\n            value: BusinessCentralExportType.JOURNAL_ENTRY\\n          }\\n        ];\\n    }\\n\\n    static getCCCExpensesExportTypeOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Journal Entry\',\\n            value: BusinessCentralExportType.JOURNAL_ENTRY\\n          }\\n        ];\\n    }\\n\\n    static getExpenseState(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n          {\\n            label: \'Processing\',\\n            value: ExpenseState.PAYMENT_PROCESSING\\n          },\\n          {\\n            label: \'Closed\',\\n            value: ExpenseState.PAID\\n          }\\n        ];\\n    }\\n\\n    static getEntityOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n            {\\n              label: \'Employee\',\\n              value: FyleField.EMPLOYEE\\n            },\\n            {\\n              label: \'Vendor\',\\n              value: FyleField.VENDOR\\n            }\\n        ];\\n    }\\n\\n    static getEmployeeMappingOptions(): BusinessCentralExportSettingFormOption[] {\\n        return [\\n            { label: \'Based on Employee E-mail ID\', value: AutoMapEmployeeOptions.EMAIL },\\n            { label: \'Based on Employee Name\', value: AutoMapEmployeeOptions.NAME },\\n            { label: \'Based on Employee Code\', value: AutoMapEmployeeOptions.EMPLOYEE_CODE }\\n        ];\\n    }\\n\\n    static mapAPIResponseToFormGroup(exportSettings: BusinessCentralExportSettingGet | null): FormGroup {\\n        return new FormGroup({\\n            reimbursableExpense: new FormControl(exportSettings?.reimbursable_expenses_export_type ? true : false),\\n            reimbursableExportType: new FormControl(exportSettings?.reimbursable_expenses_export_type ? exportSettings.reimbursable_expenses_export_type : null),\\n            reimbursableExpenseState: new FormControl(exportSettings?.reimbursable_expense_state ? exportSettings?.reimbursable_expense_state : null),\\n            reimbursableExportDate: new FormControl(exportSettings?.reimbursable_expense_date ? exportSettings?.reimbursable_expense_date : null),\\n            reimbursableExportGroup: new FormControl(exportSettings?.reimbursable_expense_grouped_by ? exportSettings?.reimbursable_expense_grouped_by: null),\\n            creditCardExpense: new FormControl(exportSettings?.credit_card_expense_export_type ? true : false),\\n            cccExportType: new FormControl(exportSettings?.credit_card_expense_export_type ? exportSettings.credit_card_expense_export_type : null),\\n            cccExpenseState: new FormControl(exportSettings?.credit_card_expense_state ? exportSettings?.credit_card_expense_state : null),\\n            cccExportDate: new FormControl(exportSettings?.credit_card_expense_date ? exportSettings?.credit_card_expense_date : null),\\n            cccExportGroup: new FormControl(exportSettings?.credit_card_expense_grouped_by ? exportSettings?.credit_card_expense_grouped_by: null),\\n            defaultCreditCardCCCAccountName: new FormControl(exportSettings?.default_credit_card_account_name ? exportSettings?.default_credit_card_account_name : null),\\n            defaultBankName: new FormControl(exportSettings?.default_bank_account_name ? exportSettings?.default_bank_account_name : null),\\n            entityNamePreference: new FormControl(exportSettings?.credit_card_entity_name_preference ? exportSettings?.credit_card_entity_name_preference : null),\\n            reimbursableEmployeeMapping: new FormControl(exportSettings?.employee_mapping ? exportSettings?.employee_mapping : null)\\n        });\\n    }\\n\\n    static createExportSettingPayload(exportSettingsForm: FormGroup): BusinessCentralExportSettingPost {\\n        return {\\n            reimbursable_expenses_export_type: exportSettingsForm.get(\'reimbursableExportType\')?.value ? exportSettingsForm.get(\'reimbursableExportType\')?.value : null,\\n            reimbursable_expense_state: exportSettingsForm.get(\'reimbursableExpenseState\')?.value ? exportSettingsForm.get(\'reimbursableExpenseState\')?.value : null,\\n            reimbursable_expense_date: exportSettingsForm.get(\'reimbursableExportDate\')?.value ? exportSettingsForm.get(\'reimbursableExportDate\')?.value : null,\\n            reimbursable_expense_grouped_by: exportSettingsForm.get(\'reimbursableExportGroup\')?.value ? exportSettingsForm.get(\'reimbursableExportGroup\')?.value : null,\\n            credit_card_expense_export_type: exportSettingsForm.get(\'cccExportType\')?.value ? exportSettingsForm.get(\'cccExportType\')?.value : null,\\n            credit_card_expense_state: exportSettingsForm.get(\'cccExpenseState\')?.value ? exportSettingsForm.get(\'cccExpenseState\')?.value : null,\\n            credit_card_expense_grouped_by: exportSettingsForm.get(\'cccExportGroup\')?.value ? exportSettingsForm.get(\'cccExportGroup\')?.value : null,\\n            credit_card_expense_date: exportSettingsForm.get(\'cccExportDate\')?.value ? exportSettingsForm.get(\'cccExportDate\')?.value : null,\\n            default_credit_card_account_name: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.value : null,\\n            default_credit_card_account_id: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.destination_id : null,\\n            default_bank_account_name: exportSettingsForm.get(\'defaultBankName\')?.value ? exportSettingsForm.get(\'defaultBankName\')?.value.value : null,\\n            default_bank_account_id: exportSettingsForm.get(\'defaultBankName\')?.value ? exportSettingsForm.get(\'defaultBankName\')?.value.destination_id : null,\\n            credit_card_entity_name_preference: exportSettingsForm.get(\'entityNamePreference\')?.value ? exportSettingsForm.get(\'entityNamePreference\')?.value : null,\\n            employee_mapping: exportSettingsForm.get(\'reimbursableEmployeeMapping\')?.value ? exportSettingsForm.get(\'reimbursableEmployeeMapping\')?.value : null\\n        };\\n    }\\n  }\\n","properties":[],"methods":[{"name":"createExportSettingPayload","args":[{"name":"exportSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"BusinessCentralExportSettingPost","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getCCCExpensesExportTypeOptions","args":[],"optional":false,"returnType":"BusinessCentralExportSettingFormOption[]","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getEmployeeMappingOptions","args":[],"optional":false,"returnType":"BusinessCentralExportSettingFormOption[]","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getEntityOptions","args":[],"optional":false,"returnType":"BusinessCentralExportSettingFormOption[]","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getExpenseGroupByOptions","args":[],"optional":false,"returnType":"BusinessCentralExportSettingFormOption[]","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getExpenseGroupingDateOptions","args":[],"optional":false,"returnType":"BusinessCentralExportSettingFormOption[]","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getExpenseState","args":[],"optional":false,"returnType":"BusinessCentralExportSettingFormOption[]","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getReimbursableExpensesExportTypeOptions","args":[],"optional":false,"returnType":"BusinessCentralExportSettingFormOption[]","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"mapAPIResponseToFormGroup","args":[{"name":"exportSettings","type":"BusinessCentralExportSettingGet | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportSettings","type":"BusinessCentralExportSettingGet | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"BusinessCentralImportSettingsModel","id":"class-BusinessCentralImportSettingsModel-4788a953afa288822c7e0774b5c7640ede8f4ef76e902e0e6e479f8e91c0929bc96b8add350c515516d6e092739033659d588aa9a6337f77afaaff5a5ba883e8","file":"src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormArray, FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ImportSettingMappingRow, ImportSettingsModel } from \\"../../common/import-settings.model\\";\\nimport { IntegrationField } from \\"../../db/mapping.model\\";\\n\\nexport type BusinessCentralImportSettings = {\\n    import_categories: boolean,\\n    mapping_settings: ImportSettingMappingRow[] | []\\n}\\n\\nexport interface BusinessCentralImportSettingsGet extends BusinessCentralImportSettings {\\n    id: number,\\n    workspace_id: number,\\n    created_at: Date,\\n    updated_at: Date\\n}\\n\\nexport interface BusinessCentralImportSettingsPost extends BusinessCentralImportSettings {}\\n\\nexport class BusinessCentralImportSettingsModel extends ImportSettingsModel {\\n\\n    static mapAPIResponseToFormGroup(importSettings: BusinessCentralImportSettingsGet | null, businessCentralFields: IntegrationField[]): FormGroup {\\n        const expenseFieldsArray = importSettings?.mapping_settings ? this.constructFormArray(importSettings.mapping_settings, businessCentralFields) : [] ;\\n        return new FormGroup({\\n            importCategories: new FormControl(importSettings?.import_categories ?? false),\\n            expenseFields: new FormArray(expenseFieldsArray)\\n        });\\n    }\\n\\n    static createImportSettingPayload(importSettingsForm: FormGroup): BusinessCentralImportSettingsPost {\\n        const expenseFieldArray = importSettingsForm.value.expenseFields;\\n        const mappingSettings = this.constructMappingSettingPayload(expenseFieldArray);\\n        return {\\n            import_categories: importSettingsForm.get(\'importCategories\')?.value,\\n            mapping_settings: mappingSettings\\n        };\\n    }\\n\\n}\\n","properties":[],"methods":[{"name":"createImportSettingPayload","args":[{"name":"importSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"BusinessCentralImportSettingsPost","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mapAPIResponseToFormGroup","args":[{"name":"importSettings","type":"BusinessCentralImportSettingsGet | null","deprecated":false,"deprecationMessage":""},{"name":"businessCentralFields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettings","type":"BusinessCentralImportSettingsGet | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"businessCentralFields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructFormArray","args":[{"name":"importSettingsMappingSettings","type":"ImportSettingMappingRow[] | ","deprecated":false,"deprecationMessage":""},{"name":"accountingAppFields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup[]","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettingsMappingSettings","type":"ImportSettingMappingRow[] | ","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountingAppFields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImportSettingsModel"}},{"name":"constructMappingSettingPayload","args":[{"name":"expenseFieldArray","type":"ImportSettingMappingRow[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImportSettingMappingRow[]","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"expenseFieldArray","type":"ImportSettingMappingRow[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImportSettingsModel"}},{"name":"createFormGroup","args":[{"name":"data","type":"ImportSettingMappingRow","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"data","type":"ImportSettingMappingRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImportSettingsModel"}},{"name":"getCustomFieldOption","args":[],"optional":false,"returnType":"ExpenseField[]","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"inheritance":{"file":"ImportSettingsModel"}}],"indexSignatures":[],"extends":["ImportSettingsModel"],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DashboardModel","id":"class-DashboardModel-ad15c3e5ae6ba83cf79de327a2fe89a8638aee3d592428081ddd1e4583dde900aa4ede76e3caf8f53c823e25e24cef22fb1599483aeeea7739f9e418889ca0e5","file":"src/app/core/models/db/dashboard.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { AccountingErrorType, DefaultImportFields, ExportErrorSourceType, FyleField } from \\"../enum/enum.model\\";\\nimport { AccountingGroupedErrors, Error } from \\"./error.model\\";\\n\\nexport class DashboardModel {\\n    static parseAPIResponseToGroupedError(errors: Error[]): AccountingGroupedErrors {\\n        return errors.reduce((groupedErrors: AccountingGroupedErrors, error: Error) => {\\n          const errorType = error.type === AccountingErrorType.EMPLOYEE_MAPPING || error.type === AccountingErrorType.CATEGORY_MAPPING ? error.type : AccountingErrorType.ACCOUNTING_ERROR;\\n          const group: Error[] = groupedErrors[errorType] || [];\\n          group.push(error);\\n          groupedErrors[errorType] = group;\\n\\n          return groupedErrors;\\n        }, {\\n          [AccountingErrorType.EMPLOYEE_MAPPING]: [],\\n          [AccountingErrorType.CATEGORY_MAPPING]: [],\\n          [AccountingErrorType.ACCOUNTING_ERROR]: []\\n        });\\n      }\\n}\\n\\nexport interface DestinationFieldMap {\\n  [ExportErrorSourceType.EMPLOYEE]: string;\\n  [ExportErrorSourceType.CATEGORY]: string;\\n\\n}","properties":[],"methods":[{"name":"parseAPIResponseToGroupedError","args":[{"name":"errors","type":"Error[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"AccountingGroupedErrors","typeParameters":[],"line":5,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"errors","type":"Error[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"EmployeeSettingModel","id":"class-EmployeeSettingModel-0c6f0db5a51833b606d8752a21f8fdbf0187815e8f4d8f0b1e0d5440f8d6d0da1082af6aa5dbb476bb39f2bdc22edb9940b3950cf784c0da87b1f5a986e64ae2","file":"src/app/core/models/common/employee-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FyleField } from \\"../enum/enum.model\\";\\nimport { SelectFormOption } from \\"./select-form-option.model\\";\\n\\nexport class EmployeeSettingModel {\\n    static getEmployeeFieldMappingOptions(): SelectFormOption[] {\\n        return [\\n            {\\n              label: \'Employees\',\\n              value: FyleField.EMPLOYEE\\n            },\\n            {\\n              label: \'Vendor\',\\n              value: FyleField.VENDOR\\n            }\\n          ];\\n    }\\n}\\n","properties":[],"methods":[{"name":"getEmployeeFieldMappingOptions","args":[],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":5,"deprecated":false,"deprecationMessage":"","modifierKind":[126]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ErrorModel","id":"class-ErrorModel-5d06a9637f25f6c12a8c3a83b6346487fb029bf28ab65293c716961322e819982634bc4ceff494fc633b0d57420bc6af67b30201bb65a698f9a0864397adc3e9","file":"src/app/core/models/db/error.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { AccountingErrorType } from \\"../enum/enum.model\\";\\nimport { AccountingExport } from \\"./accounting-export.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { ExtendedGenericMapping } from \\"./extended-generic-mapping.model\\";\\nimport { PaginatedResponse } from \\"./paginated-response.model\\";\\n\\nexport interface DestinationAttributeDetail {\\n  user_id?: string;\\n  location?: string | null;\\n  full_name?: string;\\n  department?: string | null;\\n  department_id?: string | null;\\n  employee_code?: string | null;\\n  department_code?: string | null;\\n}\\n\\nexport interface Error {\\n  id: number;\\n  expense_attribute: ExpenseAttribute;\\n  expense_group: AccountingExport;\\n  type: AccountingErrorType;\\n  is_resolved: boolean;\\n  error_title: string;\\n  error_detail: string;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport interface ErrorResponse extends PaginatedResponse {\\n  results: Error[];\\n}\\n\\nexport type ErrorStat = {\\n    resolvedCount: number;\\n    totalCount: number;\\n  }\\n\\nexport type AccountingGroupedErrors = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: Error[];\\n    [AccountingErrorType.CATEGORY_MAPPING]: Error[];\\n    [AccountingErrorType.ACCOUNTING_ERROR]: Error[];\\n  }\\n\\nexport type AccountingGroupedErrorStat = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: null | ErrorStat;\\n    [AccountingErrorType.CATEGORY_MAPPING]: null | ErrorStat;\\n  }\\n\\nexport class ErrorModel {\\n  static formatErrors(errors: Error[]): AccountingGroupedErrors {\\n    return errors.reduce((groupedErrors: AccountingGroupedErrors, error: Error) => {\\n      const errorType = error.type === AccountingErrorType.EMPLOYEE_MAPPING || AccountingErrorType.CATEGORY_MAPPING ? error.type : AccountingErrorType.ACCOUNTING_ERROR;\\n      const group: Error[] = groupedErrors[errorType] || [];\\n      group.push(error);\\n      groupedErrors[error.type] = group;\\n\\n      return groupedErrors;\\n    }, {\\n      [AccountingErrorType.EMPLOYEE_MAPPING]: [],\\n      [AccountingErrorType.CATEGORY_MAPPING]: [],\\n      [AccountingErrorType.ACCOUNTING_ERROR]: []\\n    });\\n  }\\n\\n  static getErroredMappings(errors: AccountingGroupedErrors, errorType: AccountingErrorType, isCategoryMappingGeneric?: boolean): ExtendedGenericMapping[] {\\n    const filteredMappings: ExtendedGenericMapping[] = [];\\n\\n    errors[errorType].forEach(element => {\\n      const filteredMapping: ExtendedGenericMapping = element.expense_attribute;\\n      if (errorType === AccountingErrorType.ACCOUNTING_ERROR || isCategoryMappingGeneric) {\\n        filteredMapping.mapping = [];\\n      } else if (errorType === AccountingErrorType.EMPLOYEE_MAPPING) {\\n        filteredMapping.employeemapping = [];\\n      } else if (errorType === AccountingErrorType.CATEGORY_MAPPING) {\\n        filteredMapping.categorymapping = [];\\n      }\\n      filteredMappings.push(filteredMapping);\\n    });\\n\\n    return filteredMappings;\\n  }\\n}\\n","properties":[],"methods":[{"name":"formatErrors","args":[{"name":"errors","type":"Error[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"AccountingGroupedErrors","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"errors","type":"Error[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getErroredMappings","args":[{"name":"errors","type":"AccountingGroupedErrors","deprecated":false,"deprecationMessage":""},{"name":"errorType","type":"AccountingErrorType","deprecated":false,"deprecationMessage":""},{"name":"isCategoryMappingGeneric","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"ExtendedGenericMapping[]","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"errors","type":"AccountingGroupedErrors","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"errorType","type":"AccountingErrorType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isCategoryMappingGeneric","type":"boolean","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ExpenseModel","id":"class-ExpenseModel-b0cedf4d9c5fe3e1b87581bc489b6d26ef7adae8d53acad1a4418a6ef6ef221a4940c42c08a9c34b0e6ff8878843df93211887d33501f3531a39574c4f79f8d2","file":"src/app/core/models/si/db/expense.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { environment } from \\"src/environments/environment\\";\\n\\nexport type Expense = {\\n  id: number;\\n  employee_email: string;\\n  employee_name: string;\\n  category: string;\\n  sub_category: string;\\n  project: string;\\n  expense_id: string;\\n  org_id: string;\\n  expense_number: string;\\n  claim_number: string;\\n  amount: number;\\n  currency: string;\\n  foreign_amount: number;\\n  foreign_currency: string;\\n  tax_amount: number;\\n  tax_group_id: string;\\n  settlement_id: string;\\n  reimbursable: boolean;\\n  billable: boolean;\\n  state: string;\\n  vendor: string;\\n  cost_center: string;\\n  purpose: string;\\n  report_id: string;\\n  spent_at: Date;\\n  approved_at: Date;\\n  posted_at: Date;\\n  expense_created_at: Date;\\n  expense_updated_at: Date;\\n  created_at: Date;\\n  updated_at: Date;\\n  fund_source: string;\\n  verified_at: Date;\\n  custom_properties: any[];\\n  paid_on_sage_intacct: boolean;\\n  file_ids: string[];\\n  payment_number: string;\\n  corporate_card_id: string;\\n  is_skipped: boolean;\\n  report_title: string;\\n};\\n\\nexport interface ExpenseList {\\n  expenseID: string;\\n  amount?: [number, string];\\n  merchant?: string;\\n  category?: string;\\n  fyleUrl: string;\\n  expenseType?: \'Credit Card\' | \'Reimbursable\';\\n  name?: [string, string];\\n  fundSource?: string;\\n}\\n\\nexport class ExpenseModel {\\n  static constructViewExpenseUrl (expense_id: string) {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}`;\\n    return url;\\n  }\\n}","properties":[],"methods":[{"name":"constructViewExpenseUrl","args":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ExportSettingModel","id":"class-ExportSettingModel-5ac287c00f48c0b51f8a4c1ad43f9ab0840a5afc68c0d56923231aafe77b4bbed2781e159e20cd0ab6f60caf719268d91a2b5d2b4bc3d9afc0a4c0d4b31246f3","file":"src/app/core/models/common/export-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { DefaultDestinationAttribute, DestinationAttribute } from \\"../db/destination-attribute.model\\";\\nimport { ExpenseGroupingFieldOption } from \\"../enum/enum.model\\";\\n\\nexport type ExportSettingValidatorRule = {\\n    reimbursableExpense: string[];\\n    creditCardExpense: string[];\\n};\\n\\nexport type ExportModuleRule = {\\n    formController: string,\\n    requiredValue: Record<string, string[]>\\n};\\n\\nexport class ExportSettingModel {\\n    static getExportGroup(exportGroups: string[] | null | undefined): string {\\n        if (exportGroups) {\\n            const exportGroup = exportGroups.find((exportGroup) => {\\n                return exportGroup === ExpenseGroupingFieldOption.EXPENSE_ID || exportGroup === ExpenseGroupingFieldOption.CLAIM_NUMBER || exportGroup === ExpenseGroupingFieldOption.SETTLEMENT_ID;\\n            });\\n            return exportGroup ? exportGroup : ExpenseGroupingFieldOption.CLAIM_NUMBER;\\n        }\\n        return \'\';\\n    }\\n\\n    static formatGeneralMappingPayload(destinationAttribute: DestinationAttribute): DefaultDestinationAttribute {\\n        return {\\n            name: destinationAttribute.value,\\n            id: destinationAttribute.destination_id\\n        };\\n    }\\n}\\n","properties":[],"methods":[{"name":"formatGeneralMappingPayload","args":[{"name":"destinationAttribute","type":"DestinationAttribute","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DefaultDestinationAttribute","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"destinationAttribute","type":"DestinationAttribute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExportGroup","args":[{"name":"exportGroups","type":"string[] | null | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportGroups","type":"string[] | null | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ExportSettingModel","id":"class-ExportSettingModel-2e2c2d6118aa8645adc11f17e5ed4eb11da38d00ab0b2d101e05a020c0bfebfb23884a6e28503918a1f3b9fe88fd2c8c7cb30f958e820b71c1adb30b9a6fb102-1","file":"src/app/core/models/qbd/qbd-configuration/export-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\nimport { QBDCorporateCreditCardExpensesObject, QBDEntity, QBDExpenseGroupedBy, ExpenseState, CCCExpenseState, QBDExportDateType, QBDFyleField, QBDReimbursableExpensesObject, QBDScheduleFrequency } from \\"../../enum/enum.model\\";\\n\\nexport type QBDExportSettingFormOption = {\\n    label: string,\\n    value: ExpenseState | QBDReimbursableExpensesObject | QBDCorporateCreditCardExpensesObject | QBDExportDateType | QBDExpenseGroupedBy | QBDScheduleFrequency | QBDFyleField | string | QBDEntity;\\n}\\n\\nexport type QBDExportSettingGet = {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    is_simplify_report_closure_enabled: boolean,\\n    reimbursable_expenses_export_type: QBDReimbursableExpensesObject | null,\\n    bank_account_name: string | null,\\n    mileage_account_name : string | null,\\n    reimbursable_expense_state: ExpenseState | null,\\n    reimbursable_expense_date: QBDExportDateType | null,\\n    reimbursable_expense_grouped_by: QBDExpenseGroupedBy | null,\\n    credit_card_expense_export_type: QBDCorporateCreditCardExpensesObject | null,\\n    credit_card_expense_state: CCCExpenseState | null,\\n    credit_card_entity_name_preference: QBDEntity | null,\\n    credit_card_account_name: string | null,\\n    credit_card_expense_grouped_by: QBDExpenseGroupedBy | null,\\n    credit_card_expense_date: QBDExportDateType | null,\\n    workspace: number\\n}\\n\\nexport type QBDExportSettingPost = {\\n    reimbursable_expenses_export_type: QBDReimbursableExpensesObject | null,\\n    bank_account_name: string | null,\\n    mileage_account_name : string | null,\\n    reimbursable_expense_state: ExpenseState | null,\\n    reimbursable_expense_date: QBDExportDateType | null,\\n    reimbursable_expense_grouped_by: QBDExpenseGroupedBy | null,\\n    credit_card_expense_export_type: QBDCorporateCreditCardExpensesObject | null,\\n    credit_card_expense_state: CCCExpenseState | null,\\n    credit_card_entity_name_preference: QBDEntity | null,\\n    credit_card_account_name: string | null,\\n    credit_card_expense_grouped_by: QBDExpenseGroupedBy | null,\\n    credit_card_expense_date: QBDExportDateType | null,\\n}\\n\\nexport class ExportSettingModel {\\n    static constructPayload(exportSettingsForm: FormGroup): QBDExportSettingPost {\\n      const exportSettingPayload: QBDExportSettingPost = {\\n            reimbursable_expenses_export_type: exportSettingsForm.get(\'reimbursableExportType\')?.value ? exportSettingsForm.get(\'reimbursableExportType\')?.value : null,\\n            bank_account_name: exportSettingsForm.get(\'bankAccount\')?.value ? exportSettingsForm.get(\'bankAccount\')?.value : null,\\n            mileage_account_name: exportSettingsForm.get(\'mileageAccountName\')?.value ? exportSettingsForm.get(\'mileageAccountName\')?.value : null,\\n            reimbursable_expense_state: exportSettingsForm.get(\'reimbursableExpenseState\')?.value ? exportSettingsForm.get(\'reimbursableExpenseState\')?.value : null,\\n            reimbursable_expense_date: exportSettingsForm.get(\'reimbursableExportDate\')?.value ? exportSettingsForm.get(\'reimbursableExportDate\')?.value : null,\\n            reimbursable_expense_grouped_by: exportSettingsForm.get(\'reimbursableExpense\')?.value && exportSettingsForm.get(\'reimbursableExportGroup\')?.value ? exportSettingsForm.get(\'reimbursableExportGroup\')?.value : null,\\n            credit_card_expense_export_type: exportSettingsForm.get(\'cccExportType\')?.value ? exportSettingsForm.get(\'cccExportType\')?.value : null,\\n            credit_card_expense_state: exportSettingsForm.get(\'cccExpenseState\')?.value ? exportSettingsForm.get(\'cccExpenseState\')?.value : null,\\n            credit_card_entity_name_preference: exportSettingsForm.get(\'cccEntityName\')?.value ? exportSettingsForm.get(\'cccEntityName\')?.value : null,\\n            credit_card_account_name: exportSettingsForm.get(\'cccAccountName\')?.value ? exportSettingsForm.get(\'cccAccountName\')?.value : null,\\n            credit_card_expense_grouped_by: exportSettingsForm.get(\'creditCardExpense\')?.value && exportSettingsForm.get(\'cccExportGroup\')?.value ? exportSettingsForm.get(\'cccExportGroup\')?.value : null,\\n            credit_card_expense_date: exportSettingsForm.get(\'creditCardExpense\')?.value && exportSettingsForm.get(\'cccExportDate\')?.value ? exportSettingsForm.get(\'cccExportDate\')?.value : null\\n      };\\n      return exportSettingPayload;\\n    }\\n    }","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"exportSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"QBDExportSettingPost","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"ExportSettingModel-1"},{"name":"ExportSettingModel","id":"class-ExportSettingModel-315b491481d061aebb48ee70b75acb8b642c4412fc510eab031f30d5535577178f5cc51e5ba17b608d6b8692f79b2f6482996fe0684c23431355dab981993401-2","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ExpenseState, CCCExpenseState, Sage300ExpenseDate, Sage300ExportType, FyleField, ExpenseGroupingFieldOption, CorporateCreditCardExpensesObject } from \\"../../enum/enum.model\\";\\nimport { Sage300DestinationAttributes } from \\"../db/sage300-destination-attribuite.model\\";\\nimport { GroupedDestinationAttribute } from \\"../../db/destination-attribute.model\\";\\n\\nexport type Sage300ExportSettingFormOption = {\\n    label: string,\\n    value: ExpenseState | CCCExpenseState | CorporateCreditCardExpensesObject | Sage300ExportType | Sage300ExpenseDate | ExpenseGroupingFieldOption | FyleField\\n}\\n\\nexport type ExportSettingValidatorRule = {\\n  reimbursableExpense: string[];\\n  creditCardExpense: string[];\\n};\\n\\nexport type ExportModuleRule = {\\n  formController: string,\\n  requiredValue: Record<string, string[]>\\n};\\n\\ntype Sage300ExportSetting = {\\n  reimbursable_expenses_export_type: Sage300ExportType,\\n  reimbursable_expense_state: ExpenseState,\\n  reimbursable_expense_date: Sage300ExpenseDate,\\n  reimbursable_expense_grouped_by: string,\\n  credit_card_expense_export_type: Sage300ExportType,\\n  credit_card_expense_state:  CCCExpenseState,\\n  credit_card_expense_grouped_by: string,\\n  credit_card_expense_date: Sage300ExpenseDate,\\n  default_ccc_credit_card_account_name: string,\\n  default_ccc_credit_card_account_id: string,\\n  default_reimbursable_credit_card_account_name: string,\\n  default_reimbursable_credit_card_account_id: string,\\n  default_debit_card_account_name: string,\\n  default_debit_card_account_id: string,\\n  default_vendor_name: string,\\n  default_vendor_id: string,\\n  default_job_name: string,\\n  default_job_id: string\\n};\\n\\nexport interface Sage300ExportSettingGet extends Sage300ExportSetting {\\n    id: number,\\n    created_at: Date,\\n    update_at: Date,\\n    workspace: number\\n}\\n\\nexport interface Sage300ExportSettingPost extends Sage300ExportSetting {}\\n\\nexport class ExportSettingModel {\\n\\n  static mapAPIResponseToFormGroup(exportSettings: Sage300ExportSettingGet | null, destinationAttribute: GroupedDestinationAttribute): FormGroup {\\n    const findObjectByDestinationId = (array: Sage300DestinationAttributes[], id: string) => array?.find(item => item.destination_id === id) || null;\\n    return new FormGroup({\\n      reimbursableExpense: new FormControl(exportSettings?.reimbursable_expenses_export_type ? true : false),\\n      reimbursableExportType: new FormControl(exportSettings?.reimbursable_expenses_export_type ? exportSettings.reimbursable_expenses_export_type : null),\\n      reimbursableExpenseState: new FormControl(exportSettings?.reimbursable_expense_state ? exportSettings?.reimbursable_expense_state : null),\\n      reimbursableExportDate: new FormControl(exportSettings?.reimbursable_expense_date ? exportSettings?.reimbursable_expense_date : null),\\n      reimbursableExportGroup: new FormControl(exportSettings?.reimbursable_expense_grouped_by ? exportSettings?.reimbursable_expense_grouped_by: null),\\n      defaultReimbursableCCCAccountName: new FormControl(exportSettings?.default_reimbursable_credit_card_account_name? exportSettings?.default_reimbursable_credit_card_account_name : null),\\n      creditCardExpense: new FormControl(exportSettings?.credit_card_expense_export_type ? true : false),\\n      cccExportType: new FormControl(exportSettings?.credit_card_expense_export_type ? exportSettings.credit_card_expense_export_type : null),\\n      cccExpenseState: new FormControl(exportSettings?.credit_card_expense_state ? exportSettings?.credit_card_expense_state : null),\\n      cccExportDate: new FormControl(exportSettings?.credit_card_expense_date ? exportSettings?.credit_card_expense_date : null),\\n      cccExportGroup: new FormControl(exportSettings?.credit_card_expense_grouped_by ? exportSettings?.credit_card_expense_grouped_by: null),\\n      defaultCreditCardCCCAccountName: new FormControl(exportSettings?.default_ccc_credit_card_account_name ? findObjectByDestinationId(destinationAttribute.ACCOUNT, exportSettings?.default_ccc_credit_card_account_id) : null),\\n      defaultVendorName: new FormControl(exportSettings?.default_vendor_name ? findObjectByDestinationId(destinationAttribute.VENDOR, exportSettings?.default_vendor_id) : null),\\n      defaultDebitCardAccountName: new FormControl(exportSettings?.default_debit_card_account_name ? findObjectByDestinationId(destinationAttribute.ACCOUNT, exportSettings?.default_debit_card_account_id) : null),\\n      defaultJobName: new FormControl(exportSettings?.default_job_name ? findObjectByDestinationId(destinationAttribute.JOB, exportSettings?.default_job_id) : null)\\n    });\\n  }\\n\\n  /* eslint-disable */\\n  static createExportSettingPayload(exportSettingsForm: FormGroup): Sage300ExportSettingPost {\\n    return {\\n      reimbursable_expenses_export_type: exportSettingsForm.get(\'reimbursableExportType\')?.value ? exportSettingsForm.get(\'reimbursableExportType\')?.value : null,\\n      reimbursable_expense_state: exportSettingsForm.get(\'reimbursableExpenseState\')?.value ? exportSettingsForm.get(\'reimbursableExpenseState\')?.value : null,\\n      reimbursable_expense_date: exportSettingsForm.get(\'reimbursableExportDate\')?.value ? exportSettingsForm.get(\'reimbursableExportDate\')?.value : null,\\n      reimbursable_expense_grouped_by: exportSettingsForm.get(\'reimbursableExportGroup\')?.value ? exportSettingsForm.get(\'reimbursableExportGroup\')?.value : null,\\n      credit_card_expense_export_type: exportSettingsForm.get(\'cccExportType\')?.value ? exportSettingsForm.get(\'cccExportType\')?.value : null,\\n      credit_card_expense_state: exportSettingsForm.get(\'cccExpenseState\')?.value ? exportSettingsForm.get(\'cccExpenseState\')?.value : null,\\n      credit_card_expense_grouped_by: exportSettingsForm.get(\'cccExportGroup\')?.value ? exportSettingsForm.get(\'cccExportGroup\')?.value : null,\\n      credit_card_expense_date: exportSettingsForm.get(\'cccExportDate\')?.value ? exportSettingsForm.get(\'cccExportDate\')?.value : null,\\n      default_ccc_credit_card_account_name: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.value : null,\\n      default_ccc_credit_card_account_id: exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultCreditCardCCCAccountName\')?.value.destination_id : null,\\n      default_reimbursable_credit_card_account_name: exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value.value : null,\\n      default_reimbursable_credit_card_account_id: exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value ? exportSettingsForm.get(\'defaultReimbursableCCCAccountName\')?.value.destination_id : null,\\n      default_vendor_name: exportSettingsForm.get(\'defaultVendorName\')?.value ? exportSettingsForm.get(\'defaultVendorName\')?.value.value : null,\\n      default_vendor_id: exportSettingsForm.get(\'defaultVendorName\')?.value ? exportSettingsForm.get(\'defaultVendorName\')?.value.destination_id : null,\\n      default_debit_card_account_name: exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value ? exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value.value : null,\\n      default_debit_card_account_id: exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value ? exportSettingsForm.get(\'defaultDebitCardAccountName\')?.value.destination_id : null,\\n      default_job_name: exportSettingsForm.get(\'defaultJobName\')?.value ? exportSettingsForm.get(\'defaultJobName\')?.value.value : null,\\n      default_job_id: exportSettingsForm.get(\'defaultJobName\')?.value ? exportSettingsForm.get(\'defaultJobName\')?.value.destination_id : null\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"createExportSettingPayload","args":[{"name":"exportSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Sage300ExportSettingPost","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mapAPIResponseToFormGroup","args":[{"name":"exportSettings","type":"Sage300ExportSettingGet | null","deprecated":false,"deprecationMessage":""},{"name":"destinationAttribute","type":"GroupedDestinationAttribute","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportSettings","type":"Sage300ExportSettingGet | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"destinationAttribute","type":"GroupedDestinationAttribute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":2,"duplicateName":"ExportSettingModel-2"},{"name":"ExportSettingModel","id":"class-ExportSettingModel-633ce8e5c2bb815d225eee3b0e85617c75d8b7d8bfe6d1c12b8e3af8504eee85428eb3f6ba5c7ecb6bf60499e4b101b69a6efe3cfc11b69d171a16baaf7abab4-3","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { AbstractControl, FormGroup } from \\"@angular/forms\\";\\nimport { CorporateCreditCardExpensesObject, FyleField, ExpenseState, ExportDateType, IntacctReimbursableExpensesObject, CCCExpenseState, ExpenseGroupingFieldOption, IntacctExportSettingDestinationOptionKey } from \\"../../enum/enum.model\\";\\nimport { DefaultDestinationAttribute, DestinationAttribute } from \\"../../db/destination-attribute.model\\";\\nimport { IntacctDestinationAttribute } from \\"../db/destination-attribute.model\\";\\n\\nexport type ExportSettingFormOption = {\\n    label: string,\\n    value: ExpenseState | IntacctReimbursableExpensesObject | CorporateCreditCardExpensesObject | ExportDateType | string | FyleField | null;\\n}\\n\\nexport type ExportSettingConfiguration = {\\n    employee_field_mapping: string,\\n    auto_map_employees: string,\\n    reimbursable_expenses_object: IntacctReimbursableExpensesObject | null,\\n    corporate_credit_card_expenses_object: CorporateCreditCardExpensesObject | null\\n  }\\n\\nexport type ExportSettingGeneralMapping = {\\n    default_gl_account: DefaultDestinationAttribute,\\n    default_credit_card: DefaultDestinationAttribute,\\n    default_charge_card: DefaultDestinationAttribute,\\n    default_ccc_expense_payment_type: DefaultDestinationAttribute,\\n    default_reimbursable_expense_payment_type: DefaultDestinationAttribute,\\n    default_ccc_vendor: DefaultDestinationAttribute\\n}\\n\\nexport type ExpenseGroupSettingPost = {\\n    expense_state: ExpenseState;\\n    ccc_expense_state: CCCExpenseState;\\n    reimbursable_expense_group_fields: string[] | null;\\n    reimbursable_export_date_type: ExportDateType | null;\\n    corporate_credit_card_expense_group_fields: string[] | null;\\n    ccc_export_date_type: ExportDateType | null;\\n  };\\n\\nexport type ExportSettingGet = {\\n    configurations: ExportSettingConfiguration,\\n    expense_group_settings: ExpenseGroupSettingPost,\\n    general_mappings: ExportSettingGeneralMapping,\\n    workspace_id: number\\n}\\n\\nexport type ExportSettingPost = {\\n    configurations: ExportSettingConfiguration,\\n    expense_group_settings: ExpenseGroupSettingPost,\\n    general_mappings: ExportSettingGeneralMapping\\n  }\\n\\nexport type ExportSettingOptionSearch = {\\n    searchTerm: string,\\n    destinationAttributes: any[],\\n    destinationOptionKey: IntacctExportSettingDestinationOptionKey\\n}\\n\\n  export class ExportSettingModel {\\n    static constructPayload(exportSettingsForm: FormGroup): ExportSettingPost {\\n        const getValueOrDefault = (control: AbstractControl | null, defaultValue: any = null) => {\\n            return control?.value ? control.value : defaultValue;\\n        };\\n        const emptyDestinationAttribute = { id: null, name: null };\\n\\n        const cccExportType = getValueOrDefault(exportSettingsForm.get(\'cccExportType\'));\\n        let cccExportGroup = exportSettingsForm.get(\'cccExportGroup\')?.value ? [exportSettingsForm.value.cccExportGroup] : null;\\n\\n        if (cccExportType === CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION) {\\n            cccExportGroup = [ExpenseGroupingFieldOption.EXPENSE_ID];\\n        }\\n\\n        const exportSettingPayload: ExportSettingPost = {\\n            expense_group_settings: {\\n                expense_state: getValueOrDefault(exportSettingsForm.get(\'reimbursableExpenseState\')),\\n                ccc_expense_state: getValueOrDefault(exportSettingsForm.get(\'cccExpenseState\')),\\n                reimbursable_expense_group_fields: exportSettingsForm.get(\'reimbursableExportGroup\')?.value ? [exportSettingsForm.value.reimbursableExportGroup] : null,\\n                reimbursable_export_date_type: exportSettingsForm.get(\'reimbursableExportDate\')?.value ? exportSettingsForm.get(\'reimbursableExportDate\')?.value : null,\\n                corporate_credit_card_expense_group_fields: cccExportGroup,\\n                ccc_export_date_type: getValueOrDefault(exportSettingsForm.get(\'cccExportDate\')) === \'Spend Date\' ? \'spent_at\' : getValueOrDefault(exportSettingsForm.get(\'cccExportDate\'))\\n            },\\n            configurations: {\\n                reimbursable_expenses_object: getValueOrDefault(exportSettingsForm.get(\'reimbursableExportType\')),\\n                corporate_credit_card_expenses_object: cccExportType,\\n                employee_field_mapping: exportSettingsForm.get(\'employeeFieldMapping\')?.value ? exportSettingsForm.get(\'employeeFieldMapping\')?.value.toUpperCase() : null,\\n                auto_map_employees: getValueOrDefault(exportSettingsForm.get(\'autoMapEmployees\'))\\n            },\\n            general_mappings: {\\n                default_gl_account: exportSettingsForm.get(\'glAccount\')?.value?.value ? {id: exportSettingsForm.get(\'glAccount\')?.value.destination_id, name: exportSettingsForm.get(\'glAccount\')?.value.value} : emptyDestinationAttribute,\\n                default_credit_card: exportSettingsForm.get(\'creditCard\')?.value?.value ? {id: exportSettingsForm.get(\'creditCard\')?.value.destination_id, name: exportSettingsForm.get(\'creditCard\')?.value.value} : emptyDestinationAttribute,\\n                default_charge_card: exportSettingsForm.get(\'chargeCard\')?.value?.value ? {id: exportSettingsForm.get(\'chargeCard\')?.value.destination_id, name: exportSettingsForm.get(\'chargeCard\')?.value.value} : emptyDestinationAttribute,\\n                default_ccc_expense_payment_type: exportSettingsForm.get(\'cccExpensePaymentType\')?.value?.value ? {id: exportSettingsForm.get(\'cccExpensePaymentType\')?.value.destination_id, name: exportSettingsForm.get(\'cccExpensePaymentType\')?.value.value} : emptyDestinationAttribute,\\n                default_reimbursable_expense_payment_type: exportSettingsForm.get(\'reimbursableExpensePaymentType\')?.value?.value ? {id: exportSettingsForm.get(\'reimbursableExpensePaymentType\')?.value.destination_id, name: exportSettingsForm.get(\'reimbursableExpensePaymentType\')?.value.value} : emptyDestinationAttribute,\\n                default_ccc_vendor: exportSettingsForm.get(\'creditCardVendor\')?.value?.value ? {id: exportSettingsForm.get(\'creditCardVendor\')?.value.destination_id, name: exportSettingsForm.get(\'creditCardVendor\')?.value.value} : emptyDestinationAttribute\\n            }\\n        };\\n        return exportSettingPayload;\\n    }\\n}\\n","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"exportSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ExportSettingPost","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":3,"duplicateName":"ExportSettingModel-3"},{"name":"FieldMappingModel","id":"class-FieldMappingModel-1b3a4ce258576b4d860ca337e1db2fa9f0dd25158c40c500e5b3b6149533677cc2789393fc35a2503c88d1644b03dee1e59bc3bc0f22ec304f239e21067c4820","file":"src/app/core/models/qbd/qbd-configuration/field-mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\n\\nexport type QBDFieldMappingGet = {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    class_type: string | null,\\n    project_type: string | null,\\n    workspace: number\\n}\\n\\nexport type QBDFieldMappingPost = {\\n    class_type: string | null,\\n    project_type: string | null,\\n}\\n\\nexport class FieldMappingModel {\\n  static constructPayload(fieldMappingForm: FormGroup): QBDFieldMappingPost {\\n    const fieldMappingPayload: QBDFieldMappingPost = {\\n      class_type: fieldMappingForm.get(\'classType\')?.value ? fieldMappingForm.get(\'classType\')?.value : null,\\n      project_type: fieldMappingForm.get(\'customerType\')?.value ? fieldMappingForm.get(\'customerType\')?.value : null\\n    };\\n    return fieldMappingPayload;\\n  }\\n}","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"fieldMappingForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"QBDFieldMappingPost","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"fieldMappingForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"GustoModel","id":"class-GustoModel-82e3f92573c5e118d0da47a01bca927a8f8d64ef8f35498df0178ea53018ca1218e8b2da32e4173f11958114c8e072191b3fe40a00f0fce140051df2c3bf625e","file":"src/app/core/models/gusto/gusto.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\n\\nexport type EmailOption = {\\n    email: string;\\n    name: string;\\n}\\n\\nexport type Gusto = {\\n    id: number;\\n    org: number;\\n    folder_id: string;\\n    package_id: string;\\n    connection_id: string;\\n    created_at: Date;\\n    updated_at: Date;\\n}\\n\\nexport type GustoConfiguration = {\\n    id: number;\\n    org: number;\\n    recipe_id: string;\\n    recipe_data: string;\\n    recipe_status: boolean;\\n    additional_email_options: EmailOption[];\\n    emails_selected: EmailOption[];\\n}\\n\\n  export type GustoConfigurationPost = {\\n    org: number;\\n    additional_email_options: EmailOption[];\\n    emails_selected: EmailOption[];\\n}\\n\\nexport class GustoModel {\\n    static constructGustoConfigurationPayload(GustoHrConfigurationForm: FormGroup, orgId: number): GustoConfigurationPost {\\n      return {\\n        org: orgId,\\n        additional_email_options: GustoHrConfigurationForm.value.additionalEmails ? GustoHrConfigurationForm.value.additionalEmails : [],\\n        emails_selected: GustoHrConfigurationForm.value.email\\n      };\\n    }\\n  }","properties":[],"methods":[{"name":"constructGustoConfigurationPayload","args":[{"name":"GustoHrConfigurationForm","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"orgId","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"GustoConfigurationPost","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"GustoHrConfigurationForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgId","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"HelperUtility","id":"class-HelperUtility-223f205e3c7b2e2707645f99650c8539b205098d77b73326c8906e0e200bed379353270e2a53d966be00aec364c618ce3748a9d6af27d1a72fc59605ea580898","file":"src/app/core/models/common/helper.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormGroup, Validators } from \\"@angular/forms\\";\\n\\nexport class HelperUtility {\\n    static markControllerAsRequired(form: FormGroup, controllerName: string): void {\\n        form.controls[controllerName].setValidators(Validators.required);\\n    }\\n\\n    static clearValidatorAndResetValue(form: FormGroup, controllerName: string): void {\\n        form.controls[controllerName].clearValidators();\\n\\n        // Temporary hack: Don\'t reset value for fields that are used in reimbursable + ccc section\\n        if (controllerName !== \'accountsPayable\') {\\n            form.controls[controllerName].setValue(null);\\n        }\\n    }\\n}\\n","properties":[],"methods":[{"name":"clearValidatorAndResetValue","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"markControllerAsRequired","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":4,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ImportSettings","id":"class-ImportSettings-5a54078cdb4cf09bf2368052bb965b75448c92bbbfa07c5e4721b3a0e789e683a6ca9dad845492c0d80dcb790ec38279a182c485415cf70af1c85c6f758871c5","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormGroup } from \\"@angular/forms\\";\\nimport { DefaultDestinationAttribute } from \\"../../db/destination-attribute.model\\";\\n\\nconst emptyDestinationAttribute = { id: null, name: null };\\n\\nexport type Configuration = {\\n    import_vendors_as_merchants: boolean,\\n    import_categories: boolean,\\n    import_tax_codes: boolean\\n}\\n\\nexport type ImportSettingGeneralMapping = {\\n    default_tax_code: DefaultDestinationAttribute\\n}\\n\\nexport type MappingSetting = {\\n    source_field: string,\\n    destination_field: string,\\n    import_to_fyle: boolean,\\n    is_custom: boolean,\\n    source_placeholder: null\\n}\\n\\nexport type DependentFieldSetting = {\\n    is_import_enabled: boolean,\\n    cost_code_field_name: string,\\n    cost_code_placeholder: string,\\n    cost_type_field_name: string,\\n    cost_type_placeholder: string,\\n    workspace: number\\n  };\\n\\nexport type ImportSettingGet = {\\n    configurations: Configuration,\\n    general_mappings: ImportSettingGeneralMapping,\\n    mapping_settings: MappingSetting[],\\n    dependent_field_settings: DependentFieldSetting\\n    workspace_id: number\\n}\\n\\nexport type ImportSettingPost = {\\n    configurations: Configuration,\\n    general_mappings: ImportSettingGeneralMapping,\\n    mapping_settings: MappingSetting[],\\n    dependent_field_settings: DependentFieldSetting | null\\n  }\\nexport class ImportSettings {\\n    static constructPayload(importSettingsForm: FormGroup, existingDependentFieldSettings: DependentFieldSetting | null): ImportSettingPost{\\n        const expenseFieldArray = importSettingsForm.value.expenseFields;\\n\\n        // First filter out objects where import_to_fyle is false\\n        const filteredExpenseFieldArray = expenseFieldArray.filter((field: MappingSetting) => field.destination_field && field.source_field);\\n\\n        // Then map over the filtered array\\n        const mappingSettings = filteredExpenseFieldArray.map((field: MappingSetting) => {\\n          return {\\n            source_field: field.source_field.toUpperCase(),\\n            destination_field: field.destination_field,\\n            import_to_fyle: field.import_to_fyle,\\n            is_custom: (field.source_field.toUpperCase() === \'PROJECT\' || field.source_field.toUpperCase() === \'COST_CENTER\') ? false : true,\\n            source_placeholder: field.source_placeholder\\n          };\\n        });\\n\\n        let dependentFieldSetting = null;\\n        if (existingDependentFieldSettings || importSettingsForm.value.isDependentImportEnabled) {\\n            dependentFieldSetting = {\\n                is_import_enabled: importSettingsForm.value.isDependentImportEnabled,\\n                cost_code_field_name: importSettingsForm.get(\'costCodes\')?.value?.attribute_type,\\n                cost_code_placeholder: importSettingsForm.get(\'costCodes\')?.value?.source_placeholder,\\n                cost_type_field_name: importSettingsForm.get(\'costTypes\')?.value?.attribute_type,\\n                cost_type_placeholder: importSettingsForm.get(\'costTypes\')?.value?.source_placeholder,\\n                workspace: importSettingsForm.value.workspaceId\\n            };\\n        }\\n\\n        const importSettingPayload: ImportSettingPost = {\\n                configurations: {\\n                    import_categories: importSettingsForm.value.importCategories ? importSettingsForm.value.importCategories : false,\\n                    import_tax_codes: importSettingsForm.value.importTaxCodes ? importSettingsForm.value.importTaxCodes : false,\\n                    import_vendors_as_merchants: importSettingsForm.value.importVendorAsMerchant ? importSettingsForm.value.importVendorAsMerchant : false\\n                },\\n                general_mappings: {\\n                    default_tax_code: importSettingsForm.value.importTaxCodes ? {\\n                        name: importSettingsForm.value.sageIntacctTaxCodes.value,\\n                        id: importSettingsForm.value.sageIntacctTaxCodes.destination_id\\n                    } : emptyDestinationAttribute\\n                },\\n                mapping_settings: mappingSettings,\\n                dependent_field_settings: dependentFieldSetting\\n            };\\n\\n        return importSettingPayload;\\n    }\\n}","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"importSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"existingDependentFieldSettings","type":"DependentFieldSetting | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImportSettingPost","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"existingDependentFieldSettings","type":"DependentFieldSetting | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ImportSettingsModel","id":"class-ImportSettingsModel-6d6e823dcf3cd5ca6f59e4500b17e1d4a842a5609d00e5a9589523523d2c2226c95facb85199cdd1745444a95c35eef2f6ea6c3ab3e68ccb766a067f4de371d6","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormGroup, FormControl } from \\"@angular/forms\\";\\nimport { RxwebValidators } from \\"@rxweb/reactive-form-validators\\";\\nimport { BusinessCentralImportSettingsGet } from \\"../business-central/business-central-configuration/business-central-import-settings.model\\";\\nimport { IntegrationField } from \\"../db/mapping.model\\";\\nimport { Sage300ImportSettingGet } from \\"../sage300/sage300-configuration/sage300-import-settings.model\\";\\n\\nexport type ImportDefaultField = {\\n  destination_field: string,\\n  source_field: string,\\n  formController: string\\n}\\n\\nexport type ExpenseField = {\\n    attribute_type: string;\\n    display_name: string;\\n    source_placeholder: string | null;\\n    is_dependent: boolean;\\n  };\\n\\n  export type ExpenseFieldFormArray = {\\n    source_field: string;\\n    destination_field: string;\\n    import_to_fyle: boolean;\\n    is_custom: boolean;\\n    source_placeholder: string;\\n};\\n\\nexport type ImportSettingMappingRow = {\\n  destination_field: string,\\n  import_to_fyle: boolean,\\n  is_custom: boolean,\\n  source_field: string,\\n  source_placeholder: string | null\\n}\\n\\nexport type ImportSettingsCustomFieldRow = {\\n  attribute_type: string,\\n  display_name: string,\\n  source_placeholder: string | null,\\n  is_dependent: boolean\\n}\\n\\nexport class ImportSettingsModel {\\n\\n  static getCustomFieldOption(): ExpenseField[] {\\n    return [{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: false }];\\n  }\\n\\n  static createFormGroup(data: ImportSettingMappingRow): FormGroup {\\n    return new FormGroup ({\\n      source_field: new FormControl(data.source_field || \'\', RxwebValidators.unique()),\\n      destination_field: new FormControl(data.destination_field || \'\', RxwebValidators.unique()),\\n      import_to_fyle: new FormControl(data.import_to_fyle || false),\\n      is_custom: new FormControl(data.is_custom || false),\\n      source_placeholder: new FormControl(data.source_placeholder || null)\\n    });\\n  }\\n\\n  static constructFormArray(importSettingsMappingSettings: ImportSettingMappingRow[] | [], accountingAppFields: IntegrationField[]): FormGroup[] {\\n    const expenseFieldFormArray: FormGroup[] = [];\\n    const mappedFieldMap = new Map<string, any>();\\n    const unmappedFieldMap = new Map<string, any>();\\n\\n    // First loop to populate mappedFieldMap\\n    accountingAppFields.forEach((accountingAppField) => {\\n      const mappingSetting = importSettingsMappingSettings.find(\\n        (setting) => setting.destination_field === accountingAppField.attribute_type\\n      );\\n\\n      const fieldData = mappingSetting || {\\n          destination_field: accountingAppField.attribute_type,\\n          import_to_fyle: false,\\n          is_custom: false,\\n          source_field: \'\',\\n          source_placeholder: null\\n      };\\n      if (mappingSetting) {\\n        mappedFieldMap.set(accountingAppField.attribute_type, fieldData);\\n      } else {\\n          unmappedFieldMap.set(accountingAppField.attribute_type, fieldData);\\n      }\\n    });\\n\\n    // Handle only mapped fields\\n    accountingAppFields.forEach((accountingAppField) => {\\n      const fieldData = mappedFieldMap.get(accountingAppField.attribute_type);\\n      if (fieldData) {\\n        expenseFieldFormArray.push(this.createFormGroup(fieldData));\\n      }\\n    });\\n\\n    if (mappedFieldMap.size === 0){\\n      accountingAppFields.forEach((accountingAppField) => {\\n        if (expenseFieldFormArray.length < 3) {\\n          const fieldData = unmappedFieldMap.get(accountingAppField.attribute_type);\\n          if (fieldData) {\\n            expenseFieldFormArray.push(this.createFormGroup(fieldData));\\n          }\\n        }\\n      });\\n    }\\n    return expenseFieldFormArray;\\n  }\\n\\n  static constructMappingSettingPayload(expenseFieldArray: ImportSettingMappingRow[]): ImportSettingMappingRow[] {\\n    // First filter out objects where import_to_fyle is false\\n    const filteredExpenseFieldArray = expenseFieldArray.filter((field: ImportSettingMappingRow) => field.destination_field && field.source_field);\\n\\n    // Then map over the filtered array\\n    const mappingSettings = filteredExpenseFieldArray.map((field: ImportSettingMappingRow) => {\\n      return {\\n        source_field: field.source_field.toUpperCase(),\\n        destination_field: field.destination_field,\\n        import_to_fyle: field.import_to_fyle,\\n        is_custom: (field.source_field.toUpperCase() === \'PROJECT\' || field.source_field.toUpperCase() === \'COST_CENTER\') ? false : true,\\n        source_placeholder: field.source_placeholder\\n      };\\n    });\\n\\n    return mappingSettings;\\n  }\\n}","properties":[],"methods":[{"name":"constructFormArray","args":[{"name":"importSettingsMappingSettings","type":"ImportSettingMappingRow[] | ","deprecated":false,"deprecationMessage":""},{"name":"accountingAppFields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup[]","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettingsMappingSettings","type":"ImportSettingMappingRow[] | ","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountingAppFields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructMappingSettingPayload","args":[{"name":"expenseFieldArray","type":"ImportSettingMappingRow[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImportSettingMappingRow[]","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"expenseFieldArray","type":"ImportSettingMappingRow[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"createFormGroup","args":[{"name":"data","type":"ImportSettingMappingRow","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"data","type":"ImportSettingMappingRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getCustomFieldOption","args":[],"optional":false,"returnType":"ExpenseField[]","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[126]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"MappingClass","id":"class-MappingClass-4373a39b43b0280d6be512eb1d30c77c073118870255eb544cc7f5934dad649b66acd6846358e1dd0d2e9700dc7e87dab1fa9fece5dd23db7bb622a53c1a8a4e","file":"src/app/core/models/db/generic-mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FyleField } from \\"../enum/enum.model\\";\\nimport { CategoryMappingPost } from \\"./category-mapping.model\\";\\nimport { DestinationAttribute } from \\"./destination-attribute.model\\";\\nimport { EmployeeMappingPost } from \\"./employee-mapping.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { ExtendedGenericMapping } from \\"./extended-generic-mapping.model\\";\\n\\nexport type GenericMappingPost = {\\n    source_type: string;\\n    source_value: string;\\n    destination_type: string;\\n    destination_id: string;\\n    destination_value: string;\\n};\\n\\nexport interface GenericMapping {\\n  created_at: Date;\\n  destination: DestinationAttribute;\\n  destination_type: string;\\n  id: number;\\n  source: ExpenseAttribute;\\n  source_type: string,\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport type MinimalMappingSetting = {\\n  source_field: string;\\n  destination_field: string;\\n};\\n\\nexport class MappingClass {\\n\\n  static constructEmployeeMappingPayload(selectedRow: ExtendedGenericMapping, event: any, employeeFieldMapping: FyleField, workspaceId: string) {\\n    const employeeMapping: EmployeeMappingPost = {\\n      source_employee: {\\n        id: selectedRow.id\\n      },\\n      destination_vendor: {\\n        id: employeeFieldMapping===FyleField.VENDOR ? event.value.id : (selectedRow.employeemapping?.length && selectedRow.employeemapping[0].destination_vendor ? selectedRow.employeemapping[0].destination_vendor?.id : null)\\n      },\\n      destination_employee: {\\n        id: employeeFieldMapping===FyleField.EMPLOYEE ? event.value.id : (selectedRow.employeemapping?.length && selectedRow.employeemapping[0].destination_employee ? selectedRow.employeemapping[0].destination_employee?.id : null)\\n      },\\n      destination_card_account: {\\n        id: (selectedRow.employeemapping?.length && selectedRow.employeemapping[0].destination_card_account ? selectedRow.employeemapping[0].destination_card_account?.id : null)\\n      },\\n      workspace: parseInt(workspaceId)\\n    };\\n\\n    return employeeMapping;\\n  }\\n\\n  static constructCategoryMappingPayload(selectedRow: ExtendedGenericMapping, event: any, destinationField: string, workspaceId: string) {\\n    const sourceId = selectedRow.id;\\n\\n    const categoryMappingsPayload: CategoryMappingPost = {\\n      source_category: {\\n        id: sourceId\\n      },\\n      destination_account: {\\n        id: destinationField === \'ACCOUNT\' ? event.value.id : null\\n      },\\n      destination_expense_head: {\\n        id: destinationField !== \'ACCOUNT\' ? event.value.id : null\\n      },\\n      workspace: parseInt(workspaceId)\\n    };\\n\\n    return categoryMappingsPayload;\\n  }\\n\\n  static constructGenericMappingPayload(selectedRow: ExtendedGenericMapping, event: any, mappingSetting: MinimalMappingSetting) {\\n    const genericMappingPayload: GenericMappingPost = {\\n      source_type: mappingSetting.source_field,\\n      source_value: selectedRow.value,\\n      destination_type: mappingSetting.destination_field,\\n      destination_id: event.value.destination_id,\\n      destination_value: event.value.value\\n    };\\n\\n    return genericMappingPayload;\\n  }\\n}","properties":[],"methods":[{"name":"constructCategoryMappingPayload","args":[{"name":"selectedRow","type":"ExtendedGenericMapping","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""},{"name":"destinationField","type":"string","deprecated":false,"deprecationMessage":""},{"name":"workspaceId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"CategoryMappingPost","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"selectedRow","type":"ExtendedGenericMapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"destinationField","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructEmployeeMappingPayload","args":[{"name":"selectedRow","type":"ExtendedGenericMapping","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""},{"name":"employeeFieldMapping","type":"FyleField","deprecated":false,"deprecationMessage":""},{"name":"workspaceId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"EmployeeMappingPost","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"selectedRow","type":"ExtendedGenericMapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"employeeFieldMapping","type":"FyleField","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructGenericMappingPayload","args":[{"name":"selectedRow","type":"ExtendedGenericMapping","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""},{"name":"mappingSetting","type":"MinimalMappingSetting","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"GenericMappingPost","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"selectedRow","type":"ExtendedGenericMapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingSetting","type":"MinimalMappingSetting","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"MappingModel","id":"class-MappingModel-edae5c7149cd8e6c601b2ef99be7655c153d472dcc8dc605ab8fd96fcd3859c8f49c33e9dea9218a4f993525da383e8f7cead0685818cf2a7b59280165e1a852","file":"src/app/core/models/qbd/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export type MappingPost = {\\n  attribute_type: string;\\n  source_value: string;\\n  source_id: string;\\n  destination_value: string | null;\\n};\\n\\nexport interface Mapping extends MappingPost {\\n  id: number;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport type MappingResponse = {\\n  count: number;\\n  next: string;\\n  previous: string;\\n  results: Mapping[];\\n};\\n\\nexport type MappingStats = {\\n  all_attributes_count: number;\\n  unmapped_attributes_count: number;\\n};\\n\\nexport class MappingModel {\\n  static constructPayload(mapping: Mapping): MappingPost {\\n    return {\\n      attribute_type: mapping.attribute_type,\\n      source_value: mapping.source_value,\\n      source_id: mapping.source_id.toString(),\\n      destination_value: mapping.destination_value\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"mapping","type":"Mapping","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"MappingPost","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"mapping","type":"Mapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"MappingModel","id":"class-MappingModel-e11b476377c50455fa0a7323b221487cc93b8b58b10dbceabc611ff0daf68885a6a27366a7ff5562b866c60dfc027bdef59d8f58601804e9b22d60e09c8290cf-1","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { DestinationAttribute } from \\"../../db/destination-attribute.model\\";\\nimport { FyleField, MappingState, SageIntacctField } from \\"../../enum/enum.model\\";\\nimport { EmployeeMapping } from \\"./employee-mapping.model\\";\\nimport { Error } from \\"./error.model\\";\\nimport { ExpenseAttribute } from \\"./expense-attribute.model\\";\\nimport { MinimalMappingSetting } from \\"./mapping-setting.model\\";\\n\\nexport type MappingPost = {\\n  source_type: string;\\n  source_value: string;\\n  destination_type: string;\\n  destination_id: string;\\n  destination_value: string;\\n};\\n\\nexport interface MappingIntacct extends MappingPost {\\n  id: number;\\n  source: ExpenseAttribute;\\n  destination: DestinationAttribute;\\n  created_at: Date;\\n  updated_at: Date;\\n  workspace: number;\\n}\\n\\nexport type MappingResponse = {\\n  count: number;\\n  next: string;\\n  previous: string;\\n  results: EmployeeMapping[];\\n};\\n\\nexport type MappingList = {\\n  fyle: {\\n    id: number;\\n    value: string;\\n  };\\n  intacct: {\\n    id: number | string;\\n    value: string;\\n  };\\n  preserveDestination?: {\\n    id: number | string;\\n  }\\n  autoMapped: boolean;\\n  state: MappingState;\\n  index: number;\\n};\\n\\nexport type MappingStats = {\\n  all_attributes_count: number;\\n  unmapped_attributes_count: number;\\n};\\n\\nexport type ResolveMappingError = {\\n  sourceType: FyleField;\\n  destinationType: SageIntacctField | FyleField;\\n  fyleAttributes: Error[];\\n  workspaceId: string;\\n};\\n\\nexport class MappingModel {\\n  static constructPayload(mappingSetting: MinimalMappingSetting, mappingRow: MappingList): MappingPost {\\n    return {\\n      source_type: mappingSetting.source_field,\\n      source_value: mappingRow.fyle.value,\\n      destination_type: mappingSetting.destination_field,\\n      destination_id: mappingRow.intacct.id.toString(),\\n      destination_value: mappingRow.intacct.value\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"mappingSetting","type":"MinimalMappingSetting","deprecated":false,"deprecationMessage":""},{"name":"mappingRow","type":"MappingList","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"MappingPost","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"mappingSetting","type":"MinimalMappingSetting","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingRow","type":"MappingList","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[],"isDuplicate":true,"duplicateId":1,"duplicateName":"MappingModel-1"},{"name":"QBOAdvancedSettingModel","id":"class-QBOAdvancedSettingModel-febb2e691b99c8101bfa6f6723f602c48475aac5f4efafdb8c9bb3b94dc0e4278eda7c7e9fb712dd2d87f1fc7961b8a392d119932f57601a4a8762aaed5fb27f","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { EmailOption, SelectFormOption } from \\"../../common/select-form-option.model\\";\\nimport { DefaultDestinationAttribute } from \\"../../db/destination-attribute.model\\";\\nimport { QBOPaymentSyncDirection } from \\"../../enum/enum.model\\";\\nimport { ExportSettingValidatorRule } from \\"../../common/export-settings.model\\";\\nimport { AdvancedSettingValidatorRule, AdvancedSettingsModel } from \\"../../common/advanced-settings.model\\";\\nimport { HelperUtility } from \\"../../common/helper.model\\";\\nimport { brandingConfig } from \\"src/app/branding/branding-config\\";\\n\\n\\nexport type QBOAdvancedSettingWorkspaceGeneralSetting = {\\n  sync_fyle_to_qbo_payments: boolean,\\n  sync_qbo_to_fyle_payments: boolean,\\n  auto_create_destination_entity: boolean,\\n  auto_create_merchants_as_vendors: boolean,\\n  je_single_credit_line: boolean,\\n  change_accounting_period: boolean,\\n  memo_structure: string[]\\n}\\n\\nexport type QBOAdvancedSettingGeneralMapping = {\\n  bill_payment_account: DefaultDestinationAttribute\\n}\\n\\nexport type QBOAdvancedSettingWorkspaceSchedule = {\\n  enabled: boolean,\\n  interval_hours: number,\\n  emails_selected: string[] | null,\\n  additional_email_options: EmailOption[]\\n}\\n\\nexport type QBOAdvancedSettingWorkspaceSchedulePost = {\\n  hours: number;\\n  schedule_enabled: boolean;\\n  emails_selected: string[];\\n  email_added: EmailOption\\n}\\n\\nexport type QBOAdvancedSettingPost = {\\n  workspace_general_settings: QBOAdvancedSettingWorkspaceGeneralSetting,\\n  general_mappings: QBOAdvancedSettingGeneralMapping,\\n  workspace_schedules: QBOAdvancedSettingWorkspaceSchedule,\\n}\\n\\nexport type QBOAdvancedSettingGet = {\\n  workspace_general_settings: QBOAdvancedSettingWorkspaceGeneralSetting,\\n  general_mappings: QBOAdvancedSettingGeneralMapping,\\n  workspace_schedules: QBOAdvancedSettingWorkspaceSchedule,\\n  workspace_id:number\\n}\\n\\nexport type QBOAdvancedSettingAddEmailModel = {\\n  workspaceId: number;\\n  hours: number;\\n  schedulEnabled: boolean;\\n  selectedEmails: string[];\\n}\\n\\nexport class QBOAdvancedSettingModel extends HelperUtility {\\n  static getPaymentSyncOptions(): SelectFormOption[] {\\n    return [\\n      {\\n        label: `Export ${brandingConfig.brandName} ACH Payments to Quickbooks Online`,\\n        value: QBOPaymentSyncDirection.FYLE_TO_QBO\\n      },\\n      {\\n        label: `Import Quickbooks Payments into ${brandingConfig.brandName}`,\\n        value: QBOPaymentSyncDirection.QBO_TO_FYLE\\n      }\\n    ];\\n  }\\n\\n  static getValidators(): AdvancedSettingValidatorRule {\\n    return {\\n      paymentSync: \'billPaymentAccount\',\\n      exportSchedule: \'exportScheduleFrequency\'\\n    };\\n  }\\n\\n  static setConfigurationSettingValidatorsAndWatchers(form: FormGroup): void {\\n    const validatorRule = this.getValidators();\\n    const keys = Object.keys(validatorRule);\\n\\n    Object.values(validatorRule).forEach((value, index) => {\\n      form.controls[keys[index]].valueChanges.subscribe((selectedValue) => {\\n        if (selectedValue) {\\n          this.markControllerAsRequired(form, value);\\n        } else {\\n          this.clearValidatorAndResetValue(form, value);\\n        }\\n      });\\n    });\\n  }\\n\\n  static mapAPIResponseToFormGroup(advancedSettings: QBOAdvancedSettingGet, isSkipExportEnabled: boolean, adminEmails: EmailOption[]): FormGroup {\\n    return new FormGroup({\\n      paymentSync: new FormControl(advancedSettings?.workspace_general_settings.sync_fyle_to_qbo_payments ? QBOPaymentSyncDirection.FYLE_TO_QBO : advancedSettings?.workspace_general_settings.sync_qbo_to_fyle_payments ? QBOPaymentSyncDirection.QBO_TO_FYLE : null),\\n      billPaymentAccount: new FormControl(advancedSettings?.general_mappings.bill_payment_account?.id ? advancedSettings?.general_mappings.bill_payment_account : null),\\n      changeAccountingPeriod: new FormControl(advancedSettings?.workspace_general_settings.change_accounting_period),\\n      singleCreditLineJE: new FormControl(advancedSettings?.workspace_general_settings.je_single_credit_line),\\n      autoCreateVendors: new FormControl(advancedSettings?.workspace_general_settings.auto_create_destination_entity),\\n      autoCreateMerchantsAsVendors: new FormControl(advancedSettings?.workspace_general_settings.auto_create_merchants_as_vendors),\\n      exportSchedule: new FormControl(advancedSettings?.workspace_schedules?.enabled ? true : false),\\n      exportScheduleFrequency: new FormControl(advancedSettings?.workspace_schedules?.enabled ? advancedSettings?.workspace_schedules.interval_hours : 1),\\n      memoStructure: new FormControl(advancedSettings?.workspace_general_settings.memo_structure),\\n      skipExport: new FormControl(isSkipExportEnabled),\\n      searchOption: new FormControl(),\\n      search: new FormControl(),\\n      additionalEmails: new FormControl([]),\\n      email: new FormControl(advancedSettings?.workspace_schedules?.emails_selected && advancedSettings?.workspace_schedules?.emails_selected?.length > 0 ? AdvancedSettingsModel.filterAdminEmails(advancedSettings?.workspace_schedules?.emails_selected, adminEmails) : [])\\n    });\\n  }\\n\\n  static constructPayload(advancedSettingsForm: FormGroup): QBOAdvancedSettingPost {\\n    const emptyDestinationAttribute = {id: null, name: null};\\n    const advancedSettingPayload: QBOAdvancedSettingPost = {\\n      workspace_general_settings: {\\n        sync_fyle_to_qbo_payments: advancedSettingsForm.get(\'paymentSync\')?.value && advancedSettingsForm.get(\'paymentSync\')?.value === QBOPaymentSyncDirection.FYLE_TO_QBO ? true : false,\\n        sync_qbo_to_fyle_payments: advancedSettingsForm.get(\'paymentSync\')?.value && advancedSettingsForm.get(\'paymentSync\')?.value === QBOPaymentSyncDirection.QBO_TO_FYLE ? true : false,\\n        auto_create_destination_entity: advancedSettingsForm.get(\'autoCreateVendors\')?.value,\\n        auto_create_merchants_as_vendors: advancedSettingsForm.get(\'autoCreateMerchantsAsVendors\')?.value,\\n        je_single_credit_line: advancedSettingsForm.get(\'singleCreditLineJE\')?.value,\\n        change_accounting_period: advancedSettingsForm.get(\'changeAccountingPeriod\')?.value,\\n        memo_structure: advancedSettingsForm.get(\'memoStructure\')?.value\\n      },\\n      general_mappings: {\\n        bill_payment_account: advancedSettingsForm.get(\'billPaymentAccount\')?.value ? advancedSettingsForm.get(\'billPaymentAccount\')?.value : emptyDestinationAttribute\\n      },\\n      workspace_schedules: {\\n        enabled: advancedSettingsForm.get(\'exportSchedule\')?.value ? true : false,\\n        interval_hours: advancedSettingsForm.get(\'exportSchedule\')?.value && advancedSettingsForm.get(\'exportScheduleFrequency\')?.value ? advancedSettingsForm.get(\'exportScheduleFrequency\')?.value : null,\\n        emails_selected: advancedSettingsForm.get(\'email\')?.value ? AdvancedSettingsModel.formatSelectedEmails(advancedSettingsForm.get(\'email\')?.value) : null,\\n        additional_email_options: advancedSettingsForm.get(\'additionalEmails\')?.value ? advancedSettingsForm.get(\'additionalEmails\')?.value[0] : null\\n      }\\n    };\\n    return advancedSettingPayload;\\n  }\\n}\\n","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"advancedSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"QBOAdvancedSettingPost","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"advancedSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getPaymentSyncOptions","args":[],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getValidators","args":[],"optional":false,"returnType":"AdvancedSettingValidatorRule","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"mapAPIResponseToFormGroup","args":[{"name":"advancedSettings","type":"QBOAdvancedSettingGet","deprecated":false,"deprecationMessage":""},{"name":"isSkipExportEnabled","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"adminEmails","type":"EmailOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"advancedSettings","type":"QBOAdvancedSettingGet","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isSkipExportEnabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"adminEmails","type":"EmailOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setConfigurationSettingValidatorsAndWatchers","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clearValidatorAndResetValue","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":8,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"HelperUtility"}},{"name":"markControllerAsRequired","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":4,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"HelperUtility"}}],"indexSignatures":[],"extends":["HelperUtility"],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"QBOCloneSettingModel","id":"class-QBOCloneSettingModel-a298daff071f3b92d2f1e10a14f92ff25179a9822f9744919021efc952752822e354de0d534bc2e32fc9018fed9ef7a50a3587cc2587024cd9bf25459e9c5879","file":"src/app/core/models/qbo/qbo-configuration/qbo-clone-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormControl, FormGroup, Validators } from \\"@angular/forms\\";\\nimport { MappingSetting } from \\"../../db/mapping-setting.model\\";\\nimport { QBOExportSettingGet, QBOExportSettingModel, QBOExportSettingPost } from \\"./qbo-export-setting.model\\";\\nimport { QBOImportSettingGet, QBOImportSettingModel, QBOImportSettingPost } from \\"./qbo-import-setting.model\\";\\nimport { QBOAdvancedSettingGet, QBOAdvancedSettingModel, QBOAdvancedSettingPost } from \\"./qbo-advanced-setting.model\\";\\nimport { QBOEmployeeSettingGet, QBOEmployeeSettingModel, QBOEmployeeSettingPost } from \\"./qbo-employee-setting.model\\";\\n\\nexport type QBOCloneSetting = {\\n    workspace_id: number,\\n    export_settings: QBOExportSettingGet,\\n    import_settings: QBOImportSettingGet,\\n    advanced_configurations: QBOAdvancedSettingGet,\\n    employee_mappings: QBOEmployeeSettingGet\\n}\\n\\nexport type QBOCloneSettingPost = {\\n    export_settings: QBOExportSettingPost,\\n    import_settings: QBOImportSettingPost,\\n    advanced_configurations: QBOAdvancedSettingPost,\\n    employee_mappings: QBOEmployeeSettingPost\\n}\\n\\nexport class QBOCloneSettingModel {\\n    static constructPayload(employeeSettingForm: FormGroup, exportSettingForm: FormGroup, importSettingForm: FormGroup, advancedSettingForm: FormGroup): QBOCloneSettingPost {\\n        const employeeSettingPayload = QBOEmployeeSettingModel.constructPayload(employeeSettingForm);\\n        const exportSettingPayload = QBOExportSettingModel.constructPayload(exportSettingForm);\\n        const importSettingPayload = QBOImportSettingModel.constructPayload(importSettingForm);\\n        const advancedSettingPayload = QBOAdvancedSettingModel.constructPayload(advancedSettingForm);\\n\\n        return {\\n            export_settings: exportSettingPayload,\\n            import_settings: importSettingPayload,\\n            advanced_configurations: advancedSettingPayload,\\n            employee_mappings: employeeSettingPayload\\n        };\\n    }\\n}\\n","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"employeeSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"exportSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"importSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"advancedSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"QBOCloneSettingPost","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"employeeSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"importSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"advancedSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"QBOConnectorModel","id":"class-QBOConnectorModel-f4f782f2bd6196b6a34b795f6b92d2335c186e01cdc46521b971ae9a15e524da19b10c762beea68b9b973b88dbd2cd49cf51c5bd7c0b247e08aaabc3811e3d3d","file":"src/app/core/models/qbo/qbo-configuration/qbo-connector.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { environment } from \\"src/environments/environment\\";\\n\\nexport type QBOConnector = {\\n  code: string;\\n  realm_id: string;\\n}\\n\\nexport interface QBOConnectorPost extends QBOConnector {\\n  redirect_uri: string;\\n}\\n\\nexport class QBOConnectorModel {\\n  static constructPayload(code: string, realmId: string): QBOConnectorPost {\\n    return {\\n      code,\\n      realm_id: realmId,\\n      redirect_uri: `${environment.qbo_oauth_redirect_uri}`\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""},{"name":"realmId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"QBOConnectorPost","typeParameters":[],"line":13,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"realmId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"QBOEmployeeSettingModel","id":"class-QBOEmployeeSettingModel-1fa053e0f8774ec9f868325c294541e35497f073366706a7e2e626710f1e3bc7db11ac12b22e6f794ce6b5e78401b3a469bb686ddfbf81f074814cd266a31ede","file":"src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { AutoMapEmployeeOptions, EmployeeFieldMapping, FyleField } from \\"../../enum/enum.model\\";\\nimport { SelectFormOption } from \\"../../common/select-form-option.model\\";\\nimport { brandingConfig } from \\"src/app/branding/branding-config\\";\\nimport { FormControl, FormGroup, Validators } from \\"@angular/forms\\";\\n\\nexport type QBOEmployeeSettingWorkspaceGeneralSetting = {\\n  employee_field_mapping: EmployeeFieldMapping,\\n  auto_map_employees: AutoMapEmployeeOptions\\n}\\n\\nexport type QBOEmployeeSettingPost = {\\n  workspace_general_settings: QBOEmployeeSettingWorkspaceGeneralSetting;\\n}\\n\\nexport type QBOEmployeeSettingGet = {\\n  workspace_general_settings: QBOEmployeeSettingWorkspaceGeneralSetting,\\n  workspace_id: number\\n}\\n\\nexport class QBOEmployeeSettingModel {\\n  static getAutoMapEmployeeOptions(): SelectFormOption[] {\\n    return [\\n        {\\n          value: AutoMapEmployeeOptions.NAME,\\n          label: `${brandingConfig.brandName} Name to QuickBooks Online Display name`\\n        },\\n        {\\n          value: AutoMapEmployeeOptions.EMAIL,\\n          label: `${brandingConfig.brandName} Email to QuickBooks Online Email`\\n        },\\n        {\\n          value: AutoMapEmployeeOptions.EMPLOYEE_CODE,\\n          label: `${brandingConfig.brandName} Employee Code to QuickBooks Online Display name`\\n        }\\n      ];\\n  }\\n\\n  static parseAPIResponseToFormGroup(employee_settings: QBOEmployeeSettingGet): FormGroup {\\n    return new FormGroup({\\n        employeeMapping: new FormControl(employee_settings.workspace_general_settings?.employee_field_mapping),\\n        autoMapEmployee: new FormControl(employee_settings.workspace_general_settings?.auto_map_employees)\\n    });\\n  }\\n\\nstatic constructPayload(employeeSettingsForm: FormGroup): QBOEmployeeSettingPost {\\n    const employeeSettingPayload: QBOEmployeeSettingPost = {\\n      workspace_general_settings: {\\n        employee_field_mapping: employeeSettingsForm.get(\'employeeMapping\')?.value,\\n        auto_map_employees: employeeSettingsForm.get(\'autoMapEmployee\')?.value\\n      }\\n    };\\n    return employeeSettingPayload;\\n  }\\n}\\n","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"employeeSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"QBOEmployeeSettingPost","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"employeeSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAutoMapEmployeeOptions","args":[],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"parseAPIResponseToFormGroup","args":[{"name":"employee_settings","type":"QBOEmployeeSettingGet","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"employee_settings","type":"QBOEmployeeSettingGet","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"QBOExportSettingModel","id":"class-QBOExportSettingModel-dbe547e51b7683c19e7ed843df8e99cd1e30d483f754d3889b3db2cdb0137807b59464f9f36c8ddffdfcd4f4bc230237dedf41fdc8be852f2a81ef91ba5dc9f6","file":"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { DefaultDestinationAttribute, DestinationAttribute } from \\"../../db/destination-attribute.model\\";\\nimport { CCCExpenseState, EmployeeFieldMapping, ExpenseGroupingFieldOption, ExpenseState, ExportDateType, NameInJournalEntry, QBOCorporateCreditCardExpensesObject, QBOReimbursableExpensesObject } from \\"../../enum/enum.model\\";\\nimport { ExpenseGroupSettingGet, ExpenseGroupSettingPost } from \\"../../db/expense-group-setting.model\\";\\nimport { SelectFormOption } from \\"../../common/select-form-option.model\\";\\nimport { FormControl, FormGroup, Validators } from \\"@angular/forms\\";\\nimport { ExportModuleRule, ExportSettingModel, ExportSettingValidatorRule } from \\"../../common/export-settings.model\\";\\n\\nexport type QBOExportSettingWorkspaceGeneralSettingPost = {\\n  reimbursable_expenses_object: QBOReimbursableExpensesObject | null,\\n  corporate_credit_card_expenses_object: QBOCorporateCreditCardExpensesObject | null\\n  name_in_journal_entry: NameInJournalEntry;\\n}\\n\\nexport type QBOExportSettingGeneralMapping = {\\n  bank_account: DefaultDestinationAttribute,\\n  default_ccc_account: DefaultDestinationAttribute,\\n  accounts_payable: DefaultDestinationAttribute,\\n  default_ccc_vendor: DefaultDestinationAttribute,\\n  qbo_expense_account: DefaultDestinationAttribute,\\n  default_debit_card_account: DefaultDestinationAttribute\\n}\\n\\nexport type QBOExportSettingPost = {\\n  expense_group_settings: ExpenseGroupSettingPost,\\n  workspace_general_settings: QBOExportSettingWorkspaceGeneralSettingPost,\\n  general_mappings: QBOExportSettingGeneralMapping\\n}\\n\\nexport type QBOExportSettingGet = {\\n  expense_group_settings: ExpenseGroupSettingGet,\\n  workspace_general_settings: QBOExportSettingWorkspaceGeneralSettingPost,\\n  general_mappings: QBOExportSettingGeneralMapping,\\n  workspace_id: number\\n}\\n\\n\\nexport class QBOExportSettingModel extends ExportSettingModel {\\n  static getReimbursableExportTypeOptions(employeeFieldMapping: EmployeeFieldMapping): SelectFormOption[] {\\n    return {\\n      EMPLOYEE: [\\n        {\\n          label: \'Check\',\\n          value: QBOReimbursableExpensesObject.CHECK\\n        },\\n        {\\n          label: \'Expense\',\\n          value: QBOReimbursableExpensesObject.EXPENSE\\n        },\\n        {\\n          label: \'Journal Entry\',\\n          value: QBOReimbursableExpensesObject.JOURNAL_ENTRY\\n        }\\n      ],\\n      VENDOR: [\\n        {\\n          label: \'Bill\',\\n          value: QBOReimbursableExpensesObject.BILL\\n        },\\n        {\\n          label: \'Expense\',\\n          value: QBOReimbursableExpensesObject.EXPENSE\\n        },\\n        {\\n          label: \'Journal Entry\',\\n          value: QBOReimbursableExpensesObject.JOURNAL_ENTRY\\n        }\\n      ]\\n    }[employeeFieldMapping];\\n  }\\n\\n  static getCreditCardExportTypes(): SelectFormOption[] {\\n    return [\\n      {\\n        label: \'Bill\',\\n        value: QBOCorporateCreditCardExpensesObject.BILL\\n      },\\n      {\\n        label: \'Credit Card Purchase\',\\n        value: QBOCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE\\n      },\\n      {\\n        label: \'Journal Entry\',\\n        value: QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY\\n      },\\n      {\\n        label: \'Debit Card Expense\',\\n        value: QBOCorporateCreditCardExpensesObject.DEBIT_CARD_EXPENSE\\n      }\\n    ];\\n  }\\n\\n  static getCCCExpenseStateOptions(): SelectFormOption[] {\\n    return [\\n      {\\n        label: \'Approved\',\\n        value: CCCExpenseState.APPROVED\\n      },\\n      {\\n        label: \'Closed\',\\n        value: CCCExpenseState.PAID\\n      }\\n    ];\\n  }\\n\\n  static getReimbursableExpenseStateOptions(): SelectFormOption[] {\\n    return [\\n      {\\n        label: \'Processing\',\\n        value: ExpenseState.PAYMENT_PROCESSING\\n      },\\n      {\\n        label: \'Closed\',\\n        value: ExpenseState.PAID\\n      }\\n    ];\\n  }\\n\\n  static getExpenseGroupByOptions(): SelectFormOption[] {\\n    return [\\n      {\\n        label: \'Expense\',\\n        value: ExpenseGroupingFieldOption.EXPENSE_ID\\n      },\\n      {\\n        label: \'Expense Report\',\\n        value: ExpenseGroupingFieldOption.CLAIM_NUMBER\\n      }\\n    ];\\n  }\\n\\n  static getNameInJournalOptions(): SelectFormOption[] {\\n    return [\\n      {\\n        label: \'Merchant Name\',\\n        value: NameInJournalEntry.MERCHANT\\n      },\\n      {\\n        label: \'Employee Name\',\\n        value: NameInJournalEntry.EMPLOYEE\\n      }\\n    ];\\n  }\\n\\n  static getReimbursableExpenseGroupingDateOptions(): SelectFormOption[] {\\n    return [\\n      {\\n        label: \'Current Date\',\\n        value: ExportDateType.CURRENT_DATE\\n      },\\n      {\\n        label: \'Verification Date\',\\n        value: ExportDateType.VERIFIED_AT\\n      },\\n      {\\n        label: \'Spend Date\',\\n        value: ExportDateType.SPENT_AT\\n      },\\n      {\\n        label: \'Approval Date\',\\n        value: ExportDateType.APPROVED_AT\\n      },\\n      {\\n        label: \'Last Spend Date\',\\n        value: ExportDateType.LAST_SPENT_AT\\n      }\\n    ];\\n  }\\n\\n  static getAdditionalCreditCardExpenseGroupingDateOptions(): SelectFormOption[] {\\n    return [\\n      {\\n        label: \'Card Transaction Post date\',\\n        value: ExportDateType.POSTED_AT\\n      },\\n      {\\n        label: \'Spend Date\',\\n        value: ExportDateType.SPENT_AT\\n      }\\n    ];\\n  }\\n\\n  static getMandatoryField(form: FormGroup, controllerName: string): boolean {\\n    switch (controllerName) {\\n      case \'bankAccount\':\\n        return form.value.employeeMapping === EmployeeFieldMapping.EMPLOYEE && form.controls.reimbursableExportType.value && form.controls.reimbursableExportType.value !== QBOReimbursableExpensesObject.EXPENSE;\\n      case \'accountsPayable\':\\n        return (form.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.BILL || (form.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.JOURNAL_ENTRY && form.value.employeeMapping === EmployeeFieldMapping.VENDOR)) || (form.controls.creditCardExportType.value === QBOCorporateCreditCardExpensesObject.BILL);\\n      case \'defaultCCCAccount\':\\n        return form.controls.creditCardExportType.value && form.controls.creditCardExportType.value !== QBOCorporateCreditCardExpensesObject.BILL && form.controls.creditCardExportType.value !== QBOCorporateCreditCardExpensesObject.DEBIT_CARD_EXPENSE;\\n      case \'defaultCreditCardVendor\':\\n        return form.controls.creditCardExportType.value === QBOCorporateCreditCardExpensesObject.BILL;\\n      case \'qboExpenseAccount\':\\n        return form.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.EXPENSE || form.controls.creditCardExportType.value === QBOCorporateCreditCardExpensesObject.EXPENSE;\\n      case \'defaultDebitCardAccount\':\\n        return form.controls.creditCardExportType.value === QBOCorporateCreditCardExpensesObject.DEBIT_CARD_EXPENSE;\\n      default:\\n        return false;\\n    }\\n  }\\n\\n  static getValidators(): [ExportSettingValidatorRule, ExportModuleRule[]] {\\n    const exportSettingValidatorRule: ExportSettingValidatorRule = {\\n      reimbursableExpense: [\'reimbursableExportType\', \'reimbursableExportGroup\', \'reimbursableExportDate\', \'expenseState\'],\\n      creditCardExpense: [\'creditCardExportType\', \'creditCardExportGroup\', \'creditCardExportDate\', \'cccExpenseState\']\\n    };\\n\\n    const exportModuleRule: ExportModuleRule[] = [\\n      {\\n        formController: \'reimbursableExportType\',\\n        requiredValue: {\\n          [QBOReimbursableExpensesObject.BILL]: [\'accountsPayable\'],\\n          [QBOReimbursableExpensesObject.CHECK]: [\'bankAccount\'],\\n          [QBOReimbursableExpensesObject.JOURNAL_ENTRY]: [\'accountsPayable\', \'bankAccount\'],\\n          [QBOReimbursableExpensesObject.EXPENSE]: [\'qboExpenseAccount\']\\n        }\\n      },\\n      {\\n        formController: \'creditCardExportType\',\\n        requiredValue: {\\n          [QBOCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE]: [\'defaultCCCAccount\'],\\n          [QBOCorporateCreditCardExpensesObject.BILL]: [\'defaultCreditCardVendor\', \'accountsPayable\'],\\n          [QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY]: [\'accountsPayable\', \'defaultCCCAccount\'],\\n          [QBOCorporateCreditCardExpensesObject.DEBIT_CARD_EXPENSE]: [\'defaultDebitCardAccount\']\\n        }\\n      }\\n    ];\\n\\n    return [exportSettingValidatorRule, exportModuleRule];\\n  }\\n\\n  static mapAPIResponseToFormGroup(exportSettings: QBOExportSettingGet | null, employeeFieldMapping: EmployeeFieldMapping): FormGroup {\\n    return new FormGroup({\\n      employeeMapping: new FormControl(employeeFieldMapping),\\n      expenseState: new FormControl(exportSettings?.expense_group_settings?.expense_state),\\n      reimbursableExpense: new FormControl(exportSettings?.workspace_general_settings?.reimbursable_expenses_object ? true : false),\\n      reimbursableExportType: new FormControl(exportSettings?.workspace_general_settings?.reimbursable_expenses_object),\\n      reimbursableExportGroup: new FormControl(this.getExportGroup(exportSettings?.expense_group_settings?.reimbursable_expense_group_fields)),\\n      reimbursableExportDate: new FormControl(exportSettings?.expense_group_settings?.reimbursable_export_date_type),\\n      cccExpenseState: new FormControl(exportSettings?.expense_group_settings?.ccc_expense_state),\\n      creditCardExpense: new FormControl(exportSettings?.workspace_general_settings?.corporate_credit_card_expenses_object ? true : false),\\n      creditCardExportType: new FormControl(exportSettings?.workspace_general_settings?.corporate_credit_card_expenses_object),\\n      creditCardExportGroup: new FormControl(this.getExportGroup(exportSettings?.expense_group_settings?.corporate_credit_card_expense_group_fields)),\\n      creditCardExportDate: new FormControl(exportSettings?.expense_group_settings?.ccc_export_date_type),\\n      bankAccount: new FormControl(exportSettings?.general_mappings?.bank_account?.id ? exportSettings.general_mappings.bank_account : null),\\n      defaultCCCAccount: new FormControl(exportSettings?.general_mappings?.default_ccc_account?.id ? exportSettings.general_mappings.default_ccc_account : null),\\n      accountsPayable: new FormControl(exportSettings?.general_mappings?.accounts_payable?.id ? exportSettings.general_mappings.accounts_payable : null),\\n      defaultCreditCardVendor: new FormControl(exportSettings?.general_mappings?.default_ccc_vendor?.id ? exportSettings.general_mappings.default_ccc_vendor : null),\\n      qboExpenseAccount: new FormControl(exportSettings?.general_mappings?.qbo_expense_account?.id ? exportSettings.general_mappings.qbo_expense_account : null),\\n      defaultDebitCardAccount: new FormControl(exportSettings?.general_mappings?.default_debit_card_account?.id ? exportSettings.general_mappings.default_debit_card_account : null),\\n      nameInJournalEntry: new FormControl(exportSettings?.workspace_general_settings.name_in_journal_entry ? exportSettings.workspace_general_settings.name_in_journal_entry : NameInJournalEntry.EMPLOYEE )\\n    });\\n  }\\n\\n  static constructPayload(exportSettingsForm: FormGroup): QBOExportSettingPost {\\n    const emptyDestinationAttribute: DefaultDestinationAttribute = {id: null, name: null};\\n    const exportSettingPayload: QBOExportSettingPost = {\\n      expense_group_settings: {\\n        expense_state: exportSettingsForm.get(\'expenseState\')?.value,\\n        ccc_expense_state: exportSettingsForm.get(\'cccExpenseState\')?.value,\\n        reimbursable_expense_group_fields: exportSettingsForm.get(\'reimbursableExportGroup\')?.value ? [exportSettingsForm.get(\'reimbursableExportGroup\')?.value] : null,\\n        reimbursable_export_date_type: exportSettingsForm.get(\'reimbursableExportDate\')?.value,\\n        corporate_credit_card_expense_group_fields: exportSettingsForm.get(\'creditCardExportGroup\')?.value ? [exportSettingsForm.get(\'creditCardExportGroup\')?.value] : null,\\n        ccc_export_date_type: exportSettingsForm.get(\'creditCardExportDate\')?.value\\n      },\\n      workspace_general_settings: {\\n        reimbursable_expenses_object: exportSettingsForm.get(\'reimbursableExportType\')?.value,\\n        corporate_credit_card_expenses_object: exportSettingsForm.get(\'creditCardExportType\')?.value,\\n        name_in_journal_entry: exportSettingsForm.get(\'creditCardExportType\')?.value === QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY ? exportSettingsForm.get(\'nameInJournalEntry\')?.value : NameInJournalEntry.EMPLOYEE\\n      },\\n      general_mappings: {\\n        bank_account: exportSettingsForm.get(\'bankAccount\')?.value ? exportSettingsForm.get(\'bankAccount\')?.value : emptyDestinationAttribute,\\n        default_ccc_account: exportSettingsForm.get(\'defaultCCCAccount\')?.value ? exportSettingsForm.get(\'defaultCCCAccount\')?.value : emptyDestinationAttribute,\\n        accounts_payable: exportSettingsForm.get(\'accountsPayable\')?.value ? exportSettingsForm.get(\'accountsPayable\')?.value : emptyDestinationAttribute,\\n        default_ccc_vendor: exportSettingsForm.get(\'defaultCreditCardVendor\')?.value ? exportSettingsForm.get(\'defaultCreditCardVendor\')?.value : emptyDestinationAttribute,\\n        qbo_expense_account: exportSettingsForm.get(\'qboExpenseAccount\')?.value ? exportSettingsForm.get(\'qboExpenseAccount\')?.value : emptyDestinationAttribute,\\n        default_debit_card_account: exportSettingsForm.get(\'defaultDebitCardAccount\')?.value ? exportSettingsForm.get(\'defaultDebitCardAccount\')?.value : emptyDestinationAttribute\\n      }\\n    };\\n\\n    return exportSettingPayload;\\n  }\\n}\\n","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"exportSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"QBOExportSettingPost","typeParameters":[],"line":254,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAdditionalCreditCardExpenseGroupingDateOptions","args":[],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getCCCExpenseStateOptions","args":[],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getCreditCardExportTypes","args":[],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getExpenseGroupByOptions","args":[],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getMandatoryField","args":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":182,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"form","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getNameInJournalOptions","args":[],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":131,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getReimbursableExpenseGroupingDateOptions","args":[],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":144,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getReimbursableExpenseStateOptions","args":[],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getReimbursableExportTypeOptions","args":[{"name":"employeeFieldMapping","type":"EmployeeFieldMapping","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"SelectFormOption[]","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"employeeFieldMapping","type":"EmployeeFieldMapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getValidators","args":[],"optional":false,"returnType":"","typeParameters":[],"line":201,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"mapAPIResponseToFormGroup","args":[{"name":"exportSettings","type":"QBOExportSettingGet | null","deprecated":false,"deprecationMessage":""},{"name":"employeeFieldMapping","type":"EmployeeFieldMapping","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":231,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportSettings","type":"QBOExportSettingGet | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"employeeFieldMapping","type":"EmployeeFieldMapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"formatGeneralMappingPayload","args":[{"name":"destinationAttribute","type":"DestinationAttribute","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"DefaultDestinationAttribute","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"destinationAttribute","type":"DestinationAttribute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ExportSettingModel"}},{"name":"getExportGroup","args":[{"name":"exportGroups","type":"string[] | null | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"exportGroups","type":"string[] | null | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ExportSettingModel"}}],"indexSignatures":[],"extends":["ExportSettingModel"],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"QBOImportSettingModel","id":"class-QBOImportSettingModel-e264d2bc4511a6f3ba3cb0e1c42b1042998231c2291b788ddd24ac267a0a33ca9a14c4a2be9f67dfaf8d0346f353ca7e5b5cbea0739a4fc96b96728551882983","file":"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormArray, FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ImportSettingMappingRow, ImportSettingsModel } from \\"../../common/import-settings.model\\";\\nimport { DefaultDestinationAttribute } from \\"../../db/destination-attribute.model\\";\\nimport { MappingSetting } from \\"../../db/mapping-setting.model\\";\\nimport { IntegrationField } from \\"../../db/mapping.model\\";\\nimport { QBOField } from \\"../../enum/enum.model\\";\\n\\nexport type QBOImportSettingWorkspaceGeneralSetting = {\\n  import_categories: boolean,\\n  import_items: boolean,\\n  import_vendors_as_merchants: boolean,\\n  charts_of_accounts: string[],\\n  import_tax_codes: boolean\\n}\\n\\nexport type QBOImportSettingGeneralMapping = {\\n  default_tax_code: DefaultDestinationAttribute\\n}\\n\\nexport type QBOImportSettingPost = {\\n  workspace_general_settings: QBOImportSettingWorkspaceGeneralSetting,\\n  general_mappings: QBOImportSettingGeneralMapping,\\n  mapping_settings: ImportSettingMappingRow[] | []\\n}\\n\\n\\nexport type QBOImportSettingGet = {\\n  workspace_general_settings: QBOImportSettingWorkspaceGeneralSetting,\\n  general_mappings: QBOImportSettingGeneralMapping,\\n  mapping_settings: MappingSetting[],\\n  workspace_id: number\\n}\\n\\n\\n\\nexport class QBOImportSettingModel extends ImportSettingsModel {\\n  static getQBOFields(): IntegrationField[] {\\n    return [\\n      {\\n        attribute_type: QBOField.CLASS,\\n        display_name: \'Class\'\\n      },\\n      {\\n        attribute_type: QBOField.DEPARTMENT,\\n        display_name: \'Department\'\\n      },\\n      {\\n        attribute_type: QBOField.CUSTOMER,\\n        display_name: \'Customer\'\\n      }\\n    ];\\n  }\\n\\n  static getChartOfAccountTypesList(): string[] {\\n    return [\\n      \'Expense\', \'Other Expense\', \'Fixed Asset\', \'Cost of Goods Sold\', \'Current Liability\', \'Equity\',\\n      \'Other Current Asset\', \'Other Current Liability\', \'Long Term Liability\', \'Current Asset\', \'Income\', \'Other Income\'\\n    ];\\n  }\\n\\n  static mapAPIResponseToFormGroup(importSettings: QBOImportSettingGet | null): FormGroup {\\n    const expenseFieldsArray = importSettings?.mapping_settings ? this.constructFormArray(importSettings.mapping_settings, this.getQBOFields()) : [];\\n    return new FormGroup({\\n      importCategories: new FormControl(importSettings?.workspace_general_settings.import_categories ?? false),\\n      expenseFields: new FormArray(expenseFieldsArray),\\n      chartOfAccountTypes: new FormControl(importSettings?.workspace_general_settings.charts_of_accounts ? importSettings.workspace_general_settings.charts_of_accounts : []),\\n      importItems: new FormControl(importSettings?.workspace_general_settings.import_items ?? false),\\n      taxCode: new FormControl(importSettings?.workspace_general_settings.import_tax_codes ?? false),\\n      importVendorsAsMerchants: new FormControl(importSettings?.workspace_general_settings.import_vendors_as_merchants ?? false),\\n      defaultTaxCode: new FormControl(importSettings?.general_mappings?.default_tax_code?.id ? importSettings.general_mappings.default_tax_code : null)\\n    });\\n  }\\n\\n  static constructPayload(importSettingsForm: FormGroup): QBOImportSettingPost {\\n    const emptyDestinationAttribute = {id: null, name: null};\\n    const expenseFieldArray = importSettingsForm.value.expenseFields;\\n    const mappingSettings = this.constructMappingSettingPayload(expenseFieldArray);\\n\\n    return {\\n      workspace_general_settings: {\\n        import_categories: importSettingsForm.get(\'importCategories\')?.value,\\n        import_items: importSettingsForm.get(\'importItems\')?.value,\\n        charts_of_accounts: importSettingsForm.get(\'chartOfAccountTypes\')?.value,\\n        import_tax_codes: importSettingsForm.get(\'taxCode\')?.value,\\n        import_vendors_as_merchants: importSettingsForm.get(\'importVendorsAsMerchants\')?.value\\n      },\\n      mapping_settings: mappingSettings,\\n      general_mappings: {\\n        default_tax_code: importSettingsForm.get(\'defaultTaxCode\')?.value ? importSettingsForm.get(\'defaultTaxCode\')?.value : emptyDestinationAttribute\\n      }\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"constructPayload","args":[{"name":"importSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"QBOImportSettingPost","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getChartOfAccountTypesList","args":[],"optional":false,"returnType":"string[]","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"getQBOFields","args":[],"optional":false,"returnType":"IntegrationField[]","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[126]},{"name":"mapAPIResponseToFormGroup","args":[{"name":"importSettings","type":"QBOImportSettingGet | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettings","type":"QBOImportSettingGet | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructFormArray","args":[{"name":"importSettingsMappingSettings","type":"ImportSettingMappingRow[] | ","deprecated":false,"deprecationMessage":""},{"name":"accountingAppFields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup[]","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettingsMappingSettings","type":"ImportSettingMappingRow[] | ","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountingAppFields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImportSettingsModel"}},{"name":"constructMappingSettingPayload","args":[{"name":"expenseFieldArray","type":"ImportSettingMappingRow[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImportSettingMappingRow[]","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"expenseFieldArray","type":"ImportSettingMappingRow[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImportSettingsModel"}},{"name":"createFormGroup","args":[{"name":"data","type":"ImportSettingMappingRow","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"data","type":"ImportSettingMappingRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImportSettingsModel"}},{"name":"getCustomFieldOption","args":[],"optional":false,"returnType":"ExpenseField[]","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"inheritance":{"file":"ImportSettingsModel"}}],"indexSignatures":[],"extends":["ImportSettingsModel"],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"QBOOnboardingModel","id":"class-QBOOnboardingModel-a61be20ae99563582df4d2bc8f85d858ef7f2b4d3e0fdac68de9994a3634d56473640f4efb0ca5914fbc97b67c3d41b7660fee78f244fdc2b25335c5024b6eb6","file":"src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { QBOOnboardingState } from \\"../../enum/enum.model\\";\\nimport { OnboardingStepper } from \\"../../misc/onboarding-stepper.model\\";\\n\\ntype QBOOnboardingStepperMap = {\\n    [QBOOnboardingState.CONNECTION]: number,\\n    [QBOOnboardingState.MAP_EMPLOYEES]: number,\\n    [QBOOnboardingState.EXPORT_SETTINGS]: number,\\n    [QBOOnboardingState.IMPORT_SETTINGS]: number,\\n    [QBOOnboardingState.ADVANCED_CONFIGURATION]: number,\\n    [QBOOnboardingState.COMPLETE]: number,\\n    [QBOOnboardingState.CLONE_SETTINGS]: number,\\n}\\n\\nexport class QBOOnboardingModel {\\n    private readonly onboardingSteps: OnboardingStepper[] = [\\n        {\\n          active: false,\\n          completed: false,\\n          number: 1,\\n          step: \'Connect to QuickBooks Online\',\\n          icon: \'connector\',\\n          route: \'/integrations/qbo/onboarding/connector\',\\n          size: {\\n            height: \'18px\',\\n            width: \'15px\'\\n          },\\n          styleClasses: [\'step-name-connector--text\', \'step-name-connector--icon\']\\n        },\\n        {\\n            active: false,\\n            completed: false,\\n            number: 2,\\n            step: \'Map Employees\',\\n            icon: \'export-setting\',\\n            route: \'/integrations/qbo/onboarding/employee_settings\',\\n            size: {\\n              height: \'18px\',\\n              width: \'15px\'\\n            },\\n            styleClasses: [\'step-name-export--text\', \'step-name-export--icon\']\\n        },\\n        {\\n          active: false,\\n          completed: false,\\n          number: 3,\\n          step: \'Export Settings\',\\n          icon: \'export-setting\',\\n          route: \'/integrations/qbo/onboarding/export_settings\',\\n          size: {\\n            height: \'18px\',\\n            width: \'15px\'\\n          },\\n          styleClasses: [\'step-name-export--text\', \'step-name-export--icon\']\\n        },\\n        {\\n          active: false,\\n          completed: false,\\n          number: 4,\\n          step: \'Import Settings\',\\n          icon: \'export-setting\',\\n          route: \'/integrations/qbo/onboarding/import_settings\',\\n          size: {\\n            height: \'18px\',\\n            width: \'15px\'\\n          },\\n          styleClasses: [\'step-name-export--text\', \'step-name-export--icon\']\\n        },\\n        {\\n          active: false,\\n          completed: false,\\n          number: 5,\\n          step: \'Advanced Settings\',\\n          icon: \'advanced-setting\',\\n          route: \'/integrations/qbo/onboarding/advanced_settings\',\\n          size: {\\n            height: \'20px\',\\n            width: \'20px\'\\n          },\\n          styleClasses: [\'step-name-advanced--text\', \'step-name-advanced--icon\']\\n        }\\n    ];\\n\\n    private readonly onboardingStateStepMap: QBOOnboardingStepperMap = {\\n        [QBOOnboardingState.CONNECTION]: 1,\\n        [QBOOnboardingState.MAP_EMPLOYEES]: 2,\\n        [QBOOnboardingState.EXPORT_SETTINGS]: 3,\\n        [QBOOnboardingState.IMPORT_SETTINGS]: 4,\\n        [QBOOnboardingState.ADVANCED_CONFIGURATION]: 5,\\n        [QBOOnboardingState.COMPLETE]: 6,\\n        [QBOOnboardingState.CLONE_SETTINGS]: 7\\n      };\\n\\n    getOnboardingSteps(currentStep: string, onboardingState: QBOOnboardingState): OnboardingStepper[] {\\n        this.onboardingSteps.forEach(step => {\\n          if (step.step.toLowerCase() === currentStep.toLowerCase()) {\\n            step.active = true;\\n          } else {\\n            step.active = false;\\n          }\\n        });\\n\\n        for (let index = this.onboardingStateStepMap[onboardingState] - 1; index > 0; index--) {\\n          this.onboardingSteps[index - 1].completed = true;\\n        }\\n\\n        return this.onboardingSteps;\\n    }\\n}\\n","properties":[{"name":"onboardingStateStepMap","defaultValue":"{\\n        [QBOOnboardingState.CONNECTION]: 1,\\n        [QBOOnboardingState.MAP_EMPLOYEES]: 2,\\n        [QBOOnboardingState.EXPORT_SETTINGS]: 3,\\n        [QBOOnboardingState.IMPORT_SETTINGS]: 4,\\n        [QBOOnboardingState.ADVANCED_CONFIGURATION]: 5,\\n        [QBOOnboardingState.COMPLETE]: 6,\\n        [QBOOnboardingState.CLONE_SETTINGS]: 7\\n      }","deprecated":false,"deprecationMessage":"","type":"QBOOnboardingStepperMap","optional":false,"description":"","line":83,"modifierKind":[123,148]},{"name":"onboardingSteps","defaultValue":"[\\n        {\\n          active: false,\\n          completed: false,\\n          number: 1,\\n          step: \'Connect to QuickBooks Online\',\\n          icon: \'connector\',\\n          route: \'/integrations/qbo/onboarding/connector\',\\n          size: {\\n            height: \'18px\',\\n            width: \'15px\'\\n          },\\n          styleClasses: [\'step-name-connector--text\', \'step-name-connector--icon\']\\n        },\\n        {\\n            active: false,\\n            completed: false,\\n            number: 2,\\n            step: \'Map Employees\',\\n            icon: \'export-setting\',\\n            route: \'/integrations/qbo/onboarding/employee_settings\',\\n            size: {\\n              height: \'18px\',\\n              width: \'15px\'\\n            },\\n            styleClasses: [\'step-name-export--text\', \'step-name-export--icon\']\\n        },\\n        {\\n          active: false,\\n          completed: false,\\n          number: 3,\\n          step: \'Export Settings\',\\n          icon: \'export-setting\',\\n          route: \'/integrations/qbo/onboarding/export_settings\',\\n          size: {\\n            height: \'18px\',\\n            width: \'15px\'\\n          },\\n          styleClasses: [\'step-name-export--text\', \'step-name-export--icon\']\\n        },\\n        {\\n          active: false,\\n          completed: false,\\n          number: 4,\\n          step: \'Import Settings\',\\n          icon: \'export-setting\',\\n          route: \'/integrations/qbo/onboarding/import_settings\',\\n          size: {\\n            height: \'18px\',\\n            width: \'15px\'\\n          },\\n          styleClasses: [\'step-name-export--text\', \'step-name-export--icon\']\\n        },\\n        {\\n          active: false,\\n          completed: false,\\n          number: 5,\\n          step: \'Advanced Settings\',\\n          icon: \'advanced-setting\',\\n          route: \'/integrations/qbo/onboarding/advanced_settings\',\\n          size: {\\n            height: \'20px\',\\n            width: \'20px\'\\n          },\\n          styleClasses: [\'step-name-advanced--text\', \'step-name-advanced--icon\']\\n        }\\n    ]","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":15,"modifierKind":[123,148]}],"methods":[{"name":"getOnboardingSteps","args":[{"name":"currentStep","type":"string","deprecated":false,"deprecationMessage":""},{"name":"onboardingState","type":"QBOOnboardingState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"OnboardingStepper[]","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"currentStep","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"onboardingState","type":"QBOOnboardingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Sage300AdvancedSettingModel","id":"class-Sage300AdvancedSettingModel-4c9912256519b13b5f46e2f6871d48399d3e5f5e5a6a66a5fd1079d708c9300d217156edf863c4ac6a4a233fba7cd37e7e7934d82c9c068f22622baada2d2bda","file":"src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ExpenseFilterPost, ExpenseFilterPayload, ConditionField } from \\"../../common/advanced-settings.model\\";\\nimport { JoinOption, Operator } from \\"../../enum/enum.model\\";\\n\\nexport type Sage300AdvancedSetting = {\\n  memo_structure: string[],\\n  schedule_is_enabled: boolean,\\n  auto_create_vendor: boolean,\\n  interval_hours: number\\n}\\n\\nexport interface Sage300AdvancedSettingGet extends Sage300AdvancedSetting {\\n  id: number,\\n  created_at: Date,\\n  update_at: Date,\\n  workspace: number\\n}\\n\\nexport interface Sage300AdvancedSettingPost extends Sage300AdvancedSetting { }\\n\\nexport class Sage300AdvancedSettingModel {\\n\\n  static mapAPIResponseToFormGroup(advancedSettings: Sage300AdvancedSettingGet | null, isSkipExportEnabled: boolean): FormGroup {\\n    const defaultMemoOptions: string[] = [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n    return new FormGroup({\\n      memoStructure: new FormControl(advancedSettings?.memo_structure ? advancedSettings?.memo_structure : defaultMemoOptions),\\n      scheduleEnabled: new FormControl(advancedSettings?.schedule_is_enabled ? true : false),\\n      autoCreateVendor: new FormControl(advancedSettings?.auto_create_vendor ? true : false),\\n      scheduleAutoExportFrequency: new FormControl(advancedSettings?.interval_hours ? advancedSettings.interval_hours : 1),\\n      skipExport: new FormControl(isSkipExportEnabled)\\n    });\\n  }\\n\\n  static createAdvancedSettingPayload(advancedSettingsForm: FormGroup): Sage300AdvancedSettingPost {\\n    return {\\n      memo_structure: advancedSettingsForm.get(\'memoStructure\')?.value ? advancedSettingsForm.get(\'memoStructure\')?.value : null,\\n      schedule_is_enabled: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleEnabled\')?.value : false,\\n      interval_hours: advancedSettingsForm.get(\'scheduleEnabled\')?.value ? advancedSettingsForm.get(\'scheduleAutoExportFrequency\')?.value : null,\\n      auto_create_vendor: advancedSettingsForm.get(\'autoCreateVendor\')?.value ? advancedSettingsForm.get(\'autoCreateVendor\')?.value : false\\n    };\\n  }\\n}\\n\\n\\n","properties":[],"methods":[{"name":"createAdvancedSettingPayload","args":[{"name":"advancedSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Sage300AdvancedSettingPost","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"advancedSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mapAPIResponseToFormGroup","args":[{"name":"advancedSettings","type":"Sage300AdvancedSettingGet | null","deprecated":false,"deprecationMessage":""},{"name":"isSkipExportEnabled","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"advancedSettings","type":"Sage300AdvancedSettingGet | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isSkipExportEnabled","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"Sage300ImportSettingModel","id":"class-Sage300ImportSettingModel-1cdc92c5e46e62066ac4ac32840aba10f1f942bc0c39a86680817cc49c3573108bef9ab7f215409d990f9aa6d8b009003c19ec4ed67af2295f2beae6161f5237","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormArray, FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { ExpenseField, ImportSettingMappingRow, ImportSettingsCustomFieldRow, ImportSettingsModel } from \\"../../common/import-settings.model\\";\\nimport { IntegrationField } from \\"../../db/mapping.model\\";\\n\\nexport type Sage300DefaultFields = {\\n    destination_field: string,\\n    source_field: string,\\n    formController: string\\n}\\n\\nexport type Sage300DependentImportFields = {\\n    options: ImportSettingsCustomFieldRow[],\\n    source_field: string,\\n    formController: string,\\n    isDisabled: boolean\\n}\\n\\nexport type Sage300ImportSettingsDependentFieldSetting = {\\n    cost_code_field_name: string,\\n    cost_code_placeholder: string,\\n    cost_category_field_name: string,\\n    cost_category_placeholder: string,\\n    is_import_enabled: boolean\\n}\\n\\nexport type Sage300ImportSetting = {\\n    import_settings: {\\n        import_categories: boolean,\\n        import_vendors_as_merchants: boolean\\n    },\\n    mapping_settings: ImportSettingMappingRow[] | [],\\n    dependent_field_settings: Sage300ImportSettingsDependentFieldSetting | null,\\n}\\n\\nexport interface  Sage300ImportSettingGet extends Sage300ImportSetting {\\n    workspaceId: number\\n}\\n\\nexport interface  Sage300ImportSettingPost extends Sage300ImportSetting {}\\n\\nexport class Sage300ImportSettingModel extends ImportSettingsModel {\\n\\n    static generateDependentFieldValue(attribute_type: string, source_placeholder: string): ExpenseField {\\n        return {\\n          attribute_type: attribute_type,\\n          display_name: attribute_type,\\n          source_placeholder: source_placeholder,\\n          is_dependent: true\\n        };\\n    }\\n\\n    static mapAPIResponseToFormGroup(importSettings: Sage300ImportSettingGet | null, sage300Fields: IntegrationField[]): FormGroup {\\n        const expenseFieldsArray = importSettings?.mapping_settings ? this.constructFormArray(importSettings.mapping_settings, sage300Fields) : [] ;\\n        return new FormGroup({\\n            importCategories: new FormControl(importSettings?.import_settings?.import_categories ?? false),\\n            importVendorAsMerchant: new FormControl(importSettings?.import_settings?.import_vendors_as_merchants ?? false),\\n            expenseFields: new FormArray(expenseFieldsArray),\\n            isDependentImportEnabled: new FormControl(importSettings?.dependent_field_settings?.is_import_enabled ? importSettings.dependent_field_settings.is_import_enabled : false),\\n            costCodes: new FormControl(importSettings?.dependent_field_settings?.cost_code_field_name ? this.generateDependentFieldValue(importSettings.dependent_field_settings.cost_code_field_name, importSettings.dependent_field_settings.cost_code_placeholder) : null),\\n            costCategory: new FormControl(importSettings?.dependent_field_settings?.cost_category_field_name ? this.generateDependentFieldValue(importSettings.dependent_field_settings.cost_category_field_name, importSettings.dependent_field_settings.cost_category_placeholder) : null),\\n            dependentFieldImportToggle: new FormControl(true)\\n        });\\n    }\\n\\n    static createImportSettingPayload(importSettingsForm: FormGroup, importSettings: Sage300ImportSettingGet): Sage300ImportSettingPost {\\n        const expenseFieldArray = importSettingsForm.value.expenseFields;\\n        const mappingSettings = this.constructMappingSettingPayload(expenseFieldArray);\\n\\n        return {\\n            import_settings: {\\n                import_categories: importSettingsForm.get(\'importCategories\')?.value,\\n                import_vendors_as_merchants: importSettingsForm.get(\'importVendorAsMerchant\')?.value\\n            },\\n            mapping_settings: mappingSettings,\\n            dependent_field_settings: importSettingsForm.get(\'isDependentImportEnabled\')?.value ? {\\n                cost_code_field_name: importSettingsForm.get(\'costCodes\')?.value ? importSettingsForm.get(\'costCodes\')?.value.attribute_type : (importSettings?.dependent_field_settings?.cost_code_field_name ? importSettings.dependent_field_settings?.cost_code_field_name : null),\\n                cost_code_placeholder: importSettingsForm.get(\'costCodes\')?.value ? importSettingsForm.get(\'costCodes\')?.value.source_placeholder : (importSettings?.dependent_field_settings?.cost_code_placeholder ? importSettings.dependent_field_settings?.cost_code_placeholder : null),\\n                cost_category_field_name: importSettingsForm.get(\'costCategory\')?.value ? importSettingsForm.get(\'costCategory\')?.value.attribute_type : (importSettings?.dependent_field_settings?.cost_category_field_name ? importSettings.dependent_field_settings?.cost_category_field_name : null),\\n                cost_category_placeholder: importSettingsForm.get(\'costCategory\')?.value ? importSettingsForm.get(\'costCategory\')?.value.source_placeholder : (importSettings?.dependent_field_settings?.cost_category_placeholder ? importSettings.dependent_field_settings?.cost_category_placeholder : null),\\n                is_import_enabled: importSettingsForm.get(\'isDependentImportEnabled\')?.value\\n            } : null\\n        };\\n    }\\n\\n}","properties":[],"methods":[{"name":"createImportSettingPayload","args":[{"name":"importSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":""},{"name":"importSettings","type":"Sage300ImportSettingGet","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"Sage300ImportSettingPost","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettingsForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"importSettings","type":"Sage300ImportSettingGet","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateDependentFieldValue","args":[{"name":"attribute_type","type":"string","deprecated":false,"deprecationMessage":""},{"name":"source_placeholder","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ExpenseField","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"attribute_type","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"source_placeholder","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mapAPIResponseToFormGroup","args":[{"name":"importSettings","type":"Sage300ImportSettingGet | null","deprecated":false,"deprecationMessage":""},{"name":"sage300Fields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettings","type":"Sage300ImportSettingGet | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sage300Fields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructFormArray","args":[{"name":"importSettingsMappingSettings","type":"ImportSettingMappingRow[] | ","deprecated":false,"deprecationMessage":""},{"name":"accountingAppFields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup[]","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"importSettingsMappingSettings","type":"ImportSettingMappingRow[] | ","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountingAppFields","type":"IntegrationField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImportSettingsModel"}},{"name":"constructMappingSettingPayload","args":[{"name":"expenseFieldArray","type":"ImportSettingMappingRow[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ImportSettingMappingRow[]","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"expenseFieldArray","type":"ImportSettingMappingRow[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImportSettingsModel"}},{"name":"createFormGroup","args":[{"name":"data","type":"ImportSettingMappingRow","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"data","type":"ImportSettingMappingRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}],"inheritance":{"file":"ImportSettingsModel"}},{"name":"getCustomFieldOption","args":[],"optional":false,"returnType":"ExpenseField[]","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"inheritance":{"file":"ImportSettingsModel"}}],"indexSignatures":[],"extends":["ImportSettingsModel"],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"SiExportLogs","id":"class-SiExportLogs-224bd60bb142e5a4dd8f63583b8cfaa3382105b5350a9d8f42e837b7c6252d22238d988bef40ce33924144858b051bf1edddaa6b675080644e163b63406ac62a","file":"src/app/core/models/si/misc/si-export-logs.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"export class SiExportLogs {\\n}\\n","properties":[],"methods":[],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"SkipExportModel","id":"class-SkipExportModel-7b29e3995c6c44abdf943dff49fc8424eb9a447b450a01ed4bb3757467b55424327f2e9f468fa43f334b7e4103d84a18c93eb2a60a4b4a12fdd3b3680fa65960","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { FormControl, FormGroup } from \\"@angular/forms\\";\\nimport { JoinOption, Operator } from \\"../enum/enum.model\\";\\nimport { environment } from \\"src/environments/environment\\";\\n\\nexport type EmailOption = {\\n    email: string;\\n    name: string;\\n};\\n\\nexport  interface HourOption {\\n  label: string;\\n  value: number;\\n}\\n\\nexport type skipExportValidator = {\\n  isChanged: string[];\\n  isNotChanged: string[];\\n}\\n\\nexport type ConditionField = {\\n  field_name: string;\\n  type: string;\\n  is_custom: boolean;\\n};\\n\\nexport type ExpenseFilterPost = {\\n    condition: string;\\n    operator: Operator;\\n    values: string | string[]\\n    rank: number;\\n    join_by:JoinOption | null;\\n    is_custom: boolean;\\n    custom_field_type: string | null;\\n};\\n\\nexport type ExpenseFilterPayload = {\\n    condition: ConditionField,\\n    operator: Operator,\\n    value: string[]\\n    join_by: string,\\n    rank: number\\n  }\\n\\nexport interface ExpenseFilter extends ExpenseFilterPost {\\n    id: number,\\n    created_at: Date,\\n    updated_at: Date,\\n    workspace: number\\n}\\n\\nexport type ExpenseFilterResponse = {\\n    count: number,\\n    next: string | null,\\n    previous: string | null,\\n    results: ExpenseFilter[]\\n};\\n\\nexport type SkipExportValidatorRule = {\\n  condition1: string[];\\n  condition2: string[];\\n  operator1: string[];\\n  operator2: string[];\\n};\\n\\nexport type AdvancedSettingValidatorRule = {\\n  paymentSync: string;\\n  exportSchedule: string;\\n};\\n\\nexport class AdvancedSettingsModel {\\n  static getDefaultMemoOptions(): string[] {\\n    return [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n  }\\n\\n  static formatMemoPreview(memoStructure: string[], defaultMemoOptions: string[]): string {\\n    const time = Date.now();\\n    const today = new Date(time);\\n\\n    const previewValues: { [key: string]: string } = {\\n      employee_email: \'john.doe@acme.com\',\\n      category: \'Meals and Entertainment\',\\n      purpose: \'Client Meeting\',\\n      merchant: \'Pizza Hut\',\\n      report_number: \'C/2021/12/R/1\',\\n      spent_on: today.toLocaleDateString(),\\n      expense_link: `${environment.fyle_app_url}/app/main/#/enterprise/view_expense/`\\n    };\\n    let memoPreviewText = \'\';\\n    const memo: string[] = [];\\n    memoStructure.forEach((field, index) => {\\n      if (field in previewValues) {\\n        const defaultIndex = defaultMemoOptions.indexOf(memoStructure[index]);\\n        memo[defaultIndex] = previewValues[field];\\n      }\\n    });\\n    memo.forEach((field, index) => {\\n      memoPreviewText += field;\\n      if (index + 1 !== memo.length) {\\n        memoPreviewText = memoPreviewText + \' - \';\\n      }\\n    });\\n    return memoPreviewText;\\n  }\\n\\n  static filterAdminEmails = (emailToSearch: string[], adminEmails: EmailOption[]) => {\\n    const adminEmailsList: EmailOption[] = [];\\n    for (const email of emailToSearch) {\\n      adminEmails.find(item => (item.email === email ? adminEmailsList.push(item) : null));\\n    }\\n    return adminEmailsList;\\n};\\n\\n  static formatSelectedEmails(emails: EmailOption[]): string[] {\\n    return emails.map((option: EmailOption) => option.email);\\n  }\\n}\\n\\nexport class SkipExportModel {\\n\\n  static constructSkipExportValue(valueField: any) {\\n    if (valueField.condition1.field_name !== \'report_title\' && valueField.operator1 === \'iexact\') {\\n      valueField.operator1 = \'in\';\\n    }\\n    if (valueField.condition1.is_custom === true) {\\n      if (valueField.operator1 === \'is_empty\') {\\n        valueField.value1 = [\'True\'];\\n        valueField.operator1 = \'isnull\';\\n      } else if (valueField.operator1 === \'is_not_empty\') {\\n        valueField.value1 = [\'False\'];\\n        valueField.operator1 = \'isnull\';\\n      }\\n    }\\n    if (valueField.condition1.field_name === \'spent_at\') {\\n      valueField.value1 = new Date(valueField.value1).toISOString().split(\'T\')[0] + \'T17:00:00.000Z\';\\n    }\\n    if (typeof valueField.value1 === \'string\') {\\n      valueField.value1 = [valueField.value1];\\n    }\\n\\n    if (valueField.condition2 && valueField.operator2) {\\n      if (valueField.condition2.field_name !== \'report_title\' && valueField.operator2 === \'iexact\') {\\n        valueField.operator2 = \'in\';\\n      }\\n      if (valueField.condition2.field_name === \'spent_at\') {\\n        valueField.value2 = new Date(valueField.value2).toISOString().split(\'T\')[0] + \'T17:00:00.000Z\';\\n      }\\n      if (valueField.condition2.is_custom === true) {\\n        if (valueField.operator2 === \'is_empty\') {\\n          valueField.value2 = [\'True\'];\\n          valueField.operator2 = \'isnull\';\\n        } else if (valueField.operator2 === \'is_not_empty\') {\\n          valueField.value2 = [\'False\'];\\n          valueField.operator2 = \'isnull\';\\n        }\\n      }\\n      if (typeof valueField.value2 === \'string\') {\\n        valueField.value2 = [valueField.value2];\\n      }\\n    }\\n    return valueField;\\n  }\\n\\n  static constructExportFilterPayload(valueField: any): ExpenseFilterPayload {\\n    return {\\n      condition: valueField[\'condition\'+valueField.rank] as ConditionField,\\n      operator: valueField[\'operator\'+valueField.rank] as Operator,\\n      value: valueField[\'value\'+valueField.rank],\\n      join_by: valueField?.join_by && valueField.rank === 1 ? valueField?.join_by : null,\\n      rank: valueField.rank\\n    };\\n  }\\n\\n  static constructSkipExportPayload(valueField: ExpenseFilterPayload, valueOption: any[]): ExpenseFilterPost {\\n    return {\\n      condition: valueField.condition.field_name,\\n      operator: valueField.operator,\\n      values:\\n        valueField.condition.type === \'DATE\' ||\\n          valueField.operator === \'isnull\' || valueField.condition.field_name === \'report_title\' ? valueField.value : valueOption,\\n      rank: valueField.rank,\\n      join_by: valueField?.join_by ? JoinOption[valueField.join_by as JoinOption] : null,\\n      is_custom: valueField.condition.is_custom,\\n      custom_field_type: valueField.condition?.is_custom ? valueField.condition.type : null\\n    };\\n  }\\n\\n  static setConditionFields(response: ExpenseFilterResponse, conditionArray: ConditionField[], conditionFieldOptions: ConditionField[]) {\\n    response.results.forEach((element) => {\\n      const type = conditionFieldOptions?.filter( (fieldOption) => fieldOption.field_name === element.condition);\\n      const selectedConditionOption : ConditionField = type[0];\\n      conditionArray.push(selectedConditionOption);\\n    });\\n  }\\n\\n  static getSelectedOperator(operator: string, value: any) {\\n    switch (operator) {\\n      case \'isnull\':\\n        return value === \'True\' ? \'is_empty\' : \'is_not_empty\';\\n      case \'in\':\\n        return \'iexact\';\\n      case \'iexact\':\\n        return operator;\\n      default:\\n        return operator;\\n    }\\n  }\\n\\n  static getFieldValue(value: any, condition: ConditionField, rank: number) {\\n    if (condition?.type === \'DATE\') {\\n      return new Date(value[0]);\\n    } else if (condition?.field_name === \'report_title\') {\\n      return value[0];\\n    }\\n    if (rank === 1) {\\n        return value;\\n    } else if (rank === 2) {\\n        return value;\\n    }\\n    return \'\';\\n\\n  }\\n\\n  static setupSkipExportForm(response: ExpenseFilterResponse, conditionArray: ConditionField[], conditionFieldOptions: ConditionField[]) {\\n    this.setConditionFields(response, conditionArray, conditionFieldOptions);\\n    let [selectedOperator1, valueFC1, customFieldTypeFC1] = [\'\', \'\', \'\'];\\n    let [selectedOperator2, valueFC2] = [\'\', \'\'];\\n    let joinByFC = \'\';\\n    let isDisabledChip2: boolean = false;\\n    let isDisabledChip1: boolean = false;\\n\\n    response.results.forEach((result: ExpenseFilterPost, index: number) => {\\n        if (index === 0) {\\n            selectedOperator1 = this.getSelectedOperator(result.operator, result.values[0]);\\n            if (!(selectedOperator1 === \'is_empty\' || selectedOperator1 === \'is_not_empty\')) {\\n                valueFC1 = this.getFieldValue(result.values, conditionArray[0], result.rank);\\n            } else {\\n                isDisabledChip1 = true;\\n            }\\n            customFieldTypeFC1 = result?.custom_field_type ? result.custom_field_type : \'\';\\n        } else if (index === 1 && response.results[0].join_by !== null) {\\n            selectedOperator2 = this.getSelectedOperator(result.operator, result.values[0]);\\n            joinByFC = response.results[0].join_by;\\n            if (!(selectedOperator2 === \'is_empty\' || selectedOperator2 === \'is_not_empty\')) {\\n                valueFC2 = this.getFieldValue(result.values, conditionArray[1], result.rank);\\n            } else {\\n                isDisabledChip2 = true;\\n            }\\n        }\\n    });\\n\\n    return new FormGroup({\\n      condition1: new FormControl(conditionArray.length > 0 ? conditionArray[0] : \'\'),\\n      operator1: new FormControl(selectedOperator1),\\n      value1: new FormControl(valueFC1),\\n      customFieldType1: new FormControl(customFieldTypeFC1),\\n      join_by: new FormControl(joinByFC),\\n      condition2: new FormControl(joinByFC ? conditionArray[1] : \'\'),\\n      operator2: new FormControl(joinByFC && selectedOperator2 ? selectedOperator2 : \'\'),\\n      value2: new FormControl(valueFC2),\\n      customFieldType2: new FormControl(joinByFC ? response.results[1].custom_field_type : \'\'),\\n      isDisabledChip1: new FormControl(isDisabledChip1),\\n      isDisabledChip2: new FormControl(isDisabledChip2)\\n    });\\n  }\\n}\\n","properties":[],"methods":[{"name":"constructExportFilterPayload","args":[{"name":"valueField","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ExpenseFilterPayload","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"valueField","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructSkipExportPayload","args":[{"name":"valueField","type":"ExpenseFilterPayload","deprecated":false,"deprecationMessage":""},{"name":"valueOption","type":"any[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ExpenseFilterPost","typeParameters":[],"line":173,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"valueField","type":"ExpenseFilterPayload","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"valueOption","type":"any[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructSkipExportValue","args":[{"name":"valueField","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":120,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"valueField","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFieldValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"condition","type":"ConditionField","deprecated":false,"deprecationMessage":""},{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":208,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"condition","type":"ConditionField","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSelectedOperator","args":[{"name":"operator","type":"string","deprecated":false,"deprecationMessage":""},{"name":"value","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":195,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"operator","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setConditionFields","args":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":""},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":""},{"name":"conditionFieldOptions","type":"ConditionField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionFieldOptions","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupSkipExportForm","args":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":""},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":""},{"name":"conditionFieldOptions","type":"ConditionField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":223,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionFieldOptions","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"SkippedAccountingExportModel","id":"class-SkippedAccountingExportModel-2c1527c9453b1f6140475fb479c5dbd80b4eadd3fe8b41f468a5f57ad8c0f39dc2283f96b49dd581062efb31431f9391a14abca53ef232171fb454e4ac9cdb60","file":"src/app/core/models/db/accounting-export.model.ts","deprecated":false,"deprecationMessage":"","type":"class","sourceCode":"import { SnakeCaseToSpaceCasePipe } from \\"src/app/shared/pipes/snake-case-to-space-case.pipe\\";\\nimport { AccountingExportStatus, AccountingExportType, FundSource, FyleReferenceType } from \\"../enum/enum.model\\";\\nimport { ExpenseGroupDescription, SkipExportList, SkipExportLog } from \\"../si/db/expense-group.model\\";\\nimport { Expense } from \\"../si/db/expense.model\\";\\nimport { TitleCasePipe } from \\"@angular/common\\";\\nimport { ExportLogService } from \\"../../services/common/export-log.service\\";\\nimport { DateFilter } from \\"../qbd/misc/date-filter.model\\";\\nimport { environment } from \\"src/environments/environment\\";\\nimport { ExpenseGroup } from \\"./expense-group.model\\";\\n\\nexport interface AccountingExportCount {\\n    count: number;\\n}\\n\\nexport interface ExportableAccountingExport {\\n  exportable_accounting_export_ids: number[];\\n}\\n\\nexport interface AccountingExportList {\\n    exportedAt: Date;\\n    employee: [string, string];\\n    expenseType: string;\\n    referenceNumber: string;\\n    exportedAs: string;\\n    integrationUrl: string;\\n    fyleUrl: string;\\n    expenses: Expense[];\\n  }\\n\\nexport interface AccountingExport {\\n    id: number;\\n    type: string;\\n    description: ExpenseGroupDescription;\\n    status: AccountingExportStatus;\\n    mapping_errors: {\\n        type: string;\\n        value: string;\\n    }[] | null;\\n    response: Record<string, unknown>;\\n    created_at: Date;\\n    updated_at: Date;\\n    exported_at: Date;\\n    workspace: number;\\n    export_url: string;\\n    expenses: Expense[];\\n    fund_source: FundSource;\\n}\\n\\nexport type AccountingExportGetParam = {\\n    type__in: string[],\\n    status__in: string[],\\n    id__in?: number[],\\n    limit: number,\\n    offset: number,\\n    exported_at__lte?: string,\\n    exported_at__gte?: string\\n}\\n\\nexport class AccountingExportModel {\\n\\n  static getDateOptions(): DateFilter[] {\\n    const currentDateTime = new Date();\\n    const dateOptions: DateFilter[] = [\\n      {\\n        dateRange: \'This Month\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), 1),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'This Week\',\\n        startDate: new Date(currentDateTime.getFullYear(), currentDateTime.getMonth(), currentDateTime.getDate() - currentDateTime.getDay()),\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: \'Today\',\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      },\\n      {\\n        dateRange: currentDateTime.toLocaleDateString(),\\n        startDate: currentDateTime,\\n        endDate: currentDateTime\\n      }\\n    ];\\n\\n    return dateOptions;\\n  }\\n\\n  static getFyleExpenseUrl(expense_id: string): string {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}`;\\n    return url;\\n  }\\n\\n  static getfilteredAccountingExports(query: string, group: AccountingExportList): boolean {\\n    const employeeName = group.employee ? group.employee[0] : \'\';\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.referenceNumber ? group.referenceNumber : \'\';\\n\\n    return (\\n      employeeName.toLowerCase().includes(query) ||\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static getReferenceType(description: ExpenseGroupDescription): FyleReferenceType {\\n    let referenceType = FyleReferenceType.REPORT_ID;\\n\\n    if (FyleReferenceType.EXPENSE in description) {\\n      referenceType = FyleReferenceType.EXPENSE;\\n    } else if (FyleReferenceType.REPORT_ID in description) {\\n      referenceType = FyleReferenceType.REPORT_ID;\\n    } else if (FyleReferenceType.PAYMENT in description) {\\n      referenceType = FyleReferenceType.PAYMENT;\\n    }\\n\\n    return referenceType;\\n  }\\n\\n  static formatExportType(exportType: string): string {\\n    if (exportType.startsWith(\'CREATING_\')) {\\n      exportType = exportType.substring(\'CREATING_\'.length);\\n    }\\n    exportType = new SnakeCaseToSpaceCasePipe().transform(exportType);\\n    return new TitleCasePipe().transform(exportType);\\n  }\\n\\n  static getFyleReferenceNumber(referenceType: string, expense: Expense): string {\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      return expense.expense_number;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      return expense.payment_number;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      return expense.claim_number;\\n    }\\n    return expense.claim_number;\\n  }\\n\\n  static generateFyleUrl(expense: Expense, referenceType: FyleReferenceType, org_id: string) : string {\\n    let url = `${environment.fyle_app_url}/app/`;\\n    if (referenceType === FyleReferenceType.EXPENSE) {\\n      url += `admin/#/view_expense/${expense.expense_id}`;\\n    } else if (referenceType === FyleReferenceType.REPORT_ID) {\\n      url += `admin/#/reports/${expense.report_id}`;\\n    } else if (referenceType === FyleReferenceType.PAYMENT) {\\n      url += `admin/#/settlements/${expense.settlement_id}`;\\n    }\\n    return `${url}?org_id=${org_id}`;\\n  }\\n\\n  static parseAPIResponseToExportLog(accountingExport: AccountingExport, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(accountingExport.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, accountingExport.expenses[0]);\\n    return {\\n      exportedAt: accountingExport.exported_at,\\n      employee: [accountingExport.expenses[0].employee_name, accountingExport.description.employee_email],\\n      expenseType: accountingExport.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: this.formatExportType(accountingExport.type),\\n      fyleUrl: this.generateFyleUrl(accountingExport.expenses[0], referenceType, org_id),\\n      integrationUrl: accountingExport.export_url,\\n      expenses: accountingExport.expenses\\n    };\\n  }\\n\\n  static generateExportTypeAndId(expenseGroup: ExpenseGroup) {\\n    if (!expenseGroup.response_logs) {\\n      return [null, null, null];\\n    }\\n    let exportRedirection = null;\\n    let exportType = null;\\n    let exportId = null;\\n\\n    if (\'Bill\' in expenseGroup.response_logs && expenseGroup.response_logs.Bill) {\\n      exportRedirection = \'bill\';\\n      exportType = exportRedirection;\\n      exportId = expenseGroup.response_logs.Bill.Id;\\n    } else if (\'JournalEntry\' in expenseGroup.response_logs && expenseGroup.response_logs.JournalEntry) {\\n      exportRedirection = \'journal\';\\n      exportType = \'Journal Entry\';\\n      exportId = expenseGroup.response_logs.JournalEntry.Id;\\n    } else if (\'Purchase\' in expenseGroup.response_logs && expenseGroup.response_logs.Purchase) {\\n      exportId = expenseGroup.response_logs.Purchase.Id;\\n      if (expenseGroup.response_logs.Purchase.PaymentType === \'Check\') {\\n        exportRedirection = \'check\';\\n        exportType = exportRedirection;\\n      } else {\\n        exportRedirection = \'expense\';\\n        if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && !expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Purchase\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'CreditCard\' && expenseGroup.response_logs.Purchase.Credit) {\\n          exportType = \'Credit Card Credit\';\\n          exportRedirection = \'creditcardcredit\';\\n        } else if (expenseGroup.fund_source === \'CCC\' && expenseGroup.response_logs.Purchase.PaymentType === \'Cash\') {\\n          exportType = \'Debit Card Expense\';\\n          exportRedirection = \'expense\';\\n        } else {\\n          exportType = \'expense\';\\n        }\\n      }\\n    }\\n\\n    return [exportRedirection, exportId, exportType];\\n  }\\n\\n  static parseExpenseGroupAPIResponseToExportLog(expenseGroup: ExpenseGroup, org_id: string): AccountingExportList {\\n    const referenceType = AccountingExportModel.getReferenceType(expenseGroup.description);\\n    const referenceNumber = this.getFyleReferenceNumber(referenceType, expenseGroup.expenses[0]);\\n\\n    const [type, id, exportType] = this.generateExportTypeAndId(expenseGroup);\\n\\n    return {\\n      exportedAt: expenseGroup.exported_at,\\n      employee: [expenseGroup.expenses[0].employee_name, expenseGroup.description.employee_email],\\n      expenseType: expenseGroup.fund_source === FundSource.CCC ? FundSource.CORPORATE_CARD : FundSource.REIMBURSABLE,\\n      referenceNumber: referenceNumber,\\n      exportedAs: exportType,\\n      fyleUrl: this.generateFyleUrl(expenseGroup.expenses[0], referenceType, org_id),\\n      integrationUrl: `${environment.qbo_app_url}/app/${type}?txnId=${id}`,\\n      expenses: expenseGroup.expenses\\n    };\\n  }\\n}\\n\\nexport class SkippedAccountingExportModel {\\n  static getfilteredSkippedAccountingExports(query: string, group: SkipExportList): boolean {\\n    const employeeID = group.employee ? group.employee[1] : \'\';\\n    const expenseType = group.expenseType ? group.expenseType : \'\';\\n    const referenceNumber = group.claim_number ? group.claim_number : \'\';\\n\\n    return (\\n      employeeID.toLowerCase().includes(query) ||\\n      expenseType.toLowerCase().includes(query) ||\\n      referenceNumber.toLowerCase().includes(query)\\n    );\\n  }\\n\\n  static parseAPIResponseToSkipExportList(skippedExpense: SkipExportLog): SkipExportList {\\n    return {\\n      updated_at: skippedExpense.updated_at,\\n      claim_number: skippedExpense.claim_number,\\n      employee: [skippedExpense.employee_name, skippedExpense.employee_email],\\n      expenseType: skippedExpense.fund_source === \'PERSONAL\' ? \'Reimbursable\' : \'Corporate Card\',\\n      fyleUrl: `${environment.fyle_app_url}/app/admin/#/view_expense/${skippedExpense.expense_id}?org_id=${skippedExpense.org_id}`\\n    };\\n  }\\n}\\n","properties":[],"methods":[{"name":"getfilteredSkippedAccountingExports","args":[{"name":"query","type":"string","deprecated":false,"deprecationMessage":""},{"name":"group","type":"SkipExportList","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":228,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"query","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"group","type":"SkipExportList","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"parseAPIResponseToSkipExportList","args":[{"name":"skippedExpense","type":"SkipExportLog","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"SkipExportList","typeParameters":[],"line":240,"deprecated":false,"deprecationMessage":"","modifierKind":[126],"jsdoctags":[{"name":"skippedExpense","type":"SkipExportLog","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"indexSignatures":[],"extends":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[],"components":[{"name":"AdvancedSettingComponent","id":"component-AdvancedSettingComponent-cc08eb394d7c85f312274fb389e3b40951482a676bc3834c09404ac647dce434856ed93befaf729aa6824b85a13126a415e7bd63548dc37a3fa37062e2b3bab6","file":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-advanced-setting","styleUrls":["./advanced-setting.component.scss"],"styles":[],"templateUrl":["./advanced-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"adminEmails","deprecated":false,"deprecationMessage":"","type":"EmailOptions[]","optional":false,"description":"","line":54},{"name":"advancedSettings","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","optional":false,"description":"","line":31},{"name":"advancedSettingsForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":25},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":71,"modifierKind":[148]},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"defaultMemoFields","defaultValue":"[\'employee_email\', \'merchant\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":50},{"name":"defaultTopMemoOptions","defaultValue":"[\\"employee_email\\", \\"employee_name\\", \\"purpose\\", \\"merchant\\"]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":52},{"name":"frequencyIntervals","defaultValue":"[...Array(30).keys()].map(day => {\\n    return {\\n      label: this.setFrequencyInterval(day+1) + \' of every month\',\\n      value: (day + 1).toString()\\n    };\\n  })","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":58},{"name":"frequencyOption","defaultValue":"[\\n    {\\n      value: QBDScheduleFrequency.DAILY,\\n      label: \'Daily\'\\n    },\\n    {\\n      value: QBDScheduleFrequency.WEEKLY,\\n      label: \'Weekly\'\\n    },\\n    {\\n      value: QBDScheduleFrequency.MONTHLY,\\n      label: \'Monthly\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":35},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":23},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":21},{"name":"memoPreviewText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":65},{"name":"memoStructure","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":67},{"name":"QBDScheduleFrequency","defaultValue":"QBDScheduleFrequency","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33},{"name":"saveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":69,"modifierKind":[123]},{"name":"weeklyOptions","defaultValue":"[\'SUNDAY\', \'MONDAY\', \'TUESDAY\', \'WEDNESDAY\', \'THURSDAY\', \'FRIDAY\', \'SATURDAY\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":56}],"methodsClass":[{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":233,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createMemoStructureWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"formatMemoPreview","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"frequencyWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getAdminEmails","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":176,"deprecated":false,"deprecationMessage":""},{"name":"getPhase","args":[],"optional":false,"returnType":"ProgressPhase","typeParameters":[],"line":229,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":184,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initialTime","args":[],"optional":false,"returnType":"string[]","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":269,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":263,"deprecated":false,"deprecationMessage":""},{"name":"scheduledWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setCustomValidator","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":223,"deprecated":false,"deprecationMessage":""},{"name":"setFrequencyInterval","args":[{"name":"day","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"day","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { ClickEvent, Page, ConfigurationCta, QBDOnboardingState, ProgressPhase, QBDScheduleFrequency, ToastSeverity, UpdateEvent } from \'src/app/core/models/enum/enum.model\';\\nimport { AdvancedSettingModel, QBDAdvancedSettingsGet, EmailOptions } from \'src/app/core/models/qbd/qbd-configuration/advanced-setting.model\';\\nimport { QBDExportSettingFormOption } from \'src/app/core/models/qbd/qbd-configuration/export-setting.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { OrgService } from \'src/app/core/services/org/org.service\';\\nimport { QbdAdvancedSettingService } from \'src/app/core/services/qbd/qbd-configuration/qbd-advanced-setting.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { QbdWorkspaceService } from \'src/app/core/services/qbd/qbd-core/qbd-workspace.service\';\\nimport { environment } from \'src/environments/environment\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-advanced-setting\',\\n  templateUrl: \'./advanced-setting.component.html\',\\n  styleUrls: [\'./advanced-setting.component.scss\']\\n})\\nexport class AdvancedSettingComponent implements OnInit {\\n  isOnboarding: any;\\n\\n  isLoading: boolean;\\n\\n  advancedSettingsForm: FormGroup;\\n\\n  saveInProgress: boolean;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  advancedSettings: QBDAdvancedSettingsGet;\\n\\n  QBDScheduleFrequency = QBDScheduleFrequency;\\n\\n  frequencyOption: QBDExportSettingFormOption[] = [\\n    {\\n      value: QBDScheduleFrequency.DAILY,\\n      label: \'Daily\'\\n    },\\n    {\\n      value: QBDScheduleFrequency.WEEKLY,\\n      label: \'Weekly\'\\n    },\\n    {\\n      value: QBDScheduleFrequency.MONTHLY,\\n      label: \'Monthly\'\\n    }\\n  ];\\n\\n  defaultMemoFields: string[] = [\'employee_email\', \'merchant\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n\\n  defaultTopMemoOptions: string[] = [\\"employee_email\\", \\"employee_name\\", \\"purpose\\", \\"merchant\\"];\\n\\n  adminEmails: EmailOptions[];\\n\\n  weeklyOptions: string[] = [\'SUNDAY\', \'MONDAY\', \'TUESDAY\', \'WEDNESDAY\', \'THURSDAY\', \'FRIDAY\', \'SATURDAY\'];\\n\\n  frequencyIntervals:QBDExportSettingFormOption[] = [...Array(30).keys()].map(day => {\\n    return {\\n      label: this.setFrequencyInterval(day+1) + \' of every month\',\\n      value: (day + 1).toString()\\n    };\\n  });\\n\\n  memoPreviewText: string;\\n\\n  memoStructure: string[] = [];\\n\\n  private sessionStartTime = new Date();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private router: Router,\\n    private advancedSettingService: QbdAdvancedSettingService,\\n    private formBuilder: FormBuilder,\\n    private workspaceService: QbdWorkspaceService,\\n    private orgService: OrgService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService\\n  ) { }\\n\\n  private formatMemoPreview(): void {\\n    const time = Date.now();\\n    const today = new Date(time);\\n\\n    const previewValues: { [key: string]: string } = {\\n      employee_email: \'john.doe@acme.com\',\\n      category: \'Meals and Entertainment\',\\n      purpose: \'Client Meeting\',\\n      merchant: \'Pizza Hut\',\\n      report_number: \'C/2021/12/R/1\',\\n      spent_on: today.toLocaleDateString(),\\n      expense_link: `${environment.fyle_app_url}/app/main/#/enterprise/view_expense/`\\n    };\\n    this.memoPreviewText = \'\';\\n    const memo: string[] = [];\\n    this.memoStructure.forEach((field, index) => {\\n      if (field in previewValues) {\\n        const defaultIndex = this.defaultMemoFields.indexOf(this.memoStructure[index]);\\n        memo[defaultIndex] = previewValues[field];\\n      }\\n    });\\n    memo.forEach((field, index) => {\\n      this.memoPreviewText += field;\\n      if (index + 1 !== memo.length) {\\n        this.memoPreviewText = this.memoPreviewText + \' - \';\\n      }\\n    });\\n  }\\n\\n  private setFrequencyInterval(day: number): string {\\n    if (day === 1) {\\n      return day + \' st\';\\n    } else if (day === 2) {\\n      return day + \' nd\';\\n    } else if (day === 3) {\\n      return day + \' rd\';\\n    }\\n    return day + \' th\';\\n  }\\n\\n  private initialTime(): string[] {\\n    const inputTime = this.advancedSettings?.time_of_day ? this.advancedSettings.time_of_day: \\"12:00:00\\";\\n    const outputTime = new Date(`01/01/2000 ${inputTime} GMT`).toLocaleString(\'en-US\', {\\n      hour12: true,\\n      hour: \'numeric\',\\n      minute: \'numeric\',\\n      second: \'numeric\'\\n    });\\n    const time = outputTime.split(\\" \\");\\n    const Time = time[0][0] > \'1\' && time[0][1] === \':\' ? \'0\'+time[0] : time[0];\\n    time[0] = Time.slice(0, -3);\\n    return time;\\n  }\\n\\n  private createMemoStructureWatcher(): void {\\n    this.memoStructure = this.advancedSettingsForm.value.expenseMemoStructure;\\n    this.formatMemoPreview();\\n    this.advancedSettingsForm.controls.expenseMemoStructure.valueChanges.subscribe((memoChanges) => {\\n      this.memoStructure = memoChanges;\\n      this.formatMemoPreview();\\n    });\\n  }\\n\\n  private frequencyWatcher() {\\n    this.advancedSettingsForm.controls.frequency.valueChanges.subscribe((frequency) => {\\n      if (frequency=== this.frequencyOption[1].value) {\\n        this.advancedSettingsForm.controls.dayOfWeek.setValidators(Validators.required);\\n        this.advancedSettingsForm.controls.dayOfMonth.clearValidators();\\n      } else if (frequency === this.frequencyOption[2].value) {\\n        this.advancedSettingsForm.controls.dayOfWeek.clearValidators();\\n        this.advancedSettingsForm.controls.dayOfMonth.setValidators(Validators.required);\\n      }\\n    });\\n  }\\n\\n  private scheduledWatcher() {\\n    if (this.advancedSettingsForm.controls.exportSchedule.value) {\\n      this.advancedSettingsForm.controls.email.setValidators(Validators.required);\\n      this.advancedSettingsForm.controls.frequency.setValidators(Validators.required);\\n    }\\n    this.advancedSettingsForm.controls.exportSchedule.valueChanges.subscribe((isScheduledSelected) => {\\n      if (isScheduledSelected) {\\n        this.advancedSettingsForm.controls.email.setValidators(Validators.required);\\n        this.advancedSettingsForm.controls.frequency.setValidators(Validators.required);\\n      } else {\\n        this.advancedSettingsForm.controls.frequency.clearValidators();\\n        this.advancedSettingsForm.controls.frequency.setValue(null);\\n        this.advancedSettingsForm.controls.email.clearValidators();\\n        this.advancedSettingsForm.controls.email.setValue([]);\\n      }\\n    });\\n  }\\n\\n  getAdminEmails() {\\n    this.isLoading= true;\\n    this.orgService.getAdditionalEmails().subscribe((emailResponse: EmailOptions[]) => {\\n      this.adminEmails = emailResponse;\\n      this.getSettingsAndSetupForm();\\n    });\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    this.advancedSettingService.getQbdAdvancedSettings().subscribe((advancedSettingResponse : QBDAdvancedSettingsGet) => {\\n      this.advancedSettings = advancedSettingResponse;\\n      const resultTime = this.initialTime();\\n      this.advancedSettingsForm = this.formBuilder.group({\\n        expenseMemoStructure: [this.advancedSettings?.expense_memo_structure && this.advancedSettings?.expense_memo_structure.length > 0 ? this.advancedSettings?.expense_memo_structure : this.defaultMemoFields, Validators.required],\\n          topMemoStructure: [this.advancedSettings?.top_memo_structure.length > 0 ? this.advancedSettings?.top_memo_structure[0] : this.defaultTopMemoOptions[0], Validators.required],\\n          exportSchedule: [this.advancedSettings?.schedule_is_enabled ? this.advancedSettings?.schedule_is_enabled : false],\\n          email: [this.advancedSettings?.emails_selected.length > 0 ? this.advancedSettings?.emails_selected : []],\\n          frequency: [this.advancedSettings?.frequency ? this.advancedSettings?.frequency : null],\\n          dayOfMonth: [this.advancedSettings?.day_of_month ? this.advancedSettings?.day_of_month : null],\\n          dayOfWeek: [this.advancedSettings?.day_of_week ? this.advancedSettings?.day_of_week : null],\\n          timeOfDay: [resultTime[0]],\\n          meridiem: [resultTime[1]],\\n          search: []\\n      });\\n      this.isLoading = false;\\n      this.setCustomValidator();\\n    }, error => {\\n      const resultTime = this.initialTime();\\n        this.advancedSettingsForm = this.formBuilder.group({\\n          expenseMemoStructure: [this.defaultMemoFields, Validators.required],\\n          topMemoStructure: [this.defaultTopMemoOptions[0], Validators.required],\\n          exportSchedule: [false],\\n          email: [[]],\\n          frequency: [null],\\n          dayOfMonth: [null],\\n          dayOfWeek: [null],\\n          timeOfDay: [resultTime[0]],\\n          meridiem: [resultTime[1]],\\n          search: []\\n        });\\n        this.isLoading = false;\\n        this.setCustomValidator();\\n      }\\n    );\\n  }\\n\\n  setCustomValidator() {\\n    this.createMemoStructureWatcher();\\n    this.frequencyWatcher();\\n    this.scheduledWatcher();\\n  }\\n\\n  private getPhase(): ProgressPhase {\\n    return this.isOnboarding ? ProgressPhase.ONBOARDING : ProgressPhase.POST_ONBOARDING;\\n  }\\n\\n  private constructPayloadAndSave(): void {\\n    this.saveInProgress = true;\\n    const advancedSettingPayload = AdvancedSettingModel.constructPayload(this.advancedSettingsForm);\\n    this.advancedSettingService.postQbdAdvancedSettings(advancedSettingPayload).subscribe((response: QBDAdvancedSettingsGet) => {\\n      this.saveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Advanced settings saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.ADVANCED_SETTINGS_QBD, this.sessionStartTime);\\n      if (this.workspaceService.getOnboardingState() === QBDOnboardingState.ADVANCED_SETTINGS) {\\n        this.trackingService.onOnboardingStepCompletion(QBDOnboardingState.ADVANCED_SETTINGS, 4, advancedSettingPayload);\\n      } else {\\n        this.trackingService.onUpdateEvent(\\n          UpdateEvent.ADVANCED_SETTINGS_QBD,\\n          {\\n            phase: this.getPhase(),\\n            oldState: this.advancedSettings,\\n            newState: response\\n          }\\n        );\\n      }\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(QBDOnboardingState.COMPLETE);\\n        this.router.navigate([`/integrations/qbd/onboarding/done`]);\\n      }\\n    }, () => {\\n      this.saveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving advanced settings, please try again later\');\\n      });\\n  }\\n\\n  save(): void {\\n    if (this.advancedSettingsForm.valid) {\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n    this.getAdminEmails();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./advanced-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"advancedSettingService","type":"QbdAdvancedSettingService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""}],"line":71,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"advancedSettingService","type":"QbdAdvancedSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header \\n        [headerText]=\\"\'Advanced Settings\'\\"\\n        [contentText]=\\"\'This section contains settings to automate and customize your expense export.\'\\"></app-configuration-step-header>\\n    </div>\\n    <div>\\n        <form [formGroup]=\\"advancedSettingsForm\\">\\n            <div class=\\"tw-p-24-px\\">\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg tw-my-16-px\\">\\n                    <app-configuration-toggle-field \\n                        [form]=\\"advancedSettingsForm\\"\\n                        [label]=\\"\'Schedule automatic export\'\\" \\n                        [subLabel]=\\"\'Set up a schedule to frequently automate the export of expenses from \' + brandingConfig.brandName + \' to QuickBooks Desktop.\'\\"\\n                        [formControllerName]=\\"\'exportSchedule\'\\">\\n                    </app-configuration-toggle-field>\\n                </div>\\n                <div *ngIf=\\"advancedSettingsForm.value.exportSchedule\\">\\n                    <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"advancedSettingsForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'Frequency\'\\"\\n                        [label]=\\"\'How frequently do you want the IIF file to be generated?\'\\"\\n                        [subLabel]=\\"\'You can select the frequency you want your IIF file to be sent via email.\'\\"\\n                        [options]=\\"frequencyOption\\"\\n                        [iconPath]=\\"\'sync\'\\"\\n                        [placeholder]=\\"\'Select frequency\'\\"\\n                        [formControllerName]=\\"\'frequency\'\\"></app-configuration-select-field>\\n    \\n                        <div *ngIf=\\"advancedSettingsForm.value.frequency\\">\\n                            <div class=\\"tw-pl-22-px\\">\\n                                <div *ngIf=\\"advancedSettingsForm.value.frequency === QBDScheduleFrequency.DAILY\\" >\\n                                    <app-configuration-select-field\\n                                    [form]=\\"advancedSettingsForm\\"\\n                                    [isFieldMandatory]=\\"true\\"\\n                                    [mandatoryErrorListName]=\\"\'Time\'\\"\\n                                    [label]=\\"\'Select the time of the day for the IIF file to be generated\'\\"\\n                                    [subLabel]=\\"\'You can select the frequency you want your IIF file to be sent via email.\'\\"\\n                                    [options]=\\"weeklyOptions\\"\\n                                    [formControllerName]=\\"\'timeOfDay\'\\"></app-configuration-select-field>\\n                                </div>\\n                                <div *ngIf=\\"advancedSettingsForm.value.frequency === QBDScheduleFrequency.WEEKLY\\" >\\n                                    <app-configuration-select-field\\n                                    [form]=\\"advancedSettingsForm\\"\\n                                    [isFieldMandatory]=\\"true\\"\\n                                    [mandatoryErrorListName]=\\"\'day\'\\"\\n                                    [label]=\\"\'Select the time of the week for the IIF file to be generated\'\\"\\n                                    [subLabel]=\\"\'You can select the frequency you want your IIF file to be sent via email.\'\\"\\n                                    [options]=\\"weeklyOptions\\"\\n                                    [placeholder]=\\"\'Select Weekly frequency\'\\"\\n                                    [formControllerName]=\\"\'dayOfWeek\'\\"></app-configuration-select-field>\\n                                </div>\\n                                <div *ngIf=\\"advancedSettingsForm.value.frequency === QBDScheduleFrequency.MONTHLY\\" >\\n                                    <app-configuration-select-field\\n                                    [form]=\\"advancedSettingsForm\\"\\n                                    [isFieldMandatory]=\\"true\\"\\n                                    [mandatoryErrorListName]=\\"\'date\'\\"\\n                                    [label]=\\"\'Select the time of the month for the IIF file to be generated\'\\"\\n                                    [subLabel]=\\"\'You can select the frequency you want your IIF file to be sent via email.\'\\"\\n                                    [options]=\\"frequencyIntervals\\"\\n                                    [placeholder]=\\"\'Select Monthly frequency\'\\"\\n                                    [formControllerName]=\\"\'dayOfMonth\'\\"></app-configuration-select-field> \\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-email-multi-select-field\\n                            [form]=\\"advancedSettingsForm\\"\\n                            [label]=\\"\'Select an email address that should receive the IIF file\'\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'email for export\'\\"\\n                            [subLabel]=\\"\'You can select the email address from the given list, or add new one to receive the IIF file via email.\'\\"\\n                            [options]=\\"adminEmails\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select email address\'\\"\\n                            [formControllerName]=\\"\'email\'\\">\\n                        </app-email-multi-select-field>\\n                    </div>\\n                </div>\\n                <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                    <app-configuration-select-field\\n                    [form]=\\"advancedSettingsForm\\"\\n                    [label]=\\"\'Select the Top level MEMO field data for QuickBooks Desktop\'\\"\\n                    [subLabel]=\\"\'You can customize the <b>data point</b> you would like to export to QuickBooks Desktop\\\\’s <b>Top-level MEMO</b> field while exporting expenses from \' + brandingConfig.brandName + \'.\'\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [mandatoryErrorListName]=\\"\'top level memo\'\\"\\n                    [simpleOptions]=\\"defaultTopMemoOptions\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [placeholder]=\\"\'Select Top Memo Type\'\\"\\n                    [formControllerName]=\\"\'topMemoStructure\'\\"></app-configuration-select-field>\\n                </div>\\n                <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                    <app-configuration-multi-select\\n                    [form]=\\"advancedSettingsForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [customErrorMessage]=\\"\'Please select atleast one memo type from the list\'\\"\\n                    [label]=\\"\'Set the Line-Item level MEMO field data for QuickBooks Desktop.*\'\\"\\n                    [subLabel]=\\"\'You can customize the data set you would like to export to QuickBooks Desktop\\\\’s <b>Transaction Line-Item level MEMO</b> field while exporting expenses from \' + brandingConfig.brandName + \'.\'\\"\\n                    [options]=\\"defaultMemoFields\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [placeholder]=\\"\'Select Memo Types\'\\"\\n                    [formControllerName]=\\"\'expenseMemoStructure\'\\"></app-configuration-multi-select>\\n                    <div class=\\"tw-p-24-px\\">\\n                        <p class=\\"tw-text-12-px tw-mb-12-px tw-text-faded-text-color\\">Preview of the data in QuickBooks Desktop Memo field</p>\\n                        <div class=\\"tw-bg-disabled-bg-color tw-rounded-4-px tw-text-14-px tw-py-8-px tw-px-8-px\\">\\n                            <span>{{ memoPreviewText }}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div>\\n                <app-configuration-step-footer [ctaText]=\\"!saveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" [isButtonDisabled]=\\"!advancedSettingsForm.valid || saveInProgress\\" (save)=\\"save()\\"></app-configuration-step-footer>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n"},{"name":"AppComponent","id":"component-AppComponent-ff86958daa6d72fe5bc03141f1db23e5539854746fb73abaf29a7e3e46fef93c7887c06ec8dbc54ee06d6d4c1bb66ceb26ac39cb33b1d4a9ae0da3da46949b22","file":"src/app/app.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-root","styleUrls":["./app.component.scss"],"styles":[],"templateUrl":["./app.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"closeToast","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { MessageService, PrimeNGConfig } from \'primeng/api\';\\nimport { EventsService } from \'./core/services/common/events.service\';\\n\\n@Component({\\n  selector: \'app-root\',\\n  templateUrl: \'./app.component.html\',\\n  styleUrls: [\'./app.component.scss\']\\n})\\nexport class AppComponent implements OnInit {\\n\\n  constructor(\\n    private eventsService: EventsService,\\n    private messageService: MessageService,\\n    private primengConfig: PrimeNGConfig\\n  ) { }\\n\\n  closeToast(): void {\\n    this.messageService.clear(\'\');\\n  }\\n\\n  ngOnInit(): void {\\n    this.eventsService.receiveEvent();\\n    this.primengConfig.ripple = true;\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./app.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"eventsService","type":"EventsService","deprecated":false,"deprecationMessage":""},{"name":"messageService","type":"MessageService","deprecated":false,"deprecationMessage":""},{"name":"primengConfig","type":"PrimeNGConfig","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"eventsService","type":"EventsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"messageService","type":"MessageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"primengConfig","type":"PrimeNGConfig","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet>\\n</router-outlet>\\n<p-toast position=\\"bottom-center\\" [baseZIndex]=\\"5000\\">\\n    <ng-template let-message pTemplate=\\"message\\">\\n        <div class=\\"tw-flex tw-justify-between tw-items-center tw-h-44-px tw-text-14-px\\" [ngClass]=\\"message.severity === \'success\' ? \'tw-bg-success-toast\' : \'tw-bg-alert-toast\'\\">\\n            <div class=\\"tw-flex\\">\\n                <svg-icon-sprite *ngIf=\\"message.severity === \'success\'\\" src=\\"check-done\\" width=\\"18px\\" height=\\"18px\\" class=\\"tw-text-white tw-pl-14-px tw-pr-10-px tw-pt-2-px\\"></svg-icon-sprite>\\n                <svg-icon-sprite *ngIf=\\"message.severity !== \'success\'\\" src=\\"alert\\" width=\\"18px\\" height=\\"18px\\" class=\\"tw-text-white tw-pl-14-px tw-pr-10-px tw-pt-2-px\\"></svg-icon-sprite>\\n                {{ message.summary }}\\n            </div>\\n            <div class=\\"tw-flex tw-items-center tw-cursor-pointer\\">\\n                <svg-icon-sprite (click)=\\"closeToast()\\" src=\\"close\\" width=\\"10px\\" height=\\"10px\\" class=\\"tw-pr-22-px tw-text-white\\"></svg-icon-sprite>\\n            </div>\\n        </div>\\n    </ng-template>\\n</p-toast>"},{"name":"AppLandingPageBodyComponent","id":"component-AppLandingPageBodyComponent-1bc7ea3796b24e863145f828effc8f5f3d87c36b3ba77edc78e2015a938b19d15e0d4ed3556b25836e77e4dc0cfa38eb5b5551a64bbcd0410918b06eb6f67f38","file":"src/app/shared/components/helper/app-landing-page-body/app-landing-page-body.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-landing-page-body","styleUrls":["./app-landing-page-body.component.scss"],"styles":[],"templateUrl":["./app-landing-page-body.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"embedVideo","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"headerText","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"headlineText","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"redirectLink","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]},{"name":"svgPath","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[148]},{"name":"embedVideoUrl","deprecated":false,"deprecationMessage":"","type":"SafeResourceUrl","optional":false,"description":"","line":23},{"name":"windowService","deprecated":false,"deprecationMessage":"","type":"WindowService","optional":false,"description":"","line":28,"modifierKind":[125]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""},{"name":"updateEmbedVideoUrl","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { DomSanitizer, SafeResourceUrl } from \'@angular/platform-browser\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\n\\n@Component({\\n  selector: \'app-landing-page-body\',\\n  templateUrl: \'./app-landing-page-body.component.html\',\\n  styleUrls: [\'./app-landing-page-body.component.scss\']\\n})\\nexport class AppLandingPageBodyComponent implements OnInit {\\n\\n  @Input() headlineText: string;\\n\\n  @Input() headerText: string;\\n\\n  @Input() svgPath: string;\\n\\n  @Input() redirectLink: string;\\n\\n  @Input() embedVideo: string;\\n\\n  embedVideoUrl: SafeResourceUrl;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    public windowService: WindowService,\\n    private sanitizer: DomSanitizer\\n  ) { }\\n\\n  ngOnInit(): void {\\n    this.updateEmbedVideoUrl();\\n  }\\n\\n  private updateEmbedVideoUrl(): void {\\n    this.embedVideoUrl = this.sanitizer.bypassSecurityTrustResourceUrl(this.embedVideo);\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./app-landing-page-body.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""},{"name":"sanitizer","type":"DomSanitizer","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sanitizer","type":"DomSanitizer","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pt-40-px tw-flex tw-justify-center tw-text-center tw-flex-col\\">\\n    <p *ngIf=\\"!headlineText\\" class=\\"tw-text-normal-text-color tw-text-20-px tw-font-500\\">How does the integration work?</p>\\n    <p *ngIf=\\"headlineText\\" class=\\"tw-text-normal-text-color tw-text-20-px tw-font-500\\">{{ headlineText }}</p>\\n    <p class=\\"tw-text-slightly-normal-text-color tw-text-14-px tw-pt-8-px tw-flex tw-justify-center\\">\\n        {{headerText}}\\n        <span *ngIf=\\"redirectLink\\" class=\\"tw-text-hyperlink-color tw-flex tw-pl-4-px tw-cursor-pointer\\" (click)=\\"windowService.openInNewTab(redirectLink)\\">\\n            Read More\\n            <svg-icon-sprite src=\\"open-in-new-tab\\" width=\\"14px\\" height=\\"14px\\" class=\\"tw-text-hyperlink-color tw-pl-6-px tw-pt-3-px\\"></svg-icon-sprite>\\n        </span>\\n    </p>\\n\\n    <div *ngIf=\\"embedVideo\\" class=\\"tw-flex tw-justify-center tw-pt-48-px\\">\\n        <iframe class= \\"tw-rounded-8-px\\" width=\\"720\\" height=\\"420\\" [src]=\\"embedVideoUrl\\" title=\\"{{brandingConfig.brandName}} Sage Intacct Integration\\" frameborder=\\"0\\"></iframe>\\n    </div>    \\n\\n    <div class=\\"tw-flex tw-justify-center tw-mt-80-px tw-mb-14\\">\\n        <img src=\\"{{svgPath}}\\" />\\n    </div>    \\n</div>"},{"name":"AppLandingPageHeaderComponent","id":"component-AppLandingPageHeaderComponent-2a7e451cf8124f4ea9a3280da04623005a071be95c832df2c0d914420c846cbc790e35af02e9811bb3426d5533ed0f60ed9da06cbb5e5dc720b1aa46f5597924","file":"src/app/shared/components/helper/app-landing-page-header/app-landing-page-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-landing-page-header","styleUrls":["./app-landing-page-header.component.scss"],"styles":[],"templateUrl":["./app-landing-page-header.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appDescription","deprecated":false,"deprecationMessage":"","line":34,"type":"string","decorators":[]},{"name":"appName","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[]},{"name":"buttonText","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]},{"name":"hideRefreshIcon","deprecated":false,"deprecationMessage":"","line":42,"type":"boolean","decorators":[]},{"name":"iconPath","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"iframeSourceUrl","deprecated":false,"deprecationMessage":"","line":44,"type":"SafeResourceUrl | null","decorators":[]},{"name":"isConnectionInProgress","deprecated":false,"deprecationMessage":"","line":48,"type":"boolean","decorators":[]},{"name":"isIntegrationConnected","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[]},{"name":"isIntegrationSetupInProgress","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[]},{"name":"isLoading","deprecated":false,"deprecationMessage":"","line":36,"type":"boolean","decorators":[]},{"name":"isRecipeRunning","deprecated":false,"deprecationMessage":"","line":38,"type":"boolean","decorators":[]},{"name":"logoSectionStyleClasses","defaultValue":"\'tw-rounded-4-px tw-border-1-px tw-border-box-color tw-bg-white tw-w-176-px\'","deprecated":false,"deprecationMessage":"","line":58,"type":"string","decorators":[]},{"name":"logoStyleClasses","defaultValue":"\'tw-py-10-px tw-px-20-px\'","deprecated":false,"deprecationMessage":"","line":56,"type":"string","decorators":[]},{"name":"logoWidth","defaultValue":"\'140px\'","deprecated":false,"deprecationMessage":"","line":54,"type":"string","decorators":[]},{"name":"postConnectionRoute","deprecated":false,"deprecationMessage":"","line":50,"type":"string","decorators":[]},{"name":"redirectLink","deprecated":false,"deprecationMessage":"","line":46,"type":"string","decorators":[]},{"name":"showErrorScreen","deprecated":false,"deprecationMessage":"","line":40,"type":"boolean","decorators":[]},{"name":"showQBOButton","deprecated":false,"deprecationMessage":"","line":52,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"connectIntegration","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":18,"type":"EventEmitter"},{"name":"disconnectIntegration","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":20,"type":"EventEmitter"},{"name":"syncEmployees","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":22,"type":"EventEmitter"}],"propertiesClass":[{"name":"AppName","defaultValue":"AppName","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":16},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62,"modifierKind":[148]},{"name":"qboConnectButtonSource","defaultValue":"\'assets/icons/buttons/connect-to-qbo.svg\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":60},{"name":"windowService","deprecated":false,"deprecationMessage":"","type":"WindowService","optional":false,"description":"","line":67,"modifierKind":[125]}],"methodsClass":[{"name":"connect","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"deprecated":false,"deprecationMessage":""},{"name":"disconnect","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":""},{"name":"initiateOAuth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":""},{"name":"syncData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { SafeResourceUrl } from \'@angular/platform-browser\';\\nimport { Router } from \'@angular/router\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { AppName, ClickEvent } from \'src/app/core/models/enum/enum.model\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\n\\n@Component({\\n  selector: \'app-landing-page-header\',\\n  templateUrl: \'./app-landing-page-header.component.html\',\\n  styleUrls: [\'./app-landing-page-header.component.scss\']\\n})\\nexport class AppLandingPageHeaderComponent implements OnInit {\\n\\n  AppName = AppName;\\n\\n  @Output() connectIntegration = new EventEmitter<void>();\\n\\n  @Output() disconnectIntegration = new EventEmitter<void>();\\n\\n  @Output() syncEmployees = new EventEmitter<void>();\\n\\n  @Input() iconPath: string;\\n\\n  @Input() isIntegrationConnected: boolean;\\n\\n  @Input() isIntegrationSetupInProgress: boolean;\\n\\n  @Input() appName: string;\\n\\n  @Input() buttonText: string;\\n\\n  @Input() appDescription: string;\\n\\n  @Input() isLoading: boolean;\\n\\n  @Input() isRecipeRunning: boolean;\\n\\n  @Input() showErrorScreen: boolean;\\n\\n  @Input() hideRefreshIcon: boolean;\\n\\n  @Input() iframeSourceUrl: SafeResourceUrl | null;\\n\\n  @Input() redirectLink: string;\\n\\n  @Input() isConnectionInProgress: boolean;\\n\\n  @Input() postConnectionRoute: string;\\n\\n  @Input() showQBOButton: boolean;\\n\\n  @Input() logoWidth: string = \'140px\';\\n\\n  @Input() logoStyleClasses: string = \'tw-py-10-px tw-px-20-px\';\\n\\n  @Input() logoSectionStyleClasses: string = \'tw-rounded-4-px tw-border-1-px tw-border-box-color tw-bg-white tw-w-176-px\';\\n\\n  qboConnectButtonSource: string = \'assets/icons/buttons/connect-to-qbo.svg\';\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private router: Router,\\n    private trackingService: TrackingService,\\n    public windowService: WindowService\\n  ) { }\\n\\n  syncData(): void {\\n    this.syncEmployees.emit();\\n  }\\n\\n  initiateOAuth(): void {\\n    this.connectIntegration.emit();\\n  }\\n\\n  disconnect(): void {\\n    this.disconnectIntegration.emit();\\n  }\\n\\n  connect(): void {\\n\\n    if (this.appName === this.AppName.TRAVELPERK) {\\n      this.initiateOAuth();\\n      return;\\n    } else if (this.postConnectionRoute === \'qbd/onboarding/export_settings\') {\\n      this.trackingService.onClickEvent(ClickEvent.CONNECT_QBD);\\n    } else if (this.postConnectionRoute === \'intacct/onboarding/connector\') {\\n      this.trackingService.onClickEvent(ClickEvent.CONNECT_INTACCT);\\n    } else if (this.postConnectionRoute === \'sage300/onboarding/connector\') {\\n      this.trackingService.onClickEvent(ClickEvent.CONNECT_SAGE300);\\n    } else if (this.postConnectionRoute === \'business_central/onboarding/connector\') {\\n      this.initiateOAuth();\\n      this.trackingService.onClickEvent(ClickEvent.CONNECT_BUSINESS_CENTRAL);\\n    }\\n    this.router.navigate([`/integrations/${this.postConnectionRoute}`]);\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".remove-bg {\\n    @apply tw-bg-none #{!important};\\n}\\n\\n.recipe-active {\\n    border: 1px solid #DFDFE2 !important;\\n}\\n\\n.disconnect {\\n    border: 1px solid #DFDFE2 !important;\\n}\\n","styleUrl":"./app-landing-page-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":62,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div class=\\"tw-p-24-px tw-text-slightly-normal-text-color\\">\\n    <div class=\\"tw-h-68-px tw-flex tw-justify-between\\">\\n            <div class=\\"tw-flex\\">\\n                <div class=\\"tw-flex tw-justify-center\\" [ngClass]=\\"logoSectionStyleClasses\\">\\n                    <img src=\\"{{ iconPath }}\\" width=\\"logoWidth\\" height=\\"44px\\" [ngClass]=\\"logoStyleClasses\\" />\\n                </div>\\n                <div class=\\"tw-pl-16-px tw-flex tw-flex-col\\">\\n                    <div class=\\"tw-flex tw-pt-6-px\\">\\n                        <p class=\\"tw-text-20-px tw-font-500 tw-text-normal-text-color\\">{{ appName }}</p>\\n                        <svg-icon-sprite *ngIf=\\"isIntegrationConnected && !isLoading && isRecipeRunning && !hideRefreshIcon\\" pTooltip=\\"Sync Data\\" tooltipPosition=\\"right\\" src=\\"sync\\" width=\\"18px\\" height=\\"14px\\" class=\\"tw-cursor-pointer tw-ml-10-px tw-pt-6-px tw-text-faded-text-color\\" (click)=\\"syncData()\\"></svg-icon-sprite>\\n                    </div>\\n                    <p *ngIf=\\"!isIntegrationSetupInProgress\\" class=\\"tw-text-slightly-normal-text-color tw-pt-2-px tw-text-14-px tw-font-400 tw-flex\\">{{ appDescription }}\\n                        <span *ngIf=\\"redirectLink\\" class=\\"tw-text-hyperlink-color tw-flex tw-pl-4-px tw-cursor-pointer\\" (click)=\\"windowService.openInNewTab(redirectLink)\\">\\n                            Read More\\n                            <svg-icon-sprite src=\\"open-in-new-tab\\" width=\\"14px\\" height=\\"14px\\" class=\\"tw-text-hyperlink-color tw-pl-6-px tw-pt-3-px\\"></svg-icon-sprite>\\n                        </span>\\n                    </p>\\n                    <div *ngIf=\\"isIntegrationSetupInProgress\\" class=\\"tw-flex tw-text-slightly-normal-text-color tw-text-14-px tw-pt-10-px tw-pb-18-px\\">\\n                        <app-loader [styleClass]=\\"\'spinner-16 tw-top-2-px\'\\"></app-loader>\\n                        <p class=\\"tw-pl-10-px\\">We are syncing your data between your {{brandingConfig.brandName}} - {{ appName }} account and this may take a few seconds</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\"!isIntegrationSetupInProgress && !isLoading && !showErrorScreen \\" class=\\"tw-flex tw-items-center\\">\\n                <button *ngIf=\\"!isIntegrationConnected && (appName === AppName.BAMBOO_HR || appName === AppName.TRAVELPERK)\\" pButton type=\\"button\\" class=\\"p-button-raised\\" (click)=\\"connect()\\" [disabled]=\\"isConnectionInProgress\\">\\n                    {{ isConnectionInProgress ? \'Connecting\' : \'Connect\' }}\\n                    <i *ngIf=\\"!isConnectionInProgress\\" class=\\"tw-pl-10-px tw-pt-2-px !tw-text-12-px pi pi-arrow-right\\"></i>\\n                    <app-loader class=\\"tw-ml-10-px\\" *ngIf=\\"isConnectionInProgress\\" [styleClass]=\\"\'spinner-16-white tw-top-2-px\'\\"></app-loader>\\n                </button>\\n                <button *ngIf=\\"isIntegrationConnected && isRecipeRunning && appName !== AppName.GUSTO\\" pButton type=\\"button\\" class=\\"!tw-text-alert-toast remove-bg disconnect !tw-bg-white\\" (click)=\\"disconnect()\\">\\n                    {{ isConnectionInProgress ? \'Disconnecting\' : \'Disconnect\' }}\\n                </button>\\n                <button *ngIf=\\"(appName === AppName.QBD || appName === AppName.INTACCT || appName === AppName.SAGE300 || appName === AppName.BUSINESS_CENTRAL)\\" pButton type=\\"button\\" class=\\"p-button-raised\\" (click)=\\"connect()\\">\\n                    {{buttonText}}\\n                    <i *ngIf=\\"appName === AppName.QBD\\" class=\\"tw-pl-10-px tw-pt-2-px !tw-text-12-px pi pi-arrow-right\\"></i>\\n                </button>\\n                <iframe *ngIf=\\"iframeSourceUrl && (appName === AppName.TRAVELPERK || appName === AppName.GUSTO)\\" scrolling=\\"no\\" [src]=\\"iframeSourceUrl\\" class=\\"tw-mt-40-px tw-w-270-px tw-h-84-px\\"></iframe>\\n                <div *ngIf=\\"showQBOButton\\" class=\\"tw-cursor-pointer\\">\\n                    <img\\n                        [src]=\\"qboConnectButtonSource\\"\\n                        (click)=\\"initiateOAuth()\\"\\n                        (mouseover)=\\"qboConnectButtonSource = \'assets/icons/buttons/connect-to-qbo-active.svg\'\\"\\n                        (mouseout)=\\"qboConnectButtonSource = \'assets/icons/buttons/connect-to-qbo.svg\'\\">\\n                </div>\\n            </div>\\n        </div>\\n</div>\\n\\n<p class=\\"tw-h-1-px tw-w-[100%] tw-bg-separator\\"></p>"},{"name":"AuthComponent","id":"component-AuthComponent-9a5bd8c1a6eda00578317d16bb578ed01ba49c52d9d13fabac36c1f22632e7e575f9b5355322dc1c32b25677830a5e52bb8d743f706e9423bddcbe0cb2c6ac3e","file":"src/app/auth/auth.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-auth","styleUrls":["./auth.component.scss"],"styles":[],"templateUrl":["./auth.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-auth\',\\n  templateUrl: \'./auth.component.html\',\\n  styleUrls: [\'./auth.component.scss\']\\n})\\nexport class AuthComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./auth.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>\\n"},{"name":"BambooHrComponent","id":"component-BambooHrComponent-24c7aa9de8d510a7342e9589521698c49df1168f75f02c800ab030d0056ad10e565510d5be517ea905245b71fc567ef5c857ee99d136c9e2e2e22246659e95b4","file":"src/app/integrations/bamboo-hr/bamboo-hr.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-bamboo-hr","styleUrls":["./bamboo-hr.component.scss"],"styles":[],"templateUrl":["./bamboo-hr.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"additionalEmails","deprecated":false,"deprecationMessage":"","type":"EmailOption[]","optional":false,"description":"","line":49},{"name":"bambooConnectionForm","defaultValue":"this.formBuilder.group({\\n    apiToken: [null, Validators.required],\\n    subDomain: [null, Validators.required]\\n  })","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":42},{"name":"bambooHrConfiguration","deprecated":false,"deprecationMessage":"","type":"BambooHRConfiguration","optional":false,"description":"","line":47},{"name":"bambooHrData","deprecated":false,"deprecationMessage":"","type":"BambooHr","optional":false,"description":"","line":34},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[148]},{"name":"brandingKbArticles","defaultValue":"brandingKbArticles","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38},{"name":"hideRefreshIcon","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":30},{"name":"isBambooConnected","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"isBambooConnectionInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"isBambooSetupInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"isConfigurationSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":32},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28},{"name":"org","defaultValue":"this.orgService.getCachedOrg()","deprecated":false,"deprecationMessage":"","type":"Org","optional":false,"description":"","line":36},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53,"modifierKind":[123]},{"name":"showDialog","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"showErrorScreen","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":51}],"methodsClass":[{"name":"closeToast","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":""},{"name":"configurationUpdatesHandler","args":[{"name":"payload","type":"BambooHRConfigurationPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"payload","type":"BambooHRConfigurationPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"connectBambooHR","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":""},{"name":"disconnectBambooHr","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":116,"deprecated":false,"deprecationMessage":""},{"name":"displayToastMessage","args":[{"name":"severity","type":"ToastSeverity","deprecated":false,"deprecationMessage":""},{"name":"summary","type":"string","deprecated":false,"deprecationMessage":""},{"name":"life","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"3000"}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"severity","type":"ToastSeverity","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"summary","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"life","type":"number","deprecated":false,"deprecationMessage":"","defaultValue":"3000","tagName":{"text":"param"}}]},{"name":"getBambooHrConfiguration","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":166,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":195,"deprecated":false,"deprecationMessage":""},{"name":"openDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""},{"name":"setupBambooHr","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":184,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"syncEmployees","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { MessageService } from \'primeng/api\';\\nimport { catchError, concat, merge, of, toArray } from \'rxjs\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { BambooHr, BambooHRConfiguration, BambooHRConfigurationPost, BambooHrModel, EmailOption } from \'src/app/core/models/bamboo-hr/bamboo-hr.model\';\\nimport { ClickEvent, Page, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { Org } from \'src/app/core/models/org/org.model\';\\nimport { BambooHrService } from \'src/app/core/services/bamboo-hr/bamboo-hr.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { OrgService } from \'src/app/core/services/org/org.service\';\\n\\n@Component({\\n  selector: \'app-bamboo-hr\',\\n  templateUrl: \'./bamboo-hr.component.html\',\\n  styleUrls: [\'./bamboo-hr.component.scss\']\\n})\\nexport class BambooHrComponent implements OnInit {\\n\\n  showDialog: boolean;\\n\\n  isBambooConnected: boolean;\\n\\n  isBambooConnectionInProgress: boolean;\\n\\n  isBambooSetupInProgress: boolean;\\n\\n  isLoading: boolean = true;\\n\\n  hideRefreshIcon: boolean;\\n\\n  isConfigurationSaveInProgress: boolean;\\n\\n  bambooHrData: BambooHr;\\n\\n  org: Org = this.orgService.getCachedOrg();\\n\\n  brandingKbArticles = brandingKbArticles;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  bambooConnectionForm: FormGroup = this.formBuilder.group({\\n    apiToken: [null, Validators.required],\\n    subDomain: [null, Validators.required]\\n  });\\n\\n  bambooHrConfiguration: BambooHRConfiguration;\\n\\n  additionalEmails: EmailOption[];\\n\\n  showErrorScreen: boolean;\\n\\n  private sessionStartTime = new Date();\\n\\n  constructor(\\n    private bambooHrService: BambooHrService,\\n    private formBuilder: FormBuilder,\\n    private messageService: MessageService,\\n    private orgService: OrgService,\\n    private trackingService: TrackingService\\n  ) { }\\n\\n  openDialog(): void {\\n    this.trackingService.onClickEvent(ClickEvent.CONNECT_BAMBOO_HR);\\n    this.showDialog = true;\\n  }\\n\\n  displayToastMessage(severity: ToastSeverity, summary: string, life: number = 3000): void {\\n    this.messageService.add({\\n      severity,\\n      summary,\\n      life\\n    });\\n  }\\n\\n  connectBambooHR(): void {\\n    this.isBambooConnectionInProgress = true;\\n    const bambooConnectionPayload = BambooHrModel.constructBambooConnectionPayload(this.bambooConnectionForm);\\n    this.bambooHrService.connectBambooHR(bambooConnectionPayload).subscribe(() => {\\n      this.isBambooConnected = true;\\n      this.isBambooConnectionInProgress = false;\\n      this.showDialog = false;\\n      this.displayToastMessage(ToastSeverity.SUCCESS, \'Connected Bamboo HR Successfully\');\\n      this.trackingService.trackTimeSpent(Page.BAMBOO_HR_LANDING, this.sessionStartTime);\\n      this.sessionStartTime = new Date();\\n    }, () => {\\n      this.displayToastMessage(ToastSeverity.ERROR, \'Connecting Bamboo HR Failed\', 5000);\\n      this.isBambooConnectionInProgress = false;\\n    });\\n  }\\n\\n  closeToast(): void {\\n    this.messageService.clear(\'\');\\n  }\\n\\n  configurationUpdatesHandler(payload: BambooHRConfigurationPost): void {\\n    this.trackingService.onClickEvent(ClickEvent.CONFIGURE_BAMBOO_HR);\\n    this.isConfigurationSaveInProgress = true;\\n    this.bambooHrService.postConfigurations(payload).subscribe((updatedConfiguration: BambooHRConfiguration) => {\\n      this.bambooHrConfiguration = updatedConfiguration;\\n      this.isConfigurationSaveInProgress = false;\\n      this.displayToastMessage(ToastSeverity.SUCCESS, \'Configuration saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.CONFIGURE_BAMBOO_HR, this.sessionStartTime);\\n    });\\n  }\\n\\n  syncEmployees(): void {\\n    this.trackingService.onClickEvent(ClickEvent.SYNC_BAMBOO_HR_EMPLOYEES);\\n    this.hideRefreshIcon = true;\\n    this.displayToastMessage(ToastSeverity.SUCCESS, \'Syncing Employees Started\');\\n    this.bambooHrService.syncEmployees().subscribe(() => {\\n      this.hideRefreshIcon = false;\\n    });\\n  }\\n\\n  disconnectBambooHr(): void {\\n    this.trackingService.onClickEvent(ClickEvent.DISCONNECT_BAMBOO_HR);\\n    this.isLoading = true;\\n    this.bambooHrService.disconnectBambooHr().subscribe(() => {\\n      this.displayToastMessage(ToastSeverity.SUCCESS, \'Disconnected Bamboo HR Successfully\');\\n      this.isBambooConnected = false;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  private setupBambooHr(): void {\\n    const syncData = [];\\n\\n    if (!this.org.managed_user_id) {\\n      syncData.push(this.orgService.createWorkatoWorkspace());\\n    }\\n\\n    if (!this.bambooHrData || !this.bambooHrData.folder_id) {\\n      syncData.push(this.bambooHrService.createFolder());\\n    }\\n\\n    if (!this.bambooHrData || !this.bambooHrData.package_id) {\\n      syncData.push(this.bambooHrService.uploadPackage());\\n    }\\n\\n    if (!this.org.is_fyle_connected) {\\n      syncData.push(this.orgService.connectFyle());\\n    }\\n\\n    if (!this.org.is_sendgrid_connected) {\\n      syncData.push(this.orgService.connectSendgrid());\\n    }\\n\\n    if (syncData.length) {\\n      this.isBambooSetupInProgress = true;\\n      concat(...syncData).pipe(\\n        toArray()\\n      ).subscribe(() => {\\n        this.isLoading = false;\\n        this.isBambooSetupInProgress = false;\\n      }, () => {\\n        this.isLoading = false;\\n        this.isBambooSetupInProgress = false;\\n        this.showErrorScreen = true;\\n      });\\n    } else {\\n      this.isLoading = false;\\n    }\\n  }\\n\\n  private getBambooHrConfiguration(): void {\\n    const data = merge(\\n      this.orgService.getAdditionalEmails(),\\n      this.bambooHrService.getConfigurations().pipe(catchError(() => of(null)))\\n    );\\n\\n    data.pipe(toArray()).subscribe((responses) => {\\n      responses.forEach((response: any) => {\\n        if (Array.isArray(response) && response.length) {\\n          this.additionalEmails = response;\\n        } else if (response?.hasOwnProperty(\'additional_email_options\')) {\\n          this.bambooHrConfiguration = response;\\n        }\\n      });\\n      this.setupBambooHr();\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    this.bambooHrService.getBambooHRData().subscribe((bambooHrData: BambooHr) => {\\n      this.isBambooConnected = bambooHrData.sub_domain && bambooHrData.api_token ? true : false;\\n      this.bambooHrData = bambooHrData;\\n      this.getBambooHrConfiguration();\\n    }, () => {\\n      this.isBambooConnected = false;\\n      this.getBambooHrConfiguration();\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".p-inputtext\\t{\\n    @apply tw-rounded-none tw-h-48-px tw-w-200-px;\\n}\\n","styleUrl":"./bamboo-hr.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"bambooHrService","type":"BambooHrService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"messageService","type":"MessageService","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""}],"line":53,"jsdoctags":[{"name":"bambooHrService","type":"BambooHrService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"messageService","type":"MessageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<p-toast position=\\"bottom-center\\" [baseZIndex]=\\"5000\\">\\n    <ng-template let-message pTemplate=\\"message\\">\\n        <div class=\\"tw-flex tw-justify-between tw-items-center tw-h-44-px tw-text-14-px\\" [ngClass]=\\"message.severity === \'success\' ? \'tw-bg-success-toast\' : \'tw-bg-alert-toast\'\\">\\n            <div class=\\"tw-flex\\">\\n                <svg-icon-sprite *ngIf=\\"message.severity === \'success\'\\" src=\\"check-done\\" width=\\"18px\\" height=\\"18px\\" class=\\"tw-text-white tw-pl-14-px tw-pr-10-px tw-pt-2-px\\"></svg-icon-sprite>\\n                <svg-icon-sprite *ngIf=\\"message.severity !== \'success\'\\" src=\\"alert\\" width=\\"18px\\" height=\\"18px\\" class=\\"tw-text-white tw-pl-14-px tw-pr-10-px tw-pt-2-px\\"></svg-icon-sprite>\\n                {{ message.summary }}\\n            </div>\\n            <div class=\\"tw-flex tw-items-center tw-cursor-pointer\\">\\n                <svg-icon-sprite (click)=\\"closeToast()\\" src=\\"close\\" width=\\"10px\\" height=\\"10px\\" class=\\"tw-pr-22-px tw-text-white\\"></svg-icon-sprite>\\n            </div>\\n        </div>\\n    </ng-template>\\n</p-toast>\\n\\n<app-landing-page-header \\n    [iconPath]=\\"\'assets/logos/bamboo-hr-logo.svg\'\\" \\n    [appName]=\\"\'BambooHR\'\\" \\n    [appDescription]=\\"\'Auto sync employee details between Bamboo HR and \' + brandingConfig.brandName + \'.\'\\" \\n    [isLoading]=\\"isLoading\\" \\n    [hideRefreshIcon]=\\"hideRefreshIcon\\" \\n    [showErrorScreen]=\\"showErrorScreen\\" \\n    [isRecipeRunning]=\\"bambooHrConfiguration?.recipe_status ? true : false\\"\\n    [isIntegrationSetupInProgress]=\\"isBambooSetupInProgress\\" \\n    [isIntegrationConnected]=\\"isBambooConnected\\" \\n    (connectIntegration)=\\"openDialog()\\"\\n    (disconnectIntegration)=\\"disconnectBambooHr()\\" \\n    (syncEmployees)=\\"syncEmployees()\\"\\n></app-landing-page-header>\\n\\n<app-landing-page-body  *ngIf=\\"!isLoading && !isBambooConnected && !showErrorScreen\\"  [headerText]=\\"\'Auto sync employee details between Bamboo HR and \' + brandingConfig.brandName + \'.\'\\" [svgPath]=\\"\'assets/flow-charts/bamboo-hr-flow-chart.svg\'\\" [redirectLink]=\\"brandingKbArticles.topLevelArticles.BAMBOO_HR\\"></app-landing-page-body>\\n\\n<app-error *ngIf=\\"showErrorScreen\\"></app-error>\\n\\n<p-dialog [dismissableMask]=\\"true\\" [showHeader]=\\"false\\" [modal]=\\"true\\" [(visible)]=\\"showDialog\\" [draggable]=\\"false\\" [style]=\\"{width: \'468px\'}\\">\\n    <div *ngIf=\\"isBambooConnectionInProgress\\" class=\\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-h-465-px\\">\\n        <app-loader></app-loader>\\n    </div>\\n    <div *ngIf=\\"!isBambooConnectionInProgress\\">\\n        <div class=\\"tw-pt-22-px tw-flex tw-justify-center\\">\\n            <img src=\\"assets/logos/bamboo-hr-logo.svg\\" width=\\"120px\\" height=\\"40px\\" />\\n        </div>\\n\\n        <div class=\\"tw-pt-34-px tw-px-40-px\\" [formGroup]=\\"bambooConnectionForm\\">\\n            <p class=\\"tw-text-slightly-normal-text-color tw-text-24-px tw-font-500\\">Connect to BambooHR</p>\\n            <p class=\\"tw-pt-10-px tw-text-faded-text-color tw-text-12-px\\">Please enter your credentials to connect your BambooHR account</p>\\n\\n            <div class=\\"tw-pt-32-px\\">\\n                <p class=\\"tw-text-sub-text-color tw-text-14-px tw-pb-8-px\\">\\n                    API Token <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n                </p>\\n                <p-password formControlName=\\"apiToken\\" inputStyleClass=\\"tw-w-388-px tw-h-48-px\\" [feedback]=\\"false\\" [toggleMask]=\\"true\\" placeholder=\\"Enter API token\\"></p-password>\\n\\n                <p class=\\"tw-pt-16-px tw-pb-8-px tw-text-sub-text-color tw-text-14-px\\">\\n                    Sub-domain <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n                </p>\\n\\n                <div class=\\"tw-flex\\">\\n                    <div class=\\"tw-flex tw-justify-center tw-items-center tw-text-14-px tw-bg-disabled-bg-color tw-h-48-px tw-w-68-px tw-border-box-color tw-border-1-px tw-border-r-0 tw-text-slightly-normal-text-color\\">\\n                        https://\\n                    </div>\\n                    <input formControlName=\\"subDomain\\" type=\\"text\\" inputStyleClass=\\"!tw-rounded-0\\" class=\\"!tw-rounded-0\\" pInputText placeholder=\\"Enter Sub-domain\\" />\\n                    <div class=\\"tw-flex tw-justify-center tw-items-center tw-text-14-px tw-bg-disabled-bg-color tw-h-48-px tw-w-118-px tw-border-box-color tw-border-1-px tw-border-l-0 tw-text-slightly-normal-text-color\\">\\n                        .bamboohr.com\\n                    </div>\\n                </div>\\n\\n                <div class=\\"tw-flex tw-items-center tw-pt-24-px tw-pb-40-px\\">\\n                    <button pButton type=\\"button\\" class=\\"p-button-raised\\" [disabled]=\\"!bambooConnectionForm.valid\\" (click)=\\"connectBambooHR()\\">\\n                        Connect\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</p-dialog>\\n\\n<app-configuration *ngIf=\\"!isLoading && isBambooConnected\\" [isConfigurationSaveInProgress]=\\"isConfigurationSaveInProgress\\" [bambooHrConfiguration]=\\"bambooHrConfiguration\\" [additionalEmails]=\\"additionalEmails\\" (updateConfiguration)=\\"configurationUpdatesHandler($event)\\"></app-configuration>\\n\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-pt-70-px\\">\\n    <div *ngFor=\\"let _ of [0,1,2,3,4,5,6]\\" class=\\"tw-w-75-vw tw-h-78-px tw-border-separator tw-border-1-px tw-rounded-8-px tw-mb-18-px\\">\\n        <div class=\\"tw-w-14-vw tw-h-18-px tw-pl-24-px tw-pt-16-px tw-pb-10-px\\">\\n            <p-skeleton shape=\\"rectangle\\"></p-skeleton>\\n        </div>\\n\\n        <div class=\\"tw-w-50-vw tw-h-18-px tw-pl-24-px tw-pt-16-px tw-pb-10-px\\">\\n            <p-skeleton shape=\\"rectangle\\"></p-skeleton>\\n        </div>\\n    </div>\\n</div>"},{"name":"BusinessCentralAdvancedSettingsComponent","id":"component-BusinessCentralAdvancedSettingsComponent-9e9e1681bcd1c1a79630e9d13b6793351005f7bd865de0844231fc86e12b5954ca4fca5d0a0600eb3f12629079a8c3d53d0c3d54005fc15b6a3af88f82a7a68f","file":"src/app/integrations/business-central/business-central-shared/business-central-advanced-settings/business-central-advanced-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-advanced-settings","styleUrls":["./business-central-advanced-settings.component.scss"],"styles":[],"templateUrl":["./business-central-advanced-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"advancedSetting","deprecated":false,"deprecationMessage":"","type":"BusinessCentralAdvancedSettingsGet | null","optional":false,"description":"","line":34},{"name":"advancedSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":26},{"name":"appName","defaultValue":"AppName.BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":42},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60,"modifierKind":[148]},{"name":"conditionFieldOptions","deprecated":false,"deprecationMessage":"","type":"ConditionField[]","optional":false,"description":"","line":32},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":48},{"name":"defaultMemoOptions","defaultValue":"[\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":50},{"name":"expenseFilters","deprecated":false,"deprecationMessage":"","type":"ExpenseFilterResponse","optional":false,"description":"","line":30},{"name":"hours","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"HourOption[]","optional":false,"description":"","line":44},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":40},{"name":"isReimbursableExpense","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":46},{"name":"isSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":36},{"name":"memoPreviewText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52},{"name":"memoStructure","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":54},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":58},{"name":"skipExportForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":28},{"name":"skipExportRedirectLink","defaultValue":"brandingKbArticles.onboardingArticles.BUSINESS_CENTRAL.SKIP_EXPORT","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":56},{"name":"supportArticleLink","defaultValue":"brandingKbArticles.onboardingArticles.BUSINESS_CENTRAL.ADVANCED_SETTING","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":38}],"methodsClass":[{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":""},{"name":"createMemoStructureWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"deleteExpenseFilter","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"formWatchers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":""},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":178,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":199,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":172,"deprecated":false,"deprecationMessage":""},{"name":"saveSkipExportFields","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":""},{"name":"skipExportWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { forkJoin, catchError, of } from \'rxjs\';\\nimport { SkipExportValidatorRule, ExpenseFilterPayload, SkipExportModel, ExpenseFilter, ExpenseFilterResponse, ConditionField, HourOption, skipExportValidator, AdvancedSettingsModel } from \'src/app/core/models/common/advanced-settings.model\';\\nimport { BusinessCentralAdvancedSettingsService } from \'src/app/core/services/business-central/business-central-configuration/business-central-advanced-settings.service\';\\nimport { BusinessCentralHelperService } from \'src/app/core/services/business-central/business-central-core/business-central-helper.service\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { SkipExportService } from \'src/app/core/services/common/skip-export.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { BusinessCentralAdvancedSettingsGet, BusinessCentralAdvancedSettingsModel } from \'src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { AppName, BusinessCentralOnboardingState, BusinessCentralUpdateEvent, ConfigurationCta, Page, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\n\\n@Component({\\n  selector: \'app-business-central-advanced-settings\',\\n  templateUrl: \'./business-central-advanced-settings.component.html\',\\n  styleUrls: [\'./business-central-advanced-settings.component.scss\']\\n})\\nexport class BusinessCentralAdvancedSettingsComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  advancedSettingForm: FormGroup;\\n\\n  skipExportForm: FormGroup;\\n\\n  expenseFilters: ExpenseFilterResponse;\\n\\n  conditionFieldOptions: ConditionField[];\\n\\n  advancedSetting: BusinessCentralAdvancedSettingsGet | null;\\n\\n  isSaveInProgress: boolean;\\n\\n  supportArticleLink: string = brandingKbArticles.onboardingArticles.BUSINESS_CENTRAL.ADVANCED_SETTING;\\n\\n  isOnboarding: boolean;\\n\\n  appName: string = AppName.BUSINESS_CENTRAL;\\n\\n  hours: HourOption[] = [];\\n\\n  isReimbursableExpense: boolean = false;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  defaultMemoOptions: string[] = [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n\\n  memoPreviewText: string;\\n\\n  memoStructure: string[] = [];\\n\\n  skipExportRedirectLink: string = brandingKbArticles.onboardingArticles.BUSINESS_CENTRAL.SKIP_EXPORT;\\n\\n  sessionStartTime: Date = new Date();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private advancedSettingsService: BusinessCentralAdvancedSettingsService,\\n    private helper: HelperService,\\n    private helperService: BusinessCentralHelperService,\\n    private skipExportService: SkipExportService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService,\\n    private workspaceService: WorkspaceService,\\n    private router: Router\\n  ) { }\\n\\n  refreshDimensions(isRefresh: boolean) {\\n    this.helperService.importAttributes(isRefresh);\\n  }\\n\\n  deleteExpenseFilter(rank: number) {\\n    this.skipExportService.deleteExpenseFilter(rank).subscribe();\\n  }\\n\\n  skipExportWatcher(): void {\\n    const formWatcher: skipExportValidator = {\\n      \'isChanged\': [\'condition1\', \'operator1\', \'value1\'],\\n      \'isNotChanged\': [\'condition1\', \'operator1\', \'value1\', \'condition2\', \'operator2\', \'value2\', \'join_by\']\\n    };\\n    this.helper.handleSkipExportFormInAdvancedSettingsUpdates(this.skipExportForm, formWatcher, this.advancedSettingForm);\\n  }\\n\\n  private createMemoStructureWatcher(): void {\\n    this.memoStructure = this.advancedSettingForm.value.memoStructure;\\n    this.memoPreviewText = AdvancedSettingsModel.formatMemoPreview(this.memoStructure, this.defaultMemoOptions);\\n    this.advancedSettingForm.controls.memoStructure.valueChanges.subscribe((memoChanges) => {\\n      this.memoStructure = memoChanges;\\n      this.memoPreviewText = AdvancedSettingsModel.formatMemoPreview(this.memoStructure, this.defaultMemoOptions);\\n    });\\n  }\\n\\n  formWatchers() {\\n    this.skipExportWatcher();\\n    this.createMemoStructureWatcher();\\n    const skipExportFormWatcherFields: SkipExportValidatorRule = {\\n      condition1: [\'operator1\', \'value1\'],\\n      condition2: [\'operator2\', \'value2\'],\\n      operator1: [\'value1\'],\\n      operator2: [\'value2\']\\n    };\\n    this.helper.setConfigurationSettingValidatorsAndWatchers(skipExportFormWatcherFields, this.skipExportForm);\\n  }\\n\\n  saveSkipExportFields(): void {\\n    if (!this.skipExportForm.valid) {\\n      return;\\n    }\\n    let valueField = this.skipExportForm.getRawValue();\\n    if (!valueField.condition1.field_name) {\\n      return;\\n    }\\n    valueField = SkipExportModel.constructSkipExportValue(valueField);\\n    valueField.rank = 1;\\n    const skipExportRank1: ExpenseFilterPayload = SkipExportModel.constructExportFilterPayload(valueField);\\n    const payload1 = SkipExportModel.constructSkipExportPayload(skipExportRank1, this.skipExportForm.value.value1);\\n    this.skipExportService.postExpenseFilter(payload1).subscribe((skipExport1: ExpenseFilter) => {\\n      if (valueField.condition2 && valueField.operator2) {\\n        valueField.rank = 2;\\n        const skipExportRank2: ExpenseFilterPayload = SkipExportModel.constructExportFilterPayload(valueField);\\n        const payload2 = SkipExportModel.constructSkipExportPayload(skipExportRank2, this.skipExportForm.value.value2);\\n        this.skipExportService.postExpenseFilter(payload2).subscribe((skipExport2: ExpenseFilter) => {});\\n      }\\n    });\\n  }\\n\\n  constructPayloadAndSave(){\\n    this.isSaveInProgress = true;\\n    if (!this.advancedSettingForm.value.skipExport && this.expenseFilters.results.length > 0){\\n      this.expenseFilters.results.forEach((value) => {\\n        this.deleteExpenseFilter(value.rank);\\n      });\\n    }\\n    if (this.advancedSettingForm.value.skipExport) {\\n      this.saveSkipExportFields();\\n    }\\n    const advancedSettingPayload = BusinessCentralAdvancedSettingsModel.createAdvancedSettingPayload(this.advancedSettingForm);\\n    this.advancedSettingsService.postAdvancedSettings(advancedSettingPayload).subscribe((advancedSettingsResponse: BusinessCentralAdvancedSettingsGet) => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Advanced settings saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.ADVANCED_SETTINGS_BUSINESS_CENTRAL, this.sessionStartTime);\\n      if (this.workspaceService.getOnboardingState() === BusinessCentralOnboardingState.ADVANCED_SETTINGS) {\\n        this.trackingService.onOnboardingStepCompletion(BusinessCentralOnboardingState.ADVANCED_SETTINGS, 3, advancedSettingPayload);\\n      } else {\\n        this.trackingService.onUpdateEvent(\\n          BusinessCentralUpdateEvent.ADVANCED_SETTINGS_BUSINESS_CENTRAL,\\n          {\\n            phase: this.helper.getPhase(this.isOnboarding),\\n            oldState: this.advancedSetting,\\n            newState: advancedSettingsResponse\\n          }\\n        );\\n      }\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(BusinessCentralOnboardingState.COMPLETE);\\n        this.router.navigate([`/integrations/business_central/onboarding/done`]);\\n      }\\n\\n\\n    }, () => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving export settings, please try again later\');\\n      });\\n  }\\n\\n  save(): void {\\n    if (this.advancedSettingForm.valid && this.skipExportForm.valid) {\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    for (let i = 1; i <= 24; i++) {\\n      this.hours.push({ label: `${i}`, value: i });\\n    }\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    forkJoin([\\n      this.advancedSettingsService.getAdvancedSettings().pipe(catchError(() => of(null))),\\n      this.skipExportService.getExpenseFilter(),\\n      this.skipExportService.getExpenseFields()\\n    ]).subscribe(([businessCentralAdvancedSettingResponse, expenseFiltersGet, expenseFilterCondition]) => {\\n      this.advancedSetting = businessCentralAdvancedSettingResponse;\\n      this.expenseFilters = expenseFiltersGet;\\n      this.conditionFieldOptions = expenseFilterCondition;\\n      const isSkipExportEnabled = expenseFiltersGet.count > 0;\\n      this.advancedSettingForm = BusinessCentralAdvancedSettingsModel.mapAPIResponseToFormGroup(this.advancedSetting, isSkipExportEnabled);\\n      this.skipExportForm = SkipExportModel.setupSkipExportForm(this.expenseFilters, [], this.conditionFieldOptions);\\n      this.formWatchers();\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSettingsAndSetupForm();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-advanced-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"advancedSettingsService","type":"BusinessCentralAdvancedSettingsService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"BusinessCentralHelperService","deprecated":false,"deprecationMessage":""},{"name":"skipExportService","type":"SkipExportService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":60,"jsdoctags":[{"name":"advancedSettingsService","type":"BusinessCentralAdvancedSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"BusinessCentralHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"skipExportService","type":"SkipExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header \\n            [headerText]=\\"\'Advanced Settings\'\\"\\n            [contentText]=\\"\'In this section, you can customize the integration based on your accounting requirements. \'\\"\\n            [redirectLink]=\\"supportArticleLink\\"\\n            [showSyncButton]=\\"isOnboarding\\"\\n            [appName]=\\"appName\\"\\n            (refreshDimension)=\\"refreshDimensions($event)\\">\\n        </app-configuration-step-header>\\n    </div>\\n    <div>\\n        <form [formGroup]=\\"advancedSettingForm\\">\\n            <div class=\\"tw-p-24-px\\">\\n                <div class=\\"tw-mb-16-px\\">\\n                    <app-configuration-step-sub-header\\n                        [label]=\\"\'Automation\'\\"\\n                        [subLabel]=\\"\'You can automate the export and sync of your data in this section.\'\\">\\n                    </app-configuration-step-sub-header>\\n                </div>\\n                <div class=\\"tw-mb-16-px\\">\\n                    <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                        <app-configuration-toggle-field \\n                            [form]=\\"advancedSettingForm\\"\\n                            [label]=\\"\'Schedule automatic export\'\\" \\n                            [subLabel]=\\"\'Set up a schedule to frequently automate the export of expenses from \' + brandingConfig.brandName + \' to Dynamics 365 Business Central.\'\\" \\n                            [formControllerName]=\\"\'scheduleEnabled\'\\"\\n                            [iconPath]=\\"\'calender\'\\">\\n                        </app-configuration-toggle-field>\\n                        <div *ngIf=\\"advancedSettingForm.value.scheduleEnabled\\">\\n                            <app-configuration-schedule-export\\n                                [form]=\\"advancedSettingForm\\"\\n                                [isFieldMandatory]=\\"false\\"\\n                                [mandatoryErrorListName]=\\"\'automatic export method\'\\"\\n                                [label]=\\"\'Set up export frequency\'\\"\\n                                [subLabel]=\\"\'Set a frequency based on how often you want your expenses in \' + brandingConfig.brandName + \' to be exported to Dynamics 365 Business Central\'\\"\\n                                [options]=\\"hours\\"\\n                                [placeholder]=\\"\'Set Schedule\'\\"\\n                                [formControllerName]=\\"\'scheduleAutoExportFrequency\'\\">\\n                            </app-configuration-schedule-export>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\"tw-mb-16-px\\">\\n                    <app-configuration-step-sub-header\\n                        [label]=\\"\'Customization\'\\"\\n                        [subLabel]=\\"\'In this section, you can customize the data that you\\\\\'d like to export from \' + brandingConfig.brandName + \' to Dynamics 365 Business Central. You can choose what data points need to be exported and what shouldn\\\\\'t be.\'\\">\\n                    </app-configuration-step-sub-header>\\n                </div>\\n                <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                    <app-configuration-multi-select\\n                        [form]=\\"advancedSettingForm\\"\\n                        [isFieldMandatory]=\\"false\\"\\n                        [mandatoryErrorListName]=\\"\'Item level description\'\\"\\n                        [label]=\\"\'Set the line item-level Description Field in Dynamics 365 Business Central\'\\"\\n                        [subLabel]=\\"\'You can choose from a list of available data points that you\\\\\'d like to export to the description field in Dynamics 365 Business Central and re-order them as per your requirement.\'\\"\\n                        [options]=\\"defaultMemoOptions\\"\\n                        [iconPath]=\\"\'expense\'\\"\\n                        [placeholder]=\\"\'Set description\'\\"\\n                        [formControllerName]=\\"\'memoStructure\'\\">\\n                    </app-configuration-multi-select>\\n                    <div class=\\"preview-text\\">\\n                        <h4 class=\\"tw-mb-12-px\\">Preview of the Description Field</h4>\\n                        <div class=\\"preview-box\\">\\n                            {{memoPreviewText}}\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                    <app-configuration-toggle-field \\n                        [form]=\\"advancedSettingForm\\"\\n                        [label]=\\"\'Skip export of specific expenses from \' + brandingConfig.brandName + \' to Dynamics 365 Business Central\'\\" \\n                        [subLabel]=\\"\'You could choose to skip expenses from \' + brandingConfig.brandName + \' to Dynamics 365 Business Central by setting up a conditional rule.\'\\" \\n                        [formControllerName]=\\"\'skipExport\'\\"\\n                        [iconPath]=\\"\'expense\'\\"\\n                        [redirectLink]=\\"skipExportRedirectLink\\">\\n                    </app-configuration-toggle-field>\\n                    <div *ngIf=\\"advancedSettingForm.value.skipExport\\">\\n                        <app-configuration-skip-export\\n                        [enableSkipExport]=\\"advancedSettingForm.value.skipExport\\"\\n                        [skipExportForm]=\\"skipExportForm\\"\\n                        [expenseFilter]=\\"expenseFilters\\"\\n                        [conditionFieldOptions]=\\"conditionFieldOptions\\"\\n                        (deleteSkipExportForm)=\\"deleteExpenseFilter($event)\\">\\n                        </app-configuration-skip-export>\\n                    </div>\\n                </div>\\n            </div>\\n            <div>\\n                <app-configuration-step-footer [ctaText] = \\"!isSaveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!advancedSettingForm.valid\\"></app-configuration-step-footer>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n"},{"name":"BusinessCentralBaseMappingComponent","id":"component-BusinessCentralBaseMappingComponent-1eed22aecf8b84ab33dfde94adc420cd01a591225b687849436eec20e77ff3920e6c1f7942baddd4ca5cf8b32034b05374b13b1f66679c367b23c6c6f5572ae3","file":"src/app/integrations/business-central/business-central-main/business-central-mapping/business-central-base-mapping/business-central-base-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-base-mapping","styleUrls":["./business-central-base-mapping.component.scss"],"styles":[],"templateUrl":["./business-central-base-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"cccExpenseObject","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29},{"name":"destinationField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":21},{"name":"destinationOptions","deprecated":false,"deprecationMessage":"","type":"DestinationAttribute[]","optional":false,"description":"","line":33},{"name":"employeeFieldMapping","deprecated":false,"deprecationMessage":"","type":"FyleField","optional":false,"description":"","line":31},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":23},{"name":"reimbursableExpenseObject","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"showAutoMapEmployee","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":25},{"name":"sourceField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":19}],"methodsClass":[{"name":"getDestinationField","args":[{"name":"exportSetting","type":"BusinessCentralExportSettingGet","deprecated":false,"deprecationMessage":""},{"name":"mappingSettings","type":"MappingSetting[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"exportSetting","type":"BusinessCentralExportSettingGet","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingSettings","type":"MappingSetting[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""},{"name":"triggerAutoMapEmployees","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { BusinessCentralExportSettingGet } from \'src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model\';\\nimport { DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { MappingSetting } from \'src/app/core/models/db/mapping-setting.model\';\\nimport { AccountingField, FyleField, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { QBOWorkspaceGeneralSetting } from \'src/app/core/models/qbo/db/workspace-general-setting.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\n\\n@Component({\\n  selector: \'app-business-central-base-mapping\',\\n  templateUrl: \'./business-central-base-mapping.component.html\',\\n  styleUrls: [\'./business-central-base-mapping.component.scss\']\\n})\\nexport class BusinessCentralBaseMappingComponent implements OnInit {\\n\\n  sourceField: string;\\n\\n  destinationField: string;\\n\\n  isLoading: boolean = true;\\n\\n  showAutoMapEmployee: boolean = false;\\n\\n  reimbursableExpenseObject: string;\\n\\n  cccExpenseObject: string;\\n\\n  employeeFieldMapping: FyleField;\\n\\n  destinationOptions: DestinationAttribute[];\\n\\n  constructor(\\n    private route: ActivatedRoute,\\n    private mappingService: MappingService,\\n    private toastService: IntegrationsToastService\\n  ) { }\\n\\n  triggerAutoMapEmployees() {\\n    this.isLoading = true;\\n    this.mappingService.triggerAutoMapEmployees().subscribe(() => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Auto mapping of employees may take few minutes\');\\n    }, () => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Something went wrong, please try again\');\\n    });\\n  }\\n\\n  private getDestinationField(exportSetting: BusinessCentralExportSettingGet, mappingSettings: MappingSetting[]): string {\\n    if (this.sourceField === FyleField.EMPLOYEE) {\\n      return exportSetting.employee_mapping;\\n    } else if (this.sourceField === FyleField.CATEGORY) {\\n      return AccountingField.ACCOUNT;\\n    }\\n\\n    return mappingSettings.find((setting) => setting.source_field === this.sourceField)?.destination_field || \'\';\\n  }\\n\\n  setupPage(): void {\\n    this.sourceField = this.route.snapshot.params.source_field.toUpperCase();\\n\\n    forkJoin([\\n      this.mappingService.getMappingSettings(),\\n      this.mappingService.getExportSettings()\\n    ]).subscribe(([mappingSettingsResponse, exportSettingsResponse]) => {\\n      this.destinationField = this.getDestinationField(exportSettingsResponse, mappingSettingsResponse.results);\\n      this.employeeFieldMapping = (exportSettingsResponse.employee_mapping as unknown as FyleField);\\n      this.reimbursableExpenseObject = exportSettingsResponse.reimbursable_expenses_object;\\n      this.cccExpenseObject = exportSettingsResponse.corporate_credit_card_expenses_object;\\n      this.showAutoMapEmployee = exportSettingsResponse.auto_map_employees ? true : false;\\n\\n      this.mappingService\\n        .getDestinationAttributes(this.destinationField, \'v2\', undefined, undefined, undefined, undefined\\n        )\\n        .subscribe((destinationAttributesResponse: any) => {\\n          this.destinationOptions = destinationAttributesResponse;\\n          this.isLoading = false;\\n        });\\n    });\\n  }\\n\\n\\n  ngOnInit(): void {\\n    this.route.params.subscribe(() => {\\n      this.isLoading = true;\\n      this.setupPage();\\n    });\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-base-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""}],"line":33,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<app-generic-mapping-v2 *ngIf=\\"!isLoading\\"\\n    [isLoading]=\\"isLoading\\"\\n    [destinationOptions]=\\"destinationOptions\\"\\n    [employeeFieldMapping]=\\"employeeFieldMapping\\"\\n    [sourceField]=\\"sourceField\\"\\n    [destinationField]=\\"destinationField\\"\\n    [showAutoMapEmployee]=\\"showAutoMapEmployee\\"\\n    (triggerAutoMapEmployee)=\\"triggerAutoMapEmployees()\\"\\n></app-generic-mapping-v2>"},{"name":"BusinessCentralCompleteExportLogComponent","id":"component-BusinessCentralCompleteExportLogComponent-a006809943483dc4e932284deaf540ed5b63ee90e7fb325618f935fefbe91c6d059e2b7b04bf911f0be50d8f8766af7594ddf7f05b4c8befb483969083cf1a5c","file":"src/app/integrations/business-central/business-central-main/business-central-export-log/business-central-complete-export-log/business-central-complete-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-complete-export-log","styleUrls":["./business-central-complete-export-log.component.scss"],"styles":[],"templateUrl":["./business-central-complete-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"accountingExports","deprecated":false,"deprecationMessage":"","type":"AccountingExportList[]","optional":false,"description":"","line":42},{"name":"appName","defaultValue":"AppName.BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":24},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":32},{"name":"dateOptions","defaultValue":"AccountingExportModel.getDateOptions()","deprecated":false,"deprecationMessage":"","type":"DateFilter[]","optional":false,"description":"","line":34},{"name":"expenses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":46},{"name":"exportLogForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":38},{"name":"filteredAccountingExports","deprecated":false,"deprecationMessage":"","type":"AccountingExportList[]","optional":false,"description":"","line":44},{"name":"isCalendarVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":40},{"name":"isDateSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":48},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":28},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30},{"name":"org_id","defaultValue":"this.userService.getUserProfile().org_id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":50,"modifierKind":[123]},{"name":"selectedDateFilter","deprecated":false,"deprecationMessage":"","type":"SelectedDateFilter | null","optional":false,"description":"","line":36},{"name":"totalCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":26}],"methodsClass":[{"name":"getAccountingExports","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAccountingExportsAndSetupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":140,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleSimpleSearch","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":""},{"name":"openExpenseinFyle","args":[{"name":"expenseId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expenseId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"trackDateFilter","args":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":""},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup } from \'@angular/forms\';\\nimport { AccountingExport, AccountingExportList, AccountingExportModel } from \'src/app/core/models/db/accounting-export.model\';\\nimport { AccountingExportStatus, AccountingExportType, AppName, BusinessCentralExportType, PaginatorPage } from \'src/app/core/models/enum/enum.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { DateFilter, SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\nimport { ExportLogService } from \'src/app/core/services/common/export-log.service\';\\nimport { PaginatorService } from \'src/app/core/services/common/paginator.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { UserService } from \'src/app/core/services/misc/user.service\';\\n\\n@Component({\\n  selector: \'app-business-central-complete-export-log\',\\n  templateUrl: \'./business-central-complete-export-log.component.html\',\\n  styleUrls: [\'./business-central-complete-export-log.component.scss\']\\n})\\nexport class BusinessCentralCompleteExportLogComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  appName: AppName = AppName.BUSINESS_CENTRAL;\\n\\n  totalCount: number = 0;\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  currentPage: number = 1;\\n\\n  dateOptions: DateFilter[] = AccountingExportModel.getDateOptions();\\n\\n  selectedDateFilter: SelectedDateFilter | null;\\n\\n  exportLogForm: FormGroup;\\n\\n  isCalendarVisible: boolean;\\n\\n  accountingExports: AccountingExportList [];\\n\\n  filteredAccountingExports: AccountingExportList [];\\n\\n  expenses: Expense [] = [];\\n\\n  isDateSelected: boolean = false;\\n\\n  private org_id: string = this.userService.getUserProfile().org_id;\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private trackingService: TrackingService,\\n    private accountingExportService: AccountingExportService,\\n    private windowService: WindowService,\\n    private paginatorService: PaginatorService,\\n    private userService: UserService\\n  ) { }\\n\\n  openExpenseinFyle(expenseId: string) {\\n    this.windowService.openInNewTab(AccountingExportModel.getFyleExpenseUrl(expenseId));\\n  }\\n\\n  public handleSimpleSearch(event: any) {\\n    const query = event.target.value.toLowerCase();\\n\\n    this.filteredAccountingExports = this.accountingExports.filter((group: AccountingExportList) => {\\n      return AccountingExportModel.getfilteredAccountingExports(query, group);\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    this.limit = limit;\\n    this.currentPage = 1;\\n    this.getAccountingExports(limit, this.offset);\\n  }\\n\\n  pageChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.offset = offset;\\n    this.currentPage = Math.ceil(offset / this.limit) + 1;\\n    this.getAccountingExports(this.limit, offset);\\n  }\\n\\n  private getAccountingExports(limit: number, offset:number) {\\n    this.isLoading = true;\\n\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.EXPORT_LOG, limit);\\n    }\\n\\n    this.accountingExportService.getAccountingExports([BusinessCentralExportType.PURCHASE_INVOICE, BusinessCentralExportType.JOURNAL_ENTRY], [AccountingExportStatus.COMPLETE], null, limit, offset, this.selectedDateFilter).subscribe(accountingExportResponse => {\\n        if (!this.isDateSelected) {\\n          this.totalCount = accountingExportResponse.count;\\n        }\\n        const accountingExports: AccountingExportList[] = accountingExportResponse.results.map((accountingExport: AccountingExport) =>\\n          AccountingExportModel.parseAPIResponseToExportLog(accountingExport, this.org_id)\\n        );\\n        this.filteredAccountingExports = accountingExports;\\n        this.accountingExports = [...this.filteredAccountingExports];\\n        this.isLoading = false;\\n      });\\n  }\\n\\n  private trackDateFilter(filterType: \'existing\' | \'custom\', selectedDateFilter: SelectedDateFilter): void {\\n    const trackingProperty = {\\n      filterType,\\n      ...selectedDateFilter\\n    };\\n    this.trackingService.onDateFilter(trackingProperty);\\n  }\\n\\n  private setupForm(): void {\\n    this.exportLogForm = this.formBuilder.group({\\n      searchOption: [\'\'],\\n      dateRange: [null],\\n      start: [\'\'],\\n      end: [\'\']\\n    });\\n\\n    this.exportLogForm.controls.dateRange.valueChanges.subscribe((dateRange) => {\\n      const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n      if (dateRange) {\\n        this.selectedDateFilter = {\\n          startDate: dateRange.startDate,\\n          endDate: dateRange.endDate\\n        };\\n\\n        this.trackDateFilter(\'existing\', this.selectedDateFilter);\\n        this.getAccountingExports(paginator.limit, paginator.offset);\\n      } else {\\n        this.selectedDateFilter = null;\\n        this.getAccountingExports(paginator.limit, paginator.offset);\\n      }\\n    });\\n  }\\n\\n  private getAccountingExportsAndSetupPage(): void {\\n    this.setupForm();\\n\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n\\n    this.getAccountingExports(paginator.limit, paginator.offset);\\n  }\\n\\n  ngOnInit(): void {\\n    this.getAccountingExportsAndSetupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-complete-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""}],"line":50,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-shadow-app-card tw-bg-white tw-border-1-px tw-border-separator\\">\\n    <div>\\n        <app-export-log-filter *ngIf=\\"totalCount > 0 || selectedDateFilter\\"\\n            [exportLogForm]=\\"exportLogForm\\"\\n            [dateOptions]=\\"dateOptions\\"\\n            (handleSimpleSearch)=\\"handleSimpleSearch($event)\\">\\n        </app-export-log-filter>\\n\\n        <app-export-log-table \\n            [filteredExpenseGroups]=\\"filteredAccountingExports\\"\\n            [appName]=\\"appName\\"\\n            [isExportLogTable]=\\"true\\"\\n            [isDashboardFailed]=\\"false\\">\\n        </app-export-log-table>\\n\\n        <div *ngIf=\\"filteredAccountingExports.length > 0\\" class=\\"tw-p-24-px tw-border-t-1-px\\">\\n            <app-paginator \\n                [dropDownValue]=\\"limit\\" \\n                [page]=\\"currentPage\\" \\n                [totalCount]=\\"totalCount\\" \\n                (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" \\n                (pageOffsetChangeEvent)=\\"pageChanges($event)\\">\\n            </app-paginator>\\n        </div>\\n\\n        <app-zero-state-with-illustration *ngIf=\\"!filteredAccountingExports.length && !selectedDateFilter && totalCount > 0\\"\\n            [mainText]=\\"\'Sorry, no results found!\'\\"\\n            [subText]=\\"\'We could not find what you were looking for. Kindly check the keywords again.\'\\">\\n        </app-zero-state-with-illustration>\\n\\n    </div>\\n\\n    <app-zero-state-with-illustration *ngIf=\\"totalCount === 0\\"\\n    [mainText]=\\"\'No records to show yet!\'\\"\\n    [subText]=\\"\'All your successful exports and their details will be stored here.\'\\">\\n    </app-zero-state-with-illustration>\\n\\n</div>"},{"name":"BusinessCentralComponent","id":"component-BusinessCentralComponent-1053a037429ce411864e4a7faf89db9a1fb1c182b4cff261db9a8432456af79be76a32a5ff353655bb44f31b9821826e873a11d9687dda873fb6b5efb109d007","file":"src/app/integrations/business-central/business-central.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central","styleUrls":["./business-central.component.scss"],"styles":[],"templateUrl":["./business-central.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":23},{"name":"user","defaultValue":"this.userService.getUserProfile()","deprecated":false,"deprecationMessage":"","type":"MinimalUser","optional":false,"description":"","line":19},{"name":"windowReference","deprecated":false,"deprecationMessage":"","type":"Window","optional":false,"description":"","line":25},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"BusinessCentralWorkspace","optional":false,"description":"","line":21}],"methodsClass":[{"name":"navigate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":""},{"name":"setupWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"storeWorkspaceAndNavigate","args":[{"name":"workspace","type":"BusinessCentralWorkspace","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"workspace","type":"BusinessCentralWorkspace","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { BusinessCentralWorkspace } from \'src/app/core/models/business-central/db/business-central-workspace.model\';\\nimport { MinimalUser } from \'src/app/core/models/db/user.model\';\\nimport { BusinessCentralOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { BusinessCentralMappingService } from \'src/app/core/services/business-central/business-central-mapping/business-central-mapping.service\';\\nimport { IntegrationsUserService } from \'src/app/core/services/common/integrations-user.service\';\\nimport { StorageService } from \'src/app/core/services/common/storage.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\n\\n@Component({\\n  selector: \'app-business-central\',\\n  templateUrl: \'./business-central.component.html\',\\n  styleUrls: [\'./business-central.component.scss\']\\n})\\nexport class BusinessCentralComponent implements OnInit {\\n\\n  user: MinimalUser = this.userService.getUserProfile();\\n\\n  workspace: BusinessCentralWorkspace;\\n\\n  isLoading: boolean = true;\\n\\n  windowReference: Window;\\n\\n  constructor(\\n    private storageService: StorageService,\\n    private router: Router,\\n    private userService: IntegrationsUserService,\\n    private workspaceService: WorkspaceService,\\n    private windowService: WindowService,\\n    private mapping: BusinessCentralMappingService\\n  ) {\\n    this.windowReference = this.windowService.nativeWindow;\\n  }\\n\\n  private navigate(): void {\\n    const pathName = this.windowReference.location.pathname;\\n    if (pathName === \'/integrations/business_central\') {\\n      const onboardingStateComponentMap = {\\n        [BusinessCentralOnboardingState.CONNECTION]: \'/integrations/business_central/onboarding/landing\',\\n        [BusinessCentralOnboardingState.EXPORT_SETTINGS]: \'/integrations/business_central/onboarding/export_settings\',\\n        [BusinessCentralOnboardingState.IMPORT_SETTINGS]: \'/integrations/business_central/onboarding/import_settings\',\\n        [BusinessCentralOnboardingState.ADVANCED_SETTINGS]: \'/integrations/business_central/onboarding/advanced_settings\',\\n        [BusinessCentralOnboardingState.COMPLETE]: \'/integrations/business_central/main/dashboard\'\\n      };\\n      this.router.navigateByUrl(onboardingStateComponentMap[this.workspace.onboarding_state]);\\n    }\\n  }\\n\\n  private setupWorkspace(): void {\\n    this.workspaceService.getWorkspace(this.user.org_id).subscribe((workspaces: BusinessCentralWorkspace[]) => {\\n      if (workspaces.length) {\\n        this.storeWorkspaceAndNavigate(workspaces[0]);\\n      }\\n    }, () => {\\n      this.workspaceService.postWorkspace().subscribe((workspaces: any) => {\\n        this.storeWorkspaceAndNavigate(workspaces);\\n      });\\n    }\\n    );\\n  }\\n\\n  storeWorkspaceAndNavigate(workspace:BusinessCentralWorkspace) {\\n    this.workspace = workspace;\\n    this.storageService.set(\'workspaceId\', this.workspace.id);\\n    this.storageService.set(\'onboarding-state\', this.workspace.onboarding_state);\\n    this.workspaceService.importFyleAttributes(false).subscribe();\\n    this.mapping.importBusinessCentralAttributes(false).subscribe();\\n    this.isLoading = false;\\n    this.navigate();\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupWorkspace();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"IntegrationsUserService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""},{"name":"mapping","type":"BusinessCentralMappingService","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"IntegrationsUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mapping","type":"BusinessCentralMappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>"},{"name":"BusinessCentralConfigurationComponent","id":"component-BusinessCentralConfigurationComponent-10a594f1acfb56410a21fc1d65c047a239318b3a07a778b1c78d27c9bd36d01ffd85c29621bf757e622c7105e7a0387c4a0648d922390a9cb101b79dbac2ccd3","file":"src/app/integrations/business-central/business-central-main/business-central-configuration/business-central-configuration.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-configuration","styleUrls":["./business-central-configuration.component.scss"],"styles":[],"templateUrl":["./business-central-configuration.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-business-central-configuration\',\\n  templateUrl: \'./business-central-configuration.component.html\',\\n  styleUrls: [\'./business-central-configuration.component.scss\']\\n})\\nexport class BusinessCentralConfigurationComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-configuration.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>\\n"},{"name":"BusinessCentralDashboardComponent","id":"component-BusinessCentralDashboardComponent-cc87832b48229112c2a64a4d019f7351a596f2586466c7e2f7a7b53c8140244ce6ab860259857f5d735522c489f779e8d1e16c01783ef02a1a1fd25960381f2e","file":"src/app/integrations/business-central/business-central-main/business-central-dashboard/business-central-dashboard.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-dashboard","styleUrls":["./business-central-dashboard.component.scss"],"styles":[],"templateUrl":["./business-central-dashboard.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"accountingExportSummary","deprecated":false,"deprecationMessage":"","type":"AccountingExportSummary | null","optional":false,"description":"","line":34},{"name":"accountingExportType","defaultValue":"[BusinessCentralExportType.PURCHASE_INVOICE, BusinessCentralExportType.JOURNAL_ENTRY]","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportType[]","optional":false,"description":"","line":50,"modifierKind":[148]},{"name":"appName","defaultValue":"AppName.BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":22},{"name":"destinationFieldMap","defaultValue":"{\\n    \'EMPLOYEE\': \'VENDOR\',\\n    \'CATEGORY\': \'ACCOUNT\'\\n  }","deprecated":false,"deprecationMessage":"","type":"DestinationFieldMap","optional":false,"description":"","line":45,"modifierKind":[148]},{"name":"errors","deprecated":false,"deprecationMessage":"","type":"AccountingGroupedErrors","optional":false,"description":"","line":38},{"name":"exportableAccountingExportIds","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"number[]","optional":false,"description":"","line":28},{"name":"exportProgressPercentage","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":32},{"name":"failedExpenseGroupCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30},{"name":"getAccountingExportSummary$","defaultValue":"this.accountingExportService.getAccountingExportSummary()","deprecated":false,"deprecationMessage":"","type":"Observable<AccountingExportSummary>","optional":false,"description":"","line":54},{"name":"getExportErrors$","defaultValue":"this.dashboardService.getExportErrors()","deprecated":false,"deprecationMessage":"","type":"Observable<ErrorResponse>","optional":false,"description":"","line":52},{"name":"groupedErrorStat","defaultValue":"{\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: null,\\n    [AccountingErrorType.CATEGORY_MAPPING]: null\\n  }","deprecated":false,"deprecationMessage":"","type":"AccountingGroupedErrorStat","optional":false,"description":"","line":40},{"name":"isExportInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"isImportInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"processedCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":36}],"methodsClass":[{"name":"export","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":""},{"name":"pollExportStatus","args":[{"name":"exportableAccountingExportIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"exportableAccountingExportIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Observable, catchError, forkJoin, from, interval, of, switchMap, takeWhile } from \'rxjs\';\\nimport { BusinessCentralAccountingExport, BusinessCentralAccountingExportResponse } from \'src/app/core/models/business-central/db/business-central-accounting-export.model\';\\nimport { AccountingExportSummary } from \'src/app/core/models/db/accounting-export-summary.model\';\\nimport { DashboardModel, DestinationFieldMap } from \'src/app/core/models/db/dashboard.model\';\\nimport { Error, AccountingGroupedErrorStat, AccountingGroupedErrors, ErrorResponse } from \'src/app/core/models/db/error.model\';\\nimport { AccountingErrorType, AccountingExportStatus, AccountingExportType, AppName, BusinessCentralExportType, RefinerSurveyType } from \'src/app/core/models/enum/enum.model\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\nimport { DashboardService } from \'src/app/core/services/common/dashboard.service\';\\nimport { RefinerService } from \'src/app/core/services/integration/refiner.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-business-central-dashboard\',\\n  templateUrl: \'./business-central-dashboard.component.html\',\\n  styleUrls: [\'./business-central-dashboard.component.scss\']\\n})\\nexport class BusinessCentralDashboardComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  appName: AppName = AppName.BUSINESS_CENTRAL;\\n\\n  isImportInProgress: boolean;\\n\\n  isExportInProgress: boolean = false;\\n\\n  exportableAccountingExportIds: number[] = [];\\n\\n  failedExpenseGroupCount: number = 0;\\n\\n  exportProgressPercentage: number = 0;\\n\\n  accountingExportSummary: AccountingExportSummary | null;\\n\\n  processedCount: number = 0;\\n\\n  errors: AccountingGroupedErrors;\\n\\n  groupedErrorStat: AccountingGroupedErrorStat = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: null,\\n    [AccountingErrorType.CATEGORY_MAPPING]: null\\n  };\\n\\n  readonly destinationFieldMap : DestinationFieldMap = {\\n    \'EMPLOYEE\': \'VENDOR\',\\n    \'CATEGORY\': \'ACCOUNT\'\\n  };\\n\\n  readonly accountingExportType: BusinessCentralExportType[] = [BusinessCentralExportType.PURCHASE_INVOICE, BusinessCentralExportType.JOURNAL_ENTRY];\\n\\n  getExportErrors$: Observable<ErrorResponse> = this.dashboardService.getExportErrors();\\n\\n  getAccountingExportSummary$: Observable<AccountingExportSummary> = this.accountingExportService.getAccountingExportSummary();\\n\\n  constructor(\\n    private refinerService: RefinerService,\\n    private dashboardService: DashboardService,\\n    private accountingExportService: AccountingExportService\\n  ) { }\\n\\n  private pollExportStatus(exportableAccountingExportIds: number[] = []): void {\\n    interval(20000).pipe(\\n      switchMap(() => from(this.accountingExportService.getAccountingExports(this.accountingExportType, [], exportableAccountingExportIds, 500, 0))),\\n      takeWhile((response: BusinessCentralAccountingExportResponse) =>\\n        response.results.filter(task =>\\n          (task.status === AccountingExportStatus.IN_PROGRESS || task.status === AccountingExportStatus.ENQUEUED || task.status === AccountingExportStatus.EXPORT_QUEUED)\\n        ).length > 0, true\\n      )\\n    ).subscribe((res: BusinessCentralAccountingExportResponse) => {\\n      this.processedCount = res.results.filter(task => (task.status !== AccountingExportStatus.IN_PROGRESS && task.status !== AccountingExportStatus.ENQUEUED && task.status !== AccountingExportStatus.EXPORT_QUEUED)).length;\\n      this.exportProgressPercentage = Math.round((this.processedCount / this.exportableAccountingExportIds.length) * 100);\\n\\n      if (res.results.filter(task => (task.status === AccountingExportStatus.IN_PROGRESS || task.status === AccountingExportStatus.ENQUEUED || task.status === AccountingExportStatus.EXPORT_QUEUED)).length === 0) {\\n        this.isLoading = true;\\n        forkJoin([\\n          this.getExportErrors$,\\n          this.getAccountingExportSummary$\\n        ]).subscribe(responses => {\\n          this.errors = DashboardModel.parseAPIResponseToGroupedError(responses[0].results);\\n          this.groupedErrorStat = {\\n            EMPLOYEE_MAPPING: null,\\n            CATEGORY_MAPPING: null\\n          };\\n          this.accountingExportSummary = responses[1];\\n          this.isLoading = false;\\n        });\\n\\n        this.failedExpenseGroupCount = res.results.filter(task => task.status === AccountingExportStatus.FAILED || task.status === AccountingExportStatus.FATAL).length;\\n        this.isExportInProgress = false;\\n        this.exportProgressPercentage = 0;\\n        this.processedCount = 0;\\n\\n        if (this.failedExpenseGroupCount === 0) {\\n          this.refinerService.triggerSurvey(\\n            AppName.SAGE300, environment.refiner_survey.intacct.export_done_survery_id, RefinerSurveyType.EXPORT_DONE\\n          );\\n        }\\n      }\\n    });\\n  }\\n\\n  export() {\\n    this.isExportInProgress = true;\\n    this.dashboardService.triggerAccountingExport().subscribe(() => {\\n      this.pollExportStatus(this.exportableAccountingExportIds);\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    forkJoin([\\n      this.getExportErrors$,\\n      this.getAccountingExportSummary$.pipe(catchError(() => of(null))),\\n      this.accountingExportService.getAccountingExports(this.accountingExportType, [AccountingExportStatus.ENQUEUED, AccountingExportStatus.IN_PROGRESS, AccountingExportStatus.EXPORT_QUEUED, AccountingExportStatus.FAILED, AccountingExportStatus.FATAL], [], 500, 0)\\n    ]).subscribe((responses) => {\\n      this.errors = DashboardModel.parseAPIResponseToGroupedError(responses[0].results);\\n      this.accountingExportSummary = responses[1];\\n\\n      const queuedTasks: BusinessCentralAccountingExport[] = responses[2].results.filter((accountingExport: BusinessCentralAccountingExport) => accountingExport.status === AccountingExportStatus.ENQUEUED || accountingExport.status === AccountingExportStatus.IN_PROGRESS || accountingExport.status === AccountingExportStatus.EXPORT_QUEUED);\\n      this.failedExpenseGroupCount = responses[2].results.filter((accountingExport: BusinessCentralAccountingExport) => accountingExport.status === AccountingExportStatus.FAILED || accountingExport.status === AccountingExportStatus.FATAL).length;\\n\\n      if (queuedTasks.length) {\\n        this.isImportInProgress = false;\\n        this.isExportInProgress = true;\\n        this.pollExportStatus();\\n      } else {\\n        this.accountingExportService.importExpensesFromFyle().subscribe(() => {\\n          this.dashboardService.getExportableAccountingExportIds().subscribe((exportableAccountingExportIds) => {\\n            this.exportableAccountingExportIds = exportableAccountingExportIds.exportable_accounting_export_ids;\\n            this.isImportInProgress = false;\\n          });\\n        });\\n      }\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-dashboard.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"refinerService","type":"RefinerService","deprecated":false,"deprecationMessage":""},{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":""},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""}],"line":54,"jsdoctags":[{"name":"refinerService","type":"RefinerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\">\\n    <app-dashboard-export-section \\n        (export)=\\"export()\\" \\n        [appName]=\\"appName\\"\\n        [isImportInProgress]=\\"isImportInProgress\\" \\n        [isExportInProgress]=\\"isExportInProgress\\"\\n        [exportableAccountingExportIds]=\\"exportableAccountingExportIds\\"\\n        [failedExpenseGroupCount]=\\"failedExpenseGroupCount\\" \\n        [exportProgressPercentage]=\\"exportProgressPercentage\\" \\n        [accountingExportSummary]=\\"accountingExportSummary\\" \\n        [processedCount]=\\"processedCount\\">\\n    </app-dashboard-export-section>\\n    \\n    <app-zero-state *ngIf=\\"!accountingExportSummary && !exportableAccountingExportIds.length\\" \\n        [zeroStateImageURL]=\\"\'assets/icons/dashboard-illustration.svg\'\\"\\n        [zeroStateCaption]=\\"\'There are no expenses to export at the moment!\'\\"\\n        >\\n    </app-zero-state>\\n    \\n    <app-dashboard-export-summary-section *ngIf=\\"exportableAccountingExportIds.length || accountingExportSummary\\"\\n        [appName]=\\"appName\\"\\n        [accountingExportType]=\\"accountingExportType\\"\\n        [accountingExportSummary]=\\"accountingExportSummary\\">\\n    </app-dashboard-export-summary-section>\\n    \\n    <app-dashboard-error-section *ngIf=\\"errors.EMPLOYEE_MAPPING.length || errors.CATEGORY_MAPPING.length || errors.ACCOUNTING_ERROR.length\\"\\n        [appName]=\\"appName\\" \\n        [errors]=\\"errors\\" \\n        [groupedErrorStat]=\\"groupedErrorStat\\"\\n        [destinationFieldMap]=\\"destinationFieldMap\\"\\n        >\\n    </app-dashboard-error-section>\\n</div>"},{"name":"BusinessCentralExportLogComponent","id":"component-BusinessCentralExportLogComponent-c23b9bb4ba4d30e20b3f901071a49a6e05f9783ff4d010f696ad8fe0a6f23c419ecb595a59a44671508dfac51e96141f9347a6f1071bf68a70f7a8c7cada3095","file":"src/app/integrations/business-central/business-central-main/business-central-export-log/business-central-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-export-log","styleUrls":["./business-central-export-log.component.scss"],"styles":[],"templateUrl":["./business-central-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":19},{"name":"isLoading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12},{"name":"modules","defaultValue":"[\\n    {label: \'Completed\', routerLink: \'/integrations/business_central/main/export_log/complete_export_log\'},\\n    {label: \'Skipped\', routerLink: \'/integrations/business_central/main/export_log/skip_export_log\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":14}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\n\\n@Component({\\n  selector: \'app-business-central-export-log\',\\n  templateUrl: \'./business-central-export-log.component.html\',\\n  styleUrls: [\'./business-central-export-log.component.scss\']\\n})\\nexport class BusinessCentralExportLogComponent implements OnInit {\\n\\n  isLoading: boolean = false;\\n\\n  modules: MenuItem[] = [\\n    {label: \'Completed\', routerLink: \'/integrations/business_central/main/export_log/complete_export_log\'},\\n    {label: \'Skipped\', routerLink: \'/integrations/business_central/main/export_log/skip_export_log\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n\\n  ngOnInit(): void {\\n    this.activeModule = this.modules[0];\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":19,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-40-px tw-px-120-px\\">\\n    <app-sub-menu [modules]=\\"modules\\" [activeModule]=\\"activeModule\\"></app-sub-menu>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>"},{"name":"BusinessCentralExportSettingsComponent","id":"component-BusinessCentralExportSettingsComponent-681dff325f1e64c4ae05409c33609bac13a4099b56bb8e1544174936e2100d6d64a77979c2fc402350de341e3fd46fd6c96ce16fde9d28b175feecf84c5d9dbd","file":"src/app/integrations/business-central/business-central-shared/business-central-export-settings/business-central-export-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-export-settings","styleUrls":["./business-central-export-settings.component.scss"],"styles":[],"templateUrl":["./business-central-export-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"appName","defaultValue":"AppName.BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52},{"name":"bankOptions","deprecated":false,"deprecationMessage":"","type":"BusinessCentralDestinationAttributes[]","optional":false,"description":"","line":34},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":48,"modifierKind":[148]},{"name":"BusinessCentralExportType","defaultValue":"BusinessCentralExportType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54},{"name":"cccExpenseGroupingDateOptions","defaultValue":"BusinessCentralExportSettingModel.getExpenseGroupingDateOptions()","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingFormOption[]","optional":false,"description":"","line":62},{"name":"cccExpensesExportTypeOptions","defaultValue":"BusinessCentralExportSettingModel.getCCCExpensesExportTypeOptions()","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingFormOption[]","optional":false,"description":"","line":66},{"name":"cccExpenseState","defaultValue":"BusinessCentralExportSettingModel.getExpenseState()","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingFormOption[]","optional":false,"description":"","line":70},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56},{"name":"creditCardAccountOptions","deprecated":false,"deprecationMessage":"","type":"BusinessCentralDestinationAttributes[]","optional":false,"description":"","line":32},{"name":"employeeMapOptions","defaultValue":"BusinessCentralExportSettingModel.getEmployeeMappingOptions()","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingFormOption[]","optional":false,"description":"","line":74},{"name":"entityName","defaultValue":"BusinessCentralExportSettingModel.getEntityOptions()","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingFormOption[]","optional":false,"description":"","line":72},{"name":"expenseGroupByOptions","defaultValue":"BusinessCentralExportSettingModel.getExpenseGroupByOptions()","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingFormOption[]","optional":false,"description":"","line":58},{"name":"exportSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":30},{"name":"exportSettings","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingGet | null","optional":false,"description":"","line":28},{"name":"helper","deprecated":false,"deprecationMessage":"","type":"HelperService","optional":false,"description":"","line":89,"modifierKind":[125]},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":36},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"isSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":78},{"name":"previewImagePaths","defaultValue":"[\\n    {\\n      \'PURCHASE_INVOICE\': \'assets/illustrations/sageIntacct/Reimbursable - Expense Report.jpg\',\\n      \'JOURNAL_ENTRY\': \'assets/illustrations/sageIntacct/Reimbursable Bill.jpg\'\\n    },\\n    {\\n      \'JOURNAL_ENTRY\': \'assets/illustrations/sageIntacct/CCC Bill.jpg\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":38},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.BUSINESS_CENTRAL.EXPORT_SETTING","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":50},{"name":"reimbursableExpenseGroupingDateOptions","defaultValue":"BusinessCentralExportSettingModel.getExpenseGroupingDateOptions()","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingFormOption[]","optional":false,"description":"","line":60},{"name":"reimbursableExpensesExportTypeOptions","defaultValue":"BusinessCentralExportSettingModel.getReimbursableExpensesExportTypeOptions()","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingFormOption[]","optional":false,"description":"","line":64},{"name":"reimbursableExpenseState","defaultValue":"BusinessCentralExportSettingModel.getExpenseState()","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingFormOption[]","optional":false,"description":"","line":68},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":76}],"methodsClass":[{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getExportDate","args":[{"name":"options","type":"BusinessCentralExportSettingFormOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"BusinessCentralExportSettingFormOption[]","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"options","type":"BusinessCentralExportSettingFormOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":175,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { catchError, forkJoin, of } from \'rxjs\';\\nimport { BusinessCentralExportSettingFormOption, BusinessCentralExportSettingGet, BusinessCentralExportSettingModel } from \'src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model\';\\nimport { ExportModuleRule, ExportSettingValidatorRule } from \'src/app/core/models/common/export-settings.model\';\\nimport { AppName,  AutoMapEmployeeOptions, BusinessCentralExportType, BusinessCentralField, BusinessCentralOnboardingState, BusinessCentralUpdateEvent, ConfigurationCta, ExpenseGroupedBy, ExportDateType, FyleField, Page, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { BusinessCentralExportSettingsService } from \'src/app/core/services/business-central/business-central-configuration/business-central-export-settings.service\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { BusinessCentralDestinationAttributes } from \'src/app/core/models/business-central/db/business-central-destination-attribute.model\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { BusinessCentralHelperService } from \'src/app/core/services/business-central/business-central-core/business-central-helper.service\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { destinationAttributes, exportSettingsResponse } from \'../business-central.fixture\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\n\\n@Component({\\n  selector: \'app-business-central-export-settings\',\\n  templateUrl: \'./business-central-export-settings.component.html\',\\n  styleUrls: [\'./business-central-export-settings.component.scss\']\\n})\\nexport class BusinessCentralExportSettingsComponent implements OnInit {\\n\\n  isOnboarding: boolean;\\n\\n  exportSettings: BusinessCentralExportSettingGet | null;\\n\\n  exportSettingForm: FormGroup;\\n\\n  creditCardAccountOptions: BusinessCentralDestinationAttributes[];\\n\\n  bankOptions: BusinessCentralDestinationAttributes[];\\n\\n  isLoading: boolean = true;\\n\\n  previewImagePaths =[\\n    {\\n      \'PURCHASE_INVOICE\': \'assets/illustrations/sageIntacct/Reimbursable - Expense Report.jpg\',\\n      \'JOURNAL_ENTRY\': \'assets/illustrations/sageIntacct/Reimbursable Bill.jpg\'\\n    },\\n    {\\n      \'JOURNAL_ENTRY\': \'assets/illustrations/sageIntacct/CCC Bill.jpg\'\\n    }\\n  ];\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  redirectLink: string = brandingKbArticles.onboardingArticles.BUSINESS_CENTRAL.EXPORT_SETTING;\\n\\n  appName: string = AppName.BUSINESS_CENTRAL;\\n\\n  BusinessCentralExportType = BusinessCentralExportType;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  expenseGroupByOptions: BusinessCentralExportSettingFormOption[] = BusinessCentralExportSettingModel.getExpenseGroupByOptions();\\n\\n  reimbursableExpenseGroupingDateOptions: BusinessCentralExportSettingFormOption[] = BusinessCentralExportSettingModel.getExpenseGroupingDateOptions();\\n\\n  cccExpenseGroupingDateOptions: BusinessCentralExportSettingFormOption[] = BusinessCentralExportSettingModel.getExpenseGroupingDateOptions();\\n\\n  reimbursableExpensesExportTypeOptions: BusinessCentralExportSettingFormOption[] = BusinessCentralExportSettingModel.getReimbursableExpensesExportTypeOptions();\\n\\n  cccExpensesExportTypeOptions: BusinessCentralExportSettingFormOption[] = BusinessCentralExportSettingModel.getCCCExpensesExportTypeOptions();\\n\\n  reimbursableExpenseState: BusinessCentralExportSettingFormOption[] = BusinessCentralExportSettingModel.getExpenseState();\\n\\n  cccExpenseState: BusinessCentralExportSettingFormOption[] = BusinessCentralExportSettingModel.getExpenseState();\\n\\n  entityName: BusinessCentralExportSettingFormOption[] = BusinessCentralExportSettingModel.getEntityOptions();\\n\\n  employeeMapOptions: BusinessCentralExportSettingFormOption[] = BusinessCentralExportSettingModel.getEmployeeMappingOptions();\\n\\n  sessionStartTime = new Date();\\n\\n  isSaveInProgress: boolean;\\n\\n  constructor(\\n    private exportSettingService: BusinessCentralExportSettingsService,\\n    private router: Router,\\n    private mappingService: MappingService,\\n    private helperService: HelperService,\\n    private businessCentralHelperService: BusinessCentralHelperService,\\n    private workspaceService: WorkspaceService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService,\\n    public helper: HelperService\\n  ) { }\\n\\n  private constructPayloadAndSave(): void {\\n    this.isSaveInProgress = true;\\n    const exportSettingPayload = BusinessCentralExportSettingModel.createExportSettingPayload(this.exportSettingForm);\\n    this.exportSettingService.postExportSettings(exportSettingPayload).subscribe((exportSettingResponse: BusinessCentralExportSettingGet) => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Export settings saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.EXPORT_SETTING_BUSINESS_CENTRAL, this.sessionStartTime);\\n      if (this.workspaceService.getOnboardingState() === BusinessCentralOnboardingState.EXPORT_SETTINGS) {\\n        this.trackingService.onOnboardingStepCompletion(BusinessCentralOnboardingState.EXPORT_SETTINGS, 2, exportSettingPayload);\\n      } else {\\n        this.trackingService.onUpdateEvent(\\n          BusinessCentralUpdateEvent.ADVANCED_SETTINGS_BUSINESS_CENTRAL,\\n          {\\n            phase: this.helper.getPhase(this.isOnboarding),\\n            oldState: this.exportSettings,\\n            newState: exportSettingResponse\\n          }\\n        );\\n      }\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(BusinessCentralOnboardingState.IMPORT_SETTINGS);\\n        this.router.navigate([`/integrations/business_central/onboarding/import_settings`]);\\n      }\\n\\n\\n    }, () => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving export settings, please try again later\');\\n      });\\n  }\\n\\n  save(): void {\\n    if (this.exportSettingForm.valid) {\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  getExportDate(options: BusinessCentralExportSettingFormOption[]): BusinessCentralExportSettingFormOption[]{\\n    if (this.exportSettingForm.value.reimbursableExpenseState === ExpenseGroupedBy.REPORT) {\\n      return options.filter(option => option.value !== ExportDateType.SPENT_AT);\\n    }\\n    return options;\\n  }\\n\\n  refreshDimensions(isRefresh: boolean): void{\\n    this.businessCentralHelperService.importAttributes(isRefresh);\\n  }\\n\\n  private setupPage(): void {\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    const exportSettingValidatorRule: ExportSettingValidatorRule = {\\n      \'reimbursableExpense\': [\'reimbursableExportType\', \'reimbursableExportGroup\', \'reimbursableExportDate\', \'reimbursableExpenseState\', \'entityNamePreference\', \'reimbursableEmployeeMapping\'],\\n      \'creditCardExpense\': [\'cccExportType\', \'cccExportGroup\', \'cccExportDate\', \'cccExpenseState\']\\n    };\\n\\n    const exportModuleRule: ExportModuleRule[] = [\\n      {\\n        \'formController\': \'reimbursableExportType\',\\n        \'requiredValue\': {}\\n      },\\n      {\\n        \'formController\': \'cccExportType\',\\n        \'requiredValue\': {\\n          \'JOURNAL_ENTRY\': [\'defaultCreditCardCCCAccountName\', \'defaultBankName\']\\n        }\\n      }\\n    ];\\n    forkJoin([\\n      this.exportSettingService.getExportSettings().pipe(catchError(() => of(null))),\\n      this.mappingService.getGroupedDestinationAttributes([BusinessCentralField.ACCOUNT], \'v2\')\\n    ]).subscribe(([exportSettingsResponse, destinationAttributes]) => {\\n      this.exportSettings = exportSettingsResponse;\\n      this.exportSettingForm = BusinessCentralExportSettingModel.mapAPIResponseToFormGroup(this.exportSettings);\\n      this.helperService.addExportSettingFormValidator(this.exportSettingForm);\\n      this.helper.setConfigurationSettingValidatorsAndWatchers(exportSettingValidatorRule, this.exportSettingForm);\\n      this.helper.setExportTypeValidatorsAndWatchers(exportModuleRule, this.exportSettingForm);\\n      this.creditCardAccountOptions = destinationAttributes.ACCOUNT;\\n      this.bankOptions = destinationAttributes.ACCOUNT;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-export-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"exportSettingService","type":"BusinessCentralExportSettingsService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"businessCentralHelperService","type":"BusinessCentralHelperService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":78,"jsdoctags":[{"name":"exportSettingService","type":"BusinessCentralExportSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"businessCentralHelperService","type":"BusinessCentralHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header \\n            [headerText]=\\"\'Export Settings\'\\"\\n            [contentText]=\\"\'In this section, you can configure how and when expenses from \' + brandingConfig.brandName + \' should be exported to Dynamic 360 Business Central. \'\\"\\n            [redirectLink]=\\"redirectLink\\"\\n            [showSyncButton]=\\"isOnboarding\\"\\n            [appName]=\\"appName\\"\\n            (refreshDimension)=\\"refreshDimensions($event)\\">\\n        </app-configuration-step-header>\\n    </div>\\n    <form [formGroup]=\\"exportSettingForm\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-mb-16-px\\">\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg\\">\\n                    <app-configuration-toggle-field \\n                        [form]=\\"exportSettingForm\\"\\n                        [label]=\\"\'Export Reimbursable Expenses\'\\" \\n                        [subLabel]=\\"\'Enable this to export the reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any <b>out-of-pocket</b> expenses will not be exported to Dynamic 360 Business Central.\'\\" \\n                        [formControllerName]=\\"\'reimbursableExpense\'\\"\\n                        [isSectionHeader]=\\"true\\">\\n                    </app-configuration-toggle-field>\\n                </div>\\n                <div *ngIf=\\"exportSettingForm.value?.reimbursableExpense\\">\\n                    <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export module\'\\"\\n                            [label]=\\"\'How should the expenses be exported?\'\\"\\n                            [options]=\\"reimbursableExpensesExportTypeOptions\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select expense export module\'\\"\\n                            [formControllerName]=\\"\'reimbursableExportType\'\\"\\n                            [appName]=\\"appName\\"\\n                            [exportConfigurationIconPath]=\\"\'assets/flow-charts/intacct-export-module.svg\'\\"\\n                            [exportTypeIconPathArray]=\\"previewImagePaths\\"\\n                            [isDisabled]=\\"false\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export date\'\\"\\n                            [label]=\\"\'How are your Employees represented in Dynamic 360 Business Central?\'\\"\\n                            [subLabel]=\\"\'Select how your employee are represented in Dynamics 365 Business Central. This would help to export the expenses to the correct record in Dynamics 365 Business Central.\'\\"\\n                            [options]=\\"entityName\\"\\n                            [iconPath]=\\"\'people\'\\"\\n                            [formControllerName]=\\"\'entityNamePreference\'\\">\\n                        </app-configuration-select-field>\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export date\'\\"\\n                            [label]=\\"\'How should Employees in  \' + brandingConfig.brandName + \' be mapped to Employees in Dynamics 365 Business Central ?\'\\"\\n                            [subLabel]=\\"\'Automatically map the employees in  \' + brandingConfig.brandName + \' to their corresponding records in Dynamics 365 Business Central based on a unique parameter\'\\"\\n                            [options]=\\"employeeMapOptions\\"\\n                            [iconPath]=\\"\'questionmark\'\\"\\n                            [formControllerName]=\\"\'reimbursableEmployeeMapping\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm?.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'expense state\'\\"\\n                            [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                            [subLabel]=\\"\'You can export expenses either when they\\\\\'re awaiting payment after approval (Payment processing) or when the payment has been settled (Paid).\'\\"\\n                            [options]=\\"reimbursableExpenseState\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select export state\'\\"\\n                            [formControllerName]=\\"\'reimbursableExpenseState\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export date\'\\"\\n                            [label]=\\"\'Set the date of the transaction as?\'\\"\\n                            [subLabel]=\\"\'The selected type of date will reflect in the expenses exported from \' + brandingConfig.brandName + \' to Dynamic 360 Business Central. Click here for more details.\'\\"\\n                            [options]=\\"getExportDate(reimbursableExpenseGroupingDateOptions)\\"\\n                            [iconPath]=\\"\'calender\'\\"\\n                            [formControllerName]=\\"\'reimbursableExportDate\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm?.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'how expenses to be grouped\'\\"\\n                            [label]=\\"\'How should the expenses be grouped?\'\\"\\n                            [subLabel]=\\"\'Expense can either be exported as single line items (Expense) or as a grouped report with multiple line items (Expense Report)\'\\"\\n                            [options]=\\"expenseGroupByOptions\\"\\n                            [iconPath]=\\"\'questionmark\'\\"\\n                            [placeholder]=\\"\'Select expense grouping\'\\"\\n                            [formControllerName]=\\"\'reimbursableExportGroup\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                </div>\\n            </div>\\n            <div>\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg\\">\\n                    <app-configuration-toggle-field \\n                        [form]=\\"exportSettingForm\\"\\n                        [label]=\\"\'Export Corporate Card Expenses\'\\" \\n                        [subLabel]=\\"\'Enable this to export Non-Reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any <b>Corporate Credit Card</b> expenses will not be exported to Dynamic 360 Business Central.\'\\" \\n                        [formControllerName]=\\"\'creditCardExpense\'\\"\\n                        [isSectionHeader]=\\"true\\">\\n                    </app-configuration-toggle-field>\\n                </div>\\n                <div *ngIf=\\"exportSettingForm.value?.creditCardExpense\\">\\n                    <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export module\'\\"\\n                            [label]=\\"\'How should the expenses be exported?\'\\"\\n                            [options]=\\"cccExpensesExportTypeOptions\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select expense export module\'\\"\\n                            [formControllerName]=\\"\'cccExportType\'\\"\\n                            [appName]=\\"appName\\"\\n                            [exportConfigurationIconPath]=\\"\'assets/flow-charts/intacct-export-module.svg\'\\"\\n                            [exportTypeIconPathArray]=\\"previewImagePaths\\"\\n                            [isDisabled]=\\"true\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'Default Credit Account Name\'\\"\\n                            [label]=\\"\'To which GL Account should the expenses be credited to?\'\\"\\n                            [subLabel]=\\"\'The integration will credit the account selected here for Reimbursable Expenses exported as Journal Entries.\'\\"\\n                            [destinationAttributes]=\\"creditCardAccountOptions\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select default credit account\'\\"\\n                            [formControllerName]=\\"\'defaultCreditCardCCCAccountName\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'Default Bank Account Name\'\\"\\n                            [label]=\\"\'Set the Default Bank Account as?\'\\"\\n                            [subLabel]=\\"\'The integration will assign the Corporate Card Expenses that is exported as Purchase invoice to the Bank Account selected here.\'\\"\\n                            [destinationAttributes]=\\"bankOptions\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select default Bank Account\'\\"\\n                            [formControllerName]=\\"\'defaultBankName\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'expense state\'\\"\\n                            [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                            [subLabel]=\\"\'You can export expenses either when they\\\\\'re awaiting payment after approval (Payment processing) or when the payment has been settled (Paid).\'\\"\\n                            [options]=\\"cccExpenseState\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select export state\'\\"\\n                            [formControllerName]=\\"\'cccExpenseState\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export date\'\\"\\n                            [label]=\\"\'Set the date of the transaction as?\'\\"\\n                            [subLabel]=\\"\'Expenses will be grouped and posted using the configured date when exporting from \' + brandingConfig.brandName + \' to Dynamic 360 Business Central. Click here for more details.\'\\"\\n                            [options]=\\"getExportDate(cccExpenseGroupingDateOptions)\\"\\n                            [iconPath]=\\"\'calender\'\\"\\n                            [placeholder]=\\"\'Select date\'\\"\\n                            [formControllerName]=\\"\'cccExportDate\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'how expenses to be grouped\'\\"\\n                            [label]=\\"\'How should the expenses be grouped?\'\\"\\n                            [subLabel]=\\"\'Expense can either be exported as single line items (Expense) or as a grouped report with multiple line items (Expense Report)\'\\"\\n                            [options]=\\"expenseGroupByOptions\\"\\n                            [iconPath]=\\"\'questionmark\'\\"\\n                            [placeholder]=\\"\'Select expense grouping\'\\"\\n                            [formControllerName]=\\"\'cccExportGroup\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div>\\n            <app-configuration-step-footer \\n                [ctaText] = \\"!isSaveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" \\n                (save)=\\"save()\\" \\n                [isButtonDisabled]=\\"!exportSettingForm.valid\\">\\n            </app-configuration-step-footer>\\n        </div>\\n    </form>\\n</div>\\n"},{"name":"BusinessCentralImportSettingsComponent","id":"component-BusinessCentralImportSettingsComponent-3b89a9dff2769ac3ee254c16ae67aa3a1af84202ed4713b18bf6a62a3575979b8741ec5abf829e3aef079dc331d2d3b847ca98b69491726f9733b29afbbbe0f6","file":"src/app/integrations/business-central/business-central-shared/business-central-import-settings/business-central-import-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-import-settings","styleUrls":["./business-central-import-settings.component.scss"],"styles":[],"templateUrl":["./business-central-import-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"appName","defaultValue":"AppName.BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":57,"modifierKind":[148]},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53,"modifierKind":[148]},{"name":"businessCentralFields","deprecated":false,"deprecationMessage":"","type":"IntegrationField[]","optional":false,"description":"","line":35},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61},{"name":"customField","deprecated":false,"deprecationMessage":"","type":"ExpenseField","optional":false,"description":"","line":49},{"name":"customFieldControl","deprecated":false,"deprecationMessage":"","type":"AbstractControl","optional":false,"description":"","line":47},{"name":"customFieldForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":41},{"name":"customFieldOption","defaultValue":"[{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: false }]","deprecated":false,"deprecationMessage":"","type":"ExpenseField[]","optional":false,"description":"","line":51},{"name":"customFieldType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":45},{"name":"fyleFields","deprecated":false,"deprecationMessage":"","type":"FyleField[]","optional":false,"description":"","line":33},{"name":"importSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":31},{"name":"importSettings","deprecated":false,"deprecationMessage":"","type":"BusinessCentralImportSettingsGet | null","optional":false,"description":"","line":29},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":37},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"isPreviewDialogVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":39},{"name":"isSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":59},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":63},{"name":"showCustomFieldDialog","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":43},{"name":"supportArticleLink","defaultValue":"brandingKbArticles.onboardingArticles.BUSINESS_CENTRAL.IMPORT_SETTING","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":55,"modifierKind":[148]}],"methodsClass":[{"name":"closeDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":""},{"name":"closeModel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":""},{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":156,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"importSettingWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initializeCustomFieldForm","args":[{"name":"shouldShowDialog","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"shouldShowDialog","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":213,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":188,"deprecated":false,"deprecationMessage":""},{"name":"saveFyleExpenseField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":""},{"name":"setupFormWatchers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":195,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showPreviewDialog","args":[{"name":"visible","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"visible","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { catchError, of } from \'rxjs\';\\nimport { forkJoin } from \'rxjs/internal/observable/forkJoin\';\\nimport { BusinessCentralImportSettingsGet, BusinessCentralImportSettingsModel } from \'src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model\';\\nimport { AppName, AppNameInService, BusinessCentralOnboardingState, BusinessCentralUpdateEvent, ConfigurationCta, DefaultImportFields, Page, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { BusinessCentralImportSettingsService } from \'src/app/core/services/business-central/business-central-configuration/business-central-import-settings.service\';\\nimport { BusinessCentralHelperService } from \'src/app/core/services/business-central/business-central-core/business-central-helper.service\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { FyleField, IntegrationField } from \'src/app/core/models/db/mapping.model\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { businessCentralFieldsResponse, fyleFieldsResponse, importSettingsResponse } from \'../business-central.fixture\';\\nimport { ExpenseField } from \'src/app/core/models/common/import-settings.model\';\\n\\n@Component({\\n  selector: \'app-business-central-import-settings\',\\n  templateUrl: \'./business-central-import-settings.component.html\',\\n  styleUrls: [\'./business-central-import-settings.component.scss\']\\n})\\nexport class BusinessCentralImportSettingsComponent implements OnInit {\\n\\n  isOnboarding: boolean;\\n\\n  importSettings: BusinessCentralImportSettingsGet | null;\\n\\n  importSettingForm: FormGroup;\\n\\n  fyleFields: FyleField[];\\n\\n  businessCentralFields: IntegrationField[];\\n\\n  isLoading: boolean = true;\\n\\n  isPreviewDialogVisible: boolean;\\n\\n  customFieldForm: FormGroup;\\n\\n  showCustomFieldDialog: boolean;\\n\\n  customFieldType: string;\\n\\n  customFieldControl: AbstractControl;\\n\\n  customField: ExpenseField;\\n\\n  customFieldOption: ExpenseField[] = [{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: false }];\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  readonly supportArticleLink: string = brandingKbArticles.onboardingArticles.BUSINESS_CENTRAL.IMPORT_SETTING;\\n\\n  readonly appName: string = AppName.BUSINESS_CENTRAL;\\n\\n  isSaveInProgress: boolean;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  sessionStartTime: Date = new Date();\\n\\n  constructor(\\n    private router: Router,\\n    private importSettingService: BusinessCentralImportSettingsService,\\n    private mappingService: MappingService,\\n    private helperService: BusinessCentralHelperService,\\n    private formBuilder: FormBuilder,\\n    private helper: HelperService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  get expenseFieldsGetter() {\\n    return this.importSettingForm.get(\'expenseFields\') as FormArray;\\n  }\\n\\n  closeModel() {\\n    this.customFieldForm.reset();\\n    this.showCustomFieldDialog = false;\\n  }\\n\\n  showPreviewDialog(visible: boolean) {\\n    this.isPreviewDialogVisible = visible;\\n  }\\n\\n  closeDialog() {\\n    this.isPreviewDialogVisible = false;\\n  }\\n\\n  refreshDimensions(isRefresh: boolean) {\\n    this.helperService.importAttributes(isRefresh);\\n  }\\n\\n  saveFyleExpenseField(): void {\\n    this.customField = {\\n      attribute_type: this.customFieldForm.value.attribute_type.split(\' \').join(\'_\').toUpperCase(),\\n      display_name: this.customFieldForm.value.attribute_type,\\n      source_placeholder: this.customFieldForm.value.source_placeholder,\\n      is_dependent: false\\n    };\\n\\n    if (this.customFieldControl) {\\n      this.fyleFields.pop();\\n      this.fyleFields.push(this.customField);\\n      this.fyleFields.push(this.customFieldOption[0]);\\n      const expenseField = {\\n        source_field: this.customField.attribute_type,\\n        destination_field: this.customFieldControl.value.destination_field,\\n        import_to_fyle: true,\\n        is_custom: true,\\n        source_placeholder: this.customField.source_placeholder\\n      };\\n      (this.importSettingForm.get(\'expenseFields\') as FormArray).controls.filter(field => field.value.destination_field === this.customFieldControl.value.destination_field)[0].patchValue(expenseField);\\n      this.customFieldForm.reset();\\n      this.showCustomFieldDialog = false;\\n    }\\n  }\\n\\n  private initializeCustomFieldForm(shouldShowDialog: boolean) {\\n    this.customFieldForm = this.formBuilder.group({\\n      attribute_type: [\'\', Validators.required],\\n      display_name: [\'\'],\\n      source_placeholder: [\'\', Validators.required]\\n    });\\n    this.showCustomFieldDialog = shouldShowDialog;\\n  }\\n\\n  private importSettingWatcher(): void {\\n    const expenseFieldArray = this.importSettingForm.get(\'expenseFields\') as FormArray;\\n    expenseFieldArray.controls.forEach((control:any) => {\\n      control.valueChanges.subscribe((value: { source_field: string; destination_field: string; }) => {\\n        if (value.source_field === \'custom_field\') {\\n          this.initializeCustomFieldForm(true);\\n          this.customFieldType = \'\';\\n          this.customFieldControl = control;\\n          this.customFieldControl.patchValue({\\n            source_field: \'\',\\n            destination_field: control.value.destination_field,\\n            import_to_fyle: control.value.import_to_fyle,\\n            is_custom: control.value.is_custom,\\n            source_placeholder: null\\n          });\\n        }\\n      });\\n    });\\n  }\\n\\n  private setupFormWatchers() {\\n    this.importSettingWatcher();\\n  }\\n\\n  private constructPayloadAndSave() {\\n    this.isSaveInProgress = true;\\n    const importSettingPayload = BusinessCentralImportSettingsModel.createImportSettingPayload(this.importSettingForm);\\n    this.importSettingService.postBusinessCentralImportSettings(importSettingPayload).subscribe((importSettingsResponse: BusinessCentralImportSettingsGet) => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Import settings saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.IMPORT_SETTINGS_BUSINESS_CENTRAL, this.sessionStartTime);\\n      if (this.workspaceService.getOnboardingState() === BusinessCentralOnboardingState.IMPORT_SETTINGS) {\\n        this.trackingService.onOnboardingStepCompletion(BusinessCentralOnboardingState.IMPORT_SETTINGS, 3, importSettingPayload);\\n      } else {\\n        this.trackingService.onUpdateEvent(\\n          BusinessCentralUpdateEvent.ADVANCED_SETTINGS_BUSINESS_CENTRAL,\\n          {\\n            phase: this.helper.getPhase(this.isOnboarding),\\n            oldState: this.importSettings,\\n            newState: importSettingsResponse\\n          }\\n        );\\n      }\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(BusinessCentralOnboardingState.ADVANCED_SETTINGS);\\n        this.router.navigate([`/integrations/business_central/onboarding/advanced_settings`]);\\n      }\\n\\n\\n    }, () => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving import settings, please try again later\');\\n      });\\n  }\\n\\n  save(): void {\\n    if (this.importSettingForm.valid) {\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n\\n  private setupPage(): void {\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    forkJoin([\\n      this.importSettingService.getBusinessCentralImportSettings().pipe(catchError(() => of(null))),\\n      this.mappingService.getFyleFields(),\\n      this.mappingService.getIntegrationsFields(AppNameInService.BUSINESS_CENTRAL)\\n    ]).subscribe(([importSettingsResponse, fyleFieldsResponse, businessCentralFieldsResponse]) => {\\n      this.importSettings = importSettingsResponse;\\n      this.importSettingForm = BusinessCentralImportSettingsModel.mapAPIResponseToFormGroup(this.importSettings, businessCentralFieldsResponse);\\n      this.fyleFields = fyleFieldsResponse;\\n      this.businessCentralFields = businessCentralFieldsResponse;\\n      this.fyleFields.push({ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', is_dependent: true });\\n      this.setupFormWatchers();\\n      this.initializeCustomFieldForm(false);\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-import-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"importSettingService","type":"BusinessCentralImportSettingsService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"BusinessCentralHelperService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":63,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"importSettingService","type":"BusinessCentralImportSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"BusinessCentralHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"accessors":{"expenseFieldsGetter":{"name":"expenseFieldsGetter","getSignature":{"name":"expenseFieldsGetter","type":"","returnType":"","line":77}}},"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header [headerText]=\\"\'Import Settings\'\\"\\n            [contentText]=\\"\'In this section, you can choose the fields required to be imported from Dynamics 365 Business Central to \' + brandingConfig.brandName + \'. \'\\"\\n            [redirectLink]=\\"supportArticleLink\\" [showSyncButton]=\\"isOnboarding\\" [appName]=\\"appName\\"\\n            (refreshDimension)=\\"refreshDimensions($event)\\">\\n        </app-configuration-step-header>\\n    </div>\\n    <div>\\n        <form [formGroup]=\\"importSettingForm\\">\\n            <div class=\\"tw-p-24-px\\">\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border\\">\\n                    <app-configuration-toggle-field \\n                        [form]=\\"importSettingForm\\"\\n                        [label]=\\"\'Import the Chart of Accounts as Categories in \' + brandingConfig.brandName \\" \\n                        [subLabel]=\\"\'Imported account will be available as Categories in \' + brandingConfig.brandName \\" \\n                        [formControllerName]=\\"\'importCategories\'\\"\\n                        [isSectionHeader]=\\"false\\"\\n                        [iconPath]=\\"\'arrow-tail-up-down\'\\">\\n                    </app-configuration-toggle-field>\\n                </div>\\n                <div>\\n                    <app-configuration-import-field \\n                        [form]=\\"importSettingForm\\" \\n                        [appName]=\\"appName\\" \\n                        [accountingFieldOptions]=\\"businessCentralFields\\" \\n                        [fyleFieldOptions]=\\"fyleFields\\"\\n                        [isDestinationFixedImport]=\\"true\\">\\n                    </app-configuration-import-field>\\n                </div>\\n            </div>\\n            <div>\\n                <app-configuration-step-footer [ctaText] = \\"!isSaveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!importSettingForm.valid\\"></app-configuration-step-footer>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n<div>\\n    <app-configuration-custom-field-creation-dialog \\n        [customFieldForm]=\\"customFieldForm\\"\\n        [showCustomFieldCreationDialog]=\\"showCustomFieldDialog\\" \\n        (saveCustomFieldFn)=\\"saveFyleExpenseField()\\"\\n        (closeModelFn)=\\"closeModel()\\">\\n    </app-configuration-custom-field-creation-dialog>\\n</div>\\n<div *ngIf=\\"isPreviewDialogVisible\\">\\n    <app-preview-dialog \\n        [isPreviewDialogVisible]=\\"true\\"\\n        [iconPath]=\\"\'assets/illustrations/sageIntacct/IntacctImportSettings.png\'\\" (closeDialog)=\\"closeDialog()\\"\\n        [header]=\\"\'Preview\'\\">\\n    </app-preview-dialog>\\n</div>\\n"},{"name":"BusinessCentralMainComponent","id":"component-BusinessCentralMainComponent-7dc3b09bb6cd4aafab8e582fea91fafc6c776e49819ad842162c42d37c4ad2013531efb9bbfdbab7bffdd74f05225aad7c040b3180bddb9f935ea92bd77e42d4","file":"src/app/integrations/business-central/business-central-main/business-central-main.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-main","styleUrls":["./business-central-main.component.scss"],"styles":[],"templateUrl":["./business-central-main.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":25},{"name":"appName","defaultValue":"AppName.BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":16},{"name":"modules","defaultValue":"[\\n    {label: \'Dashboard\', routerLink: \'/integrations/business_central/main/dashboard\'},\\n    {label: \'Export Log\', routerLink: \'/integrations/business_central/main/export_log\'},\\n    {label: \'Mapping\', routerLink: \'/integrations/business_central/main/mapping\'},\\n    {label: \'Configuration\', routerLink: \'/integrations/business_central/main/configuration\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":18}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\nimport { AppName } from \'src/app/core/models/enum/enum.model\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { Sage300HelperService } from \'src/app/core/services/sage300/sage300-helper/sage300-helper.service\';\\n\\n@Component({\\n  selector: \'app-business-central-main\',\\n  templateUrl: \'./business-central-main.component.html\',\\n  styleUrls: [\'./business-central-main.component.scss\']\\n})\\nexport class BusinessCentralMainComponent implements OnInit {\\n\\n  appName: AppName = AppName.BUSINESS_CENTRAL;\\n\\n  modules: MenuItem[] = [\\n    {label: \'Dashboard\', routerLink: \'/integrations/business_central/main/dashboard\'},\\n    {label: \'Export Log\', routerLink: \'/integrations/business_central/main/export_log\'},\\n    {label: \'Mapping\', routerLink: \'/integrations/business_central/main/mapping\'},\\n    {label: \'Configuration\', routerLink: \'/integrations/business_central/main/configuration\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private accountingExportService: AccountingExportService,\\n    private router: Router,\\n    private helperService: Sage300HelperService\\n  ) { }\\n\\n  refreshDimensions(isRefresh: boolean) {\\n    this.helperService.importAttributes(isRefresh);\\n    this.accountingExportService.importExpensesFromFyle().subscribe();\\n  }\\n\\n  private setupPage() {\\n    this.activeModule = this.modules[0];\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-main.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"Sage300HelperService","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"Sage300HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <app-main-menu [modules]=\\"modules\\" [activeItem]=\\"modules[0]\\" [appName]=\\"appName\\" [isDropdrownRequired]=\\"true\\" (refreshDimensionClick)=\\"refreshDimensions($event)\\"></app-main-menu>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>"},{"name":"BusinessCentralMappingComponent","id":"component-BusinessCentralMappingComponent-04beec84830ec848b32d5155b3c95d387f46e374927067853c5f0c8de0bc0aef5acdb20d6a6c7c038be529d18e5b133b1dd230b63ad0c34642a24b3cecc797ae","file":"src/app/integrations/business-central/business-central-main/business-central-mapping/business-central-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-mapping","styleUrls":["./business-central-mapping.component.scss"],"styles":[],"templateUrl":["./business-central-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":23},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":16},{"name":"mappingPages","defaultValue":"[\\n    {label: \'Employee\', routerLink: \'/integrations/business-central/main/mapping/employee\'},\\n    {label: \'Category\', routerLink: \'/integrations/business-central/main/mapping/category\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":18}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { TitleCasePipe } from \'@angular/common\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\nimport { FyleField } from \'src/app/core/models/enum/enum.model\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { SnakeCaseToSpaceCasePipe } from \'src/app/shared/pipes/snake-case-to-space-case.pipe\';\\n\\n@Component({\\n  selector: \'app-business-central-mapping\',\\n  templateUrl: \'./business-central-mapping.component.html\',\\n  styleUrls: [\'./business-central-mapping.component.scss\']\\n})\\nexport class BusinessCentralMappingComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  mappingPages: MenuItem[] = [\\n    {label: \'Employee\', routerLink: \'/integrations/business-central/main/mapping/employee\'},\\n    {label: \'Category\', routerLink: \'/integrations/business-central/main/mapping/category\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router,\\n    private mappingService: MappingService\\n  ) { }\\n\\n  private setupPage(): void {\\n    this.isLoading = true;\\n    this.mappingService.getMappingSettings().subscribe((response) => {\\n      if (response.results && Array.isArray(response.results)) {\\n        response.results.forEach((item) => {\\n          if (item.source_field!==FyleField.EMPLOYEE && item.source_field!==\'CATEGORY\') {\\n            this.mappingPages.push({\\n              label: new TitleCasePipe().transform(new SnakeCaseToSpaceCasePipe().transform(item.source_field)),\\n              routerLink: `/integrations/business-central/main/mapping/${item.source_field.toLowerCase()}`\\n            });\\n          }\\n        });\\n      }\\n      this.router.navigateByUrl(this.mappingPages[0].routerLink);\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""}],"line":23,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"\\n\\n<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-40-px tw-px-120-px\\">\\n    <app-sub-menu [modules]=\\"mappingPages\\" [activeModule]=\\"mappingPages[0]\\"></app-sub-menu>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>"},{"name":"BusinessCentralOnboardingAdvancedSettingsComponent","id":"component-BusinessCentralOnboardingAdvancedSettingsComponent-af39d5f0aa5fdcd27b189471450fdcedb174b609af3a655aa3c5910fff104b7880f7f582db6912898fbde983054f40ea8b9ed69b0171c1b23bd914fe250715d2","file":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-advanced-settings/business-central-onboarding-advanced-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-onboarding-advanced-settings","styleUrls":["./business-central-onboarding-advanced-settings.component.scss"],"styles":[],"templateUrl":["./business-central-onboarding-advanced-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"this.onboardingService.getOnboardingSteps(BusinessCentralOnboardingState.ADVANCED_SETTINGS.replace(\'_\', \' \'))","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { BusinessCentralOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { BusinessCentralOnboardingService } from \'src/app/core/services/business-central/business-central-configuration/business-central-onboarding.service\';\\n\\n@Component({\\n  selector: \'app-business-central-onboarding-advanced-settings\',\\n  templateUrl: \'./business-central-onboarding-advanced-settings.component.html\',\\n  styleUrls: [\'./business-central-onboarding-advanced-settings.component.scss\']\\n})\\nexport class BusinessCentralOnboardingAdvancedSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = this.onboardingService.getOnboardingSteps(BusinessCentralOnboardingState.ADVANCED_SETTINGS.replace(\'_\', \' \'));\\n\\n  constructor(\\n    private onboardingService: BusinessCentralOnboardingService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-onboarding-advanced-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"onboardingService","type":"BusinessCentralOnboardingService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"onboardingService","type":"BusinessCentralOnboardingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <div>\\n        <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    </div>\\n    <div>\\n        <app-business-central-advanced-settings></app-business-central-advanced-settings>\\n    </div>\\n</div>\\n\\n"},{"name":"BusinessCentralOnboardingComponent","id":"component-BusinessCentralOnboardingComponent-736d73b9be662af2f752bac0b74f51727adec1490a6f146de45d39b2574eb069df371c97a61e7b4663361780516e9160e1e10bd8346cd5fddb153fd61e7a207f","file":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-onboarding","styleUrls":["./business-central-onboarding.component.scss"],"styles":[],"templateUrl":["./business-central-onboarding.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-business-central-onboarding\',\\n  templateUrl: \'./business-central-onboarding.component.html\',\\n  styleUrls: [\'./business-central-onboarding.component.scss\']\\n})\\nexport class BusinessCentralOnboardingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-onboarding.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>\\n"},{"name":"BusinessCentralOnboardingConnectorComponent","id":"component-BusinessCentralOnboardingConnectorComponent-98601899399e476d0e3ddf6a6d46c3b4aecf433864a6efa81874414184cf0a27e9d5c09bd96be8e302e08767a9615a237e0ee25ab40322967b4a38ea67da59d0","file":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-connector/business-central-onboarding-connector.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-onboarding-connector","styleUrls":["./business-central-onboarding-connector.component.scss"],"styles":[],"templateUrl":["./business-central-onboarding-connector.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"BrandingConfiguration","optional":false,"description":"","line":36},{"name":"businessCentralCompanyName","deprecated":false,"deprecationMessage":"","type":"string | null","optional":false,"description":"","line":40},{"name":"businessCentralConnectionInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":44},{"name":"businessCentralTokenExpired","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":52},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38},{"name":"connectBusinessCentralForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":34},{"name":"isBusinessCentralConnected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":54},{"name":"isContinueDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":48},{"name":"isIncorrectBusinessCentralConnectedDialogVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":46},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28},{"name":"oauthCallbackSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":56,"modifierKind":[123]},{"name":"onboardingSteps","defaultValue":"this.onboardingService.getOnboardingSteps(\'Connect to Dynamics \\\\n 365 Business Central\')","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":32},{"name":"redirectLink","defaultValue":"brandingKbArticles.topLevelArticles.BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30},{"name":"saveInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":42},{"name":"showDisconnectBusinessCentral","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":50}],"methodsClass":[{"name":"acceptWarning","args":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"connectBusinessCentral","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":""},{"name":"continueToNextStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""},{"name":"disconnectBusinessCentral","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":""},{"name":"getSettings","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":184,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":180,"deprecated":false,"deprecationMessage":""},{"name":"postBusinessCentralCredentials","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showOrHideDisconnectBusinessCentral","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { Subscription } from \'rxjs\';\\nimport { BusinessCentralConnectorModel, BusinessCentralConnectorPost } from \'src/app/core/models/business-central/business-central-configuration/business-central-connector.model\';\\nimport { BusinessCentralCompanyDetails, BusinessCentralCredential } from \'src/app/core/models/business-central/db/business-central-credentials.model\';\\nimport { BusinessCentralOnboardingState, ConfigurationCta, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { BusinessCentralConnectorService } from \'src/app/core/services/business-central/business-central-configuration/business-central-connector.service\';\\nimport { BusinessCentralExportSettingsService } from \'src/app/core/services/business-central/business-central-configuration/business-central-export-settings.service\';\\nimport { BusinessCentralOnboardingService } from \'src/app/core/services/business-central/business-central-configuration/business-central-onboarding.service\';\\nimport { BusinessCentralHelperService } from \'src/app/core/services/business-central/business-central-core/business-central-helper.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { BrandingConfiguration } from \'src/app/core/models/branding/branding-configuration.model\';\\nimport { environment } from \'src/environments/environment\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { ConfigurationWarningOut } from \'src/app/core/models/misc/configuration-warning.model\';\\n\\n@Component({\\n  selector: \'app-business-central-onboarding-connector\',\\n  templateUrl: \'./business-central-onboarding-connector.component.html\',\\n  styleUrls: [\'./business-central-onboarding-connector.component.scss\']\\n})\\nexport class BusinessCentralOnboardingConnectorComponent implements OnInit, OnDestroy {\\n\\n  isLoading: boolean = true;\\n\\n  redirectLink = brandingKbArticles.topLevelArticles.BUSINESS_CENTRAL;\\n\\n  onboardingSteps: OnboardingStepper[] = this.onboardingService.getOnboardingSteps(\'Connect to Dynamics \\\\n 365 Business Central\');\\n\\n  connectBusinessCentralForm: FormGroup;\\n\\n  brandingConfig: BrandingConfiguration = brandingConfig;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  businessCentralCompanyName: string | null;\\n\\n  saveInProgress: boolean = false;\\n\\n  businessCentralConnectionInProgress: boolean = false;\\n\\n  isIncorrectBusinessCentralConnectedDialogVisible: boolean = false;\\n\\n  isContinueDisabled: boolean = true;\\n\\n  showDisconnectBusinessCentral: boolean = false;\\n\\n  businessCentralTokenExpired: boolean = false;\\n\\n  isBusinessCentralConnected: boolean = false;\\n\\n  private oauthCallbackSubscription: Subscription;\\n\\n  constructor(\\n    private onboardingService: BusinessCentralOnboardingService,\\n    private businessCentralConnectorService: BusinessCentralConnectorService,\\n    private businessCentralExportSettingsService: BusinessCentralExportSettingsService,\\n    private route: ActivatedRoute,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private workspaceService: WorkspaceService,\\n    private businessCentralHelperService: BusinessCentralHelperService,\\n    private helperService: HelperService\\n  ) { }\\n\\n  continueToNextStep(): void {\\n    if (this.isContinueDisabled) {\\n      return;\\n    }\\n\\n    this.router.navigate([\'/integrations/business_central/onboarding/export_settings\']);\\n  }\\n\\n  disconnectBusinessCentral(): void {\\n    this.isLoading = true;\\n    this.businessCentralConnectorService.disconnectBusinessCentralConnection().subscribe(() => {\\n      this.showDisconnectBusinessCentral = false;\\n      this.businessCentralCompanyName = null;\\n      this.getSettings();\\n    });\\n  }\\n\\n  connectBusinessCentral(): void {\\n    this.businessCentralConnectionInProgress = true;\\n    const url = `${environment.business_central_authorize_uri}client_id=${environment.business_central_oauth_client_id}&redirect_uri=${environment.business_central_oauth_redirect_uri}&state=business_central_local_redirect&response_type=code`;\\n\\n    this.oauthCallbackSubscription = this.helperService.oauthCallbackUrl.subscribe((callbackURL: string) => {\\n      const code = callbackURL.split(\'code=\')[1].split(\'&\')[0];\\n      this.postBusinessCentralCredentials(code);\\n    });\\n    this.helperService.oauthHandler(url);\\n  }\\n\\n  acceptWarning(data: ConfigurationWarningOut): void {\\n    this.isIncorrectBusinessCentralConnectedDialogVisible = false;\\n    if (data.hasAccepted) {\\n      this.router.navigate([`/integrations/business_central/onboarding/connector`]);\\n    }\\n  }\\n\\n  private showOrHideDisconnectBusinessCentral(): void {\\n    this.businessCentralExportSettingsService.getExportSettings().subscribe(exportSettings => {\\n      // Do nothing\\n      this.isContinueDisabled = false;\\n      this.isLoading = false;\\n\\n      if (!(exportSettings?.reimbursable_expenses_export_type || exportSettings?.credit_card_expense_export_type)) {\\n        this.showDisconnectBusinessCentral = true;\\n      }\\n    }, () => {\\n      // Showing Disconnect Business Central button since the customer didn\'t set up the next step\\n      this.showDisconnectBusinessCentral = true;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  private postBusinessCentralCredentials(code: string): void {\\n    const payload: BusinessCentralConnectorPost = BusinessCentralConnectorModel.constructPayload(code, +this.workspaceService.getWorkspaceId());\\n\\n    this.businessCentralConnectorService.connectBusinessCentral(payload).subscribe((businessCentralCredential: BusinessCentralCredential) => {\\n      this.businessCentralConnectorService.getBusinessCentralCompany().subscribe((businessCentralCompanyDetails: BusinessCentralCompanyDetails) => {\\n        this.businessCentralHelperService.refreshBusinessCentralDimensions().subscribe(() => {\\n          this.workspaceService.setOnboardingState(BusinessCentralOnboardingState.EXPORT_SETTINGS);\\n          this.businessCentralConnectionInProgress = false;\\n          this.businessCentralCompanyName = businessCentralCompanyDetails.business_central_company;\\n          this.isBusinessCentralConnected = true;\\n          this.businessCentralTokenExpired = false;\\n          this.showOrHideDisconnectBusinessCentral();\\n        });\\n      });\\n    }, (error) => {\\n      const errorMessage = \'message\' in error ? error.message : \'Failed to connect to Dynamic 360 Business Central. Please try again\';\\n      if (errorMessage === \'Please choose the correct Dynamic 360 Business Central account\') {\\n        this.isIncorrectBusinessCentralConnectedDialogVisible = true;\\n      } else {\\n        this.toastService.displayToastMessage(ToastSeverity.ERROR, errorMessage);\\n        this.router.navigate([`/integrations/business_central/onboarding/landing`]);\\n      }\\n    });\\n  }\\n\\n  private getSettings(): void {\\n    this.businessCentralConnectorService.getBusinessCentralCredentials().subscribe((businessCentralCredential: BusinessCentralCredential) => {\\n      this.businessCentralConnectorService.getBusinessCentralCompany().subscribe((businessCentralCompanyDetails: BusinessCentralCompanyDetails) => {\\n        this.businessCentralCompanyName = businessCentralCompanyDetails.business_central_company;\\n        this.showOrHideDisconnectBusinessCentral();\\n        this.isBusinessCentralConnected= true;\\n      });\\n    }, (error) => {\\n      // Token expired\\n      if (\'id\' in error.error) {\\n        // We have a BusinessCentral row present in DB\\n        this.businessCentralTokenExpired = error.error.is_expired;\\n        if (this.businessCentralTokenExpired) {\\n          this.businessCentralCompanyName = error.error.company_name;\\n        }\\n      }\\n\\n      this.isBusinessCentralConnected = false;\\n      this.isContinueDisabled = true;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    const code = this.route.snapshot.queryParams.code;\\n    if (code) {\\n      this.isLoading = false;\\n      this.businessCentralConnectionInProgress = true;\\n      this.postBusinessCentralCredentials(code);\\n    } else {\\n      this.getSettings();\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n  ngOnDestroy(): void {\\n    if (this.oauthCallbackSubscription) {\\n      this.oauthCallbackSubscription.unsubscribe();\\n    }\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-onboarding-connector.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"onboardingService","type":"BusinessCentralOnboardingService","deprecated":false,"deprecationMessage":""},{"name":"businessCentralConnectorService","type":"BusinessCentralConnectorService","deprecated":false,"deprecationMessage":""},{"name":"businessCentralExportSettingsService","type":"BusinessCentralExportSettingsService","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"businessCentralHelperService","type":"BusinessCentralHelperService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":56,"jsdoctags":[{"name":"onboardingService","type":"BusinessCentralOnboardingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"businessCentralConnectorService","type":"BusinessCentralConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"businessCentralExportSettingsService","type":"BusinessCentralExportSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"businessCentralHelperService","type":"BusinessCentralHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit","OnDestroy"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <div>\\n       <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    </div>\\n    <div>\\n        <div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n            <app-loader></app-loader>\\n        </div>\\n        <div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n            <div>\\n                <app-configuration-step-header \\n                [headerText]=\\"\'Connect to your Dynamics 365 Business Central account\'\\"\\n                [contentText]=\\"\'Expenses will be posted to the Dynamics 365 Business Central Location entity selected here.\'\\"\\n                [redirectLink]=\\"redirectLink\\"></app-configuration-step-header>\\n            </div>\\n            <div>\\n                <app-configuration-connector\\n                    [accountingAppTitle]=\\"\'Dynamics 365 Business Central\'\\"\\n                    [accountingCompanyName]=\\"\'Dynamics 365 Business Central\'\\"\\n                    [fyleOrgName]=\\"\'Fyle Testing Org\'\\"\\n                    [accountingCompanyTokenExpired]=\\"businessCentralTokenExpired\\"\\n                    [isAccountingCompanyConnected]=\\"isBusinessCentralConnected\\"\\n                    [showDisconnect]=\\"showDisconnectBusinessCentral\\"\\n                    [accountingCompanyConnectionInProgress]=\\"businessCentralConnectionInProgress\\"\\n                    [switchLinkText]=\\"\'Switch Entity\'\\"\\n                    (connectCompany)=\\"connectBusinessCentral()\\"\\n                    (switchCompany)=\\"disconnectBusinessCentral()\\">\\n                </app-configuration-connector>\\n                <app-configuration-confirmation-dialog\\n                    (warningAccepted)=\\"acceptWarning($event)\\"\\n                    [isWarningVisible]=\\"isIncorrectBusinessCentralConnectedDialogVisible\\"\\n                    [headerText]=\\"\'Incorrect account selected\'\\"\\n                    [contextText]=\\"\'You had previously set up the integration with a different Dynamic 360 Business Central account. Please choose the same to restore the settings\'\\"\\n                    [iconPath]=\\"\'assets/icons/alert_dialog.svg\'\\"\\n                    [confirmBtnText]=\\"\'Re connect\'\\"\\n                    [showSecondaryCTA]=\\"false\\">\\n                </app-configuration-confirmation-dialog>\\n            </div>\\n            <div>\\n                <app-configuration-step-footer [ctaText]=\\"!saveInProgress ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVING\\" [isButtonDisabled]=\\"isContinueDisabled\\" (save)=\\"continueToNextStep()\\" ></app-configuration-step-footer>\\n             </div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"BusinessCentralOnboardingDoneComponent","id":"component-BusinessCentralOnboardingDoneComponent-246f0f194d86b870da5678a33f90ce3a99a9574b114e8579a32641248783964b6266dd3ca9d53f3ab6be88290735db0f6ec21d62afc82406e91fac88a1cb44e5","file":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-done/business-central-onboarding-done.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-onboarding-done","styleUrls":["./business-central-onboarding-done.component.scss"],"styles":[],"templateUrl":["./business-central-onboarding-done.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"navigateToDashboard","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-business-central-onboarding-done\',\\n  templateUrl: \'./business-central-onboarding-done.component.html\',\\n  styleUrls: [\'./business-central-onboarding-done.component.scss\']\\n})\\nexport class BusinessCentralOnboardingDoneComponent implements OnInit {\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n  navigateToDashboard(): void {\\n    this.router.navigate([`/integrations/business_central/main/dashboard`]);\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-onboarding-done.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<app-onboarding-done (launchIntegrationClick)=\\"navigateToDashboard()\\"></app-onboarding-done>\\n"},{"name":"BusinessCentralOnboardingExportSettingsComponent","id":"component-BusinessCentralOnboardingExportSettingsComponent-47db0738a26c574585cb8c63e59f67032ec681f2140cc1ec768eae9222d3664753339bf8a9601a484eb3c00f9bb5038b69255842d4e962b36f037826c4f62709","file":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-export-settings/business-central-onboarding-export-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-onboarding-export-settings","styleUrls":["./business-central-onboarding-export-settings.component.scss"],"styles":[],"templateUrl":["./business-central-onboarding-export-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"this.onboardingService.getOnboardingSteps(BusinessCentralOnboardingState.EXPORT_SETTINGS.replace(\'_\', \' \'))","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { BusinessCentralOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { BusinessCentralOnboardingService } from \'src/app/core/services/business-central/business-central-configuration/business-central-onboarding.service\';\\n\\n@Component({\\n  selector: \'app-business-central-onboarding-export-settings\',\\n  templateUrl: \'./business-central-onboarding-export-settings.component.html\',\\n  styleUrls: [\'./business-central-onboarding-export-settings.component.scss\']\\n})\\nexport class BusinessCentralOnboardingExportSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = this.onboardingService.getOnboardingSteps(BusinessCentralOnboardingState.EXPORT_SETTINGS.replace(\'_\', \' \'));\\n\\n  constructor(\\n    private onboardingService: BusinessCentralOnboardingService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-onboarding-export-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"onboardingService","type":"BusinessCentralOnboardingService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"onboardingService","type":"BusinessCentralOnboardingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <div>\\n        <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    </div>\\n    <div>\\n        <app-business-central-export-settings></app-business-central-export-settings>\\n    </div>\\n</div>\\n\\n"},{"name":"BusinessCentralOnboardingImportSettingsComponent","id":"component-BusinessCentralOnboardingImportSettingsComponent-42984a93814cf02e3422312052607aaeb4d9709d56882c1b5d4ae5d7b3286b47dffc8aa0849c1d6d787e096f368b52ea5127c63aab21e853a2631d0cd08ca374","file":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-import-settings/business-central-onboarding-import-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-onboarding-import-settings","styleUrls":["./business-central-onboarding-import-settings.component.scss"],"styles":[],"templateUrl":["./business-central-onboarding-import-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"this.onboardingService.getOnboardingSteps(BusinessCentralOnboardingState.IMPORT_SETTINGS.replace(\'_\', \' \'))","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { BusinessCentralOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { BusinessCentralOnboardingService } from \'src/app/core/services/business-central/business-central-configuration/business-central-onboarding.service\';\\n\\n@Component({\\n  selector: \'app-business-central-onboarding-import-settings\',\\n  templateUrl: \'./business-central-onboarding-import-settings.component.html\',\\n  styleUrls: [\'./business-central-onboarding-import-settings.component.scss\']\\n})\\nexport class BusinessCentralOnboardingImportSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = this.onboardingService.getOnboardingSteps(BusinessCentralOnboardingState.IMPORT_SETTINGS.replace(\'_\', \' \'));\\n\\n  constructor(\\n    private onboardingService: BusinessCentralOnboardingService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-onboarding-import-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"onboardingService","type":"BusinessCentralOnboardingService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"onboardingService","type":"BusinessCentralOnboardingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <div>\\n        <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    </div>\\n    <div>\\n        <app-business-central-import-settings></app-business-central-import-settings>\\n    </div>\\n</div>\\n"},{"name":"BusinessCentralOnboardingLandingComponent","id":"component-BusinessCentralOnboardingLandingComponent-db6d8ce54df6bc122bd5052fafd3b663b519f5299612f488ba73196eb7fe58fe444a98189777f388694d0dcd9377e1023735a40bc1bdbc7851ce898b6647d7b9","file":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-landing/business-central-onboarding-landing.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-onboarding-landing","styleUrls":["./business-central-onboarding-landing.component.scss"],"styles":[],"templateUrl":["./business-central-onboarding-landing.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26,"modifierKind":[148]},{"name":"businessCentralConnectionInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28},{"name":"embedVideoLink","defaultValue":"brandingDemoVideoLinks.onboarding.BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24},{"name":"isIncorrectQBOConnectedDialogVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":34},{"name":"isIntegrationConnected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":30},{"name":"oauthCallbackSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":32,"modifierKind":[123]},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.BUSINESS_CENTRAL.LANDING","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22}],"methodsClass":[{"name":"acceptWarning","args":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"checkProgressAndRedirect","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"connectBusinessCentral","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":""},{"name":"postBusinessCentralCredentials","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { NavigationExtras, Router } from \'@angular/router\';\\nimport { Subscription } from \'rxjs\';\\nimport { brandingConfig, brandingDemoVideoLinks, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { BusinessCentralConnectorPost, BusinessCentralConnectorModel } from \'src/app/core/models/business-central/business-central-configuration/business-central-connector.model\';\\nimport { BusinessCentralOnboardingState, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { ConfigurationWarningOut } from \'src/app/core/models/misc/configuration-warning.model\';\\nimport { BusinessCentralConnectorService } from \'src/app/core/services/business-central/business-central-configuration/business-central-connector.service\';\\nimport { BusinessCentralHelperService } from \'src/app/core/services/business-central/business-central-core/business-central-helper.service\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-business-central-onboarding-landing\',\\n  templateUrl: \'./business-central-onboarding-landing.component.html\',\\n  styleUrls: [\'./business-central-onboarding-landing.component.scss\']\\n})\\nexport class BusinessCentralOnboardingLandingComponent implements OnInit, OnDestroy {\\n\\n  redirectLink = brandingKbArticles.onboardingArticles.BUSINESS_CENTRAL.LANDING;\\n\\n  embedVideoLink = brandingDemoVideoLinks.onboarding.BUSINESS_CENTRAL;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  businessCentralConnectionInProgress: boolean = false;\\n\\n  isIntegrationConnected: boolean = false;\\n\\n  private oauthCallbackSubscription: Subscription;\\n\\n  isIncorrectQBOConnectedDialogVisible: boolean;\\n\\n  constructor(\\n    private helperService: HelperService,\\n    private businessCentralConnectorService: BusinessCentralConnectorService,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private businessCentralHelperService: BusinessCentralHelperService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  acceptWarning(data: ConfigurationWarningOut): void {\\n    this.isIncorrectQBOConnectedDialogVisible = false;\\n    if (data.hasAccepted) {\\n      this.router.navigate([`/integrations/qbo/onboarding/landing`]);\\n    }\\n  }\\n\\n  connectBusinessCentral(): void {\\n    this.businessCentralConnectionInProgress = true;\\n    const url = `${environment.business_central_authorize_uri}client_id=${environment.business_central_oauth_client_id}&redirect_uri=${environment.business_central_oauth_redirect_uri}&state=business_central_local_redirect&response_type=code`;\\n\\n    this.oauthCallbackSubscription = this.helperService.oauthCallbackUrl.subscribe((callbackURL: string) => {\\n      const code = callbackURL.split(\'code=\')[1].split(\'&\')[0];\\n      this.postBusinessCentralCredentials(code);\\n    });\\n    this.helperService.oauthHandler(url);\\n  }\\n\\n  private postBusinessCentralCredentials(code: string): void {\\n    const payload: BusinessCentralConnectorPost = BusinessCentralConnectorModel.constructPayload(code, +this.workspaceService.getWorkspaceId());\\n\\n    this.businessCentralConnectorService.connectBusinessCentral(payload).subscribe(() => {\\n        this.businessCentralConnectionInProgress = false;\\n        this.isIntegrationConnected = true;\\n        this.router.navigate([`/integrations/business_central/main/dashboard`]);\\n    }, (error) => {\\n      const errorMessage = \'message\' in error.error ? error.error.message : \'Failed to connect to Dynamic 360 Business Central. Please try again\';\\n      if (errorMessage === \'Please choose the correct Dynamic 360 Business Central account\') {\\n        this.isIncorrectQBOConnectedDialogVisible = false;\\n      } else {\\n        this.toastService.displayToastMessage(ToastSeverity.ERROR, errorMessage);\\n        this.router.navigate([`/integrations/business_central/onboarding/landing`]);\\n      }\\n    });\\n  }\\n\\n  private checkProgressAndRedirect(code: string): void {\\n    const onboardingState: BusinessCentralOnboardingState = this.workspaceService.getOnboardingState();\\n    const navigationExtras: NavigationExtras = {\\n      queryParams: {\\n        code\\n      }\\n    };\\n\\n    if (onboardingState !== BusinessCentralOnboardingState.COMPLETE) {\\n      this.router.navigate([\'integrations/qbo/onboarding/connector\'], navigationExtras);\\n    } else {\\n      this.postBusinessCentralCredentials(code);\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n  ngOnDestroy(): void {\\n    if (this.oauthCallbackSubscription) {\\n      this.oauthCallbackSubscription.unsubscribe();\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-onboarding-landing.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"businessCentralConnectorService","type":"BusinessCentralConnectorService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"businessCentralHelperService","type":"BusinessCentralHelperService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":34,"jsdoctags":[{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"businessCentralConnectorService","type":"BusinessCentralConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"businessCentralHelperService","type":"BusinessCentralHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit","OnDestroy"],"templateData":"<div *ngIf=\\"!isIncorrectQBOConnectedDialogVisible\\">\\n    <div>\\n        <app-landing-page-header [logoWidth]=\\"\'65px\'\\" [logoStyleClasses]=\\"\'tw-p-0\'\\" [logoSectionStyleClasses]=\\"\'\'\\" [iconPath]=\\"\'assets/logos/BusinessCentral-logo.svg\'\\" [appName]=\\"\'Dynamics 365 Business Central\'\\" [appDescription]=\\"\'Import data from Dynamics 365 Business Central to \' + brandingConfig.brandName + \' and Export expenses from \' + brandingConfig.brandName + \' to Dynamics 365 Business Central. \'\\" [isLoading]=\\"false\\" [isIntegrationSetupInProgress]=\\"businessCentralConnectionInProgress\\" [isIntegrationConnected]=\\"isIntegrationConnected\\" [redirectLink]=\\"redirectLink\\" [buttonText]=\\"\'Connect\'\\" [postConnectionRoute]=\\"\'business_central/onboarding/connector\'\\" (connectIntegration)=\\"connectBusinessCentral()\\"></app-landing-page-header>\\n    </div>\\n    <div>\\n        <app-landing-page-body [headlineText]=\\"\'Guide to setup your Integrations\'\\" [headerText]=\\"\'A quick guide to help you set up the integration quick and easy.\'\\" [embedVideo]=\\"embedVideoLink\\" [svgPath]=\\"\'assets/flow-charts/sage300-flow-chart.svg\'\\"></app-landing-page-body>\\n    </div>\\n</div>\\n<app-configuration-confirmation-dialog *ngIf=\\"isIncorrectQBOConnectedDialogVisible\\"\\n    (warningAccepted)=\\"acceptWarning($event)\\"\\n    [isWarningVisible]=\\"isIncorrectQBOConnectedDialogVisible\\"\\n    [headerText]=\\"\'Incorrect account selected\'\\"\\n    [contextText]=\\"\'You had previously set up the integration with a different Dynamic 360 Business Central account. Please choose the same to restore the settings\'\\"\\n    [iconPath]=\\"\'assets/icons/alert_dialog.svg\'\\"\\n    [confirmBtnText]=\\"\'Re connect\'\\"\\n    [showSecondaryCTA]=\\"false\\">\\n</app-configuration-confirmation-dialog>\\n"},{"name":"BusinessCentralSkippedExportLogComponent","id":"component-BusinessCentralSkippedExportLogComponent-87d054b9941210164b0fa26d204de6cc4aae60f545fcbad6f2a6f39332e071068e8b2687c296900ce33c29eb0a7a24398b570dd56d381998001a750a5287fb82","file":"src/app/integrations/business-central/business-central-main/business-central-export-log/business-central-skipped-export-log/business-central-skipped-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-business-central-skipped-export-log","styleUrls":["./business-central-skipped-export-log.component.scss"],"styles":[],"templateUrl":["./business-central-skipped-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":35},{"name":"dateOptions","defaultValue":"AccountingExportModel.getDateOptions()","deprecated":false,"deprecationMessage":"","type":"DateFilter[]","optional":false,"description":"","line":25},{"name":"expenses","deprecated":false,"deprecationMessage":"","type":"SkipExportList[]","optional":false,"description":"","line":27},{"name":"filteredExpenses","deprecated":false,"deprecationMessage":"","type":"SkipExportList[]","optional":false,"description":"","line":29},{"name":"isDateSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":37},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":19},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":31},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":33},{"name":"selectedDateFilter","deprecated":false,"deprecationMessage":"","type":"SelectedDateFilter | null","optional":false,"description":"","line":39},{"name":"skipExportLogForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":23},{"name":"totalCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":21}],"methodsClass":[{"name":"getSkippedExpenses","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSkippedExpensesAndSetupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleSimpleSearch","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":""},{"name":"pageChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"trackDateFilter","args":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":""},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup } from \'@angular/forms\';\\nimport { AccountingExportModel, SkippedAccountingExportModel } from \'src/app/core/models/db/accounting-export.model\';\\nimport { PaginatorPage } from \'src/app/core/models/enum/enum.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { DateFilter, SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { SkipExportList, SkipExportLog, SkipExportLogResponse } from \'src/app/core/models/si/db/expense-group.model\';\\nimport { ExportLogService } from \'src/app/core/services/common/export-log.service\';\\nimport { PaginatorService } from \'src/app/core/services/common/paginator.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\n\\n@Component({\\n  selector: \'app-business-central-skipped-export-log\',\\n  templateUrl: \'./business-central-skipped-export-log.component.html\',\\n  styleUrls: [\'./business-central-skipped-export-log.component.scss\']\\n})\\nexport class BusinessCentralSkippedExportLogComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  totalCount: number = 0;\\n\\n  skipExportLogForm: FormGroup;\\n\\n  dateOptions: DateFilter[] = AccountingExportModel.getDateOptions();\\n\\n  expenses: SkipExportList[];\\n\\n  filteredExpenses: SkipExportList[];\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  currentPage: number = 1;\\n\\n  isDateSelected: boolean = false;\\n\\n  selectedDateFilter: SelectedDateFilter | null;\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private trackingService: TrackingService,\\n    private exportLogService: ExportLogService,\\n    private paginatorService: PaginatorService\\n  ) { }\\n\\n  public handleSimpleSearch(event: any) {\\n    const query = event.target.value.toLowerCase();\\n\\n    this.filteredExpenses = this.expenses.filter((group: SkipExportList) => {\\n      return SkippedAccountingExportModel.getfilteredSkippedAccountingExports(query, group);\\n    });\\n  }\\n\\n  getSkippedExpenses(limit: number, offset: number) {\\n    this.isLoading = true;\\n    const skippedExpenseGroup: SkipExportList[] = [];\\n\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.EXPORT_LOG, limit);\\n    }\\n\\n    return this.exportLogService.getSkippedExpenses(limit, offset).subscribe((skippedExpenses: SkipExportLogResponse) => {\\n      if (!this.isDateSelected) {\\n        this.totalCount = skippedExpenses.count;\\n      }\\n\\n      skippedExpenses.results.forEach((skippedExpense: SkipExportLog) => {\\n        skippedExpenseGroup.push(SkippedAccountingExportModel.parseAPIResponseToSkipExportList(skippedExpense));\\n      });\\n\\n      this.filteredExpenses = skippedExpenseGroup;\\n      this.expenses = [...this.filteredExpenses];\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    this.limit = limit;\\n    this.currentPage = 1;\\n    this.getSkippedExpenses(limit, this.offset);\\n  }\\n\\n  pageChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.offset = offset;\\n    this.currentPage = Math.ceil(offset / this.limit) + 1;\\n    this.getSkippedExpenses(this.limit, offset);\\n  }\\n\\n  private setupForm(): void {\\n    this.skipExportLogForm = this.formBuilder.group({\\n      searchOption: [\'\'],\\n      dateRange: [null],\\n      start: [\'\'],\\n      end: [\'\']\\n    });\\n\\n    this.skipExportLogForm.controls.dateRange.valueChanges.subscribe((dateRange) => {\\n      const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n      if (dateRange) {\\n        this.selectedDateFilter = {\\n          startDate: dateRange.startDate,\\n          endDate: dateRange.endDate\\n        };\\n\\n        this.trackDateFilter(\'existing\', this.selectedDateFilter);\\n        this.getSkippedExpenses(paginator.limit, paginator.offset);\\n      } else {\\n        this.selectedDateFilter = null;\\n        this.getSkippedExpenses(paginator.limit, paginator.offset);\\n      }\\n    });\\n  }\\n\\n  private getSkippedExpensesAndSetupPage(): void {\\n    this.setupForm();\\n\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n\\n    this.getSkippedExpenses(paginator.limit, paginator.offset);\\n  }\\n\\n  private trackDateFilter(filterType: \'existing\' | \'custom\', selectedDateFilter: SelectedDateFilter): void {\\n    const trackingProperty = {\\n      filterType,\\n      ...selectedDateFilter\\n    };\\n    this.trackingService.onDateFilter(trackingProperty);\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSkippedExpensesAndSetupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./business-central-skipped-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""}],"line":39,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-shadow-app-card tw-bg-white tw-border-1-px tw-border-separator\\">\\n    <div>\\n        <app-export-log-filter *ngIf=\\"totalCount > 0 || selectedDateFilter\\"\\n            [exportLogForm]=\\"skipExportLogForm\\"\\n            [dateOptions]=\\"dateOptions\\"\\n            (handleSimpleSearch)=\\"handleSimpleSearch($event)\\">\\n        </app-export-log-filter>\\n\\n        <app-skipped-export-log-table [filteredExpense]=\\"filteredExpenses\\">\\n        </app-skipped-export-log-table>\\n\\n        <div *ngIf=\\"filteredExpenses.length > 0\\" class=\\"tw-p-24-px tw-border-t-1-px\\">\\n            <app-paginator \\n                [dropDownValue]=\\"limit\\" \\n                [page]=\\"currentPage\\" \\n                [totalCount]=\\"totalCount\\" \\n                (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" \\n                (pageOffsetChangeEvent)=\\"pageChanges($event)\\">\\n            </app-paginator>\\n        </div>\\n\\n        <app-zero-state-with-illustration *ngIf=\\"!filteredExpenses.length && !selectedDateFilter && totalCount > 0\\"\\n            [mainText]=\\"\'Sorry, no results found!\'\\"\\n            [subText]=\\"\'We could not find what you were looking for. Kindly check the keywords again.\'\\">\\n        </app-zero-state-with-illustration>\\n\\n    </div>\\n\\n    <app-zero-state-with-illustration *ngIf=\\"totalCount === 0\\"\\n    [mainText]=\\"\'No records to show yet!\'\\"\\n    [subText]=\\"\'All your expenses that were skipped from exporting will be stored here.\'\\">\\n    </app-zero-state-with-illustration>\\n</div>\\n"},{"name":"CategoryMappingComponent","id":"component-CategoryMappingComponent-bbf487a7372b43476ebeb2f681973473d8fc07a8844012fe43423d32c4f8ab39d7fa9beb86353f46e2256c22765bee1afb56857fa62ba9c148b6ce9287d633c1","file":"src/app/integrations/si/main/mapping/category-mapping/category-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-category-mapping","styleUrls":["./category-mapping.component.scss"],"styles":[],"templateUrl":["./category-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"alphabetFilter","defaultValue":"\'All\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":66},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":68,"modifierKind":[148]},{"name":"cccExpenseObject","deprecated":false,"deprecationMessage":"","type":"CorporateCreditCardExpensesObject","optional":true,"description":"","line":32},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":58},{"name":"destinationFieldType","defaultValue":"FieldType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62},{"name":"filteredMappingCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":52},{"name":"filteredMappings","deprecated":false,"deprecationMessage":"","type":"CategoryMappingResult[]","optional":false,"description":"","line":40},{"name":"isInitialSetupComplete","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":44},{"name":"mappings","deprecated":false,"deprecationMessage":"","type":"CategoryMappingResult[]","optional":false,"description":"","line":38},{"name":"mappingStats","deprecated":false,"deprecationMessage":"","type":"MappingStats","optional":false,"description":"","line":28},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":46},{"name":"operationgSystem","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":64},{"name":"pageNo","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":48},{"name":"PaginatorPage","defaultValue":"PaginatorPage","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56},{"name":"reimbursableExpenseObject","deprecated":false,"deprecationMessage":"","type":"IntacctReimbursableExpensesObject","optional":true,"description":"","line":30},{"name":"sageIntacctAccounts","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":34},{"name":"sageIntacctExpenseTypes","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":36},{"name":"searchValue","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":60},{"name":"selectedMappingFilter","defaultValue":"MappingState.ALL","deprecated":false,"deprecationMessage":"","type":"MappingState","optional":false,"description":"","line":54},{"name":"sourceType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":42},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":50}],"methodsClass":[{"name":"getAttributesFilteredByConfig","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":""},{"name":"getCategoryMappingOptions","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":""},{"name":"getDropdownValue","args":[{"name":"categoryMapping","type":"CategoryMapping[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"categoryMapping","type":"CategoryMapping[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFilteredMappings","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isExpenseTypeRequired","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":170,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"mappingFilterUpdate","args":[{"name":"alphabet","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"alphabet","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mappingSearchFilter","args":[{"name":"searchValue","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"searchValue","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mappingStateFilter","args":[{"name":"state","type":"MappingState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":131,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"MappingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":232,"deprecated":false,"deprecationMessage":""},{"name":"pageOffsetChanges","args":[{"name":"pageNo","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"pageNo","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[{"name":"selectedRow","type":"CategoryMappingResult","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":174,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedRow","type":"CategoryMappingResult","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":205,"deprecated":false,"deprecationMessage":""},{"name":"tableDropdownWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { CorporateCreditCardExpensesObject, FieldType, FyleField, IntacctReimbursableExpensesObject, MappingState, PaginatorPage, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { CategoryMappingsResponse } from \'src/app/core/models/si/db/category-mapping-response.model\';\\nimport { CategoryMapping, CategoryMappingPost, CategoryMappingResult } from \'src/app/core/models/si/db/category-mapping.model\';\\nimport { IntacctDestinationAttribute } from \'src/app/core/models/si/db/destination-attribute.model\';\\nimport { MappingStats } from \'src/app/core/models/si/db/mapping.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { PaginatorService } from \'src/app/core/services/si/si-core/paginator.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { SiWorkspaceService } from \'src/app/core/services/si/si-core/si-workspace.service\';\\n\\n@Component({\\n  selector: \'app-category-mapping\',\\n  templateUrl: \'./category-mapping.component.html\',\\n  styleUrls: [\'./category-mapping.component.scss\']\\n})\\nexport class CategoryMappingComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  isInitialSetupComplete: boolean = false;\\n\\n  mappingStats: MappingStats;\\n\\n  reimbursableExpenseObject?: IntacctReimbursableExpensesObject;\\n\\n  cccExpenseObject?: CorporateCreditCardExpensesObject;\\n\\n  sageIntacctAccounts: IntacctDestinationAttribute[];\\n\\n  sageIntacctExpenseTypes: IntacctDestinationAttribute[];\\n\\n  mappings: CategoryMappingResult[];\\n\\n  filteredMappings: CategoryMappingResult[];\\n\\n  sourceType: string;\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  pageNo: number = 0;\\n\\n  totalCount: number;\\n\\n  filteredMappingCount: number;\\n\\n  selectedMappingFilter: MappingState = MappingState.ALL;\\n\\n  PaginatorPage = PaginatorPage;\\n\\n  currentPage: number = 1;\\n\\n  searchValue: string;\\n\\n  destinationFieldType = FieldType;\\n\\n  operationgSystem: string;\\n\\n  alphabetFilter: string = \'All\';\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private mappingService: SiMappingsService,\\n    private route: ActivatedRoute,\\n    private paginatorService: PaginatorService,\\n    private workspaceService: SiWorkspaceService,\\n    private toastService: IntegrationsToastService\\n  ) { }\\n\\n  tableDropdownWidth() {\\n    const element = document.querySelector(\'.p-dropdown-panel.p-component.ng-star-inserted\') as HTMLElement;\\n    if (element) {\\n      element.style.width = \'300px\';\\n    }\\n  }\\n\\n  getCategoryMappingOptions() {\\n    if (this.isExpenseTypeRequired()) {\\n      return this.sageIntacctExpenseTypes;\\n    }\\n    return this.sageIntacctAccounts;\\n  }\\n\\n  private getFilteredMappings() {\\n    this.mappingService.getCategoryMappings(this.limit, this.pageNo, this.getAttributesFilteredByConfig()[0], this.selectedMappingFilter, this.alphabetFilter).subscribe((intacctMappingResult: CategoryMappingsResponse) => {\\n      this.filteredMappings = intacctMappingResult.results.concat();\\n      this.filteredMappingCount = this.filteredMappings.length;\\n      this.totalCount = intacctMappingResult.count;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  mappingSearchFilter(searchValue: string) {\\n    if (searchValue.length > 0) {\\n      const results: CategoryMappingResult[] = this.filteredMappings.filter((mapping) =>\\n        mapping.value?.toLowerCase().includes(searchValue)\\n      );\\n      this.filteredMappings = results;\\n    } else {\\n      this.filteredMappings = this.mappings.concat();\\n    }\\n    this.filteredMappingCount =this.filteredMappings.length;\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.MAPPING, limit);\\n    }\\n    this.limit = limit;\\n    this.pageNo = 0;\\n    this.currentPage = 1;\\n    this.getFilteredMappings();\\n  }\\n\\n  pageOffsetChanges(pageNo: number): void {\\n    this.isLoading = true;\\n    this.pageNo = pageNo;\\n    this.currentPage = Math.ceil(this.pageNo / this.limit)+1;\\n    this.getFilteredMappings();\\n  }\\n\\n  mappingStateFilter(state: MappingState): void {\\n    this.isLoading = true;\\n    this.selectedMappingFilter = state;\\n    this.currentPage = 1;\\n    this.pageNo = 0;\\n    this.getFilteredMappings();\\n  }\\n\\n  mappingFilterUpdate(alphabet: string) {\\n    this.isLoading = true;\\n    this.alphabetFilter = alphabet;\\n    this.currentPage = 1;\\n    this.offset = 0;\\n    this.getFilteredMappings();\\n  }\\n\\n  getAttributesFilteredByConfig() {\\n    const attributes = [];\\n\\n    if (this.isExpenseTypeRequired()) {\\n      attributes.push(\'EXPENSE_TYPE\');\\n    } else {\\n      attributes.push(\'ACCOUNT\');\\n    }\\n\\n    return attributes;\\n  }\\n\\n  getDropdownValue(categoryMapping: CategoryMapping[]) {\\n    if (categoryMapping?.length) {\\n      if (!this.isExpenseTypeRequired()) {\\n        return categoryMapping[0].destination_account;\\n      }\\n        return categoryMapping[0].destination_expense_head;\\n\\n    }\\n    return null;\\n  }\\n\\n  private isExpenseTypeRequired(): boolean {\\n    return this.reimbursableExpenseObject === IntacctReimbursableExpensesObject.EXPENSE_REPORT || this.cccExpenseObject === CorporateCreditCardExpensesObject.EXPENSE_REPORT;\\n  }\\n\\n  save(selectedRow: CategoryMappingResult, event: any) {\\n    const sourceId = selectedRow.id;\\n\\n    const categoryMappingsPayload: CategoryMappingPost = {\\n      source_category: {\\n        id: sourceId\\n      },\\n      destination_account: {\\n        id: !this.isExpenseTypeRequired() ? event.value.id : null\\n      },\\n      destination_expense_head: {\\n        id: this.isExpenseTypeRequired() ? event.value.id : null\\n      },\\n      workspace: parseInt(this.workspaceService.getWorkspaceId())\\n    };\\n\\n    this.mappingService.postCategoryMappings(categoryMappingsPayload).subscribe((response) => {\\n      // Decrement unmapped count only for new mappings, ignore updates\\n      if (!selectedRow.categorymapping.length) {\\n        this.mappingStats.unmapped_attributes_count -= 1;\\n      }\\n\\n      selectedRow.categorymapping = [response];\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Category Mapping saved successfully\');\\n      this.isLoading = false;\\n    }, () => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Something went wrong\');\\n    });\\n  }\\n\\n  setupPage() {\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.MAPPING);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n\\n    this.sourceType = decodeURIComponent(decodeURIComponent(this.route.snapshot.params.source_field));\\n    forkJoin([\\n      this.mappingService.getGroupedDestinationAttributes(this.getAttributesFilteredByConfig()),\\n      this.mappingService.getCategoryMappings(paginator.limit, paginator.offset, this.getAttributesFilteredByConfig()[0], this.selectedMappingFilter, this.alphabetFilter),\\n      this.mappingService.getMappingStats(\'CATEGORY\', this.getAttributesFilteredByConfig()[0])\\n    ]).subscribe(\\n      ([groupedDestResponse, categoryMappingResponse, mappingStat]) => {\\n        this.sageIntacctExpenseTypes = groupedDestResponse.EXPENSE_TYPE;\\n        this.sageIntacctAccounts = groupedDestResponse.ACCOUNT;\\n        this.mappingStats = mappingStat;\\n        this.mappings = categoryMappingResponse.results;\\n        this.filteredMappings = this.mappings.concat();\\n        this.totalCount = categoryMappingResponse.count;\\n        if (!this.isInitialSetupComplete) {\\n          this.filteredMappingCount = categoryMappingResponse.count;\\n        }\\n        this.isInitialSetupComplete = true;\\n        this.isLoading = false;\\n      }\\n    );\\n  }\\n\\n  ngOnInit(): void {\\n    this.mappingService.getConfiguration().subscribe((response) => {\\n      this.reimbursableExpenseObject = response.reimbursable_expenses_object;\\n      this.cccExpenseObject = response.corporate_credit_card_expenses_object;\\n      this.setupPage();\\n    });\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .prevBtn:disabled > .pi-chevron-left,:host ::ng-deep .nextBtn:disabled > .pi-chevron-right,\\n:host ::ng-deep .prevBtn:disabled > .pi-minus, :host ::ng-deep .nextBtn:disabled > .pi-minus {\\n    @apply tw-text-placeholder #{!important};\\n}\\n\\n:host ::ng-deep .mappingFilterDropdown .p-dropdown {\\n    @apply tw-w-200-px #{!important}\\n}\\n\\n:host ::ng-deep .mapped {\\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-mapped-green-border tw-bg-mapped-green-bg tw-py-4-px tw-px-12-px tw-text-success-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .unmapped {\\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-unmapped-red-border tw-bg-unmapped-red-bg tw-py-4-px tw-px-12-px tw-text-alert-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .filterDropdown .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-10-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-5-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n\\n:host ::ng-deep .filterDropdown  .p-dropdown-trigger {\\n    @apply tw-block #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n    @apply tw-w-32-px #{!important};\\n}\\n\\n:host ::ng-deep .textbox {\\n    @apply tw-border-r-0 #{!important}\\n}\\n\\nth {\\n    @apply tw-text-12-px tw-text-normal-text-color tw-font-500 tw-h-40-px tw-py-10-px #{!important};\\n}\\n\\ntd {\\n    @apply tw-text-14-px tw-text-sub-text-color tw-font-400 #{!important};\\n}\\n\\n.pi-check:before {\\n    @apply tw-text-14-px tw-cursor-pointer tw-text-faded-text-color #{!important};\\n}\\n\\n:host ::ng-deep .tooltip-main {\\n    @apply tw-px-6 tw-pb-4 tw-text-center #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-save {\\n    @apply tw-text-12-px #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-return {\\n    @apply tw-mt-6-px tw-px-4-px tw-py-4-px tw-text-9-px tw-rounded-md tw-bg-placeholder  #{!important}\\n}\\n","styleUrl":"./category-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""}],"line":68,"jsdoctags":[{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-16-px tw-px-120-px\\">\\n    <div class=\\"tw-inline-flex tw-space-x-4\\">\\n        <div class=\\"tw-rounded-10-px tw-bg-white tw-border-1-px tw-border-separator tw-p-16-px tw-w-200-px tw-h-84-px\\">\\n            <div class=\\"tw-w-36-px tw-h-6-px tw-rounded-12-px tw-bg-cta-disabled\\">\\n            </div>\\n            <div class=\\"tw-pt-8-px tw-text-faded-text-color tw-text-12-px\\">\\n                <p>Total Categories</p>\\n            </div>\\n            <div class=\\"tw-text-20-px tw-text-500 tw-text-slightly-normal-text-color\\">\\n                <p>{{mappingStats?.all_attributes_count}}</p>\\n            </div>\\n        </div>\\n    \\n        <div class=\\"tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator tw-p-16-px tw-w-200-px tw-h-84-px\\">\\n            <div class=\\"tw-w-36-px tw-h-6-px tw-rounded-12-px tw-bg-cta-disabled\\">\\n            </div>\\n            <div class=\\"tw-pt-8-px tw-text-faded-text-color tw-text-12-px\\">\\n                <p>Unmapped Categories</p>\\n            </div>\\n            <div class=\\"tw-text-20-px tw-text-500 tw-text-slightly-normal-text-color\\">\\n                <p>{{mappingStats?.unmapped_attributes_count}}</p>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\"tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator tw-mt-16-px\\">\\n        <div class=\\"tw-p-24-px tw-border-b-separator\\">\\n            <app-mapping-filter [selectedAlphabeticalFilter]=\\"alphabetFilter\\" [mappingFilter]=\\"selectedMappingFilter\\" (mappingFilterChangeEvent)=\\"mappingStateFilter($event)\\" (mappingSearchingEvent)=\\"mappingSearchFilter($event)\\" (mappingFilterUpdateHandler)=\\"mappingFilterUpdate($event)\\" [isAlphabetFilterHidden]=\\"false\\"></app-mapping-filter>\\n        </div>\\n        <div *ngIf=\\"filteredMappingCount > 0\\" >\\n            <div>\\n                <p-table [value]=\\"filteredMappings\\" [tableStyle]=\\"{ \'min-width\': \'50rem\' }\\">\\n                    <ng-template pTemplate=\\"header\\">\\n                        <tr>\\n                            <th class=\\"!tw-pl-40-px\\">Category in {{brandingConfig.brandName}}</th>\\n                            <th>{{getAttributesFilteredByConfig()[0] | snakeCaseToSpaceCase | titlecase}} in Sage Intacct</th>\\n                            <th>Status</th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\"body\\" let-mapping let-rowIndex=\\"rowIndex\\">\\n                        <tr>\\n                            <td>\\n                                <div class=\\"tw-flex tw-items-center\\">\\n                                    <svg-icon-sprite *ngIf=\\"mapping.auto_mapped\\" pTooltip=\\"Auto-mapped\\" tooltipPosition=\\"top\\" src=\\"flash\\" width=\\"12px\\" height=\\"12px\\" class=\\"tw-mr-12-px tw-text-placeholder\\"></svg-icon-sprite>\\n                                    <span [ngClass]=\\"{\'tw-pl-24-px\': !mapping.auto_mapped}\\">{{ mapping.value }}</span>\\n                                </div>\\n                            </td>\\n                            <td>\\n                                <p-dropdown appendTo=\\"body\\" (onShow)=\\"tableDropdownWidth()\\"\\n                                [options]=\\"getCategoryMappingOptions()\\" \\n                                optionLabel=\\"value\\" \\n                                placeholder=\\"Select an Option\\" \\n                                (onChange)=\\"save(mapping, $event);\\"\\n                                [ngModel]=\\"getDropdownValue(mapping.categorymapping)\\"\\n                                [filter]=\\"true\\"\\n                                filterBy=\\"value\\">\\n                                </p-dropdown> \\n                            </td>\\n                            <td>\\n                                <p *ngIf=\\"getDropdownValue(mapping.categorymapping)\\" class=\\"mapped\\">MAPPED</p>\\n                                <p *ngIf=\\"!getDropdownValue(mapping.categorymapping)\\" class=\\"unmapped\\">UNMAPPED</p>\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n            </div>\\n        </div>\\n        <div class=\\"tw-p-24-px tw-border-t-separator\\" *ngIf=\\"filteredMappingCount\\" >\\n            <app-paginator [totalCount]=\\"totalCount\\" [pageType]=\\"PaginatorPage.MAPPING\\" [page]=\\"currentPage\\" [dropDownValue]=\\"limit\\" (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" (pageOffsetChangeEvent)=\\"pageOffsetChanges($event)\\"></app-paginator>\\n        </div>\\n        <div *ngIf=\\"!filteredMappingCount\\">\\n            <app-zero-state-with-illustration [mainText]=\\"\'No categories to show yet!\'\\" [subText]=\\"\'Looks like your search term does not match any of Category mappings\'\\"></app-zero-state-with-illustration>\\n        </div>\\n    </div>\\n</div>"},{"name":"CloneSettingFieldComponent","id":"component-CloneSettingFieldComponent-e69ce408a8c5d59dd16b81b052ca9b64e9cc2183bc78d7b9b51a15a63ecaac5d60c14202ab8a3b68d3ed76cd4d40d533a2d946626a19c8edba76eea7d18ae128","file":"src/app/shared/components/onboarding/clone-setting/clone-setting-field/clone-setting-field.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-clone-setting-field","styleUrls":["./clone-setting-field.component.scss"],"styles":[],"templateUrl":["./clone-setting-field.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"additionalClasses","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[]},{"name":"disabledOption","deprecated":false,"deprecationMessage":"","line":28,"type":"string","decorators":[]},{"name":"dropdownDisplayKey","deprecated":false,"deprecationMessage":"","line":26,"type":"string","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":20,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"iconSource","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"inputType","defaultValue":"InputType.DROPDOWN","deprecated":false,"deprecationMessage":"","line":34,"type":"InputType","decorators":[]},{"name":"isFieldMandatory","deprecated":false,"deprecationMessage":"","line":22,"type":"boolean","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":16,"type":"any[]","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"tooltipText","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"InputType","defaultValue":"InputType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36}],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { InputType } from \'src/app/core/models/enum/enum.model\';\\n\\n@Component({\\n  selector: \'app-clone-setting-field\',\\n  templateUrl: \'./clone-setting-field.component.html\',\\n  styleUrls: [\'./clone-setting-field.component.scss\']\\n})\\nexport class CloneSettingFieldComponent {\\n\\n  @Input() label: string;\\n\\n  @Input() iconSource: string;\\n\\n  @Input() options: any[];\\n\\n  @Input() placeholder: string;\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() isFieldMandatory: boolean;\\n\\n  @Input() formControllerName: string;\\n\\n  @Input() dropdownDisplayKey: string;\\n\\n  @Input() disabledOption: string;\\n\\n  @Input() additionalClasses: string;\\n\\n  @Input() tooltipText: string;\\n\\n  @Input() inputType: InputType = InputType.DROPDOWN;\\n\\n  InputType = InputType;\\n\\n  constructor() { }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".clone-setting-field {\\n    &--field-row {\\n        @apply tw-flex tw-justify-between;\\n    }\\n\\n    &--description-section {\\n        @apply tw-flex tw-items-center;\\n    }\\n\\n    &--label-text {\\n        @apply tw-flex tw-pl-16-px tw-py-2-px tw-text-slightly-normal-text-color tw-text-14-px tw-items-center;\\n    }\\n}\\n","styleUrl":"./clone-setting-field.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":36},"extends":[],"templateData":"<div class=\\"clone-setting-field--field-row\\">\\n    <div class=\\"clone-setting-field--description-section\\">\\n        <svg-icon-sprite width=\\"24px\\" height=\\"24px\\" src=\\"{{iconSource}}\\" class=\\"tw-text-menu-inactive-text-color\\"></svg-icon-sprite>\\n        <span class=\\"clone-setting-field--label-text\\">\\n            {{ label }}\\n            <app-mandatory-field *ngIf=\\"isFieldMandatory\\"></app-mandatory-field>\\n            <svg-icon-sprite width=\\"16px\\" height=\\"16px\\" src=\\"info-circle-fill\\" class=\\"tw-text-placeholder tw-ml-8-px tw-pb-4-px\\" [pTooltip]=\\"tooltipText\\" tooltipPosition=\\"top\\"></svg-icon-sprite>\\n        </span>\\n    </div>\\n    <div>\\n        <app-dropdown *ngIf=\\"inputType === InputType.DROPDOWN\\"\\n            [placeholder]=\\"placeholder\\"\\n            [options]=\\"options\\"\\n            [form]=\\"form\\"\\n            [formControllerName]=\\"formControllerName\\"\\n            [displayKey]=\\"dropdownDisplayKey\\"\\n            [additionalClasses]=\\"additionalClasses\\">\\n        </app-dropdown>\\n        <app-toggle *ngIf=\\"inputType === InputType.TOGGLE\\"\\n            [form]=\\"form\\"\\n            [formControllerName]=\\"formControllerName\\">\\n        </app-toggle>\\n        <app-multi-select *ngIf=\\"inputType === InputType.MULTI_SELECT\\"\\n            [form]=\\"form\\"\\n            [formControllerName]=\\"formControllerName\\"\\n            [disabledOption]=\\"disabledOption\\"\\n            [placeholder]=\\"placeholder\\"\\n            [options]=\\"options\\">\\n        </app-multi-select>\\n    </div>\\n</div>\\n"},{"name":"CloneSettingHeaderComponent","id":"component-CloneSettingHeaderComponent-624d42d6c9bfc3f52199b784bf6560828ff9512ecf413b4e6e78e0291318fbb39ba48e167cc1cd9903fff423e19a32bcdb81893569ad8e71d0c9a68fa84bbb93","file":"src/app/shared/components/onboarding/clone-setting/clone-setting-header/clone-setting-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-clone-setting-header","styleUrls":["./clone-setting-header.component.scss"],"styles":[],"templateUrl":["./clone-setting-header.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"headerText","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"subHeaderText","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-clone-setting-header\',\\n  templateUrl: \'./clone-setting-header.component.html\',\\n  styleUrls: [\'./clone-setting-header.component.scss\']\\n})\\nexport class CloneSettingHeaderComponent implements OnInit {\\n\\n  @Input() headerText: string;\\n\\n  @Input() subHeaderText: string;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./clone-setting-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":12},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-p-24-px tw-bg-configuration-bg\\">\\n    <div class=\\"tw-flex\\">\\n        <svg-icon-sprite src=\\"gear\\" width=\\"24px\\" height=\\"24px\\" class=\\"tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n        <div class=\\"tw-ml-8-px\\">\\n            <p class=\\"tw-text-18-px tw-pb-8-px\\">{{ headerText }}</p>\\n            <p class=\\"tw-text-faded-text-color tw-text-14-px\\">{{ subHeaderText }}</p>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"CompletedExportLogComponent","id":"component-CompletedExportLogComponent-02aabfbcf5ecae5422c805a8ab0da890d0620585a1df45ab50865bead8719fa16de65d1916a41ec709588ae21d4a94b9f65491749872169981356e38e0bd6098","file":"src/app/integrations/si/main/export-log/completed-export-log/completed-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-completed-export-log","styleUrls":["./completed-export-log.component.scss"],"styles":[],"templateUrl":["./completed-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"clickedExportLogIndex","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":83},{"name":"count","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":75},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":32},{"name":"dateOptions","defaultValue":"[\\n    {\\n      dateRange: \'This Month\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'This Week\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - new Date().getDay()),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'Today\',\\n      startDate: new Date(),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: new Date().toLocaleDateString(),\\n      startDate: new Date(),\\n      endDate: new Date()\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"DateFilter[]","optional":false,"description":"","line":34},{"name":"dateValue","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":85},{"name":"expenseGroups","deprecated":false,"deprecationMessage":"","type":"ExpenseGroupList[]","optional":false,"description":"","line":67},{"name":"expenses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":71},{"name":"exportLogForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":61},{"name":"filteredExpenseGroups","deprecated":false,"deprecationMessage":"","type":"ExpenseGroupList[]","optional":false,"description":"","line":69},{"name":"isCalendarVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":63},{"name":"isDateFieldFocused","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"isDateSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":73},{"name":"isLoading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"isRecordPresent","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":65},{"name":"isSearchFocused","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":28},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30},{"name":"pageNumber","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":81},{"name":"pageSize","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":79},{"name":"presentDate","defaultValue":"new Date().toLocaleDateString()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59},{"name":"selectedDateFilter","deprecated":false,"deprecationMessage":"","type":"SelectedDateFilter | null","optional":false,"description":"","line":57},{"name":"state","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":77},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":26},{"name":"visible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":87}],"methodsClass":[{"name":"displayChildTable","args":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":96,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"dropDownWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":""},{"name":"filterTable","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDates","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":164,"deprecated":false,"deprecationMessage":""},{"name":"getExpenseGroups","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":172,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExpenseGroupsAndSetupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":238,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":256,"deprecated":false,"deprecationMessage":""},{"name":"openExpenseinFyle","args":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openUrl","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""},{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":143,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeFilter","args":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":213,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showCalendar","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"trackDateFilter","args":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":""},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":248,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormBuilder, FormGroup } from \'@angular/forms\';\\nimport { FyleReferenceType, PaginatorPage, TaskLogState } from \'src/app/core/models/enum/enum.model\';\\nimport { DateFilter, SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { ExpenseGroup, ExpenseGroupList } from \'src/app/core/models/si/db/expense-group.model\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { ExportLogService } from \'src/app/core/services/si/export-log/export-log.service\';\\nimport { PaginatorService } from \'src/app/core/services/si/si-core/paginator.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-completed-export-log\',\\n  templateUrl: \'./completed-export-log.component.html\',\\n  styleUrls: [\'./completed-export-log.component.scss\']\\n})\\nexport class CompletedExportLogComponent implements OnInit {\\n\\n  isLoading: boolean = false;\\n\\n  isSearchFocused: boolean = false;\\n\\n  isDateFieldFocused: boolean = false;\\n\\n  totalCount: number;\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  currentPage: number = 1;\\n\\n  dateOptions: DateFilter[] = [\\n    {\\n      dateRange: \'This Month\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'This Week\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - new Date().getDay()),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'Today\',\\n      startDate: new Date(),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: new Date().toLocaleDateString(),\\n      startDate: new Date(),\\n      endDate: new Date()\\n    }\\n  ];\\n\\n  selectedDateFilter: SelectedDateFilter | null;\\n\\n  presentDate = new Date().toLocaleDateString();\\n\\n  exportLogForm: FormGroup;\\n\\n  isCalendarVisible: boolean;\\n\\n  isRecordPresent: boolean = false;\\n\\n  expenseGroups: ExpenseGroupList [];\\n\\n  filteredExpenseGroups: ExpenseGroupList [];\\n\\n  expenses: Expense [] = [];\\n\\n  isDateSelected: boolean = false;\\n\\n  count: number;\\n\\n  state: string;\\n\\n  pageSize: number;\\n\\n  pageNumber = 0;\\n\\n  clickedExportLogIndex: number = 0;\\n\\n  dateValue: Date;\\n\\n  visible: boolean = false;\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private trackingService: TrackingService,\\n    private exportLogService: ExportLogService,\\n    private paginatorService: PaginatorService\\n  ) { }\\n\\n  displayChildTable(index: number) {\\n    this.clickedExportLogIndex = index;\\n    this.expenses = this.filteredExpenseGroups[this.clickedExportLogIndex].expenses;\\n    this.visible = true;\\n  }\\n\\n  openExpenseinFyle(expense_id: string) {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}`;\\n    window.open(url, \'_blank\');\\n  }\\n\\n  openUrl(event: Event, url: string) {\\n    window.open(url, \'_blank\');\\n    event.stopPropagation();\\n  }\\n\\n  removeFilter(formField: AbstractControl) {\\n    (formField as FormGroup).reset();\\n    event?.stopPropagation();\\n  }\\n\\n  public filterTable(event: any) {\\n    const query = event.target.value.toLowerCase();\\n\\n    this.filteredExpenseGroups = this.expenseGroups.filter((group: ExpenseGroupList) => {\\n      const employeeName = group.employee ? group.employee[0] : \'\';\\n      const employeeID = group.employee ? group.employee[1] : \'\';\\n      const expenseType = group.expenseType ? group.expenseType : \'\';\\n      const referenceNumber = group.referenceNumber ? group.referenceNumber : \'\';\\n\\n      return (\\n        employeeName.toLowerCase().includes(query) ||\\n        employeeID.toLowerCase().includes(query) ||\\n        expenseType.toLowerCase().includes(query) ||\\n        referenceNumber.toLowerCase().includes(query)\\n      );\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    this.limit = limit;\\n    this.currentPage = 1;\\n    this.selectedDateFilter = this.selectedDateFilter ? this.selectedDateFilter : null;\\n    this.getExpenseGroups(limit, this.offset);\\n  }\\n\\n  pageChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.offset = offset;\\n    this.currentPage = Math.ceil(offset / this.limit) + 1;\\n    this.selectedDateFilter = this.selectedDateFilter ? this.selectedDateFilter : null;\\n    this.getExpenseGroups(this.limit, offset);\\n  }\\n\\n  dropDownWatcher() {\\n    if (this.exportLogForm.controls.dateRange.value !== this.dateOptions[3].dateRange) {\\n      this.isCalendarVisible = false;\\n    } else {\\n      this.isCalendarVisible = true;\\n    }\\n  }\\n\\n  showCalendar(event: Event) {\\n    event.stopPropagation();\\n    this.isCalendarVisible = true;\\n  }\\n\\n  getDates() {\\n    this.dateOptions[3].dateRange = this.exportLogForm.value.start[0].toLocaleDateString() + \'-\' + this.exportLogForm.value.start[1].toLocaleDateString();\\n    this.dateOptions[3].startDate = this.exportLogForm.value.start[0];\\n    this.dateOptions[3].endDate = this.exportLogForm.value.start[1];\\n    this.presentDate = this.dateOptions[3].dateRange;\\n    this.exportLogForm.controls.dateRange.patchValue(this.dateOptions[3]);\\n  }\\n\\n  getExpenseGroups(limit: number, offset:number) {\\n    this.isLoading = true;\\n    const expenseGroups: ExpenseGroupList[] = [];\\n\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.EXPORT_LOG, limit);\\n    }\\n\\n    return this.exportLogService.getExpenseGroups(TaskLogState.COMPLETE, limit, offset, this.selectedDateFilter).subscribe(expenseGroupResponse => {\\n      if (!this.isDateSelected) {\\n        this.totalCount = expenseGroupResponse.count;\\n      }\\n      expenseGroupResponse.results.forEach((expenseGroup: ExpenseGroup, index: number = 0) => {\\n        const referenceType: FyleReferenceType = this.exportLogService.getReferenceType(expenseGroup.description);\\n        let referenceNumber: string = expenseGroup.description[referenceType];\\n\\n        if (referenceType === FyleReferenceType.EXPENSE) {\\n          referenceNumber = expenseGroup.expenses[0].expense_number;\\n        } else if (referenceType === FyleReferenceType.PAYMENT) {\\n          referenceNumber = expenseGroup.expenses[0].payment_number;\\n        }\\n\\n        expenseGroups.push({\\n          index: index++,\\n          exportedAt: expenseGroup.exported_at,\\n          employee: [expenseGroup.employee_name, expenseGroup.description.employee_email],\\n          expenseType: expenseGroup.fund_source === \'CCC\' ? \'Corporate Card\' : \'Reimbursable\',\\n          fyleReferenceType: null,\\n          referenceNumber: referenceNumber,\\n          exportedAs: expenseGroup.export_type,\\n          fyleUrl: this.exportLogService.generateFyleUrl(expenseGroup, referenceType),\\n          intacctUrl: `https://www-p02.intacct.com/ia/acct/ur.phtml?.r=${expenseGroup.response_logs?.url_id}`,\\n          expenses: expenseGroup.expenses\\n        });\\n      });\\n      this.filteredExpenseGroups = expenseGroups;\\n      this.expenseGroups = [...this.filteredExpenseGroups];\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  private setupForm(): void {\\n    this.exportLogForm = this.formBuilder.group({\\n      searchOption: [\'\'],\\n      dateRange: [null],\\n      start: [\'\'],\\n      end: [\'\']\\n    });\\n\\n    this.exportLogForm.controls.dateRange.valueChanges.subscribe((dateRange) => {\\n      const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n      if (dateRange) {\\n        this.selectedDateFilter = {\\n          startDate: dateRange.startDate,\\n          endDate: dateRange.endDate\\n        };\\n\\n        this.trackDateFilter(\'existing\', this.selectedDateFilter);\\n        this.getExpenseGroups(paginator.limit, paginator.offset);\\n      } else {\\n        this.selectedDateFilter = null;\\n        this.getExpenseGroups(paginator.limit, paginator.offset);\\n      }\\n    });\\n  }\\n\\n  private getExpenseGroupsAndSetupPage(): void {\\n    this.setupForm();\\n\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n\\n    this.getExpenseGroups(paginator.limit, paginator.offset);\\n  }\\n\\n  private trackDateFilter(filterType: \'existing\' | \'custom\', selectedDateFilter: SelectedDateFilter): void {\\n    const trackingProperty = {\\n      filterType,\\n      ...selectedDateFilter\\n    };\\n    this.trackingService.onDateFilter(trackingProperty);\\n  }\\n\\n  ngOnInit(): void {\\n    this.getExpenseGroupsAndSetupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".custom-search-field {\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    padding: 2px 10px;\\n    display: inline-flex;\\n    align-items: center;\\n    width: 350px;\\n    height: 40px;\\n}\\n\\n.custom-search-field i.pi-search {\\n    margin-right: 10px;\\n    color: grey;\\n}\\n\\n.custom-search-field input[type=\\"text\\"] {\\n    border: none;\\n    outline: none;\\n    width: 100%;\\n}\\n\\ninput.custom-focus:focus {\\n    outline: none;\\n    border: 1px solid black !important;\\n  }\\n\\n.clickable-row:hover {\\n    cursor: pointer;\\n    &:hover {\\n        background: #FAFCFF;\\n      }\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\\n    background-color: transparent;\\n    @apply tw-px-24-px tw-py-12-px tw-mx-10-px tw-mt-0 tw-border-x-box-color tw-border-t-box-color tw-border-t tw-border-x tw-rounded-t-lg #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link:not(.p-disabled):hover {\\n    @apply tw-text-slightly-normal-text-color tw-border-b-transparent tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover .p-menuitem-link{\\n    background-color: transparent !important;\\n    @apply tw-border-b-transparent tw-font-500 #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link:not(.p-highlight):hover{\\n    @apply tw-border-b-transparent tw-font-500 tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav {\\n    background-color: transparent;\\n    @apply tw-border-b tw-border-b-box-color #{!important};\\n}\\n\\n:host ::ng-deep .drop-down .p-dropdown {\\n    @apply tw-w-200-px tw-border-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {\\n    @apply tw-text-sub-text-color tw-text-14-px tw-font-400 tw-py-14-px tw-px-22-px tw-border-t tw-border-b-0 tw-border-t-box-color  #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\\n    @apply tw-text-slightly-normal-text-color tw-text-12-px tw-font-500 tw-py-12-px tw-px-22-px tw-border tw-border-box-color tw-bg-disabled-bg-color #{!important}\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td > button {\\n    @apply tw-pl-48-px #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar {\\n    @apply tw-h-1.5 tw-bg-progress-bar-bg #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar .p-progressbar-value {\\n    @apply tw-bg-mandatory-field-color tw-rounded-50  #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar-determinate .p-progressbar-value {\\n    content: none #{!important};\\n}\\n\\n.export-btn:disabled {\\n    @apply tw-cursor-not-allowed tw-bg-cta-disabled #{!important};\\n}\\n\\n:host ::ng-deep .p-dialog {\\n    max-height: 100% !important;\\n    margin: 0rem !important;\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n\\n","styleUrl":"./completed-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""}],"line":87,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n    <div *ngIf=\\"totalCount > 0\\">\\n        <div [formGroup]=\\"exportLogForm\\" class=\\"tw-flex tw-items-center tw-p-24-px\\">\\n\\n            <span class=\\"custom-search-field\\" [ngStyle]=\\"{ \'border-color\': isSearchFocused ? \'black\' : \'#ccc\' }\\">\\n                <i class=\\"pi pi-search\\"></i>\\n                <input class=\\"tw-pb-1 tw-pt-1 tw-text-14-px\\" type=\\"text\\" (input)=\\"filterTable($event)\\" (focus)=\\"isSearchFocused = true\\" (blur)=\\"isSearchFocused = false\\" placeholder=\\"Search by Employee Name or Expense ID\\" />\\n            </span>\\n            <div class=\\"tw-flex tw-mr-4\\"></div>\\n            <span [ngClass]=\\"{\'tw-border-black\': isDateFieldFocused}\\" class=\\"tw-flex tw-justify-start tw-items-center tw-border tw-border-box-color tw-pl-12-px tw-rounded-4-px drop-down\\">\\n                <div>\\n                    <svg-icon-sprite src=\\"calender\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-placeholder\\"></svg-icon-sprite>\\n                </div>\\n                <p-dropdown placeholder=\\"Select date range\\" appendTo=\\"body\\" [options]=\\"dateOptions\\"\\n                formControlName=\\"dateRange\\" (click)=\\"dropDownWatcher()\\" (onFocus)=\\"isDateFieldFocused = true\\" (onBlur)=\\"isDateFieldFocused = false\\"\\n                [ngClass]=\\"{\'selectedItem\': exportLogForm.controls.dateRange.value, \'filterDropdown\': !exportLogForm.controls.dateRange.value}\\">\\n                    <ng-template let-item pTemplate=\\"selectedItem\\">\\n                        <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                            <span>\\n                                <div *ngIf=\\"exportLogForm.controls.dateRange.value\\">\\n                                    <div class=\\"my-dropdown-selected-item\\">\\n                                        {{exportLogForm.controls.dateRange.value.dateRange}}\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\"!exportLogForm.controls.dateRange.value\\">\\n                                    <div class=\\"my-dropdown-selected-item tw-text-placeholder tw-text-14-px\\">\\n                                        Select date range\\n                                    </div>\\n                                </div>\\n                            </span>\\n                            <i class=\\"pi pi-times\\" (click)=\\"removeFilter(exportLogForm.controls.dateRange)\\"></i>\\n                        </div>\\n                    </ng-template>\\n                    <ng-template let-date pTemplate=\\"item\\">\\n                        <div>\\n                            <p-calendar (click)=\\"showCalendar($event)\\" placeholder=\\"Custom dates\\" formControlName=\\"start\\" (onClose)=\\"getDates()\\" [touchUI]=\\"isCalendarVisible\\" *ngIf=\\"date.dateRange === presentDate\\" selectionMode=\\"range\\" [readonlyInput]=\\"true\\" inputId=\\"range\\"></p-calendar>\\n                            <p class=\\"tw-text-sub-text-color tw-text-14-px\\" [ngClass]=\\"{\'!tw-text-mandatory-field-color\' : exportLogForm.controls.dateRange.value === date }\\" *ngIf=\\"date.dateRange !== presentDate\\">{{ date.dateRange | titlecase | snakeCaseToSpaceCase }}</p>\\n                            <p class=\\"tw-text-sub-text-color tw-text-12-px\\" *ngIf=\\"date.dateRange !== presentDate && date.dateRange !== \'Today\'\\">{{date.startDate | date : \'MMM dd, yyyy\'}} - {{date.endDate | date : \'MMM dd, yyyy\'}}</p>\\n                            <p class=\\"tw-text-sub-text-color tw-text-12-px\\" *ngIf=\\"date.dateRange === \'Today\'\\">{{date.startDate | date : \'MMM dd, yyyy\'}}</p>\\n                        </div>\\n                    </ng-template> \\n                </p-dropdown>\\n            </span>\\n        </div>\\n\\n        <p-table *ngIf=\\"filteredExpenseGroups.length > 0\\" #dt1 [value]=\\"filteredExpenseGroups\\">\\n            <ng-template pTemplate=\\"header\\">\\n                <tr>\\n                    <th>Date and Time of Export</th>\\n                    <th>Employee Name and ID</th>\\n                    <th>Expense Type</th>\\n                    <th>Reference ID</th>\\n                    <th>Exported As</th>\\n                    <th>Link to Sage Intacct</th>\\n                </tr>\\n            </ng-template>\\n\\n            <ng-template pTemplate=\\"body\\" let-rowData>\\n                <tr class=\\"clickable-row\\" (click)=\\"displayChildTable(rowData.index)\\">\\n                    <td>\\n                        <p class=\\"tw-font-400 tw-text-sub-text-color\\">{{rowData.exportedAt | date}}</p>\\n                        <span class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">{{rowData.exportedAt | date : \\"HH:ss\\"}}</span>\\n                    </td>\\n                    <td>\\n                        <h4>\\n                            {{rowData.employee[0]}}\\n                        </h4>\\n                        <h5 class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">\\n                            {{rowData.employee[1]}}\\n                        </h5>\\n                    </td>\\n                    <td>{{rowData.expenseType | titlecase}}</td>\\n                    <td class=\\"tw-underline\\" (click)=\\"openUrl($event, rowData.fyleUrl)\\">{{rowData.referenceNumber}}</td>\\n                    <td>{{rowData.exportedAs | snakeCaseToSpaceCase | titlecase}}</td>\\n                    <td>\\n                        <div *ngIf=\\"rowData.intacctUrl\\">\\n                          <button (click)=\\"openUrl($event, rowData.intacctUrl)\\" pTooltip=\\"Open in New Tab\\" tooltipPosition=\\"top\\">\\n                            <svg-icon-sprite class=\\"tw-pt-5-px\\" src=\\"open-in-new-tab\\" width=\\"20px\\" height=\\"20px\\"></svg-icon-sprite>\\n                          </button>\\n                        </div>\\n                    </td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n\\n        <div *ngIf=\\"filteredExpenseGroups.length > 0\\" class=\\"tw-p-24-px tw-border-t-1-px\\">\\n            <app-paginator [dropDownValue]=\\"limit\\" [page]=\\"currentPage\\" [totalCount]=\\"totalCount\\" (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" (pageOffsetChangeEvent)=\\"pageChanges($event)\\"></app-paginator>\\n        </div>\\n\\n        <div *ngIf=\\"!filteredExpenseGroups.length\\" class=\\"tw-flex tw-h-3/6 tw-text-center tw-p-56-px\\">\\n            <div class=\\"tw-m-auto\\">\\n                <img src=\\"assets/illustrations/search-result-empty.svg\\" width=\\"200px\\" hight=\\"200px\\" class=\\"tw-inline-block\\">\\n                <div class=\\"tw-pt-12-px\\">\\n                    <h4 class=\\"tw-font-500 tw-text-14-px tw-text-slightly-normal-text-color\\">Sorry, no results found!</h4>\\n                    <p class=\\"tw-font-400 tw-text-14-px tw-text-faded-text-color tw-pt-8-px\\">We could not find what you were looking for.<br>Kindly check the keywords again.</p>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n    <div *ngIf=\\"totalCount === 0\\">\\n        <div class=\\"tw-flex tw-h-3/6 tw-text-center tw-p-56-px tw-my-24-px\\">\\n            <div class=\\"tw-m-auto\\">\\n                <img src=\\"assets/illustrations/integrations-zero-state.svg\\" width=\\"200px\\" hight=\\"200px\\" class=\\"tw-inline-block\\">\\n                <div class=\\"tw-pt-20-px\\">\\n                    <h4 class=\\"tw-font-500 !tw-text-14-px tw-text-slightly-normal-text-color\\">No records to show yet!</h4>\\n                    <p class=\\"tw-pt-8-px tw-font-400 !tw-text-14-px tw-text-faded-text-color\\">All your successful exports and their details<br>\\n                        will be stored here.</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<p-dialog header=\\"Expenses\\" [(visible)]=\\"visible\\" [position]=\\"\'top-right\'\\" [modal]=\\"true\\" [draggable]=\\"false\\" [dismissableMask]=\\"true\\" [style]=\\"{ width: \'50vw\', height: \'100vh\' }\\">\\n    <div class=\\"tw-rounded-6-px tw-bg-white tw-border-1-px\\">\\n        <p-table #dt2 [value]=\\"expenses\\">\\n            <ng-template pTemplate=\\"header\\">\\n                <tr>\\n                    <th>Expense ID.</th>\\n                    <th>Merchant</th>\\n                    <th>Category</th>\\n                    <th>Amount</th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\"body\\" let-rowData>\\n                <tr *ngFor=\\"let expense of expenses\\">\\n                    <td class=\\"tw-underline tw-cursor-pointer\\" (click)=\\"openExpenseinFyle(rowData.expense_id)\\">{{expense.expense_number}}</td>\\n                    <td>{{ expense.vendor ? expense.vendor : \'-\' }}</td>\\n                    <td>{{ expense.category }}</td>\\n                    <td>{{ expense.amount }}</td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n</p-dialog>"},{"name":"ConfigurationAdvancedSettingComponent","id":"component-ConfigurationAdvancedSettingComponent-b6f62ada4b431415f97fa474395a8f0752caf2ad38eda5acde074e047e444f5e34dc0f262afe740caa951ed069077e0b1e85b4081229c4792960587beaffde06","file":"src/app/integrations/qbd/main/configuration/configuration-advanced-setting/configuration-advanced-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-advanced-setting","styleUrls":["./configuration-advanced-setting.component.scss"],"styles":[],"templateUrl":["./configuration-advanced-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-configuration-advanced-setting\',\\n  templateUrl: \'./configuration-advanced-setting.component.html\',\\n  styleUrls: [\'./configuration-advanced-setting.component.scss\']\\n})\\nexport class ConfigurationAdvancedSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./configuration-advanced-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<app-advanced-setting></app-advanced-setting>"},{"name":"ConfigurationAdvancedSettingComponent","id":"component-ConfigurationAdvancedSettingComponent-b6f62ada4b431415f97fa474395a8f0752caf2ad38eda5acde074e047e444f5e34dc0f262afe740caa951ed069077e0b1e85b4081229c4792960587beaffde06-1","file":"src/app/integrations/si/main/configuration/configuration-advanced-setting/configuration-advanced-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-advanced-setting","styleUrls":["./configuration-advanced-setting.component.scss"],"styles":[],"templateUrl":["./configuration-advanced-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-configuration-advanced-setting\',\\n  templateUrl: \'./configuration-advanced-setting.component.html\',\\n  styleUrls: [\'./configuration-advanced-setting.component.scss\']\\n})\\nexport class ConfigurationAdvancedSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./configuration-advanced-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"ConfigurationAdvancedSettingComponent-1","templateData":"<app-configuration-advanced-settings></app-configuration-advanced-settings>"},{"name":"ConfigurationAdvancedSettingsComponent","id":"component-ConfigurationAdvancedSettingsComponent-5ee904ae83b7a0a845e2fc3ddc381e795cb2839147eb39a1d7d237cb067094568340da202408d34b464a81490026568af591bc7829307ca2a5632a2d754a2da1","file":"src/app/shared/components/si/configuration/configuration-advanced-settings/configuration-advanced-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-advanced-settings","styleUrls":["./configuration-advanced-settings.component.scss"],"styles":[],"templateUrl":["./configuration-advanced-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"adminEmails","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"EmailOptions[]","optional":false,"description":"","line":50},{"name":"advancedSettings","deprecated":false,"deprecationMessage":"","type":"AdvancedSettingsGet","optional":false,"description":"","line":46},{"name":"advancedSettingsForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":32},{"name":"appName","defaultValue":"AppName.INTACCT","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":76},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":97,"modifierKind":[148]},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":44},{"name":"defaultMemoFields","defaultValue":"[\'employee_email\', \'merchant\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":80},{"name":"employeeFieldMapping","deprecated":false,"deprecationMessage":"","type":"FyleField","optional":false,"description":"","line":68},{"name":"hours","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"HourOption[]","optional":false,"description":"","line":52},{"name":"intacctLink","defaultValue":"brandingKbArticles.topLevelArticles.INTACCT","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38},{"name":"IntacctReimbursableExpensesObjectBILL","deprecated":false,"deprecationMessage":"","type":"IntacctReimbursableExpensesObject.BILL","optional":false,"description":"","line":74},{"name":"IntacctReimbursableExpensesObjectER","deprecated":false,"deprecationMessage":"","type":"IntacctReimbursableExpensesObject.EXPENSE_REPORT","optional":false,"description":"","line":72},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":30},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":40},{"name":"memoPreviewText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":48},{"name":"memoStructure","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":54},{"name":"paymentSyncOptions","defaultValue":"[\\n    {\\n      label: \'None\',\\n      value: null\\n    },\\n    {\\n      label: \'Export \' + brandingConfig.brandName + \' ACH Payments to Sage Intacct\',\\n      value: PaymentSyncDirection.FYLE_TO_INTACCT\\n    },\\n    {\\n      label: \'Import Sage Intacct Payments into \' + brandingConfig.brandName + \'\',\\n      value: PaymentSyncDirection.INTACCT_TO_FYLE\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"AdvancedSettingFormOption[]","optional":false,"description":"","line":82},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.INTACCT.ADVANCED_SETTING","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36},{"name":"reimbursableExpense","deprecated":false,"deprecationMessage":"","type":"IntacctReimbursableExpensesObject","optional":true,"description":"","line":70},{"name":"sageIntacctClasses","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":62},{"name":"sageIntacctDefaultItem","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":64},{"name":"sageIntacctDepartments","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":58},{"name":"sageIntacctLocations","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":56},{"name":"sageIntacctPaymentAccount","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":66},{"name":"sageIntacctProjects","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":60},{"name":"saveInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":42},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":78,"modifierKind":[123]},{"name":"skipExportChild","deprecated":false,"deprecationMessage":"","type":"SkipExportComponent","optional":false,"description":"","line":28,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'skipExportChild\'"}],"modifierKind":[170]},{"name":"skipExportForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":34}],"methodsClass":[{"name":"compareObjects","args":[{"name":"selectedOption","type":"any","deprecated":false,"deprecationMessage":""},{"name":"listedOption","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":207,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedOption","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"listedOption","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"createAutoSyncPaymentsWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":153,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createMemoStructureWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"formatMemoPreview","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getAdminEmails","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":316,"deprecated":false,"deprecationMessage":""},{"name":"getEmployeeField","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":""},{"name":"getPaymentSyncConfiguration","args":[{"name":"configurations","type":"Configuration","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":172,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"configurations","type":"Configuration","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getPhase","args":[],"optional":false,"returnType":"ProgressPhase","typeParameters":[],"line":277,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":239,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initializeAdvancedSettingsFormWithData","args":[{"name":"isSkippedExpense","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":183,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"isSkippedExpense","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"initializeSkipExportForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":221,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isCCT","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":214,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":324,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeFilter","args":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":281,"deprecated":false,"deprecationMessage":""},{"name":"updateForm","args":[{"name":"updatedForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":235,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"updatedForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, ViewChild } from \'@angular/core\';\\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { AppName, ConfigurationCta, FyleField, IntacctOnboardingState, IntacctReimbursableExpensesObject, IntacctUpdateEvent, Page, PaymentSyncDirection, ProgressPhase, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { EmailOptions } from \'src/app/core/models/qbd/qbd-configuration/advanced-setting.model\';\\nimport { AdvancedSetting, AdvancedSettingFormOption, AdvancedSettingsGet, AdvancedSettingsPost, HourOption } from \'src/app/core/models/si/si-configuration/advanced-settings.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { SiAdvancedSettingService } from \'src/app/core/services/si/si-configuration/si-advanced-setting.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { SiWorkspaceService } from \'src/app/core/services/si/si-core/si-workspace.service\';\\nimport { SkipExportComponent } from \'../../helper/skip-export/skip-export.component\';\\nimport { TitleCasePipe } from \'@angular/common\';\\nimport { IntacctDestinationAttribute } from \'src/app/core/models/si/db/destination-attribute.model\';\\nimport { Configuration } from \'src/app/core/models/si/si-configuration/advanced-settings.model\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { environment } from \'src/environments/environment\';\\nimport { AdvancedSettingsModel } from \'src/app/core/models/common/advanced-settings.model\';\\n\\n@Component({\\n  selector: \'app-configuration-advanced-settings\',\\n  templateUrl: \'./configuration-advanced-settings.component.html\',\\n  styleUrls: [\'./configuration-advanced-settings.component.scss\']\\n})\\nexport class ConfigurationAdvancedSettingsComponent implements OnInit {\\n\\n  @ViewChild(\'skipExportChild\') skipExportChild: SkipExportComponent;\\n\\n  isLoading: boolean = true;\\n\\n  advancedSettingsForm: FormGroup;\\n\\n  skipExportForm: FormGroup;\\n\\n  redirectLink = brandingKbArticles.onboardingArticles.INTACCT.ADVANCED_SETTING;\\n\\n  intacctLink = brandingKbArticles.topLevelArticles.INTACCT;\\n\\n  isOnboarding: boolean;\\n\\n  saveInProgress: boolean = false;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  advancedSettings: AdvancedSettingsGet;\\n\\n  memoPreviewText: string;\\n\\n  adminEmails: EmailOptions[] = [];\\n\\n  hours: HourOption[] = [];\\n\\n  memoStructure: string[] = [];\\n\\n  sageIntacctLocations: IntacctDestinationAttribute[];\\n\\n  sageIntacctDepartments: IntacctDestinationAttribute[];\\n\\n  sageIntacctProjects: IntacctDestinationAttribute[];\\n\\n  sageIntacctClasses: IntacctDestinationAttribute[];\\n\\n  sageIntacctDefaultItem: IntacctDestinationAttribute[];\\n\\n  sageIntacctPaymentAccount: IntacctDestinationAttribute[];\\n\\n  employeeFieldMapping: FyleField;\\n\\n  reimbursableExpense?: IntacctReimbursableExpensesObject;\\n\\n  IntacctReimbursableExpensesObjectER: IntacctReimbursableExpensesObject.EXPENSE_REPORT;\\n\\n  IntacctReimbursableExpensesObjectBILL: IntacctReimbursableExpensesObject.BILL;\\n\\n  appName = AppName.INTACCT;\\n\\n  private sessionStartTime = new Date();\\n\\n  defaultMemoFields: string[] = [\'employee_email\', \'merchant\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n\\n  paymentSyncOptions: AdvancedSettingFormOption[] = [\\n    {\\n      label: \'None\',\\n      value: null\\n    },\\n    {\\n      label: \'Export \' + brandingConfig.brandName + \' ACH Payments to Sage Intacct\',\\n      value: PaymentSyncDirection.FYLE_TO_INTACCT\\n    },\\n    {\\n      label: \'Import Sage Intacct Payments into \' + brandingConfig.brandName + \'\',\\n      value: PaymentSyncDirection.INTACCT_TO_FYLE\\n    }\\n  ];\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private router: Router,\\n    private advancedSettingsService: SiAdvancedSettingService,\\n    private formBuilder: FormBuilder,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService,\\n    private workspaceService: SiWorkspaceService,\\n    private mappingService: SiMappingsService\\n  ) { }\\n\\n  refreshDimensions(isRefresh: boolean) {\\n    this.mappingService.refreshSageIntacctDimensions().subscribe();\\n    this.mappingService.refreshFyleDimensions().subscribe();\\n    this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Refreshing data dimensions from Sage Intacct\');\\n  }\\n\\n  getEmployeeField() {\\n    return new TitleCasePipe().transform(this.employeeFieldMapping);\\n  }\\n\\n  removeFilter(formField: AbstractControl) {\\n    (formField as FormGroup).reset();\\n    event?.stopPropagation();\\n  }\\n\\n  private formatMemoPreview(): void {\\n    const time = Date.now();\\n    const today = new Date(time);\\n\\n    const previewValues: { [key: string]: string } = {\\n      employee_email: \'john.doe@acme.com\',\\n      category: \'Meals and Entertainment\',\\n      purpose: \'Client Meeting\',\\n      merchant: \'Pizza Hut\',\\n      report_number: \'C/2021/12/R/1\',\\n      spent_on: today.toLocaleDateString(),\\n      expense_link: `${environment.fyle_app_url}/app/main/#/enterprise/view_expense/`\\n    };\\n    this.memoPreviewText = \'\';\\n    const memo: string[] = [];\\n    this.memoStructure.forEach((field, index) => {\\n      if (field in previewValues) {\\n        const defaultIndex = this.defaultMemoFields.indexOf(this.memoStructure[index]);\\n        memo[defaultIndex] = previewValues[field];\\n      }\\n    });\\n    memo.forEach((field, index) => {\\n      this.memoPreviewText += field;\\n      if (index + 1 !== memo.length) {\\n        this.memoPreviewText = this.memoPreviewText + \' - \';\\n      }\\n    });\\n  }\\n\\n  private createAutoSyncPaymentsWatcher(): void {\\n    this.advancedSettingsForm.controls.autoSyncPayments.valueChanges.subscribe((paymentChanges) => {\\n      if (paymentChanges === PaymentSyncDirection.FYLE_TO_INTACCT) {\\n        this.advancedSettingsForm.controls.defaultPaymentAccount.setValidators([Validators.required]);\\n      } else {\\n        this.advancedSettingsForm.controls.defaultPaymentAccount.clearValidators();\\n      }\\n    });\\n  }\\n\\n  private createMemoStructureWatcher(): void {\\n    this.memoStructure = this.advancedSettingsForm.value.setDescriptionField;\\n    this.formatMemoPreview();\\n    this.advancedSettingsForm.controls.setDescriptionField.valueChanges.subscribe((memoChanges) => {\\n      this.memoStructure = memoChanges;\\n      this.formatMemoPreview();\\n    });\\n  }\\n\\n  private getPaymentSyncConfiguration(configurations: Configuration): string {\\n    let paymentSync = \'\';\\n    if (configurations.sync_fyle_to_sage_intacct_payments) {\\n      paymentSync = PaymentSyncDirection.FYLE_TO_INTACCT;\\n    } else if (configurations.sync_sage_intacct_to_fyle_payments) {\\n      paymentSync = PaymentSyncDirection.INTACCT_TO_FYLE;\\n    }\\n\\n    return paymentSync;\\n  }\\n\\n  private initializeAdvancedSettingsFormWithData(isSkippedExpense: boolean): void {\\n    const findObjectByDestinationId = (array: IntacctDestinationAttribute[], id: string) => array?.find(item => item.destination_id === id) || null;\\n    this.advancedSettingsForm = this.formBuilder.group({\\n      scheduleAutoExport: [(this.advancedSettings.workspace_schedules?.interval_hours && this.advancedSettings.workspace_schedules?.enabled) ? this.advancedSettings.workspace_schedules?.interval_hours : null],\\n      email: [this.advancedSettings?.workspace_schedules?.emails_selected?.length > 0 ? AdvancedSettingsModel.filterAdminEmails(this.advancedSettings?.workspace_schedules?.emails_selected, this.adminEmails) : []],\\n      search: [],\\n      autoSyncPayments: [this.getPaymentSyncConfiguration(this.advancedSettings.configurations)],\\n      autoCreateEmployeeVendor: [this.advancedSettings.configurations.auto_create_destination_entity],\\n      postEntriesCurrentPeriod: [this.advancedSettings.configurations.change_accounting_period ? true : false],\\n      setDescriptionField: [this.advancedSettings.configurations.memo_structure ? this.advancedSettings.configurations.memo_structure : this.defaultMemoFields, Validators.required],\\n      skipSelectiveExpenses: [isSkippedExpense],\\n      defaultLocation: [findObjectByDestinationId(this.sageIntacctLocations, this.advancedSettings.general_mappings.default_location.id)],\\n      defaultDepartment: [findObjectByDestinationId(this.sageIntacctDepartments, this.advancedSettings.general_mappings.default_department.id)],\\n      defaultProject: [findObjectByDestinationId(this.sageIntacctProjects, this.advancedSettings.general_mappings.default_project.id)],\\n      defaultClass: [findObjectByDestinationId(this.sageIntacctClasses, this.advancedSettings.general_mappings.default_class.id)],\\n      defaultItems: [findObjectByDestinationId(this.sageIntacctDefaultItem, this.advancedSettings.general_mappings.default_item.id)],\\n      defaultPaymentAccount: [findObjectByDestinationId(this.sageIntacctPaymentAccount, this.advancedSettings.general_mappings.payment_account.id)],\\n      useEmployeeLocation: [this.advancedSettings.general_mappings.use_intacct_employee_locations ? this.advancedSettings.general_mappings.use_intacct_employee_locations : null],\\n      useEmployeeDepartment: [this.advancedSettings.general_mappings.use_intacct_employee_departments ? this.advancedSettings.general_mappings.use_intacct_employee_departments : null]\\n    });\\n    this.createAutoSyncPaymentsWatcher();\\n    this.createMemoStructureWatcher();\\n  }\\n\\n  compareObjects(selectedOption: any, listedOption: any): boolean {\\n    if (JSON.stringify(selectedOption) === JSON.stringify(listedOption)) {\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  isCCT(): boolean {\\n    if (this.advancedSettingsForm.get(\'autoSyncPayments\')?.value === PaymentSyncDirection.FYLE_TO_INTACCT) {\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  private initializeSkipExportForm(): void {\\n    this.skipExportForm = this.formBuilder.group({\\n      condition1: [\'\'],\\n      operator1: [\'\'],\\n      value1: [[\'\']],\\n      customFieldType1: [\'\'],\\n      join_by: [\'\'],\\n      condition2: [\'\'],\\n      operator2: [\'\'],\\n      value2: [[\'\']],\\n      customFieldType2: [\'\']\\n    });\\n  }\\n\\n  updateForm(updatedForm: FormGroup) {\\n    this.skipExportForm = updatedForm;\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    this.isLoading = true;\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n\\n    const destinationAttributes = [\'LOCATION\', \'DEPARTMENT\', \'PROJECT\', \'CLASS\', \'ITEM\', \'PAYMENT_ACCOUNT\'];\\n\\n    const groupedAttributes$ = this.mappingService.getGroupedDestinationAttributes(destinationAttributes);\\n    const advancedSettings$ = this.advancedSettingsService.getAdvancedSettings();\\n    const expenseFilters$ = this.advancedSettingsService.getExpenseFilter();\\n    const config$ = this.mappingService.getConfiguration();\\n\\n    // Hours Options for Scheduled Exports\\n    for (let i = 1; i <= 24; i++) {\\n      this.hours.push({ label: `${i} hour${i > 1 ? \'s\' : \'\'}`, value: i });\\n    }\\n\\n    forkJoin({\\n      advancedSettings: advancedSettings$,\\n      groupedAttributes: groupedAttributes$,\\n      expenseFilter: expenseFilters$,\\n      configuration: config$\\n    }).subscribe(\\n      ({ advancedSettings, groupedAttributes, expenseFilter, configuration }) => {\\n        this.advancedSettings = advancedSettings;\\n        this.sageIntacctLocations = groupedAttributes.LOCATION;\\n        this.sageIntacctDefaultItem = groupedAttributes.ITEM;\\n        this.sageIntacctDepartments = groupedAttributes.DEPARTMENT;\\n        this.sageIntacctProjects = groupedAttributes.PROJECT;\\n        this.sageIntacctClasses = groupedAttributes.CLASS;\\n        this.sageIntacctPaymentAccount = groupedAttributes.PAYMENT_ACCOUNT;\\n        this.reimbursableExpense = configuration.reimbursable_expenses_object;\\n        this.employeeFieldMapping = configuration.employee_field_mapping;\\n        this.initializeAdvancedSettingsFormWithData(!!expenseFilter.count);\\n        this.initializeSkipExportForm();\\n        this.isLoading = false;\\n      });\\n  }\\n\\n  private getPhase(): ProgressPhase {\\n    return this.isOnboarding ? ProgressPhase.ONBOARDING : ProgressPhase.POST_ONBOARDING;\\n  }\\n\\n  save(): void {\\n    this.saveInProgress = true;\\n    const advancedSettingsPayload = AdvancedSetting.constructPayload(this.advancedSettingsForm);\\n    this.advancedSettingsService.postAdvancedSettings(advancedSettingsPayload).subscribe((response: AdvancedSettingsPost) => {\\n      if (this.advancedSettingsForm.value.skipSelectiveExpenses) {\\n        this.skipExportChild.saveSkipExportFields();\\n      } else {\\n        this.advancedSettingsService.deleteExpenseFilter(1).subscribe();\\n        this.advancedSettingsService.deleteExpenseFilter(2).subscribe();\\n      }\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Advanced settings saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.IMPORT_SETTINGS_INTACCT, this.sessionStartTime);\\n      if (this.workspaceService.getIntacctOnboardingState() === IntacctOnboardingState.ADVANCED_CONFIGURATION) {\\n        this.trackingService.integrationsOnboardingCompletion(IntacctOnboardingState.ADVANCED_CONFIGURATION, 3, advancedSettingsPayload);\\n      } else {\\n        this.trackingService.intacctUpdateEvent(\\n          IntacctUpdateEvent.ADVANCED_SETTINGS_INTACCT,\\n          {\\n            phase: this.getPhase(),\\n            oldState: this.advancedSettings,\\n            newState: response\\n          }\\n        );\\n      }\\n      this.saveInProgress = false;\\n      if (this.isOnboarding) {\\n        this.workspaceService.setIntacctOnboardingState(IntacctOnboardingState.ADVANCED_CONFIGURATION);\\n        this.router.navigate([`/integrations/intacct/onboarding/done`]);\\n      }\\n    }, () => {\\n      this.saveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving advanced settings, please try again later\');\\n      });\\n  }\\n\\n  getAdminEmails() {\\n    this.isLoading= true;\\n    this.advancedSettingsService.getAdditionalEmails().subscribe((emailResponse: EmailOptions[]) => {\\n      this.adminEmails = emailResponse;\\n      this.getSettingsAndSetupForm();\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.getAdminEmails();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".container {\\n    display: flex;\\n    justify-content: center;\\n    border-radius: 8px;\\n    border: 1px solid var(--grayscale-light-border, #ECECEE);\\n    background: var(--grayscale-background, #FAFCFF);\\n    padding: 24px;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    // gap: 16px;\\n    max-width: auto; /* You can adjust this value as needed */\\n}\\n\\n.field-label {\\n    @apply tw-text-faded-text-color tw-text-14-px;\\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-items .p-multiselect-item .p-checkbox {\\n    @apply tw-mb-0 tw-mt-2-px #{!important};\\n}\\n\\np-dropdown .p-dropdown-open {\\n    width: 360px !important;\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n","styleUrl":"./configuration-advanced-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"advancedSettingsService","type":"SiAdvancedSettingService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""}],"line":97,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"advancedSettingsService","type":"SiAdvancedSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n    <app-configuration-step-header \\n    [headerText]=\\"\'Advanced Settings\'\\"\\n    [contentText]=\\"\'In this section, you can customize the integration based on your accounting requirements.\'\\"\\n    [redirectLink]=\\"redirectLink\\"\\n    [showSyncButton]=\\"isOnboarding\\"\\n    [appName]=\\"appName\\"\\n    (refreshDimension)=\\"refreshDimensions($event)\\"></app-configuration-step-header>\\n    </div>\\n\\n    <form [formGroup]=\\"advancedSettingsForm\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-mb-16-px\\">\\n            <div class=\\"container\\">\\n                <div class=\\"sub-text\\">\\n                    <h4 class=\\"tw-text-16-px !tw-font-500 \\">Automation</h4>\\n                    <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\">\\n                        You can automate the export and sync of your data in this section.\\n                    </h5>\\n                </div>\\n            </div>\\n            <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                <app-configuration-select-field\\n                    [form]=\\"advancedSettingsForm\\"\\n                    [isFieldMandatory]=\\"false\\"\\n                    [mandatoryErrorListName]=\\"\'automatic export method\'\\"\\n                    [label]=\\"\'Schedule Automatic Export\'\\"\\n                    [subLabel]=\\"\'Set a frequency based on how often you want your expenses in \' + brandingConfig.brandName + \' to be exported to Sage Intacct.\'\\"\\n                    [options]=\\"hours\\"\\n                    [iconPath]=\\"\'email\'\\"\\n                    [showClearIcon]=\\"true\\"\\n                    [placeholder]=\\"\'Set Schedule\'\\"\\n                    [formControllerName]=\\"\'scheduleAutoExport\'\\">\\n                </app-configuration-select-field>\\n                <app-email-multi-select-field\\n                    [form]=\\"advancedSettingsForm\\"\\n                    [label]=\\"\'Send Error Notification to\'\\"\\n                    [isFieldMandatory]=\\"false\\"\\n                    [mandatoryErrorListName]=\\"\'email for error notification\'\\"\\n                    [subLabel]=\\"\'Select or add an email address to notify upon import failure or integration error.\'\\"\\n                    [options]=\\"adminEmails\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [placeholder]=\\"\'Select email address\'\\"\\n                    [formControllerName]=\\"\'email\'\\">\\n                </app-email-multi-select-field>\\n            </div>\\n            <div *ngIf=\\"reimbursableExpense===\'EXPENSE_REPORT\' || reimbursableExpense===\'BILL\'\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                <app-configuration-select-field\\n                [form]=\\"advancedSettingsForm\\"\\n                [isFieldMandatory]=\\"false\\"\\n                [mandatoryErrorListName]=\\"\'payment sync method\'\\"\\n                [label]=\\"\'Auto-Sync Payment Status for Reimbursable Expenses\'\\"\\n                [subLabel]=\\"\'You can set the sync preference based on whether you are handling the payments for your employees within \' + brandingConfig.brandName + \' or outside \' + brandingConfig.brandName + \'.\'\\"\\n                [options]=\\"paymentSyncOptions\\"\\n                [iconPath]=\\"\'synced\'\\"\\n                [placeholder]=\\"\'Select payment sync method\'\\"\\n                [formControllerName]=\\"\'autoSyncPayments\'\\"></app-configuration-select-field>\\n                <div *ngIf=\\"isCCT()\\">\\n                    <app-configuration-select-field\\n                    [form]=\\"advancedSettingsForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [mandatoryErrorListName]=\\"\'payment account\'\\"\\n                    [label]=\\"\'Select Payment Account\'\\"\\n                    [subLabel]=\\"\'Select a Payment Account handling the payments for your employees within \' + brandingConfig.brandName + \' or outside \' + brandingConfig.brandName + \'.\'\\"\\n                    [destinationAttributes]=\\"sageIntacctPaymentAccount\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [placeholder]=\\"\'Select Payment Account\'\\"\\n                    [formControllerName]=\\"\'defaultPaymentAccount\'\\"></app-configuration-select-field>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\"tw-mb-16-px\\">\\n            <div class=\\"container\\">\\n                <div class=\\"sub-text\\">\\n                    <h4 class=\\"tw-text-16-px !tw-font-500 \\">Other Preferences</h4>\\n                    <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-10-px !tw-font-400 !tw-leading-4 tw-pb-4\\">\\n                        Based on your preference, you can choose whether you want to create any new records in Sage Intacct from {{brandingConfig.brandName}} (when there is no employee record found, or when the accounting period is closed.)\\n                    </h5>\\n                </div>\\n            </div>\\n            <div *ngIf=\\"employeeFieldMapping\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                <app-configuration-toggle-field \\n                [form]=\\"advancedSettingsForm\\"\\n                [label]=\\"\'Auto-Create \' + getEmployeeField()\\" \\n                [subLabel]=\\"\'When matching \' + getEmployeeField() +\' record is not found for an employee in \' + brandingConfig.brandName + \', the integration will auto-create a new record in Sage Intacct.\'\\"\\n                [formControllerName]=\\"\'autoCreateEmployeeVendor\'\\"></app-configuration-toggle-field>\\n            </div>\\n            <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                <app-configuration-toggle-field \\n                [form]=\\"advancedSettingsForm\\"\\n                [label]=\\"\'Post Entries in the Current Accounting Period\'\\" \\n                [subLabel]=\\"\'If there are expenses for which the accounting period is closed in Sage Intacct, you can export those to the current month by enabling this option.\'\\" \\n                [formControllerName]=\\"\'postEntriesCurrentPeriod\'\\"></app-configuration-toggle-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\"tw-mb-16-px\\">\\n            <div class=\\"container\\">\\n                <div class=\\"sub-text\\">\\n                    <h4 class=\\"tw-text-16-px !tw-font-500 \\">Customization</h4>\\n                    <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-10-px !tw-font-400 !tw-leading-4 tw-pb-4\\">\\n                        In this section, you can customize the data that you\'d like to export from {{brandingConfig.brandName}} to Sage Intacct. You can choose what data points need to be exported and what shouldn\'t be.\\n                    </h5>\\n                </div>\\n            </div>\\n            <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                <app-configuration-multi-select\\n                [form]=\\"advancedSettingsForm\\"\\n                [label]=\\"\'Set the Description Field in Sage Intacct\'\\"\\n                [subLabel]=\\"\'You can choose from a list of available data points that you would like to export to the description field in Sage Intacct and re-order them as per your requirement.\'\\"\\n                [options]=\\"defaultMemoFields\\"\\n                [iconPath]=\\"\'expense\'\\"\\n                [placeholder]=\\"\'Select Description\'\\"\\n                [formControllerName]=\\"\'setDescriptionField\'\\"></app-configuration-multi-select>\\n                <div class=\\"tw-pl-60-px tw-pr-24-px tw-pb-24-px\\">\\n                    <p class=\\"tw-text-14-px tw-mb-12-px tw-text-faded-text-color\\">Preview of the Description Field</p>\\n                    <div class=\\"tw-bg-disabled-bg-color tw-rounded-4-px tw-text-14-px tw-py-10-px tw-px-16-px tw-text-faded-text-color\\">\\n                        <span>{{ memoPreviewText }}</span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                <app-configuration-toggle-field \\n                [form]=\\"advancedSettingsForm\\"\\n                [label]=\\"\'Skip Selective Expenses from being Exported to Sage Intacct\'\\" \\n                [subLabel]=\\"\'The integration will export all the expenses once they reach their export state. If you would like to skip few expenses from being exported, set up a conditional rule here.\'\\" \\n                [redirectLink]=\\"intacctLink\\"\\n                [formControllerName]=\\"\'skipSelectiveExpenses\'\\"></app-configuration-toggle-field>\\n                <div *ngIf=\\"advancedSettingsForm.value.skipSelectiveExpenses\\">\\n                    <app-skip-export\\n                    #skipExportChild\\n                    [enableSkipExport]=\\"advancedSettingsForm.value.skipSelectiveExpenses\\" \\n                    [skipExportForm]=\\"skipExportForm\\" \\n                    (skipExportFormChange)=\\"updateForm($event)\\">\\n                  </app-skip-export>                  \\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\"tw-mb-16-px\\">\\n            <div class=\\"container\\">\\n                <div class=\\"sub-text\\">\\n                    <h4 class=\\"tw-text-16-px !tw-font-500 \\">Default Field Values</h4>\\n                    <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\">\\n                        If you\'ve made a field mandatory in Sage Intacct but don\'t collect a value from your employees in the expense form, you can set a default value here to be added to all the expenses. For Location and Department, you can opt to use the values from your employee records in Sage Intacct.\\n                    </h5>\\n                </div>\\n            </div>\\n            <div class=\\"tw-pt-28-px tw-pl-6 field-label\\">\\n                <div><label>Default Location</label></div>\\n                <div class=\\"tw-pt-2\\">\\n                    <p-dropdown appendTo=\\"body\\" [options]=\\"sageIntacctLocations\\" optionLabel=\\"value\\" \\n                    formControlName=\\"defaultLocation\\" placeholder=\\"Select Location\\" [ngClass]=\\"{\'selectedItem\': advancedSettingsForm.controls.defaultLocation.value, \'filterDropdown\': !advancedSettingsForm.controls.defaultLocation.value}\\">\\n                        <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                                <span>\\n                                    {{ item.value }}\\n                                </span>\\n                                <i class=\\"pi pi-times\\" (click)=\\"removeFilter(advancedSettingsForm.controls.defaultLocation)\\"></i>\\n                            </div>\\n                        </ng-template>\\n                    </p-dropdown>\\n                    <span class=\\"tw-pl-24-px\\">\\n                        <input formControlName=\\"useEmployeeLocation\\" type=\\"checkbox\\" />\\n                        <label class=\\"tw-pl-8-px\\" for=\\"checkbox\\">Use Employee\'s Location in Sage Intacct</label>\\n                    </span>\\n                </div>  \\n              </div>\\n\\n              <div class=\\"tw-pt-20-px tw-pl-6 field-label\\">\\n                <div><label>Default Department</label></div>\\n                <div class=\\"tw-pt-2\\">\\n                  <p-dropdown appendTo=\\"body\\" [options]=\\"sageIntacctDepartments\\" optionLabel=\\"value\\"\\n                  formControlName=\\"defaultDepartment\\" placeholder=\\"Select Department\\" [ngClass]=\\"{\'selectedItem\': advancedSettingsForm.controls.defaultDepartment.value, \'filterDropdown\': !advancedSettingsForm.controls.defaultDepartment.value}\\">\\n                        <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                                <span>\\n                                    {{ item.value }}\\n                                </span>\\n                                <i class=\\"pi pi-times\\" (click)=\\"removeFilter(advancedSettingsForm.controls.defaultDepartment)\\"></i>\\n                            </div>\\n                        </ng-template>\\n                    </p-dropdown>\\n                    <span class=\\"tw-pl-24-px\\">\\n                        <input formControlName=\\"useEmployeeDepartment\\" type=\\"checkbox\\" />\\n                        <label class=\\"tw-pl-8-px\\" for=\\"checkbox\\">Use Employee\'s Department in Sage Intacct</label>\\n                    </span>\\n                </div>  \\n              </div> \\n\\n              <div class=\\"tw-pt-20-px tw-pl-6 field-label\\">\\n                <div><label>Default Project</label></div>\\n                <div class=\\"tw-pt-2\\">\\n                  <p-dropdown appendTo=\\"body\\" [options]=\\"sageIntacctProjects\\" optionLabel=\\"value\\"\\n                  formControlName=\\"defaultProject\\" placeholder=\\"Select Project\\" [ngClass]=\\"{\'selectedItem\': advancedSettingsForm.controls.defaultProject.value, \'filterDropdown\': !advancedSettingsForm.controls.defaultProject.value}\\">\\n                        <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                                <span>\\n                                    {{ item.value }}\\n                                </span>\\n                                <i class=\\"pi pi-times\\" (click)=\\"removeFilter(advancedSettingsForm.controls.defaultProject)\\"></i>\\n                            </div>\\n                        </ng-template>\\n                    </p-dropdown>\\n                </div>  \\n              </div> \\n\\n              <div class=\\"tw-pt-20-px tw-pl-6 field-label\\">\\n                <div><label>Default Class</label></div>\\n                <div class=\\"tw-pt-2\\">\\n                  <p-dropdown appendTo=\\"body\\" [options]=\\"sageIntacctClasses\\" optionLabel=\\"value\\"\\n                  formControlName=\\"defaultClass\\" placeholder=\\"Select Class\\" [ngClass]=\\"{\'selectedItem\': advancedSettingsForm.controls.defaultClass.value, \'filterDropdown\': !advancedSettingsForm.controls.defaultClass.value}\\">\\n                        <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                                <span>\\n                                    {{ item.value }}\\n                                </span>\\n                                <i class=\\"pi pi-times\\" (click)=\\"removeFilter(advancedSettingsForm.controls.defaultClass)\\"></i>\\n                            </div>\\n                        </ng-template>\\n                    </p-dropdown>\\n                </div>  \\n              </div> \\n\\n              <div class=\\"tw-pt-20-px tw-pl-6 field-label\\">\\n                <div><label>Default Items</label></div>\\n                <div class=\\"tw-pt-2\\">\\n                  <p-dropdown appendTo=\\"body\\" [options]=\\"sageIntacctDefaultItem\\" optionLabel=\\"value\\"\\n                  formControlName=\\"defaultItems\\" placeholder=\\"Select Item\\" [ngClass]=\\"{\'selectedItem\': advancedSettingsForm.controls.defaultItems.value, \'filterDropdown\': !advancedSettingsForm.controls.defaultItems.value}\\">\\n                        <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                                <span>\\n                                    {{ item.value }}\\n                                </span>\\n                                <i class=\\"pi pi-times\\" (click)=\\"removeFilter(advancedSettingsForm.controls.defaultItems)\\"></i>\\n                            </div>\\n                        </ng-template>\\n                    </p-dropdown>\\n                </div>  \\n              </div>\\n        </div>\\n    </div>\\n        <div>\\n            <app-configuration-step-footer [ctaText] = \\"!saveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!advancedSettingsForm.valid || (advancedSettingsForm.value.skipSelectiveExpenses ? !skipExportForm.valid : false)\\"></app-configuration-step-footer>\\n        </div>\\n    </form>\\n</div>"},{"name":"ConfigurationComponent","id":"component-ConfigurationComponent-058eb8c944186c3cb5a046e3b277447770dd0368afa8d73a428778d0a38481af8082746000f7224a9af8dd794e4f34baa7ae8191396c97f3c7966738d725c55f","file":"src/app/integrations/bamboo-hr/configuration/configuration.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration","styleUrls":["./configuration.component.scss"],"styles":[],"templateUrl":["./configuration.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"additionalEmails","deprecated":false,"deprecationMessage":"","line":20,"type":"EmailOption[]","decorators":[]},{"name":"bambooHrConfiguration","deprecated":false,"deprecationMessage":"","line":18,"type":"BambooHRConfiguration","decorators":[]},{"name":"isConfigurationSaveInProgress","deprecated":false,"deprecationMessage":"","line":22,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"updateConfiguration","defaultValue":"new EventEmitter<BambooHRConfigurationPost>()","deprecated":false,"deprecationMessage":"","line":24,"type":"EventEmitter"}],"propertiesClass":[{"name":"addEmailForm","defaultValue":"this.formBuilder.group({\\n    email: [null, Validators.compose([Validators.email, Validators.required])],\\n    name: [null, Validators.required]\\n  })","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":32},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39,"modifierKind":[148]},{"name":"cofigurationForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":30},{"name":"emails","deprecated":false,"deprecationMessage":"","type":"EmailOption[]","optional":false,"description":"","line":26},{"name":"org","defaultValue":"this.orgService.getCachedOrg()","deprecated":false,"deprecationMessage":"","type":"Org","optional":false,"description":"","line":41,"modifierKind":[123,148]},{"name":"selectedEmail","deprecated":false,"deprecationMessage":"","type":"string | null","optional":false,"description":"","line":28},{"name":"showDialog","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":37}],"methodsClass":[{"name":"addEmail","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":""},{"name":"assignSelectedEmail","args":[{"name":"emails","type":"EmailOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"emails","type":"EmailOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clearSearch","args":[{"name":"options","type":"DropdownFilterOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"options","type":"DropdownFilterOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"createEmailAdditionWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getEmailOptions","args":[{"name":"additionalEmails","type":"EmailOption[]","deprecated":false,"deprecationMessage":""},{"name":"adminEmails","type":"EmailOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"EmailOption[]","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"additionalEmails","type":"EmailOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"adminEmails","type":"EmailOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":""},{"name":"openDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":""},{"name":"removeEmail","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":""},{"name":"saveSettings","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { DropdownFilterOptions } from \'primeng/dropdown\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { BambooHRConfiguration, BambooHRConfigurationPost, BambooHrModel, EmailOption } from \'src/app/core/models/bamboo-hr/bamboo-hr.model\';\\nimport { ClickEvent } from \'src/app/core/models/enum/enum.model\';\\nimport { Org } from \'src/app/core/models/org/org.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { OrgService } from \'src/app/core/services/org/org.service\';\\n\\n@Component({\\n  selector: \'app-configuration\',\\n  templateUrl: \'./configuration.component.html\',\\n  styleUrls: [\'./configuration.component.scss\']\\n})\\nexport class ConfigurationComponent implements OnInit {\\n\\n  @Input() bambooHrConfiguration: BambooHRConfiguration;\\n\\n  @Input() additionalEmails: EmailOption[];\\n\\n  @Input() isConfigurationSaveInProgress: boolean;\\n\\n  @Output() updateConfiguration = new EventEmitter<BambooHRConfigurationPost>();\\n\\n  emails: EmailOption[];\\n\\n  selectedEmail: string | null;\\n\\n  cofigurationForm: FormGroup;\\n\\n  addEmailForm: FormGroup = this.formBuilder.group({\\n    email: [null, Validators.compose([Validators.email, Validators.required])],\\n    name: [null, Validators.required]\\n  });\\n\\n  showDialog: boolean;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  private readonly org: Org = this.orgService.getCachedOrg();\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private orgService: OrgService,\\n    private trackingService: TrackingService\\n  ) { }\\n\\n  clearSearch(options: DropdownFilterOptions): void {\\n    if (options.reset) {\\n      options.reset();\\n    }\\n    this.cofigurationForm.controls.search.reset();\\n  }\\n\\n  removeEmail(): void {\\n    const selectedEmails = this.cofigurationForm.value.emails;\\n    selectedEmails.splice(0, 1);\\n\\n    this.cofigurationForm.controls.emails.patchValue(selectedEmails);\\n    this.selectedEmail = this.cofigurationForm.value.emails.length ? this.cofigurationForm.value.emails[0].email : null;\\n  }\\n\\n  addEmail(): void {\\n    this.trackingService.onClickEvent(ClickEvent.ADD_BAMBOO_HR_EMAIL_MANUALLY);\\n    const selectedEmails = this.cofigurationForm.value.emails || [];\\n    selectedEmails.push(this.addEmailForm.value);\\n\\n    const additionalEmails = this.cofigurationForm.value.additionalEmails || [];\\n    additionalEmails.push(this.addEmailForm.value);\\n\\n    this.emails.push(this.addEmailForm.value);\\n\\n    this.cofigurationForm.controls.emails.patchValue(selectedEmails);\\n    this.cofigurationForm.controls.additionalEmails.patchValue(additionalEmails);\\n    this.addEmailForm.reset();\\n    this.showDialog = false;\\n  }\\n\\n  saveSettings(): void {\\n    if (!this.isConfigurationSaveInProgress) {\\n      const payload = BambooHrModel.constructBambooConfigurationPayload(this.cofigurationForm, this.org.id);\\n      this.updateConfiguration.emit(payload);\\n    }\\n  }\\n\\n  private assignSelectedEmail(emails: EmailOption[]): void {\\n    if (emails.length) {\\n      this.selectedEmail = emails[0].email;\\n    } else {\\n      this.selectedEmail = null;\\n    }\\n  }\\n\\n  private createEmailAdditionWatcher(): void {\\n    this.assignSelectedEmail(this.cofigurationForm.value.emails);\\n    this.cofigurationForm.controls.emails.valueChanges.subscribe((emails: EmailOption[]) => {\\n      this.assignSelectedEmail(emails);\\n    });\\n  }\\n\\n  private getEmailOptions(additionalEmails: EmailOption[], adminEmails: EmailOption[]): EmailOption[] {\\n    return additionalEmails.concat(adminEmails).filter((email: EmailOption, index: number, self: EmailOption[]) => {\\n      return index === self.findIndex((e: EmailOption) => {\\n        return e.email === email.email;\\n      });\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    this.cofigurationForm = this.formBuilder.group({\\n      additionalEmails: [this.bambooHrConfiguration?.additional_email_options ? this.bambooHrConfiguration.additional_email_options : []],\\n      emails: [this.bambooHrConfiguration?.emails_selected ? this.bambooHrConfiguration?.emails_selected : [], Validators.required],\\n      search: []\\n    });\\n\\n    this.emails = this.getEmailOptions(this.cofigurationForm.value.additionalEmails, this.additionalEmails);\\n\\n    this.createEmailAdditionWatcher();\\n  }\\n\\n  openDialog(): void {\\n    this.showDialog = true;\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".remove-bg {\\n        @apply tw-bg-none #{!important};\\n}\\n","styleUrl":"./configuration.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""}],"line":41,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div [formGroup]=\\"cofigurationForm\\" class=\\"tw-pt-70-px tw-flex tw-justify-center tw-items-center tw-flex-col\\">\\n    <div class=\\"tw-w-75-vw tw-rounded-12-px tw-border-1-px tw-border-separator tw-shadow-app-card\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <p class=\\"tw-text-18-px\\">Configuration</p>\\n            <p class=\\"tw-pt-8-px tw-text-14-px tw-text-sub-text-color\\">\\n                Setup your {{ brandingConfig.brandName}} Bamboo HR integration to sync employee details from Bamboo HR to {{ brandingConfig.brandName}} and notify admins when the import fails\\n            </p>\\n        </div>\\n\\n        <p class=\\"tw-h-1-px tw-w-[100%] tw-bg-separator\\"></p>\\n\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-rounded-12-px tw-border-1-px tw-border-disabled-bg-color\\">\\n                <div class=\\"tw-p-24-px\\">\\n                    <div class=\\"tw-flex tw-justify-between\\">\\n                        <div class=\\"tw-flex\\">\\n                            <svg-icon-sprite src=\\"document\\" width=\\"18px\\" height=\\"20px\\" class=\\"tw-text-mandatory-field-color tw-mr-20-px\\"></svg-icon-sprite>\\n                            <div class=\\"tw-text-14-px tw-w-360-px max-lg:tw-w-260-px\\">\\n                                <p class=\\"tw-text-slightly-normal-text-color\\">\\n                                    Send email notification to\\n                                </p>\\n                                <p class=\\"tw-text-faded-text-color tw-pt-8-px\\">\\n                                    Select or add an email address to notify upon import failure or integration error.\\n                                </p>\\n                            </div>\\n                        </div>\\n                        <div>\\n                            <p-multiSelect formControlName=\\"emails\\" styleClass=\\"tw-z-1 tw-w-27-vw max-lg:tw-w-20-vw tw-h-40-px\\" [options]=\\"emails\\" [filter]=\\"true\\"\\n                                [filterBy]=\\"\'email,name\'\\" defaultLabel=\\"Select Email Address\\" optionLabel=\\"email\\"\\n                                display=\\"chip\\">\\n                                <ng-template let-value pTemplate=\\"selectedItems\\">\\n                                    <div *ngIf=\\"selectedEmail\\"\\n                                        class=\\"tw-flex tw-text-12-px tw-h-22-px tw-rounded-12-px tw-text-slightly-normal-text-color tw-border-1-px tw-border-box-color tw-bg-white\\">\\n                                        <p class=\\"tw-pt-2-px tw-pl-12-px tw-pr-6-px\\">{{ selectedEmail }}</p>\\n                                        <p class=\\"tw-w-1-px tw-mr-8-px tw-bg-separator\\"></p>\\n                                        <svg-icon-sprite (click)=\\"removeEmail()\\" src=\\"close\\" width=\\"10px\\" height=\\"10px\\"\\n                                            class=\\"tw-pr-10-px tw-pt-6-px tw-text-slightly-normal-text-color\\"></svg-icon-sprite>\\n                                    </div>\\n                                    <div *ngIf=\\"selectedEmail && cofigurationForm.value.emails.length > 1\\" class=\\"tw-pl-8-px\\">\\n                                        <p class=\\"tw-flex tw-justify-center tw-items-center tw-p-5-px tw-h-24-px tw-w-24-px tw-bg-disabled-bg-color tw-text-12-px tw-text-faded-text-color tw-rounded-12-px\\">\\n                                            +{{ cofigurationForm.value.emails.length - 1 }}\\n                                        </p>\\n                                    </div>\\n                                    <div *ngIf=\\"!selectedEmail\\" class=\\"tw-text-placeholder\\">\\n                                        Select Email Address\\n                                    </div>\\n                                </ng-template>\\n                                <ng-template pTemplate=\\"filter\\" let-options=\\"options\\">\\n                                    <div *ngIf=\\"emails.length\\" class=\\"p-inputgroup\\">\\n                                        <div class=\\"p-input-icon-left\\">\\n                                            <i class=\\"pi pi-search\\"></i>\\n                                            <input type=\\"text\\" class=\\"!tw-h-32-px !tw-w-300-px\\" (keyup)=\\"options.filter($event)\\"\\n                                                pInputText placeholder=\\"Search by Name / Email\\" formControlName=\\"search\\" />\\n                                            <svg-icon-sprite *ngIf=\\"10 > 0\\" src=\\"clear\\" width=\\"16px\\" height=\\"16px\\"\\n                                                class=\\"tw-text-faded-text-color tw-absolute tw-top-10-px tw-right-12-px tw-cursor-pointer\\"\\n                                                (click)=\\"clearSearch(options)\\">\\n                                            </svg-icon-sprite>\\n                                        </div>\\n                                    </div>\\n                                </ng-template>\\n                                <ng-template let-user pTemplate=\\"item\\">\\n                                    <div>\\n                                        <p class=\\"tw-text-sub-text-color tw-text-14-px\\">{{ user.name }}</p>\\n                                        <p class=\\"tw-pt-4-px tw-text-placeholder tw-text-12-px\\">{{ user.email }}</p>\\n                                    </div>\\n                                </ng-template>\\n                            </p-multiSelect>\\n\\n                            <div class=\\"tw-flex tw-pt-24-px tw-w-27-vw max-lg:tw-w-20-vw\\">\\n                                <p class=\\"tw-text-slightly-normal-text-color tw-text-14-px tw-pr-12-px\\">or</p>\\n                                <div class=\\"tw-flex tw-cursor-pointer\\" (click)=\\"openDialog()\\">\\n                                    <svg-icon-sprite src=\\"add\\" width=\\"18px\\" height=\\"18px\\"\\n                                        class=\\"tw-text-mandatory-field-color\\">\\n                                    </svg-icon-sprite>\\n                                    <p class=\\"tw-pl-6-px tw-text-slightly-normal-text-color tw-text-14-px\\">Add new Email address</p>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <p class=\\"tw-h-1-px tw-w-[100%] tw-bg-separator\\"></p>\\n\\n        <div class=\\"tw-flex tw-justify-end tw-p-24-px\\">\\n            <div>\\n                <button [disabled]=\\"!cofigurationForm.valid\\" pButton type=\\"button\\" class=\\"remove-bg p-button-raised\\" [ngClass]=\\"isConfigurationSaveInProgress ? \'!tw-bg-cta-disabled !tw-cursor-no-drop\' : \'!tw-bg-mandatory-field-color\'\\" (click)=\\"saveSettings()\\">\\n                    {{ isConfigurationSaveInProgress ? \'Saving\': \'Save\' }}\\n                    <app-loader class=\\"tw-ml-10-px\\" *ngIf=\\"isConfigurationSaveInProgress\\" [styleClass]=\\"\'spinner-16-white tw-top-2-px\'\\"></app-loader>\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<p-dialog [dismissableMask]=\\"true\\" [showHeader]=\\"false\\" [modal]=\\"true\\" [(visible)]=\\"showDialog\\" [draggable]=\\"false\\" [style]=\\"{width: \'468px\'}\\">\\n    <div class=\\"tw-pt-34-px tw-px-40-px\\" [formGroup]=\\"addEmailForm\\">\\n        <p class=\\"tw-text-slightly-normal-text-color tw-text-24-px tw-font-500\\">Add new Email Address</p>\\n        <p class=\\"tw-pt-10-px tw-text-faded-text-color tw-text-12-px\\">\\n            Add an email address on which you would like to recieve your integration notifcation mails.\\n        </p>\\n\\n        <div class=\\"tw-pt-24-px\\">\\n            <p class=\\"tw-text-sub-text-color tw-text-14-px tw-pb-8-px\\">\\n                Name <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n            </p>\\n            <input formControlName=\\"name\\" type=\\"text\\" class=\\"tw-w-388-px tw-h-48-px\\" pInputText placeholder=\\"Enter name\\" />\\n\\n            <p class=\\"tw-pt-16-px tw-pb-8-px tw-text-sub-text-color tw-text-14-px\\">\\n                Email Address <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n            </p>\\n\\n            <div class=\\"tw-flex\\">\\n                <input formControlName=\\"email\\" type=\\"text\\" class=\\"tw-w-388-px tw-h-48-px\\" pInputText placeholder=\\"Enter name\\" />\\n            </div>\\n\\n            <div class=\\"tw-flex tw-items-center tw-pt-24-px tw-pb-40-px\\">\\n                <button pButton type=\\"button\\" class=\\"p-button-raised\\" [disabled]=\\"!addEmailForm.valid\\" (click)=\\"addEmail()\\">\\n                    Save\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</p-dialog>\\n"},{"name":"ConfigurationComponent","id":"component-ConfigurationComponent-af0ad50897274d59f5b30e90f754cd389a293ddf8f1a245664237feae8421b9faae7c5b4eb4b736187c8893bf8b1ff42f3b2b6b8dcf6526b1c8deb24a695a471-1","file":"src/app/integrations/qbd/main/configuration/configuration.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration","styleUrls":["./configuration.component.scss"],"styles":[],"templateUrl":["./configuration.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":20},{"name":"modules","defaultValue":"[\\n    {label: \'Export Settings\', routerLink: \'/integrations/qbd/main/configuration/export_settings\'},\\n    {label: \'Field Mapping\', routerLink: \'/integrations/qbd/main/configuration/field_mapping\'},\\n    {label: \'Advanced Settings\', routerLink: \'/integrations/qbd/main/configuration/advanced_settings\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":14}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\nimport { ClickEvent, Page } from \'src/app/core/models/enum/enum.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\n\\n@Component({\\n  selector: \'app-configuration\',\\n  templateUrl: \'./configuration.component.html\',\\n  styleUrls: [\'./configuration.component.scss\']\\n})\\nexport class ConfigurationComponent implements OnInit {\\n\\n  modules: MenuItem[] = [\\n    {label: \'Export Settings\', routerLink: \'/integrations/qbd/main/configuration/export_settings\'},\\n    {label: \'Field Mapping\', routerLink: \'/integrations/qbd/main/configuration/field_mapping\'},\\n    {label: \'Advanced Settings\', routerLink: \'/integrations/qbd/main/configuration/advanced_settings\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n  ngOnInit(): void {\\n    this.activeModule = this.modules[0];\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\\n    background-color: transparent;\\n    @apply tw-px-24-px tw-py-12-px tw-mx-10-px tw-mt-0 tw-border-x-box-color tw-border-t-box-color tw-border-t tw-border-x tw-rounded-t-lg #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link:not(.p-disabled):hover {\\n    @apply tw-text-slightly-normal-text-color tw-border-b-transparent tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover .p-menuitem-link{\\n    background-color: transparent !important;\\n    @apply tw-border-b-transparent tw-font-500 #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link:not(.p-highlight):hover{\\n    @apply tw-border-b-transparent tw-font-500 tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav {\\n    background-color: transparent;\\n    @apply tw-border-b tw-border-b-box-color #{!important};\\n}","styleUrl":"./configuration.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"ConfigurationComponent-1","templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-py-40-px\\">\\n    <div class=\\"tw-px-110-px\\">\\n        <p-tabMenu [model]=\\"modules\\" [activeItem]=\\"activeModule\\"></p-tabMenu>\\n    </div>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>"},{"name":"ConfigurationComponent","id":"component-ConfigurationComponent-12039593416f3b2d1649ae249cd7291f05ed09e7076fd7499214a01aea1152b77e50e9206e83af05b4e11f810430382a12766e00cc7107fbeab4d65862967415-2","file":"src/app/integrations/si/main/configuration/configuration.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration","styleUrls":["./configuration.component.scss"],"styles":[],"templateUrl":["./configuration.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":18},{"name":"modules","defaultValue":"[\\n    {label: \'Export Settings\', routerLink: \'/integrations/intacct/main/configuration/export_settings\'},\\n    {label: \'Import Settings\', routerLink: \'/integrations/intacct/main/configuration/import_settings\'},\\n    {label: \'Advanced Settings\', routerLink: \'/integrations/intacct/main/configuration/advanced_settings\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":12}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\n\\n@Component({\\n  selector: \'app-configuration\',\\n  templateUrl: \'./configuration.component.html\',\\n  styleUrls: [\'./configuration.component.scss\']\\n})\\nexport class ConfigurationComponent implements OnInit {\\n\\n  modules: MenuItem[] = [\\n    {label: \'Export Settings\', routerLink: \'/integrations/intacct/main/configuration/export_settings\'},\\n    {label: \'Import Settings\', routerLink: \'/integrations/intacct/main/configuration/import_settings\'},\\n    {label: \'Advanced Settings\', routerLink: \'/integrations/intacct/main/configuration/advanced_settings\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n  ngOnInit(): void {\\n    this.activeModule = this.modules[0];\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\\n    background-color: transparent;\\n    @apply tw-px-24-px tw-py-12-px tw-mx-10-px tw-mt-0 tw-border-x-box-color tw-border-t-box-color tw-border-t tw-border-x tw-rounded-t-lg #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link:not(.p-disabled):hover {\\n    @apply tw-text-slightly-normal-text-color tw-border-b-transparent tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover .p-menuitem-link{\\n    background-color: transparent !important;\\n    @apply tw-border-b-transparent tw-font-500 #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link:not(.p-highlight):hover{\\n    @apply tw-border-b-transparent tw-font-500 tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav {\\n    background-color: transparent;\\n    @apply tw-border-b tw-border-b-box-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem {\\n    margin-right: -10px;\\n}","styleUrl":"./configuration.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":18,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":2,"duplicateName":"ConfigurationComponent-2","templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-py-40-px\\">\\n    <div class=\\"tw-px-110-px\\">\\n        <p-tabMenu [model]=\\"modules\\" [activeItem]=\\"activeModule\\"></p-tabMenu>\\n    </div>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>"},{"name":"ConfigurationConfirmationDialogComponent","id":"component-ConfigurationConfirmationDialogComponent-43447e9fabe69dbada4223915d92c37bb423dfd31a01b766ef7d20753ecb804a4ad0d2eeb8061486d95363890e1044bb69978ff092e4b930033206a267fb3b94","file":"src/app/shared/components/configuration/configuration-confirmation-dialog/configuration-confirmation-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-confirmation-dialog","styleUrls":["./configuration-confirmation-dialog.component.scss"],"styles":[],"templateUrl":["./configuration-confirmation-dialog.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"confirmBtnText","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]},{"name":"contextText","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"event","deprecated":false,"deprecationMessage":"","line":24,"type":"ConfigurationWarningEvent","decorators":[]},{"name":"headerText","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"iconPath","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"isWarningVisible","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"showSecondaryCTA","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":22,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"warningAccepted","defaultValue":"new EventEmitter<ConfigurationWarningOut>()","deprecated":false,"deprecationMessage":"","line":26,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"acceptWarning","args":[{"name":"isWarningAccepted","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isWarningAccepted","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { ConfigurationWarningEvent } from \'src/app/core/models/enum/enum.model\';\\nimport { ConfigurationWarningOut } from \'src/app/core/models/misc/configuration-warning.model\';\\n\\n@Component({\\n  selector: \'app-configuration-confirmation-dialog\',\\n  templateUrl: \'./configuration-confirmation-dialog.component.html\',\\n  styleUrls: [\'./configuration-confirmation-dialog.component.scss\']\\n})\\nexport class ConfigurationConfirmationDialogComponent implements OnInit {\\n\\n  @Input() isWarningVisible: boolean;\\n\\n  @Input() headerText: string;\\n\\n  @Input() contextText: string;\\n\\n  @Input() iconPath: string;\\n\\n  @Input() confirmBtnText: string;\\n\\n  @Input() showSecondaryCTA: boolean = true;\\n\\n  @Input() event: ConfigurationWarningEvent;\\n\\n  @Output() warningAccepted = new EventEmitter<ConfigurationWarningOut>();\\n\\n  constructor() { }\\n\\n  acceptWarning(isWarningAccepted: boolean) {\\n    this.warningAccepted.emit({hasAccepted: isWarningAccepted, event: this.event});\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-button {\\n    @apply tw-w-fit #{!important};\\n}\\n\\n.save-btn {\\n    @apply tw-border tw-bg-mandatory-field-color tw-rounded-4-px #{!important};\\n}\\n\\n.cancel-btn {\\n    @apply tw-py-10-px tw-px-16-px tw-border tw-border-box-color tw-bg-white tw-rounded-4-px tw-text-slightly-normal-text-color tw-mr-16-px #{!important};\\n}","styleUrl":"./configuration-confirmation-dialog.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":26},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <p-dialog [showHeader]=\\"false\\" [modal]=\\"true\\" [(visible)]=\\"isWarningVisible\\" [draggable]=\\"false\\" [style]=\\"{width: \'468px\'}\\">\\n        <div class=\\"tw-px-24-px tw-py-22-px tw-border-b-1-px tw-border-b-box-color\\">\\n            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                <div class=\\"tw-flex\\">\\n                    <img [src]=\\"iconPath\\" class=\\"tw-pr-12-px\\"/>\\n                    <p class=\\"tw-text-20-px tw-font-500 tw-text-normal-text-color\\">{{headerText}}</p>\\n                </div>\\n                <i class=\\"pi pi-times tw-cursor-pointer\\" style=\\"font-size: 12px\\" (click)=\\"acceptWarning(false)\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\"tw-pl-24-px tw-pr-10-px tw-pt-16-px tw-pb-24-px\\">\\n            <div class=\\"tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color\\" [innerHTML]=\\"contextText\\">\\n            </div>\\n            <div class=\\"tw-pt-26-px tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color\\">\\n                Are you sure you want to continue?\\n            </div>\\n        </div>\\n        <div class=\\"tw-flex tw-justify-end tw-text-14-px tw-border-t-1-px tw-px-24-px tw-py-16-px\\">\\n            <button *ngIf=\\"showSecondaryCTA\\" type=\\"button\\" class=\\"cancel-btn\\" (click)=\\"acceptWarning(false)\\">\\n                Cancel\\n            </button>\\n            <button type=\\"button\\" class=\\"save-btn\\" pButton (click)=\\"acceptWarning(true)\\">\\n                {{confirmBtnText}}\\n            </button>\\n        </div>\\n    </p-dialog>\\n</div>\\n"},{"name":"ConfigurationConnectorComponent","id":"component-ConfigurationConnectorComponent-bec540894c88bd1173c93e0ff111e8f90fa3a24bc1a94df878d04099c095a207ec23972e6120792e729e82c5bfcdf072dd4ae11a03aeb1fe79a49c36d4e89b68","file":"src/app/shared/components/configuration/configuration-connector/configuration-connector.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-connector","styleUrls":["./configuration-connector.component.scss"],"styles":[],"templateUrl":["./configuration-connector.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"accountingAppTitle","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"accountingCompanyConnectionInProgress","deprecated":false,"deprecationMessage":"","line":21,"type":"boolean","decorators":[]},{"name":"accountingCompanyName","deprecated":false,"deprecationMessage":"","line":15,"type":"string | null","decorators":[]},{"name":"accountingCompanyTokenExpired","deprecated":false,"deprecationMessage":"","line":23,"type":"boolean","decorators":[]},{"name":"fyleOrgName","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"isAccountingCompanyConnected","deprecated":false,"deprecationMessage":"","line":19,"type":"boolean","decorators":[]},{"name":"showDisconnect","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[]},{"name":"switchLinkText","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]}],"outputsClass":[{"name":"connectCompany","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":29,"type":"EventEmitter"},{"name":"switchCompany","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":27,"type":"EventEmitter"}],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31,"modifierKind":[148]}],"methodsClass":[{"name":"connect","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":""},{"name":"disconnect","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, INJECTOR, Input, OnInit, Output } from \'@angular/core\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-configuration-connector\',\\n  templateUrl: \'./configuration-connector.component.html\',\\n  styleUrls: [\'./configuration-connector.component.scss\']\\n})\\nexport class ConfigurationConnectorComponent implements OnInit {\\n\\n  @Input() fyleOrgName: string;\\n\\n  @Input() accountingAppTitle: string;\\n\\n  @Input() accountingCompanyName: string | null;\\n\\n  @Input() switchLinkText: string;\\n\\n  @Input() isAccountingCompanyConnected: boolean;\\n\\n  @Input() accountingCompanyConnectionInProgress: boolean;\\n\\n  @Input() accountingCompanyTokenExpired: boolean;\\n\\n  @Input() showDisconnect: boolean;\\n\\n  @Output() switchCompany = new EventEmitter();\\n\\n  @Output() connectCompany = new EventEmitter();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor() { }\\n\\n  disconnect() {\\n    this.switchCompany.emit();\\n  }\\n\\n  connect() {\\n    this.connectCompany.emit();\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".right-margin-style {\\n    margin-right: -50px;\\n}\\n\\n.left-margin-style {\\n    margin-left: -50px;\\n}","styleUrl":"./configuration-connector.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":31},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-justify-center tw-items-center\\">\\n    <div class=\\"tw-text-center tw-py-80-px tw-pr-130-px tw-border-r-1-px  right-margin-style tw-items-center\\">\\n        <h5 class=\\"tw-text-14-px tw-text-sub-text-color tw-font-500 tw-pb-18-px\\">\\n            {{brandingConfig.brandName}}\\n        </h5>\\n        <h3 class=\\"tw-text-18-px tw-text-normal-text-color tw-font-500 tw-pb-16-px\\">\\n            {{ fyleOrgName }}\\n        </h3>\\n    </div>\\n    <div>\\n        <img src=\\"assets/gifs/disconnect.gif\\" height=\\"100px\\" width=\\"100px\\"/>\\n    </div>\\n    <div class=\\"tw-text-center tw-py-70-px tw-pl-130-px left-margin-style tw-items-center\\">\\n        <h5 class=\\"tw-text-14-px tw-text-sub-text-color tw-font-500 tw-pb-18-px\\">\\n            {{ accountingAppTitle }}\\n        </h5>\\n        <h3 *ngIf=\\"!accountingCompanyConnectionInProgress && accountingCompanyName\\" class=\\"tw-text-18-px tw-text-normal-text-color tw-font-500 tw-pb-16-px\\">\\n            {{ accountingCompanyName }}\\n        </h3>\\n        <div *ngIf=\\"accountingCompanyConnectionInProgress\\" class=\\"tw-pb-8-px\\">\\n            <app-loader [styleClass]=\\"\'!tw-w-16-px !tw-h-16-px spinner-default\'\\"></app-loader>\\n        </div>\\n        <div class=\\"tw-text-14-px tw-font-500\\">\\n            <h4 *ngIf=\\"!isAccountingCompanyConnected && !accountingCompanyConnectionInProgress && !accountingCompanyTokenExpired\\" class=\\"tw-text-faded-text-color \\">\\n                No {{ accountingAppTitle }} is connected yet.\\n            </h4>\\n            <h4 *ngIf=\\"!isAccountingCompanyConnected && !accountingCompanyConnectionInProgress && !accountingCompanyTokenExpired\\" (click)=\\"connect()\\" class=\\"tw-text-mandatory-field-color tw-cursor-pointer\\">\\n                Connect to {{ accountingAppTitle }}\\n            </h4>\\n            <h4 *ngIf=\\"!accountingCompanyConnectionInProgress && !accountingCompanyTokenExpired && showDisconnect\\" class=\\"tw-text-faded-text-color\\">\\n                Not the company that you wish to connect with?\\n            </h4>\\n            <h4 *ngIf=\\"accountingCompanyConnectionInProgress\\" class=\\"tw-text-faded-text-color tw-max-w-300-px tw-overflow-hidden tw-break-all\\">\\n                Please hold on; we are fetching data from your {{ accountingAppTitle }} account, which may take a few seconds.\\n            </h4>\\n            <h4 *ngIf=\\"accountingCompanyTokenExpired && !accountingCompanyConnectionInProgress\\" class=\\"tw-text-faded-text-color \\">\\n                Token expired\\n            </h4>\\n            <h4 *ngIf=\\"!accountingCompanyConnectionInProgress && accountingCompanyTokenExpired\\" (click)=\\"connect()\\" class=\\"tw-text-mandatory-field-color tw-cursor-pointer\\">\\n                Re-Connect to {{ accountingAppTitle }}\\n            </h4>\\n            <h4 *ngIf=\\"!accountingCompanyConnectionInProgress && showDisconnect\\" (click)=\\"disconnect()\\" class=\\"tw-text-mandatory-field-color tw-cursor-pointer\\">\\n                {{ switchLinkText }}\\n            </h4>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"ConfigurationCustomFieldCreationDialogComponent","id":"component-ConfigurationCustomFieldCreationDialogComponent-31c23fd8c5113777a38f8d288129242523e9ba05703aff1a8bec0d15ad9a726fc997a15c83155b0c0e68fcf72cdf800ecaf5e1bd2c0096677a42fa9979107939","file":"src/app/shared/components/configuration/configuration-custom-field-creation-dialog/configuration-custom-field-creation-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-custom-field-creation-dialog","styleUrls":["./configuration-custom-field-creation-dialog.component.scss"],"styles":[],"templateUrl":["./configuration-custom-field-creation-dialog.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"customFieldForm","deprecated":false,"deprecationMessage":"","line":12,"type":"FormGroup","decorators":[]},{"name":"showCustomFieldCreationDialog","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"closeModelFn","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":18,"type":"EventEmitter"},{"name":"saveCustomFieldFn","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":16,"type":"EventEmitter"}],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22,"modifierKind":[148]},{"name":"existingFields","defaultValue":"[\'employee id\', \'organisation name\', \'employee name\', \'employee email\', \'expense date\', \'expense date\', \'expense id\', \'report id\', \'employee id\', \'department\', \'state\', \'reporter\', \'report\', \'purpose\', \'vendor\', \'category\', \'category code\', \'mileage distance\', \'mileage unit\', \'flight from city\', \'flight to city\', \'flight from date\', \'flight to date\', \'flight from class\', \'flight to class\', \'hotel checkin\', \'hotel checkout\', \'hotel location\', \'hotel breakfast\', \'currency\', \'amount\', \'foreign currency\', \'foreign amount\', \'tax\', \'approver\', \'project\', \'billable\', \'cost center\', \'cost center code\', \'approved on\', \'reimbursable\', \'receipts\', \'paid date\', \'expense created date\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":20}],"methodsClass":[{"name":"closeModel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""},{"name":"saveCustomField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-configuration-custom-field-creation-dialog\',\\n  templateUrl: \'./configuration-custom-field-creation-dialog.component.html\',\\n  styleUrls: [\'./configuration-custom-field-creation-dialog.component.scss\']\\n})\\nexport class ConfigurationCustomFieldCreationDialogComponent implements OnInit {\\n\\n  @Input() customFieldForm: FormGroup;\\n\\n  @Input() showCustomFieldCreationDialog: boolean;\\n\\n  @Output() saveCustomFieldFn = new EventEmitter();\\n\\n  @Output() closeModelFn = new EventEmitter();\\n\\n  existingFields: string[] = [\'employee id\', \'organisation name\', \'employee name\', \'employee email\', \'expense date\', \'expense date\', \'expense id\', \'report id\', \'employee id\', \'department\', \'state\', \'reporter\', \'report\', \'purpose\', \'vendor\', \'category\', \'category code\', \'mileage distance\', \'mileage unit\', \'flight from city\', \'flight to city\', \'flight from date\', \'flight to date\', \'flight from class\', \'flight to class\', \'hotel checkin\', \'hotel checkout\', \'hotel location\', \'hotel breakfast\', \'currency\', \'amount\', \'foreign currency\', \'foreign amount\', \'tax\', \'approver\', \'project\', \'billable\', \'cost center\', \'cost center code\', \'approved on\', \'reimbursable\', \'receipts\', \'paid date\', \'expense created date\'];\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor() { }\\n\\n  saveCustomField() {\\n    this.saveCustomFieldFn.emit();\\n  }\\n\\n  closeModel() {\\n    this.closeModelFn.emit();\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".label-content {\\n    @apply tw-bg-disabled-bg-color tw-border tw-border-box-color tw-rounded-4-px tw-h-100-px ;\\n}\\n  \\n.name-text {\\n    @apply tw-pt-12-px tw-pr-0 tw-pb-8-px tw-pl-16-px ;\\n}\\n\\n.form-field {\\n    @apply tw-pt-8-px tw-pr-16-px tw-pl-16-px tw-pb-22-px ;\\n}\\n\\n.form-input {\\n    @apply tw-pt-10-px tw-pr-0 tw-pb-10-px tw-pl-14-px tw-h-40-px tw-bg-white tw-border tw-border-box-color tw-box-border tw-rounded-8-px ;\\n}\\n\\n.save-btn {\\n    @apply tw-border tw-bg-mandatory-field-color tw-rounded-4-px #{!important};\\n}\\n\\n.cancel-btn {\\n    @apply tw-py-10-px tw-px-16-px tw-border tw-border-box-color tw-bg-white tw-rounded-4-px tw-text-slightly-normal-text-color tw-mr-16-px #{!important};\\n}\\n\\n:host ::ng-deep .p-button {\\n    @apply tw-w-fit #{!important};\\n}\\n\\n.form-input-disabled {\\n    \\n    @apply tw-pt-10-px tw-pr-0 tw-pb-10-px tw-pl-14-px tw-bg-disabled-bg-color tw-border tw-border-box-color tw-box-border tw-rounded-8-px ;\\n}","styleUrl":"./configuration-custom-field-creation-dialog.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":22},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <p-dialog [dismissableMask]=\\"true\\" [showHeader]=\\"false\\" [modal]=\\"true\\" [(visible)]=\\"showCustomFieldCreationDialog\\" [draggable]=\\"false\\" [style]=\\"{width: \'468px\'}\\">\\n        <div [formGroup]=\\"customFieldForm\\">\\n            <div class=\\"tw-p-24-px tw-border-b-1-px tw-border-b-box-color\\">\\n                <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                    <p class=\\"tw-text-20-px tw-font-500\\">Add new Custom Field</p>\\n                    <i class=\\"pi pi-times tw-cursor-pointer tw-text-12-px\\" (click)=\\"closeModel()\\"></i>\\n                </div>\\n            </div>\\n            <div *ngIf=\\"existingFields.indexOf(customFieldForm.value.attribute_type?.toLowerCase()) !== -1\\">\\n                <div class=\\"tw-px-16-px tw-text-12-px tw-pt-12-px tw-flex\\">\\n                    <span class=\\"error-box tw-flex tw-p-4-px\\">\\n                        <img class=\\"tw-mb-16-px\\" src=\\"assets/icons/error.svg\\"/>\\n                        <h5 class=\\"tw-ml-6-px\\">\\n                            Oops! It looks like another field with the same name already exists in your {{brandingConfig.brandName}} account. Would you please\\n                            give the field a different name?\\n                        </h5>\\n                    </span>\\n                </div>\\n            </div>\\n            <div class=\\"tw-p-24-px\\">\\n                <p class=\\"tw-pb-8-px tw-text-sub-text-color tw-text-14-px\\">\\n                    Field Name <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n                </p>\\n                <input formControlName=\\"attribute_type\\" type=\\"text\\" class=\\"tw-w-388-px tw-h-48-px\\" pInputText placeholder=\\"Enter field type\\" [ngClass]=\\"[customFieldForm.controls[\'attribute_type\'].touched && !customFieldForm.controls[\'attribute_type\'].valid && !customFieldForm.controls[\'attribute_type\'].disabled ? \'error-box\' : \'normal-box\']\\" required/>\\n                <app-mandatory-error-message *ngIf=\\"customFieldForm.controls[\'attribute_type\'].touched && !customFieldForm.controls[\'attribute_type\'].valid && !customFieldForm.controls[\'attribute_type\'].disabled\\" [customErrorMessage]=\\"\'Enter a valid type\'\\"></app-mandatory-error-message>\\n    \\n                <p class=\\"tw-pt-16-px tw-text-sub-text-color tw-text-14-px tw-pb-8-px\\">\\n                    Placeholder Name <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n                </p>\\n                <input formControlName=\\"source_placeholder\\" type=\\"text\\" class=\\"tw-w-388-px tw-h-48-px\\" pInputText placeholder=\\"Enter field name\\" [ngClass]=\\"[customFieldForm.controls[\'source_placeholder\'].touched && !customFieldForm.controls[\'source_placeholder\'].valid && !customFieldForm.controls[\'source_placeholder\'].disabled ? \'error-box\' : \'normal-box\']\\" required/>\\n                <app-mandatory-error-message *ngIf=\\"customFieldForm.controls[\'source_placeholder\'].touched && !customFieldForm.controls[\'source_placeholder\'].valid && !customFieldForm.controls[\'source_placeholder\'].disabled\\" [customErrorMessage]=\\"\'Enter a valid Name\'\\"></app-mandatory-error-message>\\n    \\n                <div>\\n                    <h5 class=\\"tw-pt-16-px tw-text-sub-text-color tw-text-14-px tw-pb-8-px\\">\\n                      Field Type\\n                    </h5>\\n                    <div class=\\"tw-w-388-px tw-h-48-px\\">\\n                      <input class=\\"tw-w-388-px form-input-disabled\\" type=\\"text\\" placeholder=\\"Select\\" disabled>\\n                    </div>\\n                  </div>\\n    \\n                  <div class=\\"label-section tw-pt-8\\">\\n                    <div class=\\"label-content tw-w-388-px\\">\\n                      <h5 class=\\"name-text sub-text-color tw-text-14-px\\">\\n                        {{customFieldForm.value.attribute_type ? customFieldForm.value.attribute_type : \'Label\'}}\\n                      </h5>\\n                      <div class=\\"form-field tw-pt-4-px\\">\\n                        <input class=\\"form-input tw-w-320-px\\" type=\\"text\\" disabled\\n                        [placeholder]=\\"customFieldForm.value.source_placeholder ? customFieldForm.value.source_placeholder : \'Enter Text\'\\">\\n                      </div>\\n                    </div>\\n                  </div>              \\n                \\n                <div class=\\"tw-flex tw-justify-end tw-pt-24-px tw-text-14-px\\">\\n                    <button type=\\"button\\" class=\\"cancel-btn\\" (click)=\\"closeModel()\\">\\n                        Cancel\\n                    </button>\\n                    <button type=\\"button\\" class=\\"save-btn\\" pButton [disabled]=\\"!customFieldForm.valid || existingFields.indexOf(customFieldForm.value.attribute_type?.toLowerCase()) !== -1\\" (click)=\\"saveCustomField()\\">\\n                        Create and Save\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </p-dialog>\\n</div>\\n"},{"name":"ConfigurationExportSettingComponent","id":"component-ConfigurationExportSettingComponent-0909e1923df7759ea3b2e6ab51ed92a9b89c708fa2987cfce8ce206ff7f897f4f1c78c28cd650c21288f7a580a5e3970d398e2ccbd8d2fd3b8177ca410484983","file":"src/app/integrations/qbd/main/configuration/configuration-export-setting/configuration-export-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-export-setting","styleUrls":["./configuration-export-setting.component.scss"],"styles":[],"templateUrl":["./configuration-export-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-configuration-export-setting\',\\n  templateUrl: \'./configuration-export-setting.component.html\',\\n  styleUrls: [\'./configuration-export-setting.component.scss\']\\n})\\nexport class ConfigurationExportSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./configuration-export-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<app-export-setting></app-export-setting>"},{"name":"ConfigurationExportSettingComponent","id":"component-ConfigurationExportSettingComponent-0909e1923df7759ea3b2e6ab51ed92a9b89c708fa2987cfce8ce206ff7f897f4f1c78c28cd650c21288f7a580a5e3970d398e2ccbd8d2fd3b8177ca410484983-1","file":"src/app/integrations/si/main/configuration/configuration-export-setting/configuration-export-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-export-setting","styleUrls":["./configuration-export-setting.component.scss"],"styles":[],"templateUrl":["./configuration-export-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-configuration-export-setting\',\\n  templateUrl: \'./configuration-export-setting.component.html\',\\n  styleUrls: [\'./configuration-export-setting.component.scss\']\\n})\\nexport class ConfigurationExportSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./configuration-export-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"ConfigurationExportSettingComponent-1","templateData":"<app-configuration-export-settings></app-configuration-export-settings>"},{"name":"ConfigurationExportSettingsComponent","id":"component-ConfigurationExportSettingsComponent-300f9a34726b3add6f8dced8f6484d72c65bcb7814faf26837d94d4249f3d561fe9c0ec007792ec6ba53f62afaca5fe87b76264a771ab05fa69be7f1854281b2","file":"src/app/shared/components/si/configuration/configuration-export-settings/configuration-export-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-export-settings","styleUrls":["./configuration-export-settings.component.scss"],"styles":[],"templateUrl":["./configuration-export-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"appName","defaultValue":"AppName.INTACCT","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":66},{"name":"autoMapEmployeeOptions","defaultValue":"[\\n    { label: \'Based on Employee E-mail ID\', value: \'EMAIL\' },\\n    { label: \'Based on Employee Name\', value: \'NAME\' },\\n    { label: \'Based on Employee Code\', value: \'EMPLOYEE_CODE\' }\\n  ]","deprecated":false,"deprecationMessage":"","type":"ExportSettingFormOption[]","optional":false,"description":"","line":139},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":175,"modifierKind":[148]},{"name":"brandingFeatureConfig","defaultValue":"brandingFeatureConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":173,"modifierKind":[148]},{"name":"cccExpenseGroupingDateOptions","deprecated":false,"deprecationMessage":"","type":"ExportSettingFormOption[]","optional":false,"description":"","line":118},{"name":"cccExpenseStateOptions","deprecated":false,"deprecationMessage":"","type":"ExportSettingFormOption[]","optional":false,"description":"","line":46},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38},{"name":"CorporateCreditCardExpensesObject","defaultValue":"CorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":42},{"name":"creditCardExportTypes","defaultValue":"[\\n    {\\n      label: \'Bill\',\\n      value: IntacctReimbursableExpensesObject.BILL\\n    },\\n    {\\n      label: \'Expense Report\',\\n      value: IntacctReimbursableExpensesObject.EXPENSE_REPORT\\n    },\\n    {\\n      label: \'Journal Entry\',\\n      value: CorporateCreditCardExpensesObject.JOURNAL_ENTRY\\n    },\\n    {\\n      label: \'Charge Card Transaction\',\\n      value: CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"ExportSettingFormOption[]","optional":false,"description":"","line":120},{"name":"customMessage","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52},{"name":"destinationOptions","defaultValue":"{\\n    [IntacctExportSettingDestinationOptionKey.ACCOUNT]: [],\\n    [IntacctExportSettingDestinationOptionKey.EXPENSE_PAYMENT_TYPE]: [],\\n    [IntacctExportSettingDestinationOptionKey.CCC_EXPENSE_PAYMENT_TYPE]: [],\\n    [IntacctExportSettingDestinationOptionKey.VENDOR]: [],\\n    [IntacctExportSettingDestinationOptionKey.CHARGE_CARD]: []\\n  }","deprecated":false,"deprecationMessage":"","type":"ExportSettingDestinationAttributeOption","optional":false,"description":"","line":54},{"name":"employeeFieldOptions","defaultValue":"[\\n    {\\n      label: \'Employee\',\\n      value: FyleField.EMPLOYEE\\n    },\\n    {\\n      label: \'Vendor\',\\n      value: FyleField.VENDOR\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"ExportSettingFormOption[]","optional":false,"description":"","line":160},{"name":"expenseGroupingFieldOptions","defaultValue":"[\\n    {\\n      label: \'Expense\',\\n      value: ExpenseGroupingFieldOption.EXPENSE_ID\\n    },\\n    {\\n      label: \'Report\',\\n      value: ExpenseGroupingFieldOption.CLAIM_NUMBER\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"ExportSettingFormOption[]","optional":false,"description":"","line":84},{"name":"expenseStateOptions","deprecated":false,"deprecationMessage":"","type":"ExportSettingFormOption[]","optional":false,"description":"","line":44},{"name":"exportSettings","deprecated":false,"deprecationMessage":"","type":"ExportSettingGet","optional":false,"description":"","line":50},{"name":"exportSettingsForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":30},{"name":"IntacctExportSettingDestinationOptionKey","defaultValue":"IntacctExportSettingDestinationOptionKey","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62},{"name":"IntacctReimbursableExpensesObject","defaultValue":"IntacctReimbursableExpensesObject","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40},{"name":"is_simplify_report_closure_enabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":48},{"name":"isDialogClicked","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":34},{"name":"isOptionSearchInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":64},{"name":"optionSearchUpdate","defaultValue":"new Subject<ExportSettingOptionSearch>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":171,"modifierKind":[123]},{"name":"previewImagePaths","defaultValue":"[\\n    {\\n      \'EXPENSE_REPORT\': \'assets/illustrations/sageIntacct/Reimbursable - Expense Report.jpg\',\\n      \'BILL\': \'assets/illustrations/sageIntacct/Reimbursable Bill.jpg\',\\n      \'JOURNAL_ENTRY\': \'assets/illustrations/sageIntacct/Reimbursable Journal Entry.jpg\'\\n    },\\n    {\\n      \'EXPENSE_REPORT\': \'assets/illustrations/sageIntacct/CCC Expense Report.jpg\',\\n      \'BILL\': \'assets/illustrations/sageIntacct/CCC Bill.jpg\',\\n      \'JOURNAL_ENTRY\': \'assets/illustrations/sageIntacct/CCC Journal Entry.jpg\',\\n      \'CHARGE_CARD_TRANSACTION\': \'assets/illustrations/sageIntacct/CCC Credit Card Purchase.jpg\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":70},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.INTACCT.EXPORT_SETTING","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":32},{"name":"reimbursableExpenseGroupingDateOptions","defaultValue":"[\\n    {\\n      label: \'Spend Date\',\\n      value: ExportDateType.SPENT_AT\\n    },\\n    {\\n      label: \'Current Date\',\\n      value: ExportDateType.CURRENT_DATE\\n    },\\n    {\\n      label: \'Verification Date\',\\n      value: ExportDateType.VERIFIED_DATE\\n    },\\n    {\\n      label: \'Approval Date\',\\n      value: ExportDateType.APPROVAL_DATE\\n    },\\n    {\\n      label: \'Last Spend Date\',\\n      value: ExportDateType.LAST_SPENT_AT\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"ExportSettingFormOption[]","optional":false,"description":"","line":95},{"name":"reimbursableExportTypes","defaultValue":"[\\n    {\\n      label: \'Expense Report\',\\n      value: IntacctReimbursableExpensesObject.EXPENSE_REPORT\\n    },\\n    {\\n      label: \'Bill\',\\n      value: IntacctReimbursableExpensesObject.BILL\\n    },\\n    {\\n      label: \'Journal Entry\',\\n      value: IntacctReimbursableExpensesObject.JOURNAL_ENTRY\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"ExportSettingFormOption[]","optional":false,"description":"","line":145},{"name":"saveInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":36},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":68,"modifierKind":[123]}],"methodsClass":[{"name":"addMissingOption","args":[{"name":"key","type":"IntacctExportSettingDestinationOptionKey","deprecated":false,"deprecationMessage":""},{"name":"defaultDestinationAttribute","type":"DefaultDestinationAttribute","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":451,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"key","type":"IntacctExportSettingDestinationOptionKey","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"defaultDestinationAttribute","type":"DefaultDestinationAttribute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"addMissingOptions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":465,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"cccExportTypeWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":300,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"cccWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":352,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createCreditCardExpenseWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":334,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createReimbursableExpenseWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":282,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"exportFieldsWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":367,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"exportSelectionValidator","args":[],"optional":false,"returnType":"ValidatorFn","typeParameters":[],"line":392,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getEmployeeFieldMapping","args":[{"name":"employeeFieldMapping","type":"FyleField | null","deprecated":false,"deprecationMessage":""},{"name":"reimbursableExportType","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":194,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"employeeFieldMapping","type":"FyleField | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"reimbursableExportType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExportType","args":[{"name":"exportType","type":"IntacctReimbursableExpensesObject | CorporateCreditCardExpensesObject | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":207,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportType","type":"IntacctReimbursableExpensesObject | CorporateCreditCardExpensesObject | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getPhase","args":[],"optional":false,"returnType":"ProgressPhase","typeParameters":[],"line":490,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":475,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initializeExportSettingsFormWithData","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":421,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":593,"deprecated":false,"deprecationMessage":""},{"name":"optionSearchWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":529,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":188,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"reimbursableExportTypeWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":258,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":494,"deprecated":false,"deprecationMessage":""},{"name":"searchOptionsDropdown","args":[{"name":"event","type":"ExportSettingOptionSearch","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":566,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"ExportSettingOptionSearch","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setCCExpenseDateOptions","args":[{"name":"cccExportType","type":"CorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":240,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"cccExportType","type":"CorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupCCCExpenseGroupingDateOptions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":383,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setUpExpenseStates","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":216,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":574,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"sortDropdownOptions","args":[{"name":"destinationOptionKey","type":"IntacctExportSettingDestinationOptionKey","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":523,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"destinationOptionKey","type":"IntacctExportSettingDestinationOptionKey","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { TitleCasePipe } from \'@angular/common\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from \'@angular/forms\';\\nimport { DomSanitizer } from \'@angular/platform-browser\';\\nimport { Router } from \'@angular/router\';\\nimport { Observable, Subject, debounceTime, filter, forkJoin } from \'rxjs\';\\nimport { brandingConfig, brandingFeatureConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { ExportSettingModel } from \'src/app/core/models/common/export-settings.model\';\\nimport { DefaultDestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { CCCExpenseState, ConfigurationCta, CorporateCreditCardExpensesObject, FyleField, ExpenseGroupedBy, ExpenseState, ExportDateType, IntacctReimbursableExpensesObject, ExpenseGroupingFieldOption, Page, ToastSeverity, IntacctOnboardingState, ProgressPhase, IntacctUpdateEvent, AppName, IntacctExportSettingDestinationOptionKey } from \'src/app/core/models/enum/enum.model\';\\nimport { ExportSettingDestinationAttributeOption, IntacctDestinationAttribute, PaginatedintacctDestinationAttribute } from \'src/app/core/models/si/db/destination-attribute.model\';\\nimport { ExportSettingFormOption, ExportSettingGet, ExportSettingModel as IntacctExportSettingModel, ExportSettingOptionSearch } from \'src/app/core/models/si/si-configuration/export-settings.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { SiExportSettingService } from \'src/app/core/services/si/si-configuration/si-export-setting.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { SiWorkspaceService } from \'src/app/core/services/si/si-core/si-workspace.service\';\\n\\n@Component({\\n  selector: \'app-configuration-export-settings\',\\n  templateUrl: \'./configuration-export-settings.component.html\',\\n  styleUrls: [\'./configuration-export-settings.component.scss\']\\n})\\nexport class ConfigurationExportSettingsComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  isDialogClicked: boolean = true;\\n\\n  exportSettingsForm: FormGroup;\\n\\n  redirectLink = brandingKbArticles.onboardingArticles.INTACCT.EXPORT_SETTING;\\n\\n  isOnboarding: boolean;\\n\\n  saveInProgress: boolean = false;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  IntacctReimbursableExpensesObject = IntacctReimbursableExpensesObject;\\n\\n  CorporateCreditCardExpensesObject = CorporateCreditCardExpensesObject;\\n\\n  expenseStateOptions: ExportSettingFormOption[];\\n\\n  cccExpenseStateOptions: ExportSettingFormOption[];\\n\\n  is_simplify_report_closure_enabled: boolean = true;\\n\\n  exportSettings: ExportSettingGet;\\n\\n  customMessage: string;\\n\\n  destinationOptions: ExportSettingDestinationAttributeOption = {\\n    [IntacctExportSettingDestinationOptionKey.ACCOUNT]: [],\\n    [IntacctExportSettingDestinationOptionKey.EXPENSE_PAYMENT_TYPE]: [],\\n    [IntacctExportSettingDestinationOptionKey.CCC_EXPENSE_PAYMENT_TYPE]: [],\\n    [IntacctExportSettingDestinationOptionKey.VENDOR]: [],\\n    [IntacctExportSettingDestinationOptionKey.CHARGE_CARD]: []\\n  };\\n\\n  IntacctExportSettingDestinationOptionKey = IntacctExportSettingDestinationOptionKey;\\n\\n  isOptionSearchInProgress: boolean;\\n\\n  appName: string = AppName.INTACCT;\\n\\n  private sessionStartTime = new Date();\\n\\n  previewImagePaths =[\\n    {\\n      \'EXPENSE_REPORT\': \'assets/illustrations/sageIntacct/Reimbursable - Expense Report.jpg\',\\n      \'BILL\': \'assets/illustrations/sageIntacct/Reimbursable Bill.jpg\',\\n      \'JOURNAL_ENTRY\': \'assets/illustrations/sageIntacct/Reimbursable Journal Entry.jpg\'\\n    },\\n    {\\n      \'EXPENSE_REPORT\': \'assets/illustrations/sageIntacct/CCC Expense Report.jpg\',\\n      \'BILL\': \'assets/illustrations/sageIntacct/CCC Bill.jpg\',\\n      \'JOURNAL_ENTRY\': \'assets/illustrations/sageIntacct/CCC Journal Entry.jpg\',\\n      \'CHARGE_CARD_TRANSACTION\': \'assets/illustrations/sageIntacct/CCC Credit Card Purchase.jpg\'\\n    }\\n  ];\\n\\n  expenseGroupingFieldOptions: ExportSettingFormOption[] = [\\n    {\\n      label: \'Expense\',\\n      value: ExpenseGroupingFieldOption.EXPENSE_ID\\n    },\\n    {\\n      label: \'Report\',\\n      value: ExpenseGroupingFieldOption.CLAIM_NUMBER\\n    }\\n  ];\\n\\n  reimbursableExpenseGroupingDateOptions: ExportSettingFormOption[] = [\\n    {\\n      label: \'Spend Date\',\\n      value: ExportDateType.SPENT_AT\\n    },\\n    {\\n      label: \'Current Date\',\\n      value: ExportDateType.CURRENT_DATE\\n    },\\n    {\\n      label: \'Verification Date\',\\n      value: ExportDateType.VERIFIED_DATE\\n    },\\n    {\\n      label: \'Approval Date\',\\n      value: ExportDateType.APPROVAL_DATE\\n    },\\n    {\\n      label: \'Last Spend Date\',\\n      value: ExportDateType.LAST_SPENT_AT\\n    }\\n  ];\\n\\n  cccExpenseGroupingDateOptions: ExportSettingFormOption[];\\n\\n  creditCardExportTypes: ExportSettingFormOption[] = [\\n    {\\n      label: \'Bill\',\\n      value: IntacctReimbursableExpensesObject.BILL\\n    },\\n    {\\n      label: \'Expense Report\',\\n      value: IntacctReimbursableExpensesObject.EXPENSE_REPORT\\n    },\\n    {\\n      label: \'Journal Entry\',\\n      value: CorporateCreditCardExpensesObject.JOURNAL_ENTRY\\n    },\\n    {\\n      label: \'Charge Card Transaction\',\\n      value: CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION\\n    }\\n  ];\\n\\n  autoMapEmployeeOptions: ExportSettingFormOption[] = [\\n    { label: \'Based on Employee E-mail ID\', value: \'EMAIL\' },\\n    { label: \'Based on Employee Name\', value: \'NAME\' },\\n    { label: \'Based on Employee Code\', value: \'EMPLOYEE_CODE\' }\\n  ];\\n\\n  reimbursableExportTypes: ExportSettingFormOption[] = [\\n    {\\n      label: \'Expense Report\',\\n      value: IntacctReimbursableExpensesObject.EXPENSE_REPORT\\n    },\\n    {\\n      label: \'Bill\',\\n      value: IntacctReimbursableExpensesObject.BILL\\n    },\\n    {\\n      label: \'Journal Entry\',\\n      value: IntacctReimbursableExpensesObject.JOURNAL_ENTRY\\n    }\\n  ];\\n\\n  employeeFieldOptions: ExportSettingFormOption[] = [\\n    {\\n      label: \'Employee\',\\n      value: FyleField.EMPLOYEE\\n    },\\n    {\\n      label: \'Vendor\',\\n      value: FyleField.VENDOR\\n    }\\n  ];\\n\\n  private optionSearchUpdate = new Subject<ExportSettingOptionSearch>();\\n\\n  readonly brandingFeatureConfig = brandingFeatureConfig;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private router: Router,\\n    private exportSettingService: SiExportSettingService,\\n    private formBuilder: FormBuilder,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService,\\n    private workspaceService: SiWorkspaceService,\\n    private mappingService: SiMappingsService,\\n    private sanitizer: DomSanitizer\\n    ) { }\\n\\n    refreshDimensions(isRefresh: boolean) {\\n      this.mappingService.refreshSageIntacctDimensions().subscribe();\\n      this.mappingService.refreshFyleDimensions().subscribe();\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Refreshing data dimensions from Sage Intacct\');\\n    }\\n\\n    getEmployeeFieldMapping(employeeFieldMapping: FyleField | null, reimbursableExportType: string): string {\\n      let employeeFieldMappingLabel = \'\';\\n      if (employeeFieldMapping) {\\n        employeeFieldMappingLabel = employeeFieldMapping;\\n      } else if (reimbursableExportType === IntacctReimbursableExpensesObject.JOURNAL_ENTRY) {\\n        employeeFieldMappingLabel = this.exportSettingsForm.controls.employeeFieldMapping.value;\\n      } else {\\n        employeeFieldMappingLabel = reimbursableExportType === IntacctReimbursableExpensesObject.EXPENSE_REPORT ? FyleField.EMPLOYEE : FyleField.VENDOR;\\n      }\\n\\n      return new TitleCasePipe().transform(employeeFieldMappingLabel);\\n    }\\n\\n    getExportType(exportType: IntacctReimbursableExpensesObject | CorporateCreditCardExpensesObject | null): string {\\n      if (exportType) {\\n        const lowerCaseWord = exportType.toLowerCase();\\n          return lowerCaseWord.charAt(0).toUpperCase() + lowerCaseWord.slice(1);\\n      }\\n\\n      return \'export\';\\n    }\\n\\n    private setUpExpenseStates(): void {\\n      this.cccExpenseStateOptions = [\\n        {\\n          label: this.is_simplify_report_closure_enabled ? \'Approved\' : \'Payment Processing\',\\n          value: this.is_simplify_report_closure_enabled ? CCCExpenseState.APPROVED: CCCExpenseState.PAYMENT_PROCESSING\\n        },\\n        {\\n          label: this.is_simplify_report_closure_enabled ? \'Closed\' : \'Paid\',\\n          value: CCCExpenseState.PAID\\n        }\\n      ];\\n\\n      this.expenseStateOptions = [\\n        {\\n          label: this.is_simplify_report_closure_enabled ? \'Processing\' : \'Payment Processing\',\\n          value: ExpenseState.PAYMENT_PROCESSING\\n        },\\n        {\\n          label: this.is_simplify_report_closure_enabled ? \'Closed\' : \'Paid\',\\n          value: ExpenseState.PAID\\n        }\\n      ];\\n    }\\n\\n    private setCCExpenseDateOptions(cccExportType: CorporateCreditCardExpensesObject) : void {\\n    if (cccExportType === CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION) {\\n      this.cccExpenseGroupingDateOptions = [\\n        {\\n          label: \'Card Transaction Post date\',\\n          value: ExportDateType.POSTED_AT\\n        },\\n        {\\n          label: \'Spend Date\',\\n          value: ExportDateType.SPENT_AT\\n        }\\n      ];\\n      this.exportSettingsForm?.controls.cccExportDate.patchValue(ExportDateType.SPENT_AT);\\n    } else {\\n      this.cccExpenseGroupingDateOptions = this.reimbursableExpenseGroupingDateOptions;\\n    }\\n  }\\n\\n    private reimbursableExportTypeWatcher(): void {\\n      this.exportSettingsForm.controls.reimbursableExportType.valueChanges.subscribe((isreimbursableExportTypeSelected) => {\\n        if (isreimbursableExportTypeSelected === IntacctReimbursableExpensesObject.JOURNAL_ENTRY) {\\n          this.exportSettingsForm.controls.glAccount.setValidators(Validators.required);\\n          this.exportSettingsForm.controls.employeeFieldMapping.enable();\\n        } else {\\n          this.exportSettingsForm.controls.glAccount.setValue(null);\\n          this.exportSettingsForm.controls.glAccount.clearValidators();\\n        }\\n\\n        if (isreimbursableExportTypeSelected === IntacctReimbursableExpensesObject.EXPENSE_REPORT) {\\n          this.exportSettingsForm.controls.employeeFieldMapping.patchValue(FyleField.EMPLOYEE);\\n          this.exportSettingsForm.controls.employeeFieldMapping.disable();\\n        } else {\\n          this.exportSettingsForm.controls.reimbursableExpensePaymentType.setValue(null);\\n        }\\n\\n        if (isreimbursableExportTypeSelected === IntacctReimbursableExpensesObject.BILL) {\\n          this.exportSettingsForm.controls.employeeFieldMapping.patchValue(FyleField.VENDOR);\\n          this.exportSettingsForm.controls.employeeFieldMapping.disable();\\n        }\\n      });\\n    }\\n\\n    private createReimbursableExpenseWatcher(): void {\\n      this.exportSettingsForm.controls.reimbursableExpense.valueChanges.subscribe((isReimbursableExpenseSelected) => {\\n        if (isReimbursableExpenseSelected) {\\n          this.exportSettingsForm.controls.reimbursableExportType.setValidators(Validators.required);\\n          this.exportSettingsForm.controls.reimbursableExportGroup.setValidators(Validators.required);\\n          this.exportSettingsForm.controls.reimbursableExportDate.setValidators(Validators.required);\\n          this.exportSettingsForm.controls.reimbursableExpenseState.setValidators(Validators.required);\\n        } else {\\n          this.exportSettingsForm.controls.reimbursableExportType.clearValidators();\\n          this.exportSettingsForm.controls.reimbursableExportGroup.clearValidators();\\n          this.exportSettingsForm.controls.reimbursableExportDate.clearValidators();\\n          this.exportSettingsForm.controls.reimbursableExpenseState.clearValidators();\\n          this.exportSettingsForm.controls.reimbursableExportType.setValue(null);\\n        }\\n      });\\n      this.reimbursableExportTypeWatcher();\\n    }\\n\\n    private cccExportTypeWatcher(): void {\\n      this.exportSettingsForm.controls.cccExportType.valueChanges.subscribe((isCCCExportTypeSelected) => {\\n        this.setCCExpenseDateOptions(isCCCExportTypeSelected);\\n        if (isCCCExportTypeSelected === CorporateCreditCardExpensesObject.JOURNAL_ENTRY) {\\n          this.exportSettingsForm.controls.creditCard.setValidators(Validators.required);\\n          this.exportSettingsForm.controls.employeeFieldMapping.enable();\\n        } else {\\n          this.exportSettingsForm.controls.creditCard.clearValidators();\\n          this.exportSettingsForm.controls.creditCard.setValue(null);\\n        }\\n\\n        if (isCCCExportTypeSelected === CorporateCreditCardExpensesObject.BILL) {\\n          this.exportSettingsForm.controls.creditCardVendor.setValidators(Validators.required);\\n        } else {\\n          this.exportSettingsForm.controls.creditCardVendor.clearValidators();\\n          this.exportSettingsForm.controls.creditCardVendor.setValue(null);\\n        }\\n\\n        if (isCCCExportTypeSelected === CorporateCreditCardExpensesObject.EXPENSE_REPORT) {\\n          this.exportSettingsForm.controls.cccExpensePaymentType.setValidators(Validators.required);\\n        } else {\\n          this.exportSettingsForm.controls.cccExpensePaymentType.clearValidators();\\n          this.exportSettingsForm.controls.cccExpensePaymentType.setValue(null);\\n        }\\n\\n        if (isCCCExportTypeSelected === CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION) {\\n          this.exportSettingsForm.controls.chargeCard.setValidators(Validators.required);\\n        } else {\\n          this.exportSettingsForm.controls.chargeCard.clearValidators();\\n          this.exportSettingsForm.controls.chargeCard.setValue(null);\\n        }\\n      });\\n    }\\n\\n    private createCreditCardExpenseWatcher(): void {\\n      this.exportSettingsForm.controls.creditCardExpense.valueChanges.subscribe((isCreditCardExpenseSelected) => {\\n        if (isCreditCardExpenseSelected) {\\n          this.exportSettingsForm.controls.cccExportType.setValidators(Validators.required);\\n          this.exportSettingsForm.controls.cccExportGroup.setValidators(Validators.required);\\n          this.exportSettingsForm.controls.cccExportDate.setValidators(Validators.required);\\n          this.exportSettingsForm.controls.cccExpenseState.setValidators(Validators.required);\\n        } else {\\n          this.exportSettingsForm.controls.cccExportType.clearValidators();\\n          this.exportSettingsForm.controls.cccExportGroup.clearValidators();\\n          this.exportSettingsForm.controls.cccExportDate.clearValidators();\\n          this.exportSettingsForm.controls.cccExpenseState.clearValidators();\\n          this.exportSettingsForm.controls.cccExportType.setValue(null);\\n        }\\n      });\\n      this.cccExportTypeWatcher();\\n    }\\n\\n    private cccWatcher(): void {\\n      const cccExportGroup = this.exportSettingsForm.get(\'cccExportGroup\');\\n      const cccExportTypeControl = this.exportSettingsForm.controls.cccExportType;\\n\\n      cccExportTypeControl.valueChanges.subscribe((cccExport) => {\\n        if (cccExport === CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION) {\\n          cccExportGroup?.disable();\\n          cccExportGroup?.setValue(\'Expense\');\\n        } else {\\n          cccExportGroup?.enable();\\n        }\\n      });\\n    }\\n\\n\\n    private exportFieldsWatcher(): void {\\n      if (this.exportSettings?.configurations?.reimbursable_expenses_object === IntacctReimbursableExpensesObject.JOURNAL_ENTRY || this.exportSettings?.configurations?.corporate_credit_card_expenses_object === CorporateCreditCardExpensesObject.JOURNAL_ENTRY) {\\n        this.exportSettingsForm.get(\'employeeFieldMapping\')?.enable();\\n      } else {\\n        this.exportSettingsForm.get(\'employeeFieldMapping\')?.disable();\\n      }\\n\\n      if (this.exportSettings?.configurations?.corporate_credit_card_expenses_object === CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION) {\\n        this.exportSettingsForm.controls.cccExportGroup.setValue(\'Expense\');\\n        this.exportSettingsForm.controls.cccExportGroup.disable();\\n      }\\n      this.createReimbursableExpenseWatcher();\\n      this.createCreditCardExpenseWatcher();\\n      this.cccWatcher();\\n    }\\n\\n    private setupCCCExpenseGroupingDateOptions(): void {\\n      if (this.exportSettings?.configurations?.corporate_credit_card_expenses_object) {\\n        const creditCardExpenseExportGroup = this.exportSettings?.expense_group_settings?.corporate_credit_card_expense_group_fields ? this.exportSettings?.expense_group_settings.corporate_credit_card_expense_group_fields : ExpenseGroupedBy.EXPENSE;\\n        this.setCCExpenseDateOptions(this.exportSettings?.configurations?.corporate_credit_card_expenses_object);\\n      } else {\\n        this.setCCExpenseDateOptions(CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION);\\n      }\\n    }\\n\\n    private exportSelectionValidator(): ValidatorFn {\\n      return (control: AbstractControl): {[key: string]: object} | null => {\\n        let forbidden = true;\\n        if (this.exportSettingsForm ) {\\n          if (typeof control.value === \'boolean\') {\\n            if (control.value) {\\n              forbidden = false;\\n            } else {\\n              if (control.parent?.get(\'reimbursableExpense\')?.value || control.parent?.get(\'creditCardExpense\')?.value) {\\n                forbidden = false;\\n              }\\n            }\\n          } else if ((control.value === ExpenseState.PAID || control.value === ExpenseState.PAYMENT_PROCESSING) && (control.parent?.get(\'reimbursableExpense\')?.value || control.parent?.get(\'creditCardExpense\')?.value)) {\\n            forbidden = false;\\n          }\\n          if (!forbidden) {\\n            control.parent?.get(\'reimbursableExpense\')?.setErrors(null);\\n            control.parent?.get(\'creditCardExpense\')?.setErrors(null);\\n            return null;\\n          }\\n        }\\n        return {\\n          forbiddenOption: {\\n            value: control.value\\n          }\\n        };\\n      };\\n    }\\n\\n    private initializeExportSettingsFormWithData(): void {\\n      const configurations = this.exportSettings?.configurations;\\n      const generalMappings = this.exportSettings?.general_mappings;\\n      const findObjectById = (array: IntacctDestinationAttribute[], id: string | null) => array?.find(item => item.destination_id === id) || null;\\n\\n      this.exportSettingsForm = this.formBuilder.group({\\n        reimbursableExpense: [Boolean(configurations?.reimbursable_expenses_object) || null, this.exportSelectionValidator()],\\n        reimbursableExportType: [configurations?.reimbursable_expenses_object || null],\\n        reimbursableExpensePaymentType: [findObjectById(this.destinationOptions.EXPENSE_PAYMENT_TYPE, generalMappings?.default_reimbursable_expense_payment_type.id)],\\n        reimbursableExportGroup: [ExportSettingModel.getExportGroup(this.exportSettings?.expense_group_settings.reimbursable_expense_group_fields) || null],\\n        reimbursableExportDate: [this.exportSettings?.expense_group_settings.reimbursable_export_date_type || null],\\n        reimbursableExpenseState: [this.exportSettings?.expense_group_settings.expense_state || null],\\n        employeeFieldMapping: [configurations?.employee_field_mapping || null, Validators.required],\\n        autoMapEmployees: [configurations?.auto_map_employees || null],\\n        glAccount: [findObjectById(this.destinationOptions.ACCOUNT, generalMappings?.default_gl_account.id)],\\n        creditCardExpense: [Boolean(configurations?.corporate_credit_card_expenses_object), this.exportSelectionValidator()],\\n        cccExportType: [configurations?.corporate_credit_card_expenses_object || null],\\n        cccExportGroup: [ExportSettingModel.getExportGroup(this.exportSettings?.expense_group_settings.corporate_credit_card_expense_group_fields)],\\n        cccExportDate: [this.exportSettings?.expense_group_settings.ccc_export_date_type || null],\\n        cccExpenseState: [this.exportSettings?.expense_group_settings.ccc_expense_state || null],\\n        cccExpensePaymentType: [findObjectById(this.destinationOptions.CCC_EXPENSE_PAYMENT_TYPE, generalMappings?.default_ccc_expense_payment_type.id)],\\n        creditCardVendor: [findObjectById(this.destinationOptions.VENDOR, generalMappings?.default_ccc_vendor.id)],\\n        creditCard: [findObjectById(this.destinationOptions.ACCOUNT, generalMappings?.default_credit_card.id)],\\n        chargeCard: [findObjectById(this.destinationOptions.CHARGE_CARD, generalMappings?.default_charge_card.id)]\\n      });\\n\\n      this.exportFieldsWatcher();\\n      this.optionSearchWatcher();\\n    }\\n\\n  private addMissingOption(key: IntacctExportSettingDestinationOptionKey, defaultDestinationAttribute: DefaultDestinationAttribute): void {\\n    const optionArray = this.destinationOptions[key];\\n    const option = optionArray.find(attribute => attribute.destination_id === defaultDestinationAttribute?.id);\\n\\n    if (!option && defaultDestinationAttribute?.id && defaultDestinationAttribute?.name) {\\n      const newOption = {\\n        destination_id: defaultDestinationAttribute.id,\\n        value: defaultDestinationAttribute.name\\n      } as IntacctDestinationAttribute;\\n      optionArray.push(newOption);\\n      this.sortDropdownOptions(key);\\n    }\\n  }\\n\\n  private addMissingOptions(): void {\\n    // Since pagination call doesn\'t return all results for options, we\'re making use of the export settings API to fill in options\\n    this.addMissingOption(IntacctExportSettingDestinationOptionKey.ACCOUNT, this.exportSettings.general_mappings?.default_gl_account);\\n    this.addMissingOption(IntacctExportSettingDestinationOptionKey.ACCOUNT, this.exportSettings.general_mappings?.default_credit_card);\\n    this.addMissingOption(IntacctExportSettingDestinationOptionKey.EXPENSE_PAYMENT_TYPE, this.exportSettings.general_mappings?.default_reimbursable_expense_payment_type);\\n    this.addMissingOption(IntacctExportSettingDestinationOptionKey.CCC_EXPENSE_PAYMENT_TYPE, this.exportSettings.general_mappings?.default_ccc_expense_payment_type);\\n    this.addMissingOption(IntacctExportSettingDestinationOptionKey.VENDOR, this.exportSettings.general_mappings?.default_ccc_vendor);\\n    this.addMissingOption(IntacctExportSettingDestinationOptionKey.CHARGE_CARD, this.exportSettings.general_mappings?.default_credit_card);\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    this.exportSettingService.getExportSettings().subscribe((exportSettings) => {\\n      this.exportSettings = exportSettings;\\n\\n      this.addMissingOptions();\\n\\n      this.setUpExpenseStates();\\n      this.setupCCCExpenseGroupingDateOptions();\\n      this.initializeExportSettingsFormWithData();\\n      this.isLoading = false;\\n    });\\n  }\\n\\n\\n    private getPhase(): ProgressPhase {\\n      return this.isOnboarding ? ProgressPhase.ONBOARDING : ProgressPhase.POST_ONBOARDING;\\n    }\\n\\n    save(): void {\\n      this.saveInProgress = true;\\n      const exportSettingPayload = IntacctExportSettingModel.constructPayload(this.exportSettingsForm);\\n      this.exportSettingService.postExportSettings(exportSettingPayload).subscribe((response: ExportSettingGet) => {\\n        this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Export settings saved successfully\');\\n        this.trackingService.trackTimeSpent(Page.EXPORT_SETTING_INTACCT, this.sessionStartTime);\\n        if (this.workspaceService.getIntacctOnboardingState() === IntacctOnboardingState.EXPORT_SETTINGS) {\\n          this.trackingService.integrationsOnboardingCompletion(IntacctOnboardingState.EXPORT_SETTINGS, 2, exportSettingPayload);\\n        } else {\\n          this.trackingService.intacctUpdateEvent(\\n            IntacctUpdateEvent.IMPORT_SETTINGS_INTACCT,\\n            {\\n              phase: this.getPhase(),\\n              oldState: this.exportSettings,\\n              newState: response\\n            }\\n          );\\n        }\\n        this.saveInProgress = false;\\n        if (this.isOnboarding) {\\n          this.workspaceService.setIntacctOnboardingState(IntacctOnboardingState.IMPORT_SETTINGS);\\n          this.router.navigate([`/integrations/intacct/onboarding/import_settings`]);\\n        }\\n      }, () => {\\n        this.saveInProgress = false;\\n        this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving export settings, please try again later\');\\n        });\\n    }\\n\\n  private sortDropdownOptions(destinationOptionKey: IntacctExportSettingDestinationOptionKey): void {\\n    this.destinationOptions[destinationOptionKey].sort((a: IntacctDestinationAttribute, b: IntacctDestinationAttribute) => {\\n      return a.value.localeCompare(b.value);\\n    });\\n  }\\n\\n  private optionSearchWatcher(): void {\\n    this.optionSearchUpdate.pipe(\\n      debounceTime(1000)\\n    ).subscribe((event: ExportSettingOptionSearch) => {\\n      const existingOptions = this.destinationOptions[event.destinationOptionKey].concat();\\n      const newOptions: IntacctDestinationAttribute[] = [];\\n\\n      this.mappingService.getPaginatedDestinationAttributes(existingOptions[0].attribute_type, event.searchTerm).subscribe((response) => {\\n        response.results.forEach((option) => {\\n          // Handle special case for expense payment type (reimburse and ccc)\\n          if (event.destinationOptionKey === IntacctExportSettingDestinationOptionKey.EXPENSE_PAYMENT_TYPE) {\\n            if (option.detail.is_reimbursable) {\\n              newOptions.push(option);\\n            }\\n          } else if (event.destinationOptionKey === IntacctExportSettingDestinationOptionKey.CCC_EXPENSE_PAYMENT_TYPE) {\\n            if (!option.detail.is_reimbursable) {\\n              newOptions.push(option);\\n            }\\n          } else {\\n            newOptions.push(option);\\n          }\\n        });\\n\\n        // Insert new options to existing options\\n        newOptions.forEach((option: IntacctDestinationAttribute) => {\\n          if (!existingOptions.find((existingOption) => existingOption.id === option.id)) {\\n            existingOptions.push(option);\\n          }\\n        });\\n\\n        this.destinationOptions[event.destinationOptionKey] = existingOptions.concat();\\n        this.sortDropdownOptions(event.destinationOptionKey);\\n        this.isOptionSearchInProgress = false;\\n      });\\n    });\\n  }\\n\\n  searchOptionsDropdown(event: ExportSettingOptionSearch): void {\\n    if (event.searchTerm) {\\n      this.isOptionSearchInProgress = true;\\n      this.optionSearchUpdate.next(event);\\n    }\\n  }\\n\\n\\n  private setupPage(): void {\\n    const destinationAttributes = [\'ACCOUNT\', \'EXPENSE_PAYMENT_TYPE\', \'VENDOR\', \'CHARGE_CARD_NUMBER\'];\\n    const groupedAttributes$: Observable<PaginatedintacctDestinationAttribute>[]= [];\\n\\n    destinationAttributes.forEach((destinationAttribute) => {\\n      groupedAttributes$.push(this.mappingService.getPaginatedDestinationAttributes(destinationAttribute).pipe(filter(response => !!response)));\\n    });\\n\\n    forkJoin(groupedAttributes$).subscribe((response) => {\\n      this.destinationOptions.ACCOUNT = response[0].results;\\n      this.destinationOptions.EXPENSE_PAYMENT_TYPE = response[1].results.filter((attr: IntacctDestinationAttribute) => attr.detail.is_reimbursable);\\n      this.destinationOptions.CCC_EXPENSE_PAYMENT_TYPE = response[1].results.filter((attr: IntacctDestinationAttribute) => !attr.detail.is_reimbursable);\\n      this.destinationOptions.VENDOR = response[2].results;\\n      this.destinationOptions.CHARGE_CARD = response[3].results;\\n\\n      this.getSettingsAndSetupForm();\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .error-box {\\n    @apply tw-border-alert-toast #{!important};\\n}\\n\\n:host ::ng-deep .normal-box  {\\n    @apply tw-border-box-color #{!important};\\n}\\n\\n:host ::ng-deep .normal-box :enabled:focus-visible {\\n    @apply tw-border-slightly-normal-text-color #{!important};\\n}\\n\\n.sub-text {\\n    color: #5A5D72;\\n    font-size: 12px;\\n}\\n\\n.radius {\\n    border-radius: 4px;\\n}","styleUrl":"./configuration-export-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"exportSettingService","type":"SiExportSettingService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""},{"name":"sanitizer","type":"DomSanitizer","deprecated":false,"deprecationMessage":""}],"line":175,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportSettingService","type":"SiExportSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sanitizer","type":"DomSanitizer","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n    <app-configuration-step-header \\n    [headerText]=\\"\'Export Settings\'\\"\\n    [contentText]=\\"\'In this section, you can configure how and when expenses from \' + brandingConfig.brandName + \' should be exported to Sage Intacct.\'\\"\\n    [redirectLink]=\\"redirectLink\\"\\n    [showSyncButton]=\\"isOnboarding\\"\\n    [appName]=\\"appName\\"\\n    (refreshDimension)=\\"refreshDimensions($event)\\"></app-configuration-step-header>\\n    </div>\\n    <form [formGroup]=\\"exportSettingsForm\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-mb-16-px\\">\\n                <div *ngIf=\\"brandingFeatureConfig.reimbursableExpenses\\" class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg\\">\\n                    <app-configuration-toggle-field \\n                    [form]=\\"exportSettingsForm\\"\\n                    [label]=\\"\'Export Reimbursable Expenses\'\\" \\n                    [subLabel]=\\"\'Enable this to export the reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any <b>out-of-pocket</b> expenses will not be exported to Sage Intacct .\'\\" \\n                    [formControllerName]=\\"\'reimbursableExpense\'\\"\\n                    [isSectionHeader]=\\"true\\"></app-configuration-toggle-field>\\n                </div>\\n                <div *ngIf=\\"brandingFeatureConfig.reimbursableExpenses && exportSettingsForm.value?.reimbursableExpense\\">\\n                    <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export module\'\\"\\n                            [label]=\\"\'How should the expenses be exported?\'\\"\\n                            [options]=\\"reimbursableExportTypes\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select expense export module\'\\"\\n                            [formControllerName]=\\"\'reimbursableExportType\'\\"\\n                            [appName]=\\"appName\\"\\n                            [exportConfigurationIconPath]=\\"\'assets/flow-charts/intacct-export-module.svg\'\\"\\n                            [exportTypeIconPathArray]=\\"previewImagePaths\\">\\n                        </app-configuration-select-field>\\n                            <div *ngIf=\\"exportSettingsForm.value.reimbursableExportType===IntacctReimbursableExpensesObject.JOURNAL_ENTRY\\">\\n                                <app-configuration-select-field\\n                                [form]=\\"exportSettingsForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'GL Account\'\\"\\n                                [label]=\\"\'To which GL Account should the expenses be credited to?\'\\"\\n                                [subLabel]=\\"\'The integration will credit the account selected here for Reimbursable Expenses exported as Journal Entries.\'\\"\\n                                [destinationAttributes]=\\"this.destinationOptions[\'ACCOUNT\']\\"\\n                                [destinationOptionKey]=\\"IntacctExportSettingDestinationOptionKey.ACCOUNT\\"\\n                                [isOptionSearchInProgress]=\\"isOptionSearchInProgress\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Select GL account\'\\"\\n                                [formControllerName]=\\"\'glAccount\'\\"\\n                                (searchOptionsDropdown)=\\"searchOptionsDropdown($event)\\"></app-configuration-select-field>\\n                            </div>\\n                            <div *ngIf=\\"exportSettingsForm.value.reimbursableExportType===IntacctReimbursableExpensesObject.EXPENSE_REPORT\\">\\n                                <app-configuration-select-field\\n                                [form]=\\"exportSettingsForm\\"\\n                                [isFieldMandatory]=\\"false\\"\\n                                [mandatoryErrorListName]=\\"\'expense payment type\'\\"\\n                                [label]=\\"\'Set the Default Expense Payment Type as?\'\\"\\n                                [subLabel]=\\"\'The selected Expense Payment Type will be added to the reimbursable expenses exported from \' + brandingConfig.brandName + \' to Sage Intacct.\'\\"\\n                                [destinationAttributes]=\\"this.destinationOptions[\'EXPENSE_PAYMENT_TYPE\']\\"\\n                                [destinationOptionKey]=\\"IntacctExportSettingDestinationOptionKey.EXPENSE_PAYMENT_TYPE\\"\\n                                [isOptionSearchInProgress]=\\"isOptionSearchInProgress\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Select expense payment type\'\\"\\n                                [formControllerName]=\\"\'reimbursableExpensePaymentType\'\\"\\n                                (searchOptionsDropdown)=\\"searchOptionsDropdown($event)\\"></app-configuration-select-field>\\n                            </div>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingsForm.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <ng-container *ngTemplateOutlet=\\"employeeFieldMapping\\"></ng-container>\\n                        <div *ngIf=\\"exportSettingsForm.value.reimbursableExportType\\">\\n                            <app-configuration-select-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"false\\"\\n                            [showClearIcon]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'employee mapping\'\\"\\n                            [label]=\\"\'How should Employees in \' + brandingConfig.brandName + \' be mapped to \' + getEmployeeFieldMapping(exportSettingsForm.value.employeeFieldMapping, exportSettingsForm.value.reimbursableExportType) + \' in Sage Intacct?\'\\"\\n                            [subLabel]=\\"\'Automatically map the employees in \' + brandingConfig.brandName + \' to their corresponding records in Sage Intacct based on a unique parameter.\'\\"\\n                            [options]=\\"autoMapEmployeeOptions\\"\\n                            [iconPath]=\\"\'questionmark\'\\"\\n                            [placeholder]=\\"\'Select mapping method\'\\"\\n                            [formControllerName]=\\"\'autoMapEmployees\'\\"></app-configuration-select-field>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingsForm.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingsForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'expense state\'\\"\\n                        [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                        [subLabel]=\\"\'You can export expenses either when they are awaiting closure after approval (Processing) or when the payment has been settled (Closed).\'\\"\\n                        [options]=\\"expenseStateOptions\\"\\n                        [iconPath]=\\"\'questionmark\'\\"\\n                        [placeholder]=\\"\'Select export state\'\\"\\n                        [formControllerName]=\\"\'reimbursableExpenseState\'\\"></app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingsForm.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingsForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'export date\'\\"\\n                        [label]=\\"\'Set the \' + getExportType(exportSettingsForm.value.reimbursableExportType ? exportSettingsForm.value.reimbursableExportType : IntacctReimbursableExpensesObject.EXPENSE_REPORT) + \' date as\'\\"\\n                        [subLabel]=\\"\'Expenses will be grouped and posted using the configured date when exporting from \' + brandingConfig.brandName + \' to Sage Intacct. Click here for more details.\'\\"\\n                        [options]=\\"reimbursableExpenseGroupingDateOptions\\"\\n                        [iconPath]=\\"\'calender\'\\"\\n                        [placeholder]=\\"\'Select date\'\\"\\n                        [formControllerName]=\\"\'reimbursableExportDate\'\\"></app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingsForm.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingsForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'how expenses to be grouped\'\\"\\n                        [label]=\\"\'How should the expenses be grouped?\'\\"\\n                        [subLabel]=\\"\'Expenses can either be exported as single line items (Expense) or as a grouped report with multiple line items (Report)\'\\"\\n                        [options]=\\"expenseGroupingFieldOptions\\"\\n                        [iconPath]=\\"\'questionmark\'\\"\\n                        [placeholder]=\\"\'Select expense grouping\'\\"\\n                        [formControllerName]=\\"\'reimbursableExportGroup\'\\"></app-configuration-select-field>\\n                    </div>\\n                </div>\\n            </div>\\n            <div>\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg\\">\\n                    <app-configuration-toggle-field \\n                    [form]=\\"exportSettingsForm\\"\\n                    [label]=\\"\'Export Corporate Card Expenses\'\\" \\n                    [subLabel]=\\"\'Enable this to export Non-Reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any <b>Corporate Credit Card</b> expenses will not be exported to Sage Intacct.\'\\" \\n                    [formControllerName]=\\"\'creditCardExpense\'\\"\\n                    [isSectionHeader]=\\"true\\"></app-configuration-toggle-field>\\n                </div>\\n                <div *ngIf=\\"exportSettingsForm.value?.creditCardExpense\\">\\n                    <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingsForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'export module\'\\"\\n                        [label]=\\"\'How should the expenses be exported?\'\\"\\n                        [options]=\\"creditCardExportTypes\\"\\n                        [iconPath]=\\"\'expense\'\\"\\n                        [placeholder]=\\"\'Select expense export module\'\\"\\n                        [formControllerName]=\\"\'cccExportType\'\\"\\n                        [exportConfigurationIconPath]=\\"\'assets/illustrations/sageIntacct/cccExportTypeTable.svg\'\\"\\n                        [exportTypeIconPathArray]=\\"previewImagePaths\\"></app-configuration-select-field>\\n                        <div *ngIf=\\"exportSettingsForm.value.cccExportType===CorporateCreditCardExpensesObject.EXPENSE_REPORT\\">\\n                            <app-configuration-select-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'expense payment type\'\\"\\n                            [label]=\\"\'Set the Default Expense Payment Type as?\'\\"\\n                            [subLabel]=\\"\'The selected Expense Payment Type will be added to the Corporate credit card expenses exported from \' + brandingConfig.brandName + \' to Sage Intacct.\'\\"\\n                            [destinationAttributes]=\\"this.destinationOptions[\'CCC_EXPENSE_PAYMENT_TYPE\']\\"\\n                            [destinationOptionKey]=\\"IntacctExportSettingDestinationOptionKey.CCC_EXPENSE_PAYMENT_TYPE\\"\\n                            [isOptionSearchInProgress]=\\"isOptionSearchInProgress\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select expense payment type\'\\"\\n                            [formControllerName]=\\"\'cccExpensePaymentType\'\\"\\n                            (searchOptionsDropdown)=\\"searchOptionsDropdown($event)\\"></app-configuration-select-field>\\n                        </div>\\n                        <div *ngIf=\\"exportSettingsForm.value.cccExportType===CorporateCreditCardExpensesObject.BILL\\">\\n                            <app-configuration-select-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'credit card vendor\'\\"\\n                            [label]=\\"\'Set the Default Credit Card Vendor as\'\\"\\n                            [subLabel]=\\"\'The vendor configured here will be added to all the Credit Card expenses exported as Bills.\'\\"\\n                            [destinationAttributes]=\\"this.destinationOptions[\'VENDOR\']\\"\\n                            [destinationOptionKey]=\\"IntacctExportSettingDestinationOptionKey.VENDOR\\"\\n                            [isOptionSearchInProgress]=\\"isOptionSearchInProgress\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select credit card vendor\'\\"\\n                            [formControllerName]=\\"\'creditCardVendor\'\\"\\n                            (searchOptionsDropdown)=\\"searchOptionsDropdown($event)\\"></app-configuration-select-field>\\n                        </div>\\n                        <div *ngIf=\\"exportSettingsForm.value.cccExportType===CorporateCreditCardExpensesObject.JOURNAL_ENTRY\\">\\n                            <app-configuration-select-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'GL account\'\\"\\n                            [label]=\\"\'To which GL Account should the expenses be credited to?\'\\"\\n                            [subLabel]=\\"\'The integration will credit the account selected here for Corporate Credit Card Expenses exported as Journal Entries.\'\\"\\n                            [destinationAttributes]=\\"this.destinationOptions[\'ACCOUNT\']\\"\\n                            [destinationOptionKey]=\\"IntacctExportSettingDestinationOptionKey.ACCOUNT\\"\\n                            [isOptionSearchInProgress]=\\"isOptionSearchInProgress\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select GL account\'\\"\\n                            [formControllerName]=\\"\'creditCard\'\\"\\n                            (searchOptionsDropdown)=\\"searchOptionsDropdown($event)\\"></app-configuration-select-field>\\n                        </div>\\n                        <div *ngIf=\\"exportSettingsForm.value.cccExportType===CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION\\">\\n                            <app-configuration-select-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'charge card\'\\"\\n                            [label]=\\"\'Set the Default Charge Card\'\\"\\n                            [subLabel]=\\"\'Expenses of Corporate Cards in \' + brandingConfig.brandName + \' that are not mapped to their respective cards in Sage Intacct will be posted to the Card configured here. You can map your cards in the Mapping section after configuring the integration.\'\\"\\n                            [destinationAttributes]=\\"this.destinationOptions[\'CHARGE_CARD\']\\"\\n                            [destinationOptionKey]=\\"IntacctExportSettingDestinationOptionKey.CHARGE_CARD\\"\\n                            [isOptionSearchInProgress]=\\"isOptionSearchInProgress\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select Charge Corporate Card\'\\"\\n                            [formControllerName]=\\"\'chargeCard\'\\"\\n                            (searchOptionsDropdown)=\\"searchOptionsDropdown($event)\\"></app-configuration-select-field>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingsForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <div *ngIf=\\"!exportSettingsForm.value.reimbursableExportType && exportSettingsForm.value.cccExportType === CorporateCreditCardExpensesObject.JOURNAL_ENTRY\\">\\n                            <ng-container *ngTemplateOutlet=\\"employeeFieldMapping\\"></ng-container>\\n                        </div>\\n                        <app-configuration-select-field *ngIf=\\"exportSettingsForm.value.cccExportType\\"\\n                        [form]=\\"exportSettingsForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'expense state\'\\"\\n                        [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                        [subLabel]=\\"\'You can export expenses either when they are awaiting closure after approval (Approved) or when the transaction has been settled (Closed)\'\\"\\n                        [options]=\\"cccExpenseStateOptions\\"\\n                        [iconPath]=\\"\'questionmark\'\\"\\n                        [placeholder]=\\"\'Select export state\'\\"\\n                        [formControllerName]=\\"\'cccExpenseState\'\\"></app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingsForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingsForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'export date\'\\"\\n                        [label]=\\"\'Set the \' + getExportType(exportSettingsForm.value.cccExportType) + \' date as\'\\"\\n                        [subLabel]=\\"\'Expenses will be grouped and posted using the configured date when exporting from \' + brandingConfig.brandName + \' to Sage Intacct. Click here for more details.\'\\"\\n                        [options]=\\"cccExpenseGroupingDateOptions\\"\\n                        [iconPath]=\\"\'calender\'\\"\\n                        [placeholder]=\\"\'Select date\'\\"\\n                        [formControllerName]=\\"\'cccExportDate\'\\"></app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingsForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field *ngIf=\\"exportSettingsForm.value.cccExportType!==CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION\\"\\n                        [form]=\\"exportSettingsForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'how expenses to be grouped\'\\"\\n                        [label]=\\"\'How should the expenses be grouped?\'\\"\\n                        [subLabel]=\\"\'Expenses can either be exported as single line items (Expense) or as a grouped report with multiple line items (Report)\'\\"\\n                        [options]=\\"expenseGroupingFieldOptions\\"\\n                        [iconPath]=\\"\'questionmark\'\\"\\n                        [placeholder]=\\"\'Select expense grouping\'\\"\\n                        [formControllerName]=\\"\'cccExportGroup\'\\"></app-configuration-select-field>\\n                        <div *ngIf=\\"exportSettingsForm.value.cccExportType===CorporateCreditCardExpensesObject.CHARGE_CARD_TRANSACTION\\">\\n                            <div class=\\"tw-p-24-px tw-flex tw-flex-row tw-justify-between tw-items-center\\">\\n                                <div class=\\"tw-flex tw-items-start lg:tw-w-3/5 md:tw-w-1/2\\">\\n                                    <svg-icon-sprite src=\\"expense\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n                                    <div class=\\"lg:tw-w-3/5 md:tw-w-1/2 tw-pl-6\\">\\n                                        <h4 class=\\"!tw-text-14-px !tw-font-500\\">How should the expenses be grouped?<app-mandatory-field></app-mandatory-field></h4>\\n                                        <h5 class=\\"!tw-text-faded-text-color !tw-font-400 !tw-text-14-px tw-pt-6-px !tw-leading-4\\">Expenses can either be exported as single line items (Expense) or as a grouped report with multiple line items (Expense Report)</h5>\\n                                    </div>\\n                                </div>\\n                                <div class=\\"tw-pl-18-px tw-pt-18-px\\">\\n                                    <input type=\\"text\\" class=\\"tw-text-14-px !tw-font-500 tw-w-300-px !tw-px-10-px !tw-py-8-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" formControlName=\\"cccExportGroup\\">\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div>\\n            <app-configuration-step-footer [ctaText] = \\"!saveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!exportSettingsForm.valid\\"></app-configuration-step-footer>\\n        </div>\\n    </form>\\n</div>\\n\\n<ng-template #employeeFieldMapping>\\n    <div [formGroup]=\\"exportSettingsForm\\">\\n        <app-configuration-select-field\\n            *ngIf=\\"!exportSettingsForm.controls.employeeFieldMapping.disabled\\"\\n            [form]=\\"exportSettingsForm\\"\\n            [isFieldMandatory]=\\"true\\"\\n            [mandatoryErrorListName]=\\"\'employee field\'\\"\\n            [label]=\\"\'How are your Employees represented in Sage Intacct?\'\\"\\n            [subLabel]=\\"\'Select how your employees are represented in Sage Intacct. This would help to export the expenses to the correct record in Sage Intacct\'\\"\\n            [options]=\\"employeeFieldOptions\\"\\n            [iconPath]=\\"\'twopeople\'\\"\\n            [placeholder]=\\"\'Select representation\'\\"\\n            [formControllerName]=\\"\'employeeFieldMapping\'\\"></app-configuration-select-field>\\n\\n        <div *ngIf=\\"exportSettingsForm.controls.employeeFieldMapping.disabled\\">\\n            <div class=\\"tw-p-24-px tw-flex tw-flex-row tw-justify-between tw-items-center\\">\\n                <div class=\\"tw-flex tw-items-start lg:tw-w-3/5 md:tw-w-1/2\\">\\n                    <svg-icon-sprite src=\\"expense\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-mandatory-field-color tw-pr-16-px tw-mt-4-px\\"></svg-icon-sprite>\\n                    <div>\\n                        <h4 class=\\"!tw-text-14-px !tw-font-500\\">How are your Employees represented in Sage Intacct?<app-mandatory-field></app-mandatory-field></h4>\\n                        <h5 class=\\"!tw-text-faded-text-color !tw-font-400 !tw-text-14-px tw-pt-6-px !tw-leading-4\\">Select how your employees are represented in Sage Intacct. This would help to export the expenses to the correct record in Sage Intacct</h5>\\n                    </div>\\n                </div>\\n                <div class=\\"tw-h-40-px tw-w-300-px tw-bg-disabled-bg-color tw-border radius\\">\\n                    <div class=\\"tw-text-14-px tw-text-slightly-normal-text-color tw-my-10-px tw-mx-14-px\\">{{getEmployeeFieldMapping(exportSettingsForm.value.employeeFieldMapping, exportSettingsForm.value.reimbursableExportType)}}</div>\\n                    <span class=\\"sub-text tw-pt-3-px tw-text-12-px tw-text-sub-text-color\\">Auto-selected based on your export module</span>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</ng-template>\\n"},{"name":"ConfigurationFieldSettingComponent","id":"component-ConfigurationFieldSettingComponent-d749224a15b690368fab7fd51aa30f8cf8f1e856e4fe12be8f4f836fbc786ccde379c771c2d181dfb18eeb057181f313e30a57af20f2d7315a76063f08da4702","file":"src/app/integrations/qbd/main/configuration/configuration-field-setting/configuration-field-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-field-setting","styleUrls":["./configuration-field-setting.component.scss"],"styles":[],"templateUrl":["./configuration-field-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-configuration-field-setting\',\\n  templateUrl: \'./configuration-field-setting.component.html\',\\n  styleUrls: [\'./configuration-field-setting.component.scss\']\\n})\\nexport class ConfigurationFieldSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./configuration-field-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<app-field-mapping></app-field-mapping>\\n"},{"name":"ConfigurationImportFieldComponent","id":"component-ConfigurationImportFieldComponent-9d5078376bbb05521c205cf955b1079f4b291bf5e8271080c3ced67194e062a9a6985caa15e877e49483c931b7c055e2de16ddceec767cb830477d66eae3f0b6","file":"src/app/shared/components/configuration/configuration-import-field/configuration-import-field.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-import-field","styleUrls":["./configuration-import-field.component.scss"],"styles":[],"templateUrl":["./configuration-import-field.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"accountingFieldOptions","deprecated":false,"deprecationMessage":"","line":22,"type":"IntegrationField[]","decorators":[]},{"name":"appName","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"costCategoryOption","deprecated":false,"deprecationMessage":"","line":28,"type":"ImportSettingsCustomFieldRow[]","decorators":[]},{"name":"costCodeFieldOption","deprecated":false,"deprecationMessage":"","line":30,"type":"ImportSettingsCustomFieldRow[]","decorators":[]},{"name":"defaultImportFields","deprecated":false,"deprecationMessage":"","line":26,"type":"Sage300DefaultFields[] | ImportDefaultField[]","decorators":[]},{"name":"dependentDestinationValue","deprecated":false,"deprecationMessage":"","line":34,"type":"string","decorators":[]},{"name":"dependentImportFields","deprecated":false,"deprecationMessage":"","line":32,"type":"Sage300DependentImportFields[]","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":20,"type":"FormGroup","decorators":[]},{"name":"fyleFieldOptions","deprecated":false,"deprecationMessage":"","line":24,"type":"FyleField[]","decorators":[]},{"name":"isCloneSettingView","deprecated":false,"deprecationMessage":"","line":38,"type":"boolean","decorators":[]},{"name":"isDestinationFixedImport","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":36,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"showWarningForDependentFields","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":40,"type":"EventEmitter"}],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[148]},{"name":"showAddButton","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":44},{"name":"showDependentFieldWarning","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":42}],"methodsClass":[{"name":"addExpenseField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":""},{"name":"hasDuplicateOption","args":[{"name":"formGroup","type":"AbstractControl","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"controlName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"formGroup","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controlName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isExpenseFieldDependent","args":[{"name":"expenseField","type":"MappingSetting","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expenseField","type":"MappingSetting","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":""},{"name":"onDropdownChange","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"onShowWarningForDependentFields","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""},{"name":"formGroup","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formGroup","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeFilter","args":[{"name":"expenseField","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expenseField","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showOrHideAddButton","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":""},{"name":"updateDependentField","args":[{"name":"sourceField","type":"string","deprecated":false,"deprecationMessage":""},{"name":"importToFyle","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"sourceField","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"importToFyle","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { AbstractControl, FormArray, FormGroup } from \'@angular/forms\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { ImportDefaultField, ImportSettingMappingRow, ImportSettingsCustomFieldRow, ImportSettingsModel } from \'src/app/core/models/common/import-settings.model\';\\nimport { FyleField, IntegrationField } from \'src/app/core/models/db/mapping.model\';\\nimport { MappingSourceField } from \'src/app/core/models/enum/enum.model\';\\nimport { Sage300DefaultFields, Sage300DependentImportFields, Sage300ImportSettingModel } from \'src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model\';\\nimport { MappingSetting } from \'src/app/core/models/si/si-configuration/import-settings.model\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\n\\n@Component({\\n  selector: \'app-configuration-import-field\',\\n  templateUrl: \'./configuration-import-field.component.html\',\\n  styleUrls: [\'./configuration-import-field.component.scss\']\\n})\\nexport class ConfigurationImportFieldComponent implements OnInit {\\n\\n  @Input() appName: string;\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() accountingFieldOptions: IntegrationField[];\\n\\n  @Input() fyleFieldOptions: FyleField[];\\n\\n  @Input() defaultImportFields: Sage300DefaultFields[] | ImportDefaultField[];\\n\\n  @Input() costCategoryOption: ImportSettingsCustomFieldRow[];\\n\\n  @Input() costCodeFieldOption: ImportSettingsCustomFieldRow[];\\n\\n  @Input() dependentImportFields: Sage300DependentImportFields[];\\n\\n  @Input() dependentDestinationValue: string;\\n\\n  @Input() isDestinationFixedImport: boolean = false;\\n\\n  @Input() isCloneSettingView: boolean;\\n\\n  @Output() showWarningForDependentFields = new EventEmitter();\\n\\n  showDependentFieldWarning: boolean;\\n\\n  showAddButton: any;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor() { }\\n\\n  get expenseFieldsGetter() {\\n    return this.form.get(\'expenseFields\') as FormArray;\\n  }\\n\\n  showOrHideAddButton() {\\n    if (this.form.controls.expenseFields.value.length === this.accountingFieldOptions.length) {\\n      return false;\\n    }\\n    return true;\\n  }\\n\\n  addExpenseField() {\\n    const expenseFields = this.form.get(\'expenseFields\') as FormArray;\\n    const defaultFieldData: ImportSettingMappingRow = {\\n      source_field: \'\',\\n      destination_field: \'\',\\n      import_to_fyle: true,\\n      is_custom: false,\\n      source_placeholder: null\\n    };\\n    expenseFields.push(ImportSettingsModel.createFormGroup(defaultFieldData));\\n    this.showAddButton = this.showOrHideAddButton();\\n  }\\n\\n  hasDuplicateOption(formGroup: AbstractControl, index: number, controlName: string): boolean {\\n    return (formGroup as FormGroup).controls[controlName].valid;\\n  }\\n\\n  onDropdownChange(event: any, index: number) {\\n    // Get the selected value from the <p-dropdown>\\n    const selectedValue = event.value;\\n\\n    // Find the selected field in \'fyleFields\' based on the selected value\\n    const selectedField = this.fyleFieldOptions.find(field => field.attribute_type === selectedValue);\\n\\n    // Check if the selected field is dependent (assuming \'is_dependent\' is a property in \'selectedField\')\\n    if (selectedField?.is_dependent) {\\n      // Set the toggle to false\\n      (this.form.get(\'expenseFields\') as FormArray).at(index)?.get(\'import_to_fyle\')?.setValue(false);\\n\\n      // Get the \'import_to_fyle\' control at the specified index and disable it\\n      (this.form.get(\'expenseFields\') as FormArray).at(index)?.get(\'import_to_fyle\')?.disable();\\n    } else {\\n      (this.form.get(\'expenseFields\') as FormArray).at(index)?.get(\'import_to_fyle\')?.setValue(true);\\n    }\\n  }\\n\\n  removeFilter(expenseField: AbstractControl) {\\n    (expenseField as FormGroup).controls.source_field.patchValue(\'\');\\n    (expenseField as FormGroup).controls.import_to_fyle.patchValue(false);\\n    (expenseField as FormGroup).controls.import_to_fyle.enable();\\n    event?.stopPropagation();\\n  }\\n\\n  onShowWarningForDependentFields(event: any, formGroup: AbstractControl): void {\\n    if (!event.checked && formGroup.value.source_field === MappingSourceField.PROJECT) {\\n      this.showWarningForDependentFields.emit();\\n    }\\n  }\\n\\n  isExpenseFieldDependent(expenseField: MappingSetting): boolean {\\n    const isDependent = this.fyleFieldOptions.find(field => field.attribute_type === expenseField.source_field)?.is_dependent;\\n    return isDependent ? true : false;\\n  }\\n\\n  updateDependentField(sourceField: string, importToFyle: boolean) {\\n    if (!(sourceField===\'PROJECT\' && importToFyle)) {\\n      this.form.controls.isDependentImportEnabled.setValue(false);\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"  :host ::ng-deep .p-button {\\n    @apply tw-w-fit #{!important};\\n  }\\n  \\n  .save-btn {\\n    @apply tw-border tw-bg-mandatory-field-color tw-rounded-4-px #{!important};\\n  }\\n  \\n  .cancel-btn {\\n    @apply tw-py-10-px tw-px-16-px tw-border tw-border-box-color tw-bg-white tw-rounded-4-px tw-text-slightly-normal-text-color tw-mr-16-px #{!important};\\n  }\\n  \\n  :host ::ng-deep .p-dropdown {\\n    transform: scale(0.9);\\n  }\\n  \\n  .form-input-disabled {\\n    @apply tw-px-12-px tw-pt-0 tw-pb-14-px tw-bg-disabled-bg-color tw-border tw-border-box-color tw-rounded-8-px ;\\n  }\\n  \\n  .label-content {\\n    @apply tw-bg-disabled-bg-color tw-border tw-border-box-color tw-rounded-4-px tw-h-100-px ;\\n  }\\n  \\n  .name-text {\\n    @apply tw-pl-12-px tw-pt-0 tw-pr-8-px tw-pb-16-px ;\\n  }\\n  \\n  .form-field {\\n    @apply tw-pl-8-px tw-py-16-px tw-pr-22-px ;\\n  }\\n  \\n  .form-input {\\n    @apply tw-px-12-px tw-pt-0 tw-pb-14-px tw-bg-white tw-border tw-border-box-color tw-rounded-8-px ;\\n  }\\n  \\n  .container {\\n    @apply tw-flex tw-justify-center ;\\n  }\\n  \\n  .sub-text {\\n    @apply tw-rounded-8-px tw-border tw-border-separator tw-bg-configuration-bg tw-p-24-px tw-items-start tw-flex-col tw-gap-4;\\n  }\\n  \\n  .sub-text-note {\\n    @apply tw-flex tw-bg-info-section tw-p-16-px tw-items-start tw-self-stretch tw-text-14-px tw-font-400 tw-text-faded-text-color tw-not-italic\\n  }\\n  \\n  .fields-header {\\n    @apply tw-flex ;\\n  }\\n  \\n  .fields-header-text {\\n    @apply tw-font-500 tw-leading-16-px ;\\n  }\\n    \\n  :host ::ng-deep .p-inputswitch.p-inputswitch-checked .p-inputswitch-slider::after {\\n    @apply tw-content-yes tw-flex tw-justify-center tw-items-center tw-absolute tw-text-12-px tw-text-white tw-font-500 tw-left-2 tw-bottom-px ;\\n  }\\n  \\n  :host ::ng-deep .p-inputswitch:not(.p-inputswitch-checked) .p-inputswitch-slider::after {\\n    @apply tw-content-no tw-flex tw-justify-center tw-items-center tw-absolute tw-text-12-px tw-text-white tw-font-500 tw-left-6 tw-bottom-px ;\\n  }\\n    \\n  .add-button-container {\\n    @apply tw-flex tw-items-center tw-pt-7 tw-pl-40-px ;\\n  }\\n  \\n  .add-row-text {\\n    @apply tw-cursor-pointer tw-text-mandatory-field-color ; /* Changes the cursor to a hand when hovering */\\n  }\\n  \\n  .delete-button {\\n    @apply tw-cursor-pointer ;\\n  }\\n  \\n  .custom-option {\\n    @apply tw-flex tw-text-mandatory-field-color ;\\n  }\\n  \\n  .icon-align {\\n    @apply tw-ml-0 tw-mr-6-px tw-align-middle ;\\n  }\\n  \\n  :host ::ng-deep input {\\n    @apply tw-text-14-px #{!important};\\n  }\\n  \\n  :host ::ng-deep .selectedItem  .p-dropdown-trigger, :host ::ng-deep .selectedAccItem .p-dropdown-trigger{\\n    @apply tw-hidden #{!important};\\n  }\\n\\n  :host ::ng-deep .selectedAccItem .p-dropdown.p-disabled {\\n    @apply tw-bg-disabled-bg-color tw-border tw-border-box-color #{!important}\\n  }\\n  \\n  .error-box {\\n    @apply tw-bg-alert-toast tw-border tw-border-alert-toast tw-rounded-4-px ;\\n  }\\n\\n.container {\\n  @apply tw-relative tw-cursor-pointer tw-select-none tw-block #{!important};\\n}\\n\\n/* Hide the browser\'s default checkbox */\\n.container input {\\n  @apply tw-absolute tw-opacity-0 tw-cursor-pointer tw-h-0 tw-w-0\\n}\\n\\n.checkmark {\\n  @apply tw-absolute tw-top-0 tw-left-0 tw-h-18-px tw-w-18-px tw-bg-white tw-rounded-md tw-border tw-border-box-color\\n}\\n\\n.container input:checked ~ .checkmark {\\n  @apply tw-bg-faded-text-color\\n}\\n\\n/* Create the checkmark/indicator (hidden when not checked) */\\n.checkmark:after {\\n  @apply tw-content-empty tw-absolute tw-hidden\\n}\\n\\n/* Show the checkmark when checked */\\n.container input:checked ~ .checkmark:after {\\n  @apply tw-block ;\\n}\\n\\n/* Style the checkmark/indicator */\\n.container .checkmark:after {\\n  @apply tw-left-2 tw-top-0.5 tw-w-6-px tw-h-10-px tw-border-t-0-px tw-border-r-3-px tw-border-b-3-px tw-border-l-0-px tw-border-white tw-rotate-45;\\n}","styleUrl":"./configuration-import-field.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":46},"extends":[],"implements":["OnInit"],"accessors":{"expenseFieldsGetter":{"name":"expenseFieldsGetter","getSignature":{"name":"expenseFieldsGetter","type":"","returnType":"","line":50}}},"templateData":"<div [formGroup]=\\"form\\">\\n    <div *ngIf=\\"!isDestinationFixedImport && !isCloneSettingView\\" class=\\"fields-header\\" fxLayout=\\"row\\" fxLayoutAlign=\\"start center\\">\\n        <div class=\\"fields-header-text tw-pl-48-px tw-w-450-px\\">{{appName}} Dimensions</div>\\n        <div class=\\"fields-header-text tw-w-30-vw\\">{{brandingConfig.brandName}} Fields</div>\\n        <div class=\\"fields-header-text tw-flex tw-w-[10vw] tw-whitespace-nowrap\\">\\n            Import to {{brandingConfig.brandName}}\\n            <svg-icon-sprite src=\\"info\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-faded-text-color\\" tooltipPosition=\\"top\\"\\n                [pTooltip]=\\"\'Importing a dimension syncs active values from \' + appName + \' every 24 hours. Deactivated values in \' + appName + \' will also be disabled in \' + brandingConfig.brandName + \'\'\\">\\n            </svg-icon-sprite>\\n        </div>\\n    </div>\\n    <div class=\\"tw-pl-48-px tw-mt-18px\\">\\n        <div *ngFor=\\"let defaultField of defaultImportFields\\">\\n            <div class=\\"tw-flex tw-pt-18-px\\">\\n                <div>\\n                    <input type=\\"text\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-font-500 tw-w-300-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"{{ defaultField.destination_field | snakeCaseToSpaceCase | titlecase }}\\" disabled>\\n                </div>\\n                <svg-icon-sprite src=\\"arrow-line\\" height=\\"10px\\" width=\\"100px\\" class=\\"!tw-ml-0 tw-pt-16-px tw-text-box-color\\"></svg-icon-sprite>\\n                <div class=\\"tw-w-30-vw\\">\\n                    <input type=\\"text\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-font-500 tw-w-300-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"{{ defaultField.source_field | snakeCaseToSpaceCase | titlecase }}\\" disabled>\\n                </div>\\n                <div class=\\"input-toggle-section tw-w-10-vw tw-pt-10-px\\">\\n                    <p-inputSwitch [formControlName]=\\"defaultField.formController\\"></p-inputSwitch>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div formArrayName=\\"expenseFields\\" [ngClass]=\\"[isDestinationFixedImport ? \'\' : \'tw-pl-24-px tw-mt-18px\']\\">\\n        <div *ngFor=\\"let expenseField of expenseFieldsGetter.controls; let i = index\\" [formGroupName]=\\"i\\" [ngClass]=\\"{\'tw-mt-24-px tw-pb-24-px\': isDestinationFixedImport, \'tw-rounded-lg tw-border-separator tw-border\': isDestinationFixedImport && !isCloneSettingView, \'tw-pr-24-px\': isCloneSettingView}\\">\\n            <div class=\\"tw-pl-24-px tw-mt-18-px\\" [ngClass]=\\"{\'tw-bg-configuration-bg tw-rounded-8-px tw-py-16-px tw-w-fit tw-pr-24-px\':expenseField.value.source_field===\'PROJECT\' && expenseField.value.import_to_fyle && expenseField.value.destination_field === dependentDestinationValue}\\">\\n            <div *ngIf=\\"isDestinationFixedImport\\">\\n                <div [ngClass]=\\"!isCloneSettingView ? \'tw-p-24-px\': \'tw-pl-24-px\'\\" class=\\"tw-flex tw-justify-between\\">\\n                    <div class=\\"tw-w-3/4 tw-flex tw-items-start\\">\\n                      <div class=\\"tw-pr-16-px\\">\\n                        <svg-icon-sprite src=\\"{{isCloneSettingView ? \'arrow-tail-down\': \'import-setting\'}}\\" width=\\"24px\\" height=\\"24px\\" class=\\"tw-block tw-ml-0\\" [ngClass]=\\"isCloneSettingView ? \'tw-text-menu-inactive-text-color\' : \'tw-text-mandatory-field-color\'\\"></svg-icon-sprite>\\n                      </div>\\n                      <div>\\n                        <h4 class=\\"tw-text-slightly-normal-text-color\\" [ngClass]=\\"isCloneSettingView ? \'tw-py-2-px tw-text-14-px\' : \'tw-text-16-px !tw-font-500\'\\">\\n                            Import {{ expenseField.value.destination_field | snakeCaseToSpaceCase | titlecase }} from {{ appName }}\\n                        </h4>\\n                        <h5 *ngIf=\\"!isCloneSettingView\\" class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\">\\n                          The imported {{ expenseField.value.destination_field | snakeCaseToSpaceCase | titlecase }} from {{ appName }} will be a selectable field while creating an expense.\\n                        </h5>        \\n                      </div>\\n                    </div>\\n                    <div class=\\"configuration--input-toggle-section\\">\\n                      <p-inputSwitch formControlName=\\"import_to_fyle\\"></p-inputSwitch>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\"tw-flex\\" [ngClass]=\\"[isDestinationFixedImport ? \'tw-pl-60-px\' : \'\']\\">\\n                <div>\\n                    <p-dropdown appendTo=\\"body\\" [options]=\\"accountingFieldOptions\\" placeholder=\\"Choose {{appName}} field\\" formControlName=\\"destination_field\\" dropdownIcon=\\"pi pi-chevron-down\\"\\n                        optionLabel=\\"display_name\\" optionValue=\\"attribute_type\\" [disabled]=\\"isDestinationFixedImport\\" [ngClass]=\\"{\'selectedAccItem !tw-text-slightly-normal-text-color\': isDestinationFixedImport}\\">\\n                        <ng-template let-option pTemplate=\\"item\\">\\n                            <div>\\n                                {{ option.display_name | snakeCaseToSpaceCase | titlecase }}\\n                            </div>\\n                        </ng-template>\\n                        <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                                <span>\\n                                    {{ item.display_name | snakeCaseToSpaceCase | titlecase }}\\n                                </span>\\n                            </div>\\n                        </ng-template>\\n                    </p-dropdown>\\n                    <p *ngIf=\\"expenseField.value.destination_field && !expenseField.valid && !hasDuplicateOption(expenseField, i, \'destination_field\')\\" class=\\"tw-text-alert-toast tw-text-12-px tw-pt-4-px\\">\\n                        {{appName}} Fields should be unique\\n                    </p>\\n                </div>\\n                    <svg-icon-sprite src=\\"arrow-line\\" height=\\"10px\\" width=\\"100px\\" class=\\"!tw-ml-0 tw-pt-16-px tw-text-box-color\\"></svg-icon-sprite>\\n                    <div class=\\"tw-w-28-vw\\">\\n                        <p-dropdown (onChange)=\\"onDropdownChange($event, i)\\" appendTo=\\"body\\" [options]=\\"fyleFieldOptions\\" [placeholder]=\\"\'Choose \' + brandingConfig.brandName + \' Expense field\'\\" formControlName=\\"source_field\\"\\n                        optionLabel=\\"display_name\\" optionValue=\\"attribute_type\\" [ngClass]=\\"{\'selectedItem\': expenseField.value.source_field, \'filterDropdown\': !expenseField.value.source_field}\\" dropdownIcon=\\"pi pi-chevron-down\\">\\n                            <ng-template let-option pTemplate=\\"item\\">\\n                            <div [ngClass]=\\"{\'custom-option\': option.attribute_type === \'custom_field\'}\\">\\n                                <svg-icon-sprite *ngIf=\\"option.attribute_type === \'custom_field\'\\" src=\\"add\\" width=\\"20px\\" height=\\"20px\\" class=\\"icon-align\\"></svg-icon-sprite>\\n                                {{ option.display_name }}\\n                            </div>\\n                            </ng-template>\\n                            <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                            <div class=\\"tw-flex tw-justify-between tw-items-center \\">\\n                                <span>\\n                                    {{ item.display_name }}\\n                                </span>\\n                                <i class=\\"pi pi-times\\" (click)=\\"removeFilter(expenseField)\\"></i>\\n                            </div>\\n                            </ng-template>\\n                      </p-dropdown>\\n                      <p *ngIf=\\"expenseField.value.source_field && !expenseField.valid && !hasDuplicateOption(expenseField, i, \'source_field\')\\" class=\\"tw-text-alert-toast tw-text-12-px tw-pt-4-px\\">\\n                        {{brandingConfig.brandName}} Fields should be unique\\n                        </p>\\n                    </div>\\n                <p-inputSwitch *ngIf=\\"!isDestinationFixedImport\\" (onChange)=\\"onShowWarningForDependentFields($event, expenseField)\\" [pTooltip]=\\"isExpenseFieldDependent(expenseField.value) ? \'You cannot import dependent fields\' : \'\' \\" (click)=\\"updateDependentField(expenseField.value.source_field,expenseField.value.import_to_fyle)\\" formControlName=\\"import_to_fyle\\" class=\\"tw-pl-32-px input-toggle-section tw-pt-10-px\\"></p-inputSwitch>\\n            </div>\\n            <div class=\\"tw-pt-26-px\\" *ngIf=\\"expenseField.value.source_field===\'PROJECT\' && expenseField.value.import_to_fyle && expenseField.value.destination_field === dependentDestinationValue\\" [formGroup]=\\"form\\">\\n                <div class=\\"tw-flex\\">\\n                    <label class=\\"container tw-pl-24-px tw-text-14-px\\">Import Cost Code and Cost Type from {{appName}} as dependent fields\\n                        <input type=\\"checkbox\\" formControlName=\\"isDependentImportEnabled\\">\\n                        <span class=\\"checkmark\\"></span>\\n                    </label>\\n                </div>\\n                <div *ngIf=\\"form.value.isDependentImportEnabled && dependentImportFields\\">\\n                    <div *ngFor=\\"let dependentField of dependentImportFields; index as i\\" class=\\"tw-flex tw-items-center tw-pt-4\\" [ngClass]=\\"[i ? \'tw-pl-20-px\' : \'tw-pl-0-px\']\\">\\n                        <div>\\n                            <svg-icon-sprite src=\\"Line\\" width=\\"20px\\" height=\\"48px\\" class=\\"tw-text-box-color\\"></svg-icon-sprite>\\n                        </div>\\n                        <div>\\n                            <p class=\\"tw-pl-16-px tw-mb-8-px tw-text-14-px tw-text-sub-text-color !tw-font-400\\">Dependent Field <app-mandatory-field></app-mandatory-field> </p>\\n                            <input type=\\"text\\" [ngClass]=\\"[i ? \'tw-w-240-px\' : \'tw-w-260-px\']\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-ml-20-px !tw-font-500 !tw-h-40-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"{{dependentField.source_field}}\\" disabled>\\n                        </div>\\n                        <svg-icon-sprite src=\\"arrow-line\\" height=\\"10px\\" width=\\"100px\\" class=\\"!tw-ml-0 tw-pt-34-px tw-text-box-color\\"></svg-icon-sprite>\\n                        <div>\\n                            <p class=\\"tw-mb-8-px tw-text-14-px tw-text-sub-text-color !tw-font-400\\">Fyle Field <app-mandatory-field></app-mandatory-field> </p>\\n                            <p-dropdown appendTo=\\"body\\" class=\\"tw-w-28-vw\\" [formControlName]=\\"dependentField.formController\\" [options]=\\"dependentField.options\\" optionLabel=\\"attribute_type\\" placeholder=\\"Select Expense Field\\" [disabled]=\\"dependentField.isDisabled\\" dropdownIcon=\\"pi pi-chevron-down\\">\\n                                <ng-template let-option pTemplate=\\"item\\">\\n                                    <div [ngClass]=\\"{\'custom-option\': option.attribute_type === \'custom_field\'}\\">\\n                                      <svg-icon-sprite *ngIf=\\"option.attribute_type === \'custom_field\'\\" src=\\"add\\" width=\\"20px\\" height=\\"20px\\" class=\\"icon-align\\"></svg-icon-sprite>\\n                                      {{ option.display_name }}\\n                                    </div>\\n                                  </ng-template>\\n                            </p-dropdown>\\n                        </div>\\n                        <p-inputSwitch class=\\"tw-pl-128-px input-toggle-section tw-pt-30-px\\" formControlName=\\"dependentFieldImportToggle\\" [disabled]=\\"true\\"></p-inputSwitch>\\n                    </div>\\n                </div>\\n            </div>                      \\n            <div class=\\"tw-text-alert-toast tw-pt-4 tw-pl-1\\" *ngIf=\\"form.get(\'expenseFields\')?.hasError(\'duplicatefyleFieldOptions\') || form.get(\'expenseFields\')?.hasError(\'duplicateaccountingFieldOptions\')\\">\\n                *{{brandingConfig.brandName}} and {{appName}} Fields should be unique.\\n            </div> \\n        </div>  \\n    </div>               \\n    </div>\\n    <div *ngIf=\\"showOrHideAddButton() && !isDestinationFixedImport\\" class=\\"add-button-container\\">\\n        <svg-icon-sprite src=\\"add\\" width=\\"20px\\" height=\\"20px\\" class=\\"add-row-text\\" (click)=\\"addExpenseField()\\"></svg-icon-sprite>\\n        <a class=\\"add-row-text tw-pl-2\\" (click)=\\"addExpenseField()\\">\\n            Add more fields\\n        </a>\\n    </div>  \\n</div>\\n"},{"name":"ConfigurationImportSettingComponent","id":"component-ConfigurationImportSettingComponent-3c93ad9a9b04d11f2977f57b3321a69d37f44cccdb5881fc725bd4408db81cf17db228a48f4324110c235a6937f18ff56a4ef48126e16da6453670d4f6f7fa73","file":"src/app/integrations/si/main/configuration/configuration-import-setting/configuration-import-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-import-setting","styleUrls":["./configuration-import-setting.component.scss"],"styles":[],"templateUrl":["./configuration-import-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-configuration-import-setting\',\\n  templateUrl: \'./configuration-import-setting.component.html\',\\n  styleUrls: [\'./configuration-import-setting.component.scss\']\\n})\\nexport class ConfigurationImportSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./configuration-import-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<app-configuration-import-settings></app-configuration-import-settings>"},{"name":"ConfigurationImportSettingsComponent","id":"component-ConfigurationImportSettingsComponent-9eb6394096b37bcade26ec934898f8d84cf9e920b7f52f4b03b1a4f0cd69a1f073b4816c23fa7cef43e6858bbf5e6e7dd8f17e38d58bd2092951e86782ccb700","file":"src/app/shared/components/si/configuration/configuration-import-settings/configuration-import-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-import-settings","styleUrls":["./configuration-import-settings.component.scss"],"styles":[],"templateUrl":["./configuration-import-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"appName","defaultValue":"AppName.INTACCT","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":87,"modifierKind":[148]},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":43},{"name":"costCodeFieldOption","defaultValue":"[{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: true }]","deprecated":false,"deprecationMessage":"","type":"ExpenseField[]","optional":false,"description":"","line":69},{"name":"costTypeFieldOption","defaultValue":"[{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: true }]","deprecated":false,"deprecationMessage":"","type":"ExpenseField[]","optional":false,"description":"","line":73},{"name":"customField","deprecated":false,"deprecationMessage":"","type":"ExpenseField","optional":false,"description":"","line":61},{"name":"customFieldControl","deprecated":false,"deprecationMessage":"","type":"AbstractControl","optional":false,"description":"","line":63},{"name":"customFieldForDependentField","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":65},{"name":"customFieldForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":33},{"name":"customFieldOption","defaultValue":"[{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: false }]","deprecated":false,"deprecationMessage":"","type":"ExpenseField[]","optional":false,"description":"","line":75},{"name":"dependentFieldSettings","deprecated":false,"deprecationMessage":"","type":"DependentFieldSetting | null","optional":false,"description":"","line":77},{"name":"existingFields","defaultValue":"[\'employee id\', \'organisation name\', \'employee name\', \'employee email\', \'expense date\', \'expense date\', \'expense id\', \'report id\', \'employee id\', \'department\', \'state\', \'reporter\', \'report\', \'purpose\', \'vendor\', \'category\', \'category code\', \'mileage distance\', \'mileage unit\', \'flight from city\', \'flight to city\', \'flight from date\', \'flight to date\', \'flight from class\', \'flight to class\', \'hotel checkin\', \'hotel checkout\', \'hotel location\', \'hotel breakfast\', \'currency\', \'amount\', \'foreign currency\', \'foreign amount\', \'tax\', \'approver\', \'project\', \'billable\', \'cost center\', \'cost center code\', \'approved on\', \'reimbursable\', \'receipts\', \'paid date\', \'expense created date\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":85},{"name":"expenseFields","deprecated":false,"deprecationMessage":"","type":"FormArray","optional":false,"description":"","line":35},{"name":"fyleFields","deprecated":false,"deprecationMessage":"","type":"ExpenseField[]","optional":false,"description":"","line":51},{"name":"importSettings","deprecated":false,"deprecationMessage":"","type":"ImportSettingGet","optional":false,"description":"","line":45},{"name":"importSettingsForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":31},{"name":"intacctCategoryDestination","deprecated":false,"deprecationMessage":"","type":"IntacctCategoryDestination","optional":false,"description":"","line":57},{"name":"isCostCodeFieldSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":71,"modifierKind":[123]},{"name":"isDialogVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":83},{"name":"isImportTaxVisible","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":79},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":41},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.INTACCT.IMPORT_SETTING","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37},{"name":"sageIntacctFields","deprecated":false,"deprecationMessage":"","type":"ExpenseField[]","optional":false,"description":"","line":49},{"name":"sageIntacctTaxGroup","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":47},{"name":"saveInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":39},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":67,"modifierKind":[123]},{"name":"showAddButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":53},{"name":"showDependentFieldWarning","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":81},{"name":"showDialog","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":59},{"name":"toggleSwitchTrue","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":55}],"methodsClass":[{"name":"acceptDependentFieldWarning","args":[{"name":"isWarningAccepted","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":519,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isWarningAccepted","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"addCustomField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":276,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"addExpenseField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":""},{"name":"closeModel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":""},{"name":"constructFormArray","args":[],"optional":false,"returnType":"FormGroup[]","typeParameters":[],"line":324,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"costCodesCostTypesWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":217,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createFormGroup","args":[{"name":"data","type":"MappingSetting","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"FormGroup","typeParameters":[],"line":313,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"data","type":"MappingSetting","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"generateDependentFieldValue","args":[{"name":"attribute_type","type":"string","deprecated":false,"deprecationMessage":""},{"name":"source_placeholder","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"ExpenseField","typeParameters":[],"line":401,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"attribute_type","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"source_placeholder","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getPhase","args":[],"optional":false,"returnType":"ProgressPhase","typeParameters":[],"line":515,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":445,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"hasDuplicateOption","args":[{"name":"formGroup","type":"AbstractControl","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""},{"name":"controlName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"formGroup","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"controlName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"importSettingWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":285,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initializeForm","args":[{"name":"importSettings","type":"ImportSettingGet","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":414,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"importSettings","type":"ImportSettingGet","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isExpenseFieldDependent","args":[{"name":"expenseField","type":"MappingSetting","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":396,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expenseField","type":"MappingSetting","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":572,"deprecated":false,"deprecationMessage":""},{"name":"onDropdownChange","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":379,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeFilter","args":[{"name":"expenseField","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expenseField","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":543,"deprecated":false,"deprecationMessage":""},{"name":"saveCustomField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":157,"deprecated":false,"deprecationMessage":""},{"name":"showImportTax","args":[{"name":"locationEntity","type":"LocationEntityMapping","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":410,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"locationEntity","type":"LocationEntityMapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showOrHideAddButton","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":""},{"name":"showPreviewDialog","args":[{"name":"visible","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"visible","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showWarningForDependentFields","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""},{"name":"formGroup","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":537,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formGroup","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"toTitleCase","args":[{"name":"str","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"str","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateDependentField","args":[{"name":"sourceField","type":"string","deprecated":false,"deprecationMessage":""},{"name":"importToFyle","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":211,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"sourceField","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"importToFyle","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { RxwebValidators } from \'@rxweb/reactive-form-validators\';\\nimport { forkJoin } from \'rxjs\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { IntacctCategoryDestination, ConfigurationCta, IntacctOnboardingState, IntacctUpdateEvent, Page, ProgressPhase, ToastSeverity, MappingSourceField, AppName } from \'src/app/core/models/enum/enum.model\';\\nimport { IntacctDestinationAttribute } from \'src/app/core/models/si/db/destination-attribute.model\';\\nimport { ExpenseField } from \'src/app/core/models/si/db/expense-field.model\';\\nimport { LocationEntityMapping } from \'src/app/core/models/si/db/location-entity-mapping.model\';\\nimport { DependentFieldSetting, ImportSettingGet, ImportSettingPost, ImportSettings, MappingSetting } from \'src/app/core/models/si/si-configuration/import-settings.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { StorageService } from \'src/app/core/services/common/storage.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { SiImportSettingService } from \'src/app/core/services/si/si-configuration/si-import-setting.service\';\\nimport { IntacctConnectorService } from \'src/app/core/services/si/si-core/intacct-connector.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { SiWorkspaceService } from \'src/app/core/services/si/si-core/si-workspace.service\';\\n\\n@Component({\\n  selector: \'app-configuration-import-settings\',\\n  templateUrl: \'./configuration-import-settings.component.html\',\\n  styleUrls: [\'./configuration-import-settings.component.scss\']\\n})\\nexport class ConfigurationImportSettingsComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  appName = AppName.INTACCT;\\n\\n  importSettingsForm: FormGroup;\\n\\n  customFieldForm: FormGroup;\\n\\n  expenseFields: FormArray;\\n\\n  redirectLink = brandingKbArticles.onboardingArticles.INTACCT.IMPORT_SETTING;\\n\\n  saveInProgress: boolean = false;\\n\\n  isOnboarding: boolean;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  importSettings: ImportSettingGet;\\n\\n  sageIntacctTaxGroup: IntacctDestinationAttribute[];\\n\\n  sageIntacctFields: ExpenseField[];\\n\\n  fyleFields: ExpenseField[];\\n\\n  showAddButton: boolean = true;\\n\\n  toggleSwitchTrue: boolean = true;\\n\\n  intacctCategoryDestination: IntacctCategoryDestination;\\n\\n  showDialog: boolean;\\n\\n  customField: ExpenseField;\\n\\n  customFieldControl: AbstractControl;\\n\\n  customFieldForDependentField: boolean = false;\\n\\n  private sessionStartTime = new Date();\\n\\n  costCodeFieldOption: ExpenseField[] = [{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: true }];\\n\\n  private isCostCodeFieldSelected: boolean = false;\\n\\n  costTypeFieldOption: ExpenseField[] = [{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: true }];\\n\\n  customFieldOption: ExpenseField[] = [{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: false }];\\n\\n  dependentFieldSettings: DependentFieldSetting | null;\\n\\n  isImportTaxVisible: boolean = true;\\n\\n  showDependentFieldWarning: boolean;\\n\\n  isDialogVisible: boolean = false;\\n\\n  existingFields: string[] = [\'employee id\', \'organisation name\', \'employee name\', \'employee email\', \'expense date\', \'expense date\', \'expense id\', \'report id\', \'employee id\', \'department\', \'state\', \'reporter\', \'report\', \'purpose\', \'vendor\', \'category\', \'category code\', \'mileage distance\', \'mileage unit\', \'flight from city\', \'flight to city\', \'flight from date\', \'flight to date\', \'flight from class\', \'flight to class\', \'hotel checkin\', \'hotel checkout\', \'hotel location\', \'hotel breakfast\', \'currency\', \'amount\', \'foreign currency\', \'foreign amount\', \'tax\', \'approver\', \'project\', \'billable\', \'cost center\', \'cost center code\', \'approved on\', \'reimbursable\', \'receipts\', \'paid date\', \'expense created date\'];\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private router: Router,\\n    private mappingService: SiMappingsService,\\n    private connectorService: IntacctConnectorService,\\n    private importSettingService: SiImportSettingService,\\n    private formBuilder: FormBuilder,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService,\\n    private storageService: StorageService,\\n    private workspaceService: SiWorkspaceService\\n  ) { }\\n\\n  get expenseFieldsGetter() {\\n    return this.importSettingsForm.get(\'expenseFields\') as FormArray;\\n  }\\n\\n  refreshDimensions(isRefresh: boolean) {\\n    this.mappingService.refreshSageIntacctDimensions().subscribe();\\n    this.mappingService.refreshFyleDimensions().subscribe();\\n    this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Refreshing data dimensions from Sage Intacct\');\\n  }\\n\\n  removeFilter(expenseField: AbstractControl) {\\n    (expenseField as FormGroup).controls.source_field.patchValue(\'\');\\n    (expenseField as FormGroup).controls.import_to_fyle.patchValue(false);\\n    event?.stopPropagation();\\n  }\\n\\n  hasDuplicateOption(formGroup: AbstractControl, index: number, controlName: string): boolean {\\n    return (formGroup as FormGroup).controls[controlName].valid;\\n  }\\n\\n  toTitleCase(str: string) {\\n    return str.replace(/\\\\w\\\\S*/g, function(txt) {\\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\\n    });\\n  }\\n\\n  showOrHideAddButton() {\\n    if (this.importSettingsForm.controls.expenseFields.value.length === this.sageIntacctFields.length) {\\n      return false;\\n    }\\n    return true;\\n  }\\n\\n  showPreviewDialog(visible: boolean) {\\n    this.isDialogVisible = visible;\\n  }\\n\\n  addExpenseField() {\\n    this.expenseFields = this.importSettingsForm.get(\'expenseFields\') as FormArray;\\n    const defaultFieldData: MappingSetting = {\\n      source_field: \'\',\\n      destination_field: \'\',\\n      import_to_fyle: true,\\n      is_custom: false,\\n      source_placeholder: null\\n    };\\n    this.expenseFields.push(this.createFormGroup(defaultFieldData));\\n    this.importSettingWatcher();\\n    this.showAddButton = this.showOrHideAddButton();\\n  }\\n\\n  closeModel() {\\n    this.customFieldForm.reset();\\n    this.showDialog = false;\\n  }\\n\\n  saveCustomField() {\\n    if (this.customFieldForDependentField && this.customFieldForm.value) {\\n      this.customField = {\\n        attribute_type: this.customFieldForm.value.attribute_type,\\n        display_name: this.customFieldForm.value.attribute_type,\\n        source_placeholder: this.customFieldForm.value.source_placeholder,\\n        is_dependent: true\\n      };\\n      if (this.customFieldControl) {\\n        if (this.isCostCodeFieldSelected) {\\n          this.costCodeFieldOption.push(this.customField);\\n        } else {\\n          this.costTypeFieldOption.push(this.customField);\\n        }\\n        this.customFieldControl.patchValue({\\n          attribute_type: this.customFieldForm.value.attribute_type,\\n          display_name: this.customFieldForm.value.attribute_type,\\n          source_placeholder: this.customFieldForm.value.source_placeholder,\\n          is_dependent: true\\n        });\\n\\n        this.fyleFields = this.fyleFields.filter(field => !field.is_dependent);\\n        this.customFieldControl.value.is_custom = true;\\n        this.customFieldForm.reset();\\n        this.showDialog = false;\\n      }\\n      this.customFieldControl.disable();\\n      this.customFieldForDependentField = false;\\n    } else {\\n      this.customField = {\\n        attribute_type: this.customFieldForm.value.attribute_type.split(\' \').join(\'_\').toUpperCase(),\\n        display_name: this.customFieldForm.value.attribute_type,\\n        source_placeholder: this.customFieldForm.value.source_placeholder,\\n        is_dependent: false\\n      };\\n\\n      if (this.customFieldControl) {\\n        this.fyleFields.pop();\\n        this.fyleFields.push(this.customField);\\n        this.fyleFields.push(this.customFieldOption[0]);\\n        const expenseField = {\\n          source_field: this.customField.attribute_type,\\n          destination_field: this.customFieldControl.value.destination_field,\\n          import_to_fyle: true,\\n          is_custom: true,\\n          source_placeholder: this.customField.source_placeholder\\n        };\\n        (this.importSettingsForm.get(\'expenseFields\') as FormArray).controls.filter(field => field.value.destination_field === this.customFieldControl.value.destination_field)[0].patchValue(expenseField);\\n        this.customFieldForm.reset();\\n        this.showDialog = false;\\n      }\\n    }\\n  }\\n\\n  updateDependentField(sourceField: string, importToFyle: boolean) {\\n    if (!(sourceField===\'PROJECT\' && importToFyle)) {\\n      this.importSettingsForm.controls.isDependentImportEnabled.setValue(false);\\n    }\\n  }\\n\\n  private costCodesCostTypesWatcher(): void {\\n    if (this.importSettingsForm.value.costCodes) {\\n      this.costCodeFieldOption = [this.importSettingsForm.value.costCodes];\\n      this.importSettingsForm.controls.costCodes.disable();\\n    }\\n\\n    if (this.importSettingsForm.value.costTypes) {\\n      this.costTypeFieldOption = [this.importSettingsForm.value.costTypes];\\n      this.importSettingsForm.controls.costTypes.disable();\\n    }\\n\\n    if (this.importSettingsForm.value.isDependentImportEnabled) {\\n      this.importSettingsForm.controls.costCodes.disable();\\n      this.importSettingsForm.controls.costTypes.disable();\\n    }\\n\\n    this.importSettingsForm.controls.isDependentImportEnabled.valueChanges.subscribe((isDependentImportEnabled) => {\\n      if (isDependentImportEnabled) {\\n        this.importSettingsForm.controls.costCodes.enable();\\n        this.importSettingsForm.controls.costTypes.enable();\\n        this.importSettingsForm.controls.costCodes.setValidators(Validators.required);\\n        this.importSettingsForm.controls.costTypes.setValidators(Validators.required);\\n      } else {\\n        this.importSettingsForm.controls.costCodes.disable();\\n      this.importSettingsForm.controls.costTypes.disable();\\n        this.importSettingsForm.controls.costCodes.clearValidators();\\n        this.importSettingsForm.controls.costTypes.clearValidators();\\n      }\\n    });\\n\\n    this.importSettingsForm.controls.costCodes.valueChanges.subscribe((value) => {\\n      this.isCostCodeFieldSelected = true;\\n      if (value?.attribute_type === \'custom_field\') {\\n        this.customFieldForDependentField = true;\\n        this.addCustomField();\\n        this.customFieldControl = this.importSettingsForm.controls.costCodes;\\n        if (value.source_field === \'custom_field\') {\\n          this.importSettingsForm.controls.costCodes.patchValue({\\n              source_field: null\\n            });\\n        }\\n        }\\n    });\\n\\n    this.importSettingsForm.controls.costTypes.valueChanges.subscribe((value) => {\\n      this.isCostCodeFieldSelected = false;\\n      if (value?.attribute_type === \'custom_field\') {\\n        this.customFieldForDependentField = true;\\n        this.addCustomField();\\n        this.customFieldControl = this.importSettingsForm.controls.costTypes;\\n        if (value.source_field === \'custom_field\') {\\n          this.importSettingsForm.controls.costTypes.patchValue({\\n              source_field: null\\n            });\\n        }\\n        }\\n    });\\n  }\\n\\n  private addCustomField() {\\n    this.customFieldForm = this.formBuilder.group({\\n      attribute_type: [null, Validators.required],\\n      display_name: [null],\\n      source_placeholder: [null, Validators.required]\\n    });\\n    this.showDialog = true;\\n  }\\n\\n  private importSettingWatcher(): void {\\n    const expenseFieldArray = this.importSettingsForm.get(\'expenseFields\') as FormArray;\\n    expenseFieldArray.controls.forEach((control) => {\\n      control.valueChanges.subscribe(value => {\\n        if (value.source_field === \'custom_field\') {\\n         this.addCustomField();\\n         this.customFieldControl = control;\\n         this.customFieldControl.patchValue({\\n            source_field: \'\',\\n            destination_field: control.value.destination_field,\\n            import_to_fyle: control.value.import_to_fyle,\\n            is_custom: control.value.is_custom,\\n            source_placeholder: null\\n          });\\n        }\\n      });\\n    });\\n    this.importSettingsForm.controls.importTaxCodes?.valueChanges.subscribe((isImportTaxEnabled) => {\\n      if (isImportTaxEnabled) {\\n        this.importSettingsForm.controls?.sageIntacctTaxCodes.setValidators([Validators.required]);\\n      } else {\\n        this.importSettingsForm.controls.sageIntacctTaxCodes.clearValidators();\\n        this.importSettingsForm.controls.sageIntacctTaxCodes.updateValueAndValidity();\\n      }\\n    });\\n    this.costCodesCostTypesWatcher();\\n  }\\n\\n  private createFormGroup(data: MappingSetting): FormGroup {\\n    return this.formBuilder.group({\\n      source_field: [data.source_field || \'\', RxwebValidators.unique()],\\n      destination_field: [data.destination_field || \'\', RxwebValidators.unique()],\\n      import_to_fyle: [data.import_to_fyle || false],\\n      is_custom: [data.is_custom || false],\\n      source_placeholder: [data.source_placeholder || null]\\n    });\\n  }\\n\\n  // Main function to construct form array\\n  private constructFormArray(): FormGroup[] {\\n    const expenseFieldFormArray: FormGroup[] = [];\\n    const mappedFieldMap = new Map<string, any>();\\n    const unmappedFieldMap = new Map<string, any>();\\n\\n    // First loop to populate mappedFieldMap\\n    this.sageIntacctFields.forEach((sageIntacctField) => {\\n      const mappingSetting = this.importSettings.mapping_settings.find(\\n        (setting) => setting.destination_field === sageIntacctField.attribute_type\\n      );\\n\\n      const fieldData = mappingSetting || {\\n        destination_field: sageIntacctField.attribute_type,\\n        import_to_fyle: false,\\n        is_custom: false,\\n        source_field: \'\',\\n        source_placeholder: null\\n      };\\n      if (mappingSetting) {\\n        mappedFieldMap.set(sageIntacctField.attribute_type, fieldData);\\n      } else {\\n        unmappedFieldMap.set(sageIntacctField.attribute_type, fieldData);\\n      }\\n\\n    });\\n\\n    const topPriorityFields = [\'PROJECT\', \'DEPARTMENT\', \'LOCATION\'];\\n\\n    // Sort sageIntacctFields so that topPriorityFields come first\\n    this.sageIntacctFields.sort((a, b) => {\\n      return (topPriorityFields.includes(b.attribute_type) ? 1 : 0) - (topPriorityFields.includes(a.attribute_type) ? 1 : 0);\\n    });\\n\\n    // Handle only mapped fields\\n    this.sageIntacctFields.forEach((sageIntacctField) => {\\n      const fieldData = mappedFieldMap.get(sageIntacctField.attribute_type);\\n      if (fieldData) {\\n        expenseFieldFormArray.push(this.createFormGroup(fieldData));\\n      }\\n    });\\n\\n    if (mappedFieldMap.size === 0){\\n      this.sageIntacctFields.forEach((sageIntacctField) => {\\n        if (expenseFieldFormArray.length < 3) {\\n          const fieldData = unmappedFieldMap.get(sageIntacctField.attribute_type);\\n          if (fieldData) {\\n            expenseFieldFormArray.push(this.createFormGroup(fieldData));\\n          }\\n        }\\n      });\\n    }\\n\\n    return expenseFieldFormArray;\\n  }\\n\\n  onDropdownChange(event: any, index: number) {\\n    // Get the selected value from the <p-dropdown>\\n    const selectedValue = event.value;\\n\\n    // Find the selected field in \'fyleFields\' based on the selected value\\n    const selectedField = this.fyleFields.find(field => field.attribute_type === selectedValue);\\n\\n    // Check if the selected field is dependent (assuming \'is_dependent\' is a property in \'selectedField\')\\n    if (selectedField?.is_dependent) {\\n      // Set the toggle to false\\n      (this.importSettingsForm.get(\'expenseFields\') as FormArray).at(index)?.get(\'import_to_fyle\')?.setValue(false);\\n\\n      // Get the \'import_to_fyle\' control at the specified index and disable it\\n      (this.importSettingsForm.get(\'expenseFields\') as FormArray).at(index)?.get(\'import_to_fyle\')?.disable();\\n    }\\n  }\\n\\n  isExpenseFieldDependent(expenseField: MappingSetting): boolean {\\n    const isDependent = this.fyleFields.find(field => field.attribute_type === expenseField.source_field)?.is_dependent;\\n    return isDependent ? true : false;\\n  }\\n\\n  private generateDependentFieldValue(attribute_type: string, source_placeholder: string): ExpenseField {\\n    return {\\n      attribute_type: attribute_type,\\n      display_name: attribute_type,\\n      source_placeholder: source_placeholder,\\n      is_dependent: true\\n    };\\n  }\\n\\n  showImportTax(locationEntity: LocationEntityMapping) {\\n    return (locationEntity.country_name && locationEntity.country_name !== \'United States\' && locationEntity.destination_id !== \'top_level\') ? true : false;\\n  }\\n\\n  private initializeForm(importSettings: ImportSettingGet): void {\\n    this.importSettingsForm = this.formBuilder.group({\\n      importVendorAsMerchant: [importSettings.configurations.import_vendors_as_merchants || null],\\n      importCategories: [importSettings.configurations.import_categories || null],\\n      importTaxCodes: [importSettings.configurations.import_tax_codes || null],\\n      costCodes: [importSettings.dependent_field_settings?.cost_code_field_name ? this.generateDependentFieldValue(importSettings.dependent_field_settings.cost_code_field_name, importSettings.dependent_field_settings.cost_code_placeholder) : null],\\n      dependentFieldImportToggle: [true],\\n      workspaceId: this.storageService.get(\'si.workspaceId\'),\\n      costTypes: [importSettings.dependent_field_settings?.cost_type_field_name ? this.generateDependentFieldValue(importSettings.dependent_field_settings.cost_type_field_name, importSettings.dependent_field_settings.cost_type_placeholder) : null],\\n      isDependentImportEnabled: [importSettings.dependent_field_settings?.is_import_enabled || null],\\n      sageIntacctTaxCodes: [(this.sageIntacctTaxGroup?.find(taxGroup => taxGroup.destination_id === this.importSettings?.general_mappings?.default_tax_code?.id)) || null, importSettings.configurations.import_tax_codes ? [Validators.required] : []],\\n      expenseFields: this.formBuilder.array(this.constructFormArray())\\n    });\\n    if (this.importSettingsForm.controls.costCodes.value && this.importSettingsForm.controls.costTypes.value && this.dependentFieldSettings?.is_import_enabled) {\\n      this.fyleFields = this.fyleFields.filter(field => !field.is_dependent);\\n    }\\n\\n    // Disable toggle for expense fields that are dependent\\n    const expenseFields = this.importSettingsForm.get(\'expenseFields\') as FormArray;\\n\\n    expenseFields.controls.forEach((control, index) => {\\n      if (this.isExpenseFieldDependent(control.value)) {\\n        control.get(\'import_to_fyle\')?.disable();\\n      }\\n    });\\n\\n    this.importSettingWatcher();\\n    this.costCodesCostTypesWatcher();\\n    this.isLoading = false;\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    this.isLoading = true;\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n\\n    const destinationAttributes = [\'TAX_DETAIL\'];\\n\\n    const sageIntacctFieldsObservable = this.mappingService.getSageIntacctFields();\\n    const fyleFieldsObservable = this.mappingService.getFyleFields();\\n    const groupedAttributesObservable = this.mappingService.getGroupedDestinationAttributes(destinationAttributes);\\n    const importSettingsObservable = this.importSettingService.getImportSettings();\\n    const configuration = this.mappingService.getConfiguration();\\n    const locationEntity = this.connectorService.getLocationEntityMapping();\\n\\n    forkJoin([\\n      sageIntacctFieldsObservable,\\n      fyleFieldsObservable,\\n      groupedAttributesObservable,\\n      importSettingsObservable,\\n      configuration,\\n      locationEntity\\n    ]).subscribe(\\n      ([sageIntacctFields, fyleFields, groupedAttributesResponse, importSettings, configuration, locationEntity]) => {\\n        this.dependentFieldSettings = importSettings.dependent_field_settings;\\n        this.isImportTaxVisible = this.showImportTax(locationEntity);\\n        this.sageIntacctFields = sageIntacctFields.map(field => {\\n          return {\\n            ...field,\\n            display_name: this.toTitleCase(field.display_name)\\n          };\\n        });\\n        this.fyleFields = fyleFields;\\n        this.fyleFields.push(this.customFieldOption[0]);\\n        this.sageIntacctTaxGroup = groupedAttributesResponse.TAX_DETAIL;\\n        this.importSettings = importSettings;\\n\\n        const mappingSettings: MappingSetting[] = this.importSettings.mapping_settings;\\n\\n        for (const setting of mappingSettings) {\\n          const { source_field, destination_field, import_to_fyle } = setting;\\n          if (source_field === \'PROJECT\' && destination_field === \'PROJECT\' && import_to_fyle === true) {\\n            if (importSettings.dependent_field_settings?.is_import_enabled) {\\n              this.customField = {\\n                attribute_type: importSettings.dependent_field_settings.cost_code_field_name,\\n                display_name: importSettings.dependent_field_settings.cost_code_field_name,\\n                source_placeholder: importSettings.dependent_field_settings.cost_code_placeholder,\\n                is_dependent: true\\n              };\\n              this.costCodeFieldOption.push(this.customField);\\n              this.customField = {\\n                attribute_type: importSettings.dependent_field_settings.cost_type_field_name,\\n                display_name: importSettings.dependent_field_settings.cost_type_field_name,\\n                source_placeholder: importSettings.dependent_field_settings.cost_type_placeholder,\\n                is_dependent: true\\n              };\\n              this.costTypeFieldOption.push(this.customField);\\n            }\\n            break;\\n          }\\n        }\\n\\n        if (configuration.employee_field_mapping===\'EMPLOYEE\') {\\n          this.intacctCategoryDestination = IntacctCategoryDestination.EXPENSE_TYPE;\\n        } else {\\n          this.intacctCategoryDestination = IntacctCategoryDestination.ACCOUNT;\\n        }\\n        this.initializeForm(importSettings);\\n      }\\n    );\\n  }\\n\\n  private getPhase(): ProgressPhase {\\n    return this.isOnboarding ? ProgressPhase.ONBOARDING : ProgressPhase.POST_ONBOARDING;\\n  }\\n\\n  acceptDependentFieldWarning(isWarningAccepted: boolean): void {\\n    this.showDependentFieldWarning = false;\\n    if (!isWarningAccepted) {\\n      this.expenseFieldsGetter.controls.forEach((control) => {\\n        if (control.value.source_field === MappingSourceField.PROJECT) {\\n          control.patchValue({\\n            source_field: MappingSourceField.PROJECT,\\n            destination_field: control.value.destination_field,\\n            import_to_fyle: true,\\n            is_custom: control.value.is_custom,\\n            source_placeholder: control.value.source_placeholder\\n          });\\n          this.importSettingsForm.controls.isDependentImportEnabled.setValue(true);\\n        }\\n      });\\n    }\\n  }\\n\\n  showWarningForDependentFields(event: any, formGroup: AbstractControl): void {\\n    if (!event.checked && formGroup.value.source_field === MappingSourceField.PROJECT) {\\n      this.showDependentFieldWarning = true;\\n    }\\n  }\\n\\n  save(): void {\\n    this.saveInProgress = true;\\n    const importSettingPayload = ImportSettings.constructPayload(this.importSettingsForm, this.dependentFieldSettings);\\n    this.importSettingService.postImportSettings(importSettingPayload).subscribe((response: ImportSettingPost) => {\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Import settings saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.IMPORT_SETTINGS_INTACCT, this.sessionStartTime);\\n      if (this.workspaceService.getIntacctOnboardingState() === IntacctOnboardingState.IMPORT_SETTINGS) {\\n        this.trackingService.integrationsOnboardingCompletion(IntacctOnboardingState.IMPORT_SETTINGS, 3, importSettingPayload);\\n      } else {\\n        this.trackingService.intacctUpdateEvent(\\n          IntacctUpdateEvent.ADVANCED_SETTINGS_INTACCT,\\n          {\\n            phase: this.getPhase(),\\n            oldState: this.importSettings,\\n            newState: response\\n          }\\n        );\\n      }\\n      this.saveInProgress = false;\\n      if (this.isOnboarding) {\\n        this.workspaceService.setIntacctOnboardingState(IntacctOnboardingState.ADVANCED_CONFIGURATION);\\n        this.router.navigate([`/integrations/intacct/onboarding/advanced_settings`]);\\n      }\\n    }, () => {\\n      this.saveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving import settings, please try again later\');\\n      });\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSettingsAndSetupForm();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-button {\\n  @apply tw-w-fit #{!important};\\n}\\n\\n.save-btn {\\n  @apply tw-border tw-bg-mandatory-field-color tw-rounded-4-px #{!important};\\n}\\n\\n.cancel-btn {\\n  @apply tw-py-10-px tw-px-16-px tw-border tw-border-box-color tw-bg-white tw-rounded-4-px tw-text-slightly-normal-text-color tw-mr-16-px #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown {\\n  transform: scale(0.9);\\n}\\n\\n.form-input-disabled {\\n  padding: 11px 0px 11px 14px;\\n  background: #F5F5F5;\\n  border: 1px solid #DFDFE2;\\n  box-sizing: border-box;\\n  border-radius: 8px;\\n}\\n\\n.label-content {\\n  background: #F5F5F5;\\n  border: 1px solid #DFDFE2;\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n  height: 100px;\\n}\\n\\n.name-text {\\n  padding: 12px 0px 8px 16px;\\n}\\n\\n.form-field {\\n  padding: 8px 16px 22px;\\n}\\n\\n.form-input {\\n  padding: 11px 0px 11px 14px;\\n  height: 40px;\\n  background: #FFFFFF;\\n  border: 1px solid #DFDFE2;\\n  box-sizing: border-box;\\n  border-radius: 8px;\\n}\\n\\n.container {\\n    display: flex;\\n    justify-content: center;\\n}\\n\\n.sub-text {\\n    border-radius: 8px;\\n    border: 1px solid var(--grayscale-light-border, #ECECEE);\\n    background: var(--grayscale-background, #FAFCFF);\\n    padding: 24px;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    gap: 16px;\\n    max-width: auto;\\n}\\n\\n.sub-text-note {\\n    display: flex;\\n    padding: 16px;\\n    align-items: flex-start;\\n    align-self: stretch;\\n    border-radius: 4px;\\n    background: var(--shades-info, #EFF5FC);\\n    font-size: 0.84em;\\n    font-weight: 400;\\n    color: #5a5d72;\\n    font-style: normal;\\n}\\n\\n  .fields-header {\\n    display: flex;\\n  }\\n\\n  .fields-header-text {\\n    font-weight: 500;\\n    line-height: 18px;\\n  }\\n  \\n  :host ::ng-deep .p-inputswitch.p-inputswitch-checked .p-inputswitch-slider::after {\\n    content: \'Yes\';\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: absolute;\\n    left: 8px;\\n    bottom: 1px;\\n    font-size: 12px;\\n    color: white;\\n    font-weight: 500;\\n}\\n\\n:host ::ng-deep .p-inputswitch:not(.p-inputswitch-checked) .p-inputswitch-slider::after {\\n    content: \'No\';\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: absolute;\\n    left: 24px;\\n    bottom: 1px;\\n    font-size: 12px;\\n    color: white;\\n    font-weight: 500;\\n}\\n  \\n.add-button-container {\\n  display: flex;\\n  align-items: center;\\n}\\n\\nsvg-icon-sprite {\\n  margin-left: 10px; /* Adds some space between the icon and the text */\\n}\\n\\n.add-row-text {\\n  cursor: pointer; /* Changes the cursor to a hand when hovering */\\n  color: #F36;\\n}\\n\\n.delete-button {\\n  cursor: pointer;\\n}\\n\\n.custom-option {\\n  color: rgb(232, 73, 99);\\n  display: flex;\\n}\\n\\n.icon-align {\\n  margin-left: 0;\\n  margin-right: 5px;\\n  vertical-align: middle;\\n}\\n\\n:host ::ng-deep input {\\n  @apply tw-text-14-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n  @apply tw-hidden #{!important};\\n}\\n\\n.error-box {\\n  background: rgba(218, 30, 40, 0.02);\\n  border: 1px solid rgba(218, 30, 40, 0.04);\\n  box-sizing: border-box;\\n  border-radius: 4px;\\n}","styleUrl":"./configuration-import-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""},{"name":"connectorService","type":"IntacctConnectorService","deprecated":false,"deprecationMessage":""},{"name":"importSettingService","type":"SiImportSettingService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":87,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"connectorService","type":"IntacctConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"importSettingService","type":"SiImportSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"accessors":{"expenseFieldsGetter":{"name":"expenseFieldsGetter","getSignature":{"name":"expenseFieldsGetter","type":"","returnType":"","line":101}}},"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header \\n        [headerText]=\\"\'Import Settings\'\\"\\n        [contentText]=\\"\'In this section, you can choose the fields required to be imported from Sage Intacct to \' + brandingConfig.brandName + \'.\'\\"\\n        [redirectLink]=\\"redirectLink\\"\\n        [showSyncButton]=\\"isOnboarding\\"\\n        [appName]=\\"appName\\"\\n        (refreshDimension)=\\"refreshDimensions($event)\\"></app-configuration-step-header>\\n    </div>\\n    <form [formGroup]=\\"importSettingsForm\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"container\\">\\n                <div class=\\"sub-text\\">\\n                    <h4 class=\\"tw-text-16-px !tw-font-500 \\">Import Sage Intacct Dimensions</h4>\\n                    <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4 tw-pb-12-px\\">The Sage Intacct dimensions listed below will be mapped to their corresponding {{brandingConfig.brandName}} Field as shown below. Importing these dimensions from Sage Intacct to {{brandingConfig.brandName}} will make the values available as a dropdown in the expense form for your employees to choose from. <a (click)=\\"showPreviewDialog(true)\\" class=\\"tw-text-hyperlink-color tw-cursor-pointer\\">Click here</a> to preview.</h5>\\n                    <div class=\\"tw-pt-12-px sub-text-note\\">\\n                        <img src=\\"/assets/icons/info_filled.svg\\">\\n                        <span class=\\"tw-text-14-px tw-pl-6-px\\">This is a default mapping and you will not be able to modify it.</span>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\"fields-header\\" fxLayout=\\"row\\" fxLayoutAlign=\\"start center\\">\\n            <div class=\\"fields-header-text tw-pl-48-px tw-w-450-px\\">Sage Intacct Dimensions</div>\\n            <div class=\\"fields-header-text tw-w-30-vw\\">{{brandingConfig.brandName}} Fields</div>\\n            <div class=\\"fields-header-text tw-flex tw-w-[10vw] tw-whitespace-nowrap\\">\\n                Import to {{brandingConfig.brandName}}\\n                <svg-icon-sprite src=\\"info\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-faded-text-color\\" pTooltip=\\"Importing a dimension syncs active values from Sage Intacct every 24 hours. Deactivated values in Sage will also be disabled in {{brandingConfig.brandName}}\\"></svg-icon-sprite>\\n            </div>\\n        </div>\\n        <div class=\\"tw-flex tw-pt-18-px\\">\\n            <div class=\\"tw-pl-48-px\\">\\n                <input type=\\"text\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-font-500 tw-w-300-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"{{intacctCategoryDestination | snakeCaseToSpaceCase | titlecase}}\\" disabled>\\n            </div>\\n            <svg-icon-sprite src=\\"arrow-line\\" height=\\"10px\\" width=\\"100px\\" class=\\"!tw-ml-0 tw-pt-16-px tw-text-box-color\\"></svg-icon-sprite>\\n            <div class=\\"tw-w-30-vw\\">\\n                <input type=\\"text\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-font-500 tw-w-300-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"Category\\" disabled>\\n            </div>\\n            <div class=\\"input-toggle-section tw-w-10-vw\\">\\n                <p-inputSwitch formControlName=\\"importCategories\\"></p-inputSwitch>\\n            </div>\\n        </div>\\n        <div class=\\"tw-flex tw-pt-18-px\\">\\n            <span class=\\"tw-pl-48-px\\">\\n                <input type=\\"text\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-font-500 tw-w-300-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"Vendor\\" disabled>\\n            </span>\\n            <svg-icon-sprite src=\\"arrow-line\\" height=\\"10px\\" width=\\"100px\\" class=\\"!tw-ml-0 tw-pt-16-px tw-text-box-color\\"></svg-icon-sprite>\\n            <span class=\\"tw-w-30-vw\\">\\n                <input type=\\"text\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-font-500 tw-w-300-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"Merchant\\" disabled>\\n            </span>\\n            <span class=\\"input-toggle-section tw-w-10-vw\\">\\n                <p-inputSwitch formControlName=\\"importVendorAsMerchant\\"></p-inputSwitch>\\n            </span>\\n        </div>\\n        <div class=\\"tw-flex tw-pt-18-px\\" *ngIf=\\"isImportTaxVisible\\">\\n            <span class=\\"tw-pl-48-px\\">\\n                <input type=\\"text\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-font-500 tw-w-300-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"Tax Detail\\" disabled>\\n            </span>\\n            <svg-icon-sprite src=\\"arrow-line\\" height=\\"10px\\" width=\\"100px\\" class=\\"!tw-ml-0 tw-pt-16-px tw-text-box-color\\"></svg-icon-sprite>\\n            <span class=\\"tw-w-30-vw\\">\\n                <input type=\\"text\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-font-500 tw-w-300-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"Tax Group\\" disabled>\\n            </span>\\n            <span class=\\"input-toggle-section tw-w-10-vw\\">\\n                <p-inputSwitch formControlName=\\"importTaxCodes\\"></p-inputSwitch>\\n            </span>\\n        </div>\\n        <div class=\\"tw-flex tw-pl-48-px tw-pt-18-px\\" *ngIf=\\"importSettingsForm.value?.importTaxCodes && isImportTaxVisible\\">\\n            <p-dropdown appendTo=\\"body\\" [options]=\\"sageIntacctTaxGroup\\" optionLabel=\\"value\\" class=\\"tw-w-600-px\\" formControlName=\\"sageIntacctTaxCodes\\" placeholder=\\"Select Tax Group\\">\\n            </p-dropdown>\\n        </div>\\n        <div class=\\"tw-p-22-px\\">\\n            <div class=\\"container\\">\\n                <div class=\\"sub-text\\">\\n                    <h4 class=\\"tw-text-16-px !tw-font-500\\">Import / Map Sage Intacct Dimensions</h4>\\n                    <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4 tw-pb-12-px\\">The Sage Intacct dimensions listed below can be mapped to an existing {{brandingConfig.brandName}} field of your preference, or a new custom field. Importing these dimensions from Sage Intacct to {{brandingConfig.brandName}} will make the values available as a dropdown in the expense form for your employees to choose from.  <a (click)=\\"showPreviewDialog(true)\\" class=\\"tw-text-hyperlink-color tw-cursor-pointer\\">Click here</a> to preview.</h5>\\n                    <div class=\\"tw-pt-4 sub-text-note\\">\\n                        <img src=\\"/assets/icons/info_filled.svg\\">\\n                        <span class=\\"tw-pl-6-px\\">\\n                            If you\'d like to use only selective data from Sage Intacct, map a Sage Intacct dimension to a field in {{brandingConfig.brandName}} and turn off the import, as importing the data will sync in all the active values in Sage Intacct. You can add the required values in {{brandingConfig.brandName}} and map them later in the integration mapping section.\\n                        </span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\"tw-p-22-px\\" formArrayName=\\"expenseFields\\">\\n                <div class=\\"tw-flex fields-header\\" fxLayout=\\"row\\" fxLayoutAlign=\\"start center\\">\\n                    <div class=\\"fields-header-text tw-pl-4-px tw-w-404-px tw-whitespace-nowrap\\">Sage Intacct Dimensions</div>\\n                    <div class=\\"fields-header-text tw-w-30-vw tw-whitespace-nowrap\\">{{brandingConfig.brandName}} Fields</div>\\n                    <div class=\\"fields-header-text tw-flex tw-whitespace-nowrap\\">\\n                        Import to {{brandingConfig.brandName}}\\n                        <svg-icon-sprite src=\\"info\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-faded-text-color\\" pTooltip=\\"Importing a dimension syncs active values from Sage Intacct every 24 hours. Deactivated values in Sage will also be disabled in {{brandingConfig.brandName}}\\"></svg-icon-sprite>\\n                    </div>\\n                </div>\\n                <div class=\\"tw-pt-32-px\\" *ngFor=\\"let expenseField of expenseFieldsGetter.controls; let i = index\\" [formGroupName]=\\"i\\">\\n                    <div class=\\"tw-flex\\">\\n                        <div>\\n                            <p-dropdown appendTo=\\"body\\" [options]=\\"sageIntacctFields\\" placeholder=\\"Choose Sage Intacct field\\" formControlName=\\"destination_field\\"\\n                            optionLabel=\\"display_name\\" optionValue=\\"attribute_type\\"></p-dropdown>\\n                            <p *ngIf=\\"expenseField.value.destination_field && !expenseField.valid && !hasDuplicateOption(expenseField, i, \'destination_field\')\\" class=\\"tw-text-alert-toast tw-text-12-px tw-pt-4-px\\">\\n                                Sage Intacct Fields should be unique\\n                            </p>\\n                        </div>\\n                            <svg-icon-sprite src=\\"arrow-line\\" height=\\"10px\\" width=\\"100px\\" class=\\"!tw-ml-0 tw-pt-16-px tw-text-box-color\\"></svg-icon-sprite>\\n                            <div class=\\"tw-w-28-vw\\">\\n                                <p-dropdown (onChange)=\\"onDropdownChange($event, i)\\" appendTo=\\"body\\" [options]=\\"fyleFields\\" [placeholder]=\\"\'Choose \' + brandingConfig.brandName + \' Expense field\'\\" formControlName=\\"source_field\\"\\n                                optionLabel=\\"display_name\\" optionValue=\\"attribute_type\\" [ngClass]=\\"{\'selectedItem\': expenseField.value.source_field, \'filterDropdown\': !expenseField.value.source_field}\\">\\n                                    <ng-template let-option pTemplate=\\"item\\">\\n                                    <div [ngClass]=\\"{\'custom-option\': option.attribute_type === \'custom_field\'}\\">\\n                                        <svg-icon-sprite *ngIf=\\"option.attribute_type === \'custom_field\'\\" src=\\"add\\" width=\\"20px\\" height=\\"20px\\" class=\\"icon-align\\"></svg-icon-sprite>\\n                                        {{ option.display_name }}\\n                                    </div>\\n                                    </ng-template>\\n                                    <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                                    <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                                        <span>\\n                                            {{ item.display_name }}\\n                                        </span>\\n                                        <i class=\\"pi pi-times\\" (click)=\\"removeFilter(expenseField)\\"></i>\\n                                    </div>\\n                                    </ng-template>\\n                              </p-dropdown>\\n                              <p *ngIf=\\"expenseField.value.source_field && !expenseField.valid && !hasDuplicateOption(expenseField, i, \'source_field\')\\" class=\\"tw-text-alert-toast tw-text-12-px tw-pt-4-px\\">\\n                                {{brandingConfig.brandName}} Fields should be unique\\n                                </p>\\n                            </div>\\n                        <p-inputSwitch (onChange)=\\"showWarningForDependentFields($event, expenseField)\\" [pTooltip]=\\"isExpenseFieldDependent(expenseField.value) ? \'You cannot import dependent fields\' : \'\' \\" (click)=\\"updateDependentField(expenseField.value.source_field,expenseField.value.import_to_fyle)\\" formControlName=\\"import_to_fyle\\" class=\\"tw-pl-32-px input-toggle-section\\"></p-inputSwitch>\\n                    </div>\\n                    <div class=\\"tw-pt-26-px\\" *ngIf=\\"expenseField.value.source_field === \'PROJECT\' && expenseField.value.destination_field === \'PROJECT\' && expenseField.value.import_to_fyle\\" [formGroup]=\\"importSettingsForm\\">\\n                        <div class=\\"tw-flex\\">\\n                            <div>\\n                                <input formControlName=\\"isDependentImportEnabled\\" type=\\"checkbox\\"/>\\n                            </div>\\n                            <label class=\\"tw-pl-2 tw-text-14-px\\" for=\\"checkbox\\">Import Cost Code and Cost Type from Sage Intacct as dependent fields</label>\\n                        </div>\\n                        <div class=\\"tw-flex tw-pt-4\\" *ngIf=\\"importSettingsForm.value.isDependentImportEnabled\\">\\n                            <div>\\n                                <input type=\\"text\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-ml-40-px !tw-font-500 tw-w-260-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"Cost Code\\" disabled>\\n                            </div>\\n                            <svg-icon-sprite src=\\"arrow-line\\" height=\\"10px\\" width=\\"100px\\" class=\\"!tw-ml-0 tw-pt-16-px tw-text-box-color\\"></svg-icon-sprite>\\n                            <p-dropdown appendTo=\\"body\\" class=\\"tw-w-28-vw\\" formControlName=\\"costCodes\\" [options]=\\"costCodeFieldOption\\" optionLabel=\\"attribute_type\\" placeholder=\\"Select Expense Field\\">\\n                                <ng-template let-option pTemplate=\\"item\\">\\n                                    <div [ngClass]=\\"{\'custom-option\': option.attribute_type === \'custom_field\'}\\">\\n                                      <svg-icon-sprite *ngIf=\\"option.attribute_type === \'custom_field\'\\" src=\\"add\\" width=\\"20px\\" height=\\"20px\\" class=\\"icon-align\\"></svg-icon-sprite>\\n                                      {{ option.display_name }}\\n                                    </div>\\n                                  </ng-template>\\n                            </p-dropdown>\\n                            <p-inputSwitch class=\\"tw-pl-32-px input-toggle-section\\" formControlName=\\"dependentFieldImportToggle\\" [disabled]=\\"true\\"></p-inputSwitch>\\n                        </div>\\n                        <div class=\\"tw-flex tw-pt-4\\" *ngIf=\\"importSettingsForm.value.isDependentImportEnabled\\">\\n                            <div>\\n                                <input type=\\"text\\" class=\\"tw-text-14-px tw-text-slightly-normal-text-color !tw-ml-60-px !tw-font-500 tw-w-240-px !tw-px-14-px !tw-py-10-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" value=\\"Cost Type\\" disabled>\\n                            </div>\\n                            <svg-icon-sprite src=\\"arrow-line\\" height=\\"10px\\" width=\\"100px\\" class=\\"!tw-ml-0 tw-pt-16-px tw-text-box-color\\"></svg-icon-sprite>\\n                            <p-dropdown appendTo=\\"body\\" class=\\"tw-w-28-vw\\" formControlName=\\"costTypes\\" [options]=\\"costTypeFieldOption\\" optionLabel=\\"attribute_type\\" placeholder=\\"Select Expense Field\\">\\n                                <ng-template let-option pTemplate=\\"item\\">\\n                                    <div [ngClass]=\\"{\'custom-option\': option.attribute_type === \'custom_field\'}\\">\\n                                      <svg-icon-sprite *ngIf=\\"option.attribute_type === \'custom_field\'\\" src=\\"add\\" width=\\"20px\\" height=\\"20px\\" class=\\"icon-align\\"></svg-icon-sprite>\\n                                      {{ option.display_name }}\\n                                    </div>\\n                                  </ng-template>\\n                            </p-dropdown>\\n                            <p-inputSwitch class=\\"tw-pl-32-px input-toggle-section\\" formControlName=\\"dependentFieldImportToggle\\" [disabled]=\\"true\\"></p-inputSwitch>\\n                        </div>\\n                    </div>                      \\n                </div>\\n                <div class=\\"tw-text-alert-toast tw-pt-4 tw-pl-1\\" *ngIf=\\"importSettingsForm.get(\'expenseFields\')?.hasError(\'duplicateFyleFields\') || importSettingsForm.get(\'expenseFields\')?.hasError(\'duplicateSageIntacctFields\')\\">\\n                    *{{brandingConfig.brandName}} and Sage Intacct Fields should be unique.\\n                  </div>                  \\n            </div>\\n            <div *ngIf=\\"showAddButton\\" class=\\"add-button-container tw-pl-4\\">\\n                <svg-icon-sprite src=\\"add\\" width=\\"20px\\" height=\\"20px\\" class=\\"add-row-text\\" (click)=\\"addExpenseField()\\"></svg-icon-sprite>\\n                <a class=\\"add-row-text tw-pl-2\\" (click)=\\"addExpenseField()\\">\\n                    Add more fields\\n                </a>\\n            </div>            \\n        </div>\\n        <div>\\n            <app-configuration-step-footer [ctaText] = \\"!saveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!importSettingsForm.valid\\"></app-configuration-step-footer>\\n        </div>\\n    </form>\\n</div>\\n\\n<p-dialog *ngIf=\\"showDialog\\" [dismissableMask]=\\"true\\" [showHeader]=\\"false\\" [modal]=\\"true\\" [(visible)]=\\"showDialog\\" [draggable]=\\"false\\" [style]=\\"{width: \'468px\'}\\">\\n    <div [formGroup]=\\"customFieldForm\\">\\n        <div class=\\"tw-p-24-px tw-border-b-1-px tw-border-b-box-color\\">\\n            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                <p class=\\"tw-text-20-px tw-font-500\\">Add new Custom Field</p>\\n                <i class=\\"pi pi-times tw-cursor-pointer\\" style=\\"font-size: 12px\\" (click)=\\"closeModel()\\"></i>\\n            </div>\\n        </div>\\n        <div *ngIf=\\"existingFields.indexOf(customFieldForm.value.attribute_type?.toLowerCase()) !== -1\\">\\n            <div class=\\"tw-px-16-px tw-text-12-px tw-pt-12-px tw-flex\\">\\n                <span class=\\"error-box tw-flex tw-p-4-px\\">\\n                    <img class=\\"tw-mb-16-px\\" src=\\"assets/icons/error.svg\\"/>\\n                    <h5 class=\\"tw-ml-6-px\\">\\n                        Oops! It looks like another field with the same name already exists in your {{brandingConfig.brandName}} account. Would you please\\n                        give the field a different name?\\n                    </h5>\\n                </span>\\n            </div>\\n        </div>\\n        <div class=\\"tw-p-24-px\\">\\n            <p class=\\"tw-pb-8-px tw-text-sub-text-color tw-text-14-px\\">\\n                Field Name <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n            </p>\\n            <input formControlName=\\"attribute_type\\" type=\\"text\\" class=\\"tw-w-388-px tw-h-48-px\\" pInputText placeholder=\\"Enter field type\\" [ngClass]=\\"[customFieldForm.controls[\'attribute_type\'].touched && !customFieldForm.controls[\'attribute_type\'].valid && !customFieldForm.controls[\'attribute_type\'].disabled ? \'error-box\' : \'normal-box\']\\" required/>\\n            <app-mandatory-error-message *ngIf=\\"customFieldForm.controls[\'attribute_type\'].touched && !customFieldForm.controls[\'attribute_type\'].valid && !customFieldForm.controls[\'attribute_type\'].disabled\\" [customErrorMessage]=\\"\'Enter a valid type\'\\"></app-mandatory-error-message>\\n\\n            <p class=\\"tw-pt-16-px tw-text-sub-text-color tw-text-14-px tw-pb-8-px\\">\\n                Placeholder Name <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n            </p>\\n            <input formControlName=\\"source_placeholder\\" type=\\"text\\" class=\\"tw-w-388-px tw-h-48-px\\" pInputText placeholder=\\"Enter field name\\" [ngClass]=\\"[customFieldForm.controls[\'source_placeholder\'].touched && !customFieldForm.controls[\'source_placeholder\'].valid && !customFieldForm.controls[\'source_placeholder\'].disabled ? \'error-box\' : \'normal-box\']\\" required/>\\n            <app-mandatory-error-message *ngIf=\\"customFieldForm.controls[\'source_placeholder\'].touched && !customFieldForm.controls[\'source_placeholder\'].valid && !customFieldForm.controls[\'source_placeholder\'].disabled\\" [customErrorMessage]=\\"\'Enter a valid Name\'\\"></app-mandatory-error-message>\\n\\n            <div>\\n                <h5 class=\\"tw-pt-16-px tw-text-sub-text-color tw-text-14-px tw-pb-8-px\\">\\n                  Field Type\\n                </h5>\\n                <div class=\\"tw-w-388-px tw-h-48-px\\">\\n                  <input class=\\"tw-w-388-px form-input-disabled\\" type=\\"text\\" placeholder=\\"Select\\" disabled>\\n                </div>\\n              </div>\\n\\n              <div class=\\"label-section tw-pt-8\\">\\n                <div class=\\"label-content tw-w-388-px\\">\\n                  <h5 class=\\"name-text sub-text-color tw-text-14-px\\">\\n                    {{customFieldForm.value.attribute_type ? customFieldForm.value.attribute_type : \'Label\'}}\\n                  </h5>\\n                  <div class=\\"form-field tw-pt-4-px\\">\\n                    <input class=\\"form-input tw-w-320-px\\" type=\\"text\\"\\n                    [placeholder]=\\"customFieldForm.value.source_placeholder ? customFieldForm.value.source_placeholder : \'Enter Text\'\\">\\n                  </div>\\n                </div>\\n              </div>              \\n            \\n            <div class=\\"tw-flex tw-justify-end tw-pt-24-px tw-text-14-px\\">\\n                <button type=\\"button\\" class=\\"cancel-btn\\" (click)=\\"closeModel()\\">\\n                    Cancel\\n                </button>\\n                <button type=\\"button\\" class=\\"save-btn\\" pButton [disabled]=\\"!customFieldForm.valid || existingFields.indexOf(customFieldForm.value.attribute_type?.toLowerCase()) !== -1\\" (click)=\\"saveCustomField()\\">\\n                    Create and Save\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</p-dialog>\\n\\n<p-dialog *ngIf=\\"showDependentFieldWarning\\" [showHeader]=\\"false\\" [modal]=\\"true\\" [(visible)]=\\"showDependentFieldWarning\\" [draggable]=\\"false\\" [style]=\\"{width: \'468px\'}\\">\\n    <div class=\\"tw-px-24-px tw-py-22-px tw-border-b-1-px tw-border-b-box-color\\">\\n        <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n            <div class=\\"tw-flex\\">\\n                <img src=\\"assets/icons/alert_dialog.svg\\" class=\\"tw-pr-12-px\\"/>\\n                <p class=\\"tw-text-20-px tw-font-500 tw-text-normal-text-color\\">Warning</p>\\n            </div>\\n            <i class=\\"pi pi-times tw-cursor-pointer\\" style=\\"font-size: 12px\\" (click)=\\"acceptDependentFieldWarning(false)\\"></i>\\n        </div>\\n    </div>\\n    <div class=\\"tw-pl-24-px tw-pr-10-px tw-pt-16-px tw-pb-24-px\\">\\n        <div class=\\"tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color\\">\\n            You have imported Cost codes and Cost Types from Sage Intacct by mapping them to fields in {{brandingConfig.brandName}}. By turning off the import, you would lose the mappings you\'ve established for these fields.\\n        </div>\\n        <div class=\\"tw-pt-26-px tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color\\">\\n            Are you sure you want to continue?\\n        </div>\\n    </div>\\n    <div class=\\"tw-flex tw-justify-end tw-text-14-px tw-border-t-1-px\\">\\n        <div class=\\"tw-px-24-px tw-py-16-px\\">\\n            <button type=\\"button\\" class=\\"cancel-btn\\" (click)=\\"acceptDependentFieldWarning(false)\\">\\n                Cancel\\n            </button>\\n            <button type=\\"button\\" class=\\"save-btn\\" pButton (click)=\\"acceptDependentFieldWarning(true)\\">\\n                Continue\\n            </button>\\n        </div>\\n    </div>\\n</p-dialog>\\n\\n<div *ngIf=\\"isDialogVisible\\">\\n    <p-dialog header=\\"Preview\\" [dismissableMask]=\\"true\\" [showHeader]=\\"true\\" [modal]=\\"true\\" [(visible)]=\\"isDialogVisible\\" [breakpoints]=\\"{ \'960px\': \'75vw\' }\\" [draggable]=\\"false\\" [resizable]=\\"false\\">\\n        <div class=\\"tw-flex tw-items-center tw-justify-center tw-px-24-px tw-pb-24-px\\">\\n            <img height=\\"300px\\" width=\\"700px\\" src=\\"assets/illustrations/sageIntacct/IntacctImportSettings.png\\">\\n        </div>\\n    </p-dialog>\\n</div>\\n"},{"name":"ConfigurationInfoLabelComponent","id":"component-ConfigurationInfoLabelComponent-acc3eaf2449d1d24243fa2d638694260d28514bb793912ef8eb88abfe2a0011701c23855ff8c8eea6df1fc6f7a129570958774e153ea61dff1f2e13672b8ac6c","file":"src/app/shared/components/configuration/configuration-info-label/configuration-info-label.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-info-label","styleUrls":["./configuration-info-label.component.scss"],"styles":[],"templateUrl":["./configuration-info-label.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"infoText","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-configuration-info-label\',\\n  templateUrl: \'./configuration-info-label.component.html\',\\n  styleUrls: [\'./configuration-info-label.component.scss\']\\n})\\nexport class ConfigurationInfoLabelComponent implements OnInit {\\n\\n  @Input() infoText: string;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".info-label {\\n    @apply tw-flex tw-gap-2 tw-justify-start tw-items-start tw-self-stretch tw-p-12-px tw-border tw-rounded-4-px tw-bg-info-section #{!important};\\n}\\n\\n.info-label-text {\\n    @apply tw-text-14-px tw-font-400 tw-self-stretch tw-text-faded-text-color #{!important};\\n}","styleUrl":"./configuration-info-label.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":10},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <div class=\\"info-label\\">\\n        <div>\\n            <svg-icon-sprite src=\\"info\\" width=\\"20\\" height=\\"20\\" class=\\"tw-text-info\\"></svg-icon-sprite>\\n        </div>\\n        <div class=\\"info-label-text\\">\\n            <p>{{infoText}}</p>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"ConfigurationLabelComponent","id":"component-ConfigurationLabelComponent-fbd3ead269834dfa2f23705bb8cafdb36ba0363d5fa0c9ab38257869edaf609b99dd04a01f007071798adea25ed4f45eeb8c98959491f1cb0b48ab794d3db3aa","file":"src/app/shared/components/qbd/configuration/configuration-label/configuration-label.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-label","styleUrls":["./configuration-label.component.scss"],"styles":[],"templateUrl":["./configuration-label.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"iconPath","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"labelValue","deprecated":false,"deprecationMessage":"","line":12,"type":"QBDExportSettingFormOption","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]},{"name":"subLabel","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { QBDExportSettingFormOption } from \'src/app/core/models/qbd/qbd-configuration/export-setting.model\';\\n\\n@Component({\\n  selector: \'app-configuration-label\',\\n  templateUrl: \'./configuration-label.component.html\',\\n  styleUrls: [\'./configuration-label.component.scss\']\\n})\\nexport class ConfigurationLabelComponent implements OnInit {\\n\\n  @Input() labelValue: QBDExportSettingFormOption;\\n\\n  @Input() iconPath: string;\\n\\n  @Input() label: string;\\n\\n  @Input() subLabel: string;\\n\\n  @Input() placeholder: string;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./configuration-label.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":20},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-p-24-px\\">\\n    <div class=\\"tw-flex tw-flex-row tw-justify-between tw-items-center\\">\\n        <div class=\\"lg:tw-w-3/5 md:tw-w-1/2 tw-flex tw-items-start\\">\\n            <div class=\\"tw-pr-20-px tw-mt-8-px\\">\\n                <svg-icon-sprite *ngIf=\\"iconPath\\" src=\\"{{iconPath}}\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n            </div>\\n            <div>\\n                <h5 class=\\"tw-text-14-px !tw-font-500\\">{{ label }}<app-mandatory-field></app-mandatory-field></h5>\\n                <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\" [innerHTML]=\\"subLabel\\"></h5>\\n            </div>\\n        </div>\\n        <div class=\\"tw-flex tw-pl-36-px tw-justify-end\\">\\n            <h4 class=\\"tw-text-14-px\\">\\n                {{ labelValue.label }}\\n            </h4>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"ConfigurationMultiSelectComponent","id":"component-ConfigurationMultiSelectComponent-f0a5181358fd244c1c17c3bd47273bbe5a4fbadcb9b5027b88befad3c3aa9a4bd4b60c075ce513ced6faa1d99e00cfd51e438c9dfa8a6a8c03f964ec71f6beba","file":"src/app/shared/components/configuration/configuration-multi-select/configuration-multi-select.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-multi-select","styleUrls":["./configuration-multi-select.component.scss"],"styles":[],"templateUrl":["./configuration-multi-select.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"customErrorMessage","deprecated":false,"deprecationMessage":"","line":29,"type":"string","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":13,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"iconPath","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"isCloneSettingView","deprecated":false,"deprecationMessage":"","line":31,"type":"boolean","decorators":[]},{"name":"isFieldMandatory","deprecated":false,"deprecationMessage":"","line":25,"type":"boolean","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]},{"name":"mandatoryErrorListName","deprecated":false,"deprecationMessage":"","line":27,"type":"string","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":11,"type":"string[]","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"subLabel","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"currentlyDragging","deprecated":false,"deprecationMessage":"","type":"string | null","optional":false,"description":"","line":33},{"name":"selected","deprecated":false,"deprecationMessage":"","type":"any[]","optional":false,"description":"","line":35},{"name":"startIndex","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":37}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup } from \'@angular/forms\';\\n\\n@Component({\\n  selector: \'app-configuration-multi-select\',\\n  templateUrl: \'./configuration-multi-select.component.html\',\\n  styleUrls: [\'./configuration-multi-select.component.scss\']\\n})\\nexport class ConfigurationMultiSelectComponent implements OnInit {\\n\\n  @Input() options: string[];\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() iconPath: string;\\n\\n  @Input() label: string;\\n\\n  @Input() subLabel: string;\\n\\n  @Input() placeholder: string;\\n\\n  @Input() formControllerName: string;\\n\\n  @Input() isFieldMandatory: boolean;\\n\\n  @Input() mandatoryErrorListName: string;\\n\\n  @Input() customErrorMessage: string;\\n\\n  @Input() isCloneSettingView: boolean;\\n\\n  currentlyDragging: string | null;\\n\\n  selected: any[];\\n\\n  startIndex: number;\\n\\n  constructor(\\n    private formBuilder: FormBuilder\\n  ) { }\\n\\n//   DragStart(memo: string) {\\n//     This.currentlyDragging = memo;\\n// }\\n// // On Drag End\\n// DragEnd() {\\n//     This.currentlyDragging = null;\\n// }\\n\\n// // On Drop of Item to droppable area\\n// Drop() {\\n//     If (this.currentlyDragging) {\\n//         Let currentlyDraggingIndex = this.options.indexOf(this.currentlyDragging)\\n//         This.selected =\\n//             [...this.selected, this.currentlyDragging];\\n//         This.options =\\n//             This.options.filter((val, i) => i !=\\n//                 CurrentlyDraggingIndex);\\n//         This.currentlyDragging = null;\\n//     }\\n// }\\n// OnDragStart(index: number) {\\n//   This.startIndex = index;\\n// }\\n\\n// OnDrop(dropIndex: number) {\\n//   Const general = this.options[this.startIndex]; // get element\\n//   This.options.splice(this.startIndex, 1);       // delete from old position\\n//   This.options.splice(dropIndex, 0, general);    // add to new position\\n// }\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-multiselect-label {\\n    @apply tw-z-1 tw-px-12-px tw-py-8-px tw-w-270-px #{!important};      \\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-header,:host ::ng-deep .p-multiselect-panel .p-multiselect-items {\\n    @apply tw-p-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-items .p-multiselect-item {\\n    @apply tw-mb-0 #{!important};\\n}\\n\\n:host ::ng-deep .error-box .p-multiselect {\\n    @apply tw-border-alert-toast #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-multiselect {\\n    @apply tw-border-box-color #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-multiselect.p-focus {\\n    @apply tw-border-slightly-normal-text-color #{!important};\\n}\\n\\n:host ::ng-deep .p-checkbox {\\n    @apply tw-pt-2-px #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-items .p-multiselect-item {\\n    @apply tw-h-32-px tw-px-16-px tw-py-0 #{!important};\\n}\\n","styleUrl":"./configuration-multi-select.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""}],"line":37,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div [formGroup]=\\"form\\" [ngClass]=\\"!isCloneSettingView ? \'tw-p-24-px\': \'\'\\" class=\\"tw-flex tw-justify-between tw-items-center\\">\\n    <div *ngIf=\\"!isCloneSettingView\\" class=\\"lg:tw-w-3/5 md:tw-w-1/2 tw-flex tw-items-start\\">\\n        <div class=\\"tw-pr-16-px\\">\\n            <svg-icon-sprite *ngIf=\\"iconPath\\" src=\\"{{iconPath}}\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n        </div>\\n        <div>\\n            <h5 class=\\"tw-text-14-px !tw-font-500\\">{{ label }}<app-mandatory-field *ngIf=\\"isFieldMandatory\\"></app-mandatory-field></h5>\\n            <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\" [innerHTML]=\\"subLabel\\"></h5>\\n        </div>\\n    </div>\\n    <div class=\\"tw-pl-34-px\\">\\n        <p-multiSelect [options]=\\"options\\" styleClass=\\"tw-z-2\\" [formControlName]=\\"formControllerName\\" [defaultLabel]=\\"placeholder\\" [ngClass]=\\"[form.controls[formControllerName].invalid && isFieldMandatory ? \'error-box\' : \'normal-box\']\\">\\n            <ng-template let-value pTemplate=\\"selectedItems\\" >\\n                <div *ngIf=\\"form.value[formControllerName]?.length>0\\" class=\\"tw-flex\\">\\n                    <p *ngFor=\\"let name of value;let i = index\\">{{ name | titlecase | snakeCaseToSpaceCase }}<span *ngIf=\\"i !== value?.length-1\\">,&nbsp;</span></p>\\n                </div>\\n                <div *ngIf=\\"form.value[formControllerName]?.length === 0\\" class=\\"tw-text-placeholder\\">\\n                    {{ placeholder }}\\n                </div>\\n            </ng-template>\\n            <ng-template let-memo let-index=\\"index\\" pTemplate=\\"item\\">\\n                \x3c!-- <div pDraggable=\\"gens\\" pDroppable=\\"gens\\" dragHandle=\\".barsHandle\\" (onDragStart)=\\"onDragStart(index)\\" (onDrop)=\\"onDrop(index)\\" >\\n                    <p class=\\"tw-text-sub-text-color tw-text-14-px\\">{{ gens | titlecase | snakeCaseToSpaceCase }}</p>\\n                </div> --\x3e\\n                <div>\\n                    <p class=\\"tw-text-sub-text-color tw-text-14-px\\">{{ memo | titlecase | snakeCaseToSpaceCase }}</p>\\n                </div>\\n            </ng-template>\\n        </p-multiSelect>\\n        <div>\\n            <app-mandatory-error-message *ngIf=\\"isFieldMandatory && form.controls[formControllerName].touched && form.value[formControllerName]?.length === 0\\" [listName]=\\"mandatoryErrorListName\\" [customErrorMessage]=\\"customErrorMessage\\"></app-mandatory-error-message>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"ConfigurationRadioFieldComponent","id":"component-ConfigurationRadioFieldComponent-98a6d6e4e0d424c14869807e7ecff3e7e6c219e3a12c1683cc6ad724e2164ca969aa9169a34cba958603c102480ca41631cfc82ba3c34d82499069d8d9f6c724","file":"src/app/shared/components/qbd/configuration/configuration-radio-field/configuration-radio-field.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-radio-field","styleUrls":["./configuration-radio-field.component.scss"],"styles":[],"templateUrl":["./configuration-radio-field.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"customErrorMessage","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":16,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","line":26,"type":"string","decorators":[]},{"name":"iconPath","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"isFieldMandatory","deprecated":false,"deprecationMessage":"","line":28,"type":"boolean","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":20,"type":"string","decorators":[]},{"name":"mandatoryErrorListName","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":14,"type":"QBDExportSettingFormOption[]","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"subLabel","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { QBDExportSettingFormOption } from \'src/app/core/models/qbd/qbd-configuration/export-setting.model\';\\n\\n@Component({\\n  selector: \'app-configuration-radio-field\',\\n  templateUrl: \'./configuration-radio-field.component.html\',\\n  styleUrls: [\'./configuration-radio-field.component.scss\']\\n})\\nexport class ConfigurationRadioFieldComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  @Input() options: QBDExportSettingFormOption[];\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() iconPath: string;\\n\\n  @Input() label: string;\\n\\n  @Input() subLabel: string;\\n\\n  @Input() placeholder: string;\\n\\n  @Input() formControllerName: string;\\n\\n  @Input() isFieldMandatory: boolean;\\n\\n  @Input() mandatoryErrorListName: string;\\n\\n  @Input() customErrorMessage: string;\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./configuration-radio-field.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":10},"extends":[],"implements":["OnInit"],"templateData":"<div [formGroup]=\\"form\\" class=\\"tw-p-24-px\\">\\n    <div class=\\"tw-flex tw-flex-row tw-justify-between\\">\\n        <div class=\\"lg:tw-w-3/5 md:tw-w-1/2 tw-flex tw-items-start\\">\\n            <div class=\\"tw-pr-20-px tw-mt-8-px\\">\\n                <svg-icon-sprite *ngIf=\\"iconPath\\" src=\\"{{iconPath}}\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n            </div>\\n            <div>\\n                <h5 class=\\"!tw-text-14-px !tw-font-500 \\">{{ label }}<app-mandatory-field *ngIf=\\"isFieldMandatory\\"></app-mandatory-field></h5>\\n                <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\" [innerHTML]=\\"subLabel\\"></h5>\\n            </div>\\n        </div>\\n        <div *ngIf=\\"options\\" class=\\"tw-flex tw-items-center tw-pl-34-px\\">\\n            <div *ngFor=\\"let option of options\\" class=\\"p-field-checkbox lg:tw-mr-20-px md:tw-mr-16-px\\">\\n                <p-radioButton class=\\"tw-mr-10-px\\" [value]=\\"option.value\\" [formControlName]=\\"formControllerName\\"[inputId]=\\"option.value\\" ></p-radioButton>\\n                <label class=\\"!tw-text-14-px !tw-text-sub-text-color\\" [for]=\\"option.value\\">{{option.label}}</label>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\"tw-pr-120-px tw-flex tw-justify-end\\">\\n        <app-mandatory-error-message *ngIf=\\"isFieldMandatory && form.controls[formControllerName].touched && !form.controls[formControllerName].valid && !form.controls[formControllerName].disabled\\" [listName]=\\"mandatoryErrorListName\\" [customErrorMessage]=\\"customErrorMessage\\"></app-mandatory-error-message>\\n    </div>\\n</div>\\n"},{"name":"ConfigurationScheduleExportComponent","id":"component-ConfigurationScheduleExportComponent-bc2606dd80deaaf70a0a8bfd4cf09f8c2a89380ce3d9ed9d9144d5b63c440a87a90e27acffb757800bcb8738778fce8bb7201745ded60b448fd922fbd9434d56","file":"src/app/shared/components/configuration/configuration-schedule-export/configuration-schedule-export.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-schedule-export","styleUrls":["./configuration-schedule-export.component.scss"],"styles":[],"templateUrl":["./configuration-schedule-export.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"adminEmails","deprecated":false,"deprecationMessage":"","line":28,"type":"EmailOptions[]","decorators":[]},{"name":"customErrorMessage","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":12,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"iconPath","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"isEmailPresent","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[]},{"name":"isFieldMandatory","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]},{"name":"mandatoryErrorListName","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":24,"type":"any","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":26,"type":"string","decorators":[]},{"name":"subLabel","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"isOverflowing","args":[{"name":"element","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"element","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"removeFilter","args":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormGroup } from \'@angular/forms\';\\nimport { EmailOptions } from \'src/app/core/models/qbd/qbd-configuration/advanced-setting.model\';\\n\\n@Component({\\n  selector: \'app-configuration-schedule-export\',\\n  templateUrl: \'./configuration-schedule-export.component.html\',\\n  styleUrls: [\'./configuration-schedule-export.component.scss\']\\n})\\nexport class ConfigurationScheduleExportComponent implements OnInit {\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() iconPath: string;\\n\\n  @Input() formControllerName: string;\\n\\n  @Input() label: string;\\n\\n  @Input() isFieldMandatory: boolean;\\n\\n  @Input() subLabel: string;\\n\\n  @Input() options: any;\\n\\n  @Input() placeholder: string;\\n\\n  @Input() adminEmails: EmailOptions[];\\n\\n  @Input() mandatoryErrorListName: string;\\n\\n  @Input() customErrorMessage: string;\\n\\n  @Input() isEmailPresent: boolean = false;\\n\\n  constructor() { }\\n\\n  removeFilter(formField: AbstractControl) {\\n    (formField as FormGroup).reset();\\n    event?.stopPropagation();\\n  }\\n\\n  isOverflowing(element: any): boolean {\\n    return element.offsetWidth < element.scrollWidth;\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .error-box .p-dropdown {\\n    @apply tw-border-alert-toast #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-dropdown {\\n    @apply tw-border-box-color #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-dropdown.p-focus {\\n    @apply tw-border-slightly-normal-text-color #{!important};\\n}\\n\\n:host ::ng-deep  .dropdown-size-schedule .p-dropdown {\\n    @apply tw-w-70-px #{!important};\\n}\\n\\n:host ::ng-deep  .dropdown-size-schedule .p-disabled, .p-component:disabled {\\n    @apply tw-opacity-100;\\n}\\n\\n:host ::ng-deep .selectedItem .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n","styleUrl":"./configuration-schedule-export.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":34},"extends":[],"implements":["OnInit"],"templateData":"<div [formGroup]=\\"form\\">\\n    <div class=\\"tw-px-24-px tw-pb-24-px tw-flex tw-flex-row tw-justify-between tw-items-center\\">\\n        <div class=\\"lg:tw-w-3/5 md:tw-w-1/2 tw-flex tw-items-start\\">\\n            <div [ngClass]=\\"[iconPath || formControllerName === \'dayOfMonth\' || formControllerName === \'dayOfWeek\' || formControllerName === \'timeOfDay\' ? \'tw-pr-16-px tw-mt-4-px\' : \'tw-pr-40-px\']\\">\\n                <svg-icon-sprite *ngIf=\\"iconPath\\" src=\\"{{iconPath}}\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n            </div>\\n            <div>\\n                <h5 class=\\"tw-text-slightly-normal-text-color tw-text-14-px !tw-font-500\\">{{ label | snakeCaseToSpaceCase}}<app-mandatory-field *ngIf=\\"isFieldMandatory\\"></app-mandatory-field></h5>\\n                <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\" [innerHTML]=\\"subLabel\\"></h5>\\n            </div>\\n        </div>\\n        <div>\\n            <div class=\\"tw-pl-30-px tw-flex tw-justify-end tw-items-end\\">\\n                <div class=\\"tw-flex\\">\\n                    <p-dropdown\\n                        class=\\"dropdown-size-schedule\\"\\n                        appendTo=\\"body\\"\\n                        [options]=\\"options\\"\\n                        [formControlName]=\\"formControllerName\\"\\n                        [placeholder]=\\"placeholder\\"\\n                        [autoDisplayFirst]=\\"false\\"\\n                        [ngClass]=\\"{\\n                            \'error-box\': form.controls[formControllerName].invalid && isFieldMandatory && form.controls[formControllerName].touched,\\n                            \'normal-box\': !(form.controls[formControllerName].invalid && isFieldMandatory && form.controls[formControllerName].touched),\\n                            \'selectedItem\': form.controls[formControllerName].value,\\n                            \'filterDropdown\': !form.controls[formControllerName].value\\n                        }\\">\\n                        <ng-template let-option pTemplate=\\"item\\">\\n                            <div #textElement \\n                                [ngStyle]=\\"{\'white-space\': \'nowrap\', \'overflow\': \'hidden\', \'text-overflow\': \'ellipsis\', \'max-width\': \'16rem\'}\\"\\n                                [pTooltip]=\\"isOverflowing(textElement) ? option.label : null\\" tooltipPosition=\\"top\\">\\n                                {{option.label}}\\n                            </div>\\n                        </ng-template>\\n                        <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                                <span>\\n                                    {{ item.label }}\\n                                </span>\\n                                <i class=\\"pi pi-chevron-down\\"></i>\\n                            </div>\\n                        </ng-template>\\n                    </p-dropdown>\\n                    <div class=\\"tw-ml-16-px\\">\\n                        <input type=\\"text\\" class=\\"tw-border-box-color !tw-w-100-px !tw-h-40-px !tw-bg-disabled-bg-color tw-text-slightly-normal-text-color\\" pInputText disabled [value]=\\"form.value[formControllerName] > 1 ? \'Hours\' : \'Hour\'\\">\\n                    </div>\\n                </div>\\n            </div>\\n            <div [ngClass]=\\"[formControllerName !== \'dayOfMonth\' ? \'tw-pl-34-px\' : \'tw-pl-70-px\', formControllerName === \'dayOfWeek\' ? \'tw-pl-30-px\' : \'tw-pl-34-px\']\\">\\n                <app-mandatory-error-message *ngIf=\\"isFieldMandatory && form.controls[formControllerName].touched && !form.controls[formControllerName].valid && !form.controls[formControllerName].disabled\\" [listName]=\\"mandatoryErrorListName\\" [customErrorMessage]=\\"customErrorMessage\\"></app-mandatory-error-message>\\n            </div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\"isEmailPresent\\">\\n        <app-email-multi-select-field\\n            [form]=\\"form\\"\\n            [label]=\\"\'Send Error Notification to\'\\"\\n            [isFieldMandatory]=\\"false\\"\\n            [mandatoryErrorListName]=\\"\'email for error notification\'\\"\\n            [subLabel]=\\"\'Select or add an email address to notify upon import failure or integration error.\'\\"\\n            [options]=\\"adminEmails\\"\\n            [iconPath]=\\"\'expense\'\\"\\n            [placeholder]=\\"\'Select email address\'\\"\\n            [formControllerName]=\\"\'email\'\\">\\n        </app-email-multi-select-field>\\n    </div>\\n</div>"},{"name":"ConfigurationSelectFieldComponent","id":"component-ConfigurationSelectFieldComponent-1bfff0700f0cecce823ce123c8f4d5b54a44527265f849dc3b9840b5c32462ac98fba44d3e1da9cae1b70abe574ba786907463028bc07d66478c739f5053d5bd","file":"src/app/shared/components/configuration/configuration-select-field/configuration-select-field.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-select-field","styleUrls":["./configuration-select-field.component.scss"],"styles":[],"templateUrl":["./configuration-select-field.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appName","deprecated":false,"deprecationMessage":"","line":53,"type":"string","decorators":[]},{"name":"customErrorMessage","deprecated":false,"deprecationMessage":"","line":49,"type":"string","decorators":[]},{"name":"destinationAttributes","deprecated":false,"deprecationMessage":"","line":29,"type":"IntacctDestinationAttribute[] | Sage300DestinationAttributes[] | DestinationAttribute[] | DefaultDestinationAttribute[]","decorators":[]},{"name":"destinationOptionKey","deprecated":false,"deprecationMessage":"","line":61,"type":"IntacctExportSettingDestinationOptionKey","decorators":[]},{"name":"exportConfigurationIconPath","deprecated":false,"deprecationMessage":"","line":55,"type":"string","decorators":[]},{"name":"exportTypeIconPathArray","deprecated":false,"deprecationMessage":"","line":57,"type":"any","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":31,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","line":41,"type":"string","decorators":[]},{"name":"iconPath","deprecated":false,"deprecationMessage":"","line":33,"type":"string","decorators":[]},{"name":"isDefaultFields","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":59,"type":"boolean","decorators":[]},{"name":"isDisabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":65,"type":"boolean","decorators":[]},{"name":"isFieldMandatory","deprecated":false,"deprecationMessage":"","line":45,"type":"boolean","decorators":[]},{"name":"isOptionSearchInProgress","deprecated":false,"deprecationMessage":"","line":63,"type":"boolean","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":35,"type":"string","decorators":[]},{"name":"mandatoryErrorListName","deprecated":false,"deprecationMessage":"","line":47,"type":"string","decorators":[]},{"name":"optionLabel","defaultValue":"\'value\'","deprecated":false,"deprecationMessage":"","line":67,"type":"string","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":26,"type":"QBDExportSettingFormOption[] | string[] | ExportSettingFormOption[] | AdvancedSettingFormOption[] | HourOption[] | SelectFormOption[]","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":39,"type":"string","decorators":[]},{"name":"showClearIcon","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":51,"type":"boolean","decorators":[]},{"name":"simpleOptions","deprecated":false,"deprecationMessage":"","line":43,"type":"string[]","decorators":[]},{"name":"subLabel","deprecated":false,"deprecationMessage":"","line":37,"type":"string | SafeHtml","decorators":[]}],"outputsClass":[{"name":"searchOptionsDropdown","defaultValue":"new EventEmitter<ExportSettingOptionSearch>()","deprecated":false,"deprecationMessage":"","line":69,"type":"EventEmitter<ExportSettingOptionSearch>"}],"propertiesClass":[{"name":"AppName","defaultValue":"AppName","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95,"modifierKind":[148]},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":93,"modifierKind":[148]},{"name":"dialogHeader","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":91},{"name":"exportTableData","defaultValue":"[\\n    { exportModule: \'Expense Report\', employeeMapping: \'Employee\', chartOfAccounts: \'Expense Types\', sageIntacctModule: \'Time & Expense\' },\\n    { exportModule: \'Bill\', employeeMapping: \'Vendor\', chartOfAccounts: \'General Ledger Accounts\', sageIntacctModule: \'Accounts Payable\' },\\n    { exportModule: \'Journal Entry\', employeeMapping: \'Employee/Vendor\', chartOfAccounts: \'General Ledger Accounts\', sageIntacctModule: \'General Ledger\' }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":85},{"name":"exportType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":79},{"name":"exportTypeIconPath","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":71},{"name":"isCCCExportTableVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":83},{"name":"isOnboarding","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":81},{"name":"isPreviewDialogVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":77},{"name":"meridiemOption","defaultValue":"[\'AM\', \'PM\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":73},{"name":"timeOption","defaultValue":"[\'01:00\', \'01:30\', \'02:00\', \'02:30\', \'03:00\', \'03:30\', \'04:00\', \'04:30\', \'05:00\', \'05:30\', \'06:00\', \'06:30\', \'07:00\', \'07:30\', \'08:00\', \'08:30\', \'09:00\', \'09:30\', \'10:00\', \'10:30\', \'11:00\', \'11:30\', \'12:00\', \'12:30\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":75}],"methodsClass":[{"name":"closeDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":""},{"name":"isOverflowing","args":[{"name":"element","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"element","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":""},{"name":"removeFilter","args":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"searchOptions","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showExportPreviewDialog","args":[{"name":"exportType","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportType","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showExportTable","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":""},{"name":"showIntacctExportTable","args":[{"name":"reimbursableExportType","type":"IntacctReimbursableExpensesObject | null","deprecated":false,"deprecationMessage":""},{"name":"creditCardExportType","type":"CorporateCreditCardExpensesObject | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"reimbursableExportType","type":"IntacctReimbursableExpensesObject | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"creditCardExportType","type":"CorporateCreditCardExpensesObject | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { AbstractControl, FormGroup } from \'@angular/forms\';\\nimport { QBDExportSettingFormOption } from \'src/app/core/models/qbd/qbd-configuration/export-setting.model\';\\nimport { ExportSettingFormOption, ExportSettingOptionSearch } from \'src/app/core/models/si/si-configuration/export-settings.model\';\\nimport { AppName, ClickEvent, CorporateCreditCardExpensesObject, IntacctExportSettingDestinationOptionKey, IntacctReimbursableExpensesObject } from \'src/app/core/models/enum/enum.model\';\\nimport { PreviewPage } from \'src/app/core/models/misc/preview-page.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { AdvancedSettingFormOption, HourOption } from \'src/app/core/models/si/si-configuration/advanced-settings.model\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\nimport { Router } from \'@angular/router\';\\nimport { SnakeCaseToSpaceCasePipe } from \'src/app/shared/pipes/snake-case-to-space-case.pipe\';\\nimport { TitleCasePipe } from \'@angular/common\';\\nimport { IntacctDestinationAttribute } from \'src/app/core/models/si/db/destination-attribute.model\';\\nimport { Sage300DestinationAttributes } from \'src/app/core/models/sage300/db/sage300-destination-attribuite.model\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { DefaultDestinationAttribute, DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { SelectFormOption } from \'src/app/core/models/common/select-form-option.model\';\\n\\n@Component({\\n  selector: \'app-configuration-select-field\',\\n  templateUrl: \'./configuration-select-field.component.html\',\\n  styleUrls: [\'./configuration-select-field.component.scss\']\\n})\\nexport class ConfigurationSelectFieldComponent implements OnInit {\\n\\n  @Input() options: QBDExportSettingFormOption[] | string[] | ExportSettingFormOption[] | AdvancedSettingFormOption[] | HourOption[] | SelectFormOption[];\\n\\n  // TODO: kill app specific type\\n  @Input() destinationAttributes: IntacctDestinationAttribute[] | Sage300DestinationAttributes[] | DestinationAttribute[] | DefaultDestinationAttribute[];\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() iconPath: string;\\n\\n  @Input() label: string;\\n\\n  @Input() subLabel: string | SafeHtml;\\n\\n  @Input() placeholder: string;\\n\\n  @Input() formControllerName: string;\\n\\n  @Input() simpleOptions: string[];\\n\\n  @Input() isFieldMandatory: boolean;\\n\\n  @Input() mandatoryErrorListName: string;\\n\\n  @Input() customErrorMessage: string;\\n\\n  @Input() showClearIcon: boolean = false;\\n\\n  @Input() appName: string;\\n\\n  @Input() exportConfigurationIconPath: string;\\n\\n  @Input() exportTypeIconPathArray: any;\\n\\n  @Input() isDefaultFields: boolean = false;\\n\\n  @Input() destinationOptionKey: IntacctExportSettingDestinationOptionKey;\\n\\n  @Input() isOptionSearchInProgress: boolean;\\n\\n  @Input() isDisabled: boolean = false;\\n\\n  @Input() optionLabel: string = \'value\';\\n\\n  @Output() searchOptionsDropdown: EventEmitter<ExportSettingOptionSearch> = new EventEmitter<ExportSettingOptionSearch>();\\n\\n  exportTypeIconPath: string;\\n\\n  meridiemOption: string[] = [\'AM\', \'PM\'];\\n\\n  timeOption: string[] = [\'01:00\', \'01:30\', \'02:00\', \'02:30\', \'03:00\', \'03:30\', \'04:00\', \'04:30\', \'05:00\', \'05:30\', \'06:00\', \'06:30\', \'07:00\', \'07:30\', \'08:00\', \'08:30\', \'09:00\', \'09:30\', \'10:00\', \'10:30\', \'11:00\', \'11:30\', \'12:00\', \'12:30\'];\\n\\n  isPreviewDialogVisible: boolean = false;\\n\\n  exportType: string;\\n\\n  isOnboarding: boolean = false;\\n\\n  isCCCExportTableVisible: boolean = false;\\n\\n  exportTableData = [\\n    { exportModule: \'Expense Report\', employeeMapping: \'Employee\', chartOfAccounts: \'Expense Types\', sageIntacctModule: \'Time & Expense\' },\\n    { exportModule: \'Bill\', employeeMapping: \'Vendor\', chartOfAccounts: \'General Ledger Accounts\', sageIntacctModule: \'Accounts Payable\' },\\n    { exportModule: \'Journal Entry\', employeeMapping: \'Employee/Vendor\', chartOfAccounts: \'General Ledger Accounts\', sageIntacctModule: \'General Ledger\' }\\n  ];\\n\\n  dialogHeader: string;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  readonly AppName = AppName;\\n\\n  constructor(\\n    private trackingService: TrackingService,\\n    private router: Router\\n  ) { }\\n\\n  removeFilter(formField: AbstractControl) {\\n    (formField as FormGroup).reset();\\n    event?.stopPropagation();\\n  }\\n\\n  isOverflowing(element: any): boolean {\\n    return element.offsetWidth < element.scrollWidth;\\n  }\\n\\n  showExportTable() {\\n    this.dialogHeader = \'Export Module\';\\n    this.exportTypeIconPath = this.exportConfigurationIconPath;\\n    this.isPreviewDialogVisible = true;\\n  }\\n\\n  showExportPreviewDialog(exportType: string) {\\n    this.dialogHeader = \'Preview how \'+ new SnakeCaseToSpaceCasePipe().transform(new TitleCasePipe().transform(exportType)) +\' is made in \'+ this.appName;\\n    const index = this.formControllerName === \'reimbursableExportType\' ? 0 : 1;\\n    this.exportTypeIconPath = this.exportTypeIconPathArray[index][exportType];\\n    this.isPreviewDialogVisible = true;\\n  }\\n\\n  showIntacctExportTable(reimbursableExportType: IntacctReimbursableExpensesObject | null, creditCardExportType: CorporateCreditCardExpensesObject | null): void {\\n    const data: PreviewPage = {\\n      intacctReimburse: reimbursableExportType,\\n      intacctCCC: creditCardExportType\\n    };\\n\\n    this.trackingService.onClickEvent(ClickEvent.PREVIEW_INTACCT_EXPORT);\\n  }\\n\\n  closeDialog() {\\n    this.isPreviewDialogVisible = false;\\n  }\\n\\n  searchOptions(event: any) {\\n    this.searchOptionsDropdown.emit({ searchTerm: event.filter, destinationAttributes: this.destinationAttributes, destinationOptionKey: this.destinationOptionKey });\\n  }\\n\\n  ngOnInit(): void {\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .dropdown-time-alone .p-dropdown {\\n    @apply tw-w-150-px #{!important};\\n}\\n\\n:host ::ng-deep .dropdown-time .p-dropdown {\\n    @apply tw-w-120-px #{!important};\\n}\\n\\n:host ::ng-deep .dropdown-monthy .p-dropdown {\\n    @apply lg:tw-w-176-px md:tw-w-120-px #{!important};\\n}\\n\\n:host ::ng-deep .error-box .p-dropdown {\\n    @apply tw-border-alert-toast #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-dropdown {\\n    @apply tw-border-box-color #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-dropdown.p-focus {\\n    @apply tw-border-slightly-normal-text-color #{!important};\\n}\\n\\n:host ::ng-deep  .dropdown-size-schedule .p-dropdown {\\n    @apply tw-w-70-px #{!important};\\n}\\n\\n:host ::ng-deep  .dropdown-size-schedule .p-disabled, .p-component:disabled {\\n    @apply tw-opacity-100;\\n}\\n\\n.sub-text {\\n    @apply tw-text-faded-text-color tw-text-12-px ;\\n}\\n\\n.smaller-th th {\\n    @apply tw-text-14-px tw-font-400 ;\\n}\\n\\n:host ::ng-deep .selectedItem .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n\\n:host ::ng-deep .dropdown-size-schedule .selectedItem  .p-dropdown-trigger {\\n    @apply tw-visible #{!important};\\n}\\n\\n:host ::ng-deep .hide-chevron .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n","styleUrl":"./configuration-select-field.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":95,"jsdoctags":[{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div [formGroup]=\\"form\\" class=\\"tw-p-24-px\\">\\n    <div *ngIf=\\"!isDefaultFields\\" class=\\"tw-flex tw-flex-row tw-justify-between tw-items-center\\">\\n        <div class=\\"lg:tw-w-3/5 md:tw-w-1/2 tw-flex tw-items-start\\">\\n            <div [ngClass]=\\"[iconPath || formControllerName === \'dayOfMonth\' || formControllerName === \'dayOfWeek\' || formControllerName === \'timeOfDay\' ? \'tw-pr-16-px tw-mt-4-px\' : \'tw-pr-40-px\']\\">\\n                <svg-icon-sprite *ngIf=\\"iconPath\\" src=\\"{{iconPath}}\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n            </div>\\n\\n            <div>\\n                <h5 class=\\"tw-text-slightly-normal-text-color tw-text-14-px !tw-font-500\\">{{ label | snakeCaseToSpaceCase}}<app-mandatory-field *ngIf=\\"isFieldMandatory\\"></app-mandatory-field></h5>\\n                <h5 *ngIf=\\"formControllerName !== \'reimbursableExportType\' && formControllerName!==\'cccExportType\' && formControllerName !== \'creditCardExportType\'\\" class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\" [innerHTML]=\\"subLabel\\"></h5>\\n                <h5 *ngIf=\\"formControllerName === \'reimbursableExportType\' || formControllerName === \'cccExportType\' || formControllerName === \'creditCardExportType\' && appName !== AppName.SAGE300\\" class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\">\\n                    Choose the type of transaction record that you would like to create in {{ appName }} while exporting expenses from {{brandingConfig.brandName}}. <span *ngIf=\\"exportTypeIconPath\\">Click<a (click)=\\"showExportTable()\\" class=\\"tw-cursor-pointer tw-text-hyperlink-color\\"> here</a> for more details.</span>\\n                </h5>\\n            </div>\\n        </div>\\n        <div>\\n            <div class=\\"p-field-checkbox tw-pl-34-px\\" *ngIf=\\"destinationAttributes\\">\\n                <p-dropdown appendTo=\\"body\\" [options]=\\"destinationAttributes\\" [optionLabel]=\\"optionLabel\\" class=\\"!tw-w-300-px\\" \\n                    [formControlName]=\\"formControllerName\\" \\n                    [placeholder]=\\"placeholder\\" \\n                    [ngClass]=\\"[form.controls[formControllerName].invalid && isFieldMandatory && form.controls[formControllerName].touched ? \'error-box\' : \'normal-box\']\\" \\n                    [filter]=\\"true\\" [filterBy]=\\"optionLabel\\"\\n                    (onFilter)=\\"searchOptions($event)\\" \\n                    [emptyFilterMessage]=\\"isOptionSearchInProgress ? \'Searching...\' : \'No results found\'\\" \\n                    [dropdownIcon]=\\"isOptionSearchInProgress ? \'pi pi-spinner pi-spin\' : \'pi pi-chevron-down\'\\">\\n                </p-dropdown>\\n            </div>\\n            <div *ngIf=\\"options && !destinationAttributes && !simpleOptions\\">\\n                <div class=\\"p-field-checkbox tw-pl-34-px\\" *ngIf=\\"formControllerName !== \'dayOfMonth\' && formControllerName !== \'dayOfWeek\' && formControllerName !== \'timeOfDay\' && !destinationAttributes\\">\\n                    <p-dropdown appendTo=\\"body\\" [options]=\\"options\\" class=\\"!tw-w-300-px\\"\\n                    [formControlName]=\\"formControllerName\\" [placeholder]=\\"placeholder\\"\\n                    dropdownIcon=\\"pi pi-chevron-down\\"\\n                    [ngClass]=\\"{\\n                        \'error-box\': form.controls[formControllerName].invalid && isFieldMandatory && form.controls[formControllerName].touched,\\n                        \'normal-box\': !(form.controls[formControllerName].invalid && isFieldMandatory && form.controls[formControllerName].touched),\\n                        \'selectedItem\': form.controls[formControllerName].value,\\n                        \'filterDropdown\': !form.controls[formControllerName].value\\n                    }\\" [disabled]=\\"isDisabled\\"\\n                    >\\n                    <ng-template let-option pTemplate=\\"item\\">\\n                        <div #textElement\\n                            [ngStyle]=\\"{\'white-space\': \'nowrap\', \'overflow\': \'hidden\', \'text-overflow\': \'ellipsis\', \'max-width\': \'16rem\'}\\"\\n                            [pTooltip]=\\"isOverflowing(textElement) ? option.label : null\\" tooltipPosition=\\"top\\">\\n                            {{option.label}}\\n                        </div>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                        <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                            <span>\\n                                {{ item.label }}\\n                            </span>\\n                            <i *ngIf=\\"!showClearIcon && !isDisabled\\" class=\\"pi pi-chevron-down\\"></i>\\n                            <i *ngIf=\\"showClearIcon && !isDisabled\\" class=\\"pi pi-times\\" (click)=\\"removeFilter(form.controls[formControllerName])\\"></i>\\n                        </div>\\n                    </ng-template>\\n                </p-dropdown>\\n                    <div *ngIf=\\"appName !== AppName.SAGE300 && [\'JOURNAL_ENTRY\', \'EXPENSE_REPORT\', \'BILL\', \'CHARGE_CARD_TRANSACTION\', \'PURCHASE_INVOICE\', \'DIRECT_COST\', \'EXPENSE\', \'JOURNAL ENTRY\', \'CHECK\', \'CREDIT CARD PURCHASE\', \'DEBIT CARD EXPENSE\'].includes(form.controls[formControllerName].value)\\" class=\\"sub-text tw-pt-3-px\\">\\n                        <span>Click </span>\\n                        <a class=\\"tw-text-hyperlink-color !tw-cursor-pointer\\" (click)=\\"showExportPreviewDialog(form.controls[formControllerName].value)\\">here</a>\\n                        <span> to preview how it looks on {{appName}}</span>\\n                    </div>\\n                    <div *ngIf=\\"form.controls[formControllerName].value===\'spent_at\' && isOnboarding\\" class=\\"sub-text\\">\\n                        <span>Using the Spend Date may lead to multiple single line<br>item entries.</span>\\n                    </div>\\n                </div>\\n                <div class=\\"tw-pl-30-px tw-flex tw-justify-end tw-items-end\\" *ngIf=\\"formControllerName === \'dayOfMonth\' || formControllerName === \'dayOfWeek\' || formControllerName === \'timeOfDay\'\\">\\n                    <div *ngIf=\\"formControllerName === \'dayOfWeek\'\\" class=\\"tw-mr-18-px dropdown-monthy\\">\\n                        <p class=\\"tw-font-400 tw-text-faded-text-color tw-text-14-px\\">Day</p>\\n                        <p-dropdown appendTo=\\"body\\" [options]=\\"options\\" [formControlName]=\\"formControllerName\\" [placeholder]=\\"placeholder\\" [ngClass]=\\"[form.controls[formControllerName].invalid && isFieldMandatory && form.controls[formControllerName].touched ? \'error-box\' : \'normal-box\']\\">\\n                            <ng-template let-value pTemplate=\\"selectedItem\\" >\\n                                <div *ngIf=\\"form.value[formControllerName]\\" class=\\"tw-flex\\">\\n                                    <p>{{ value | titlecase | snakeCaseToSpaceCase }}</p>\\n                                </div>\\n                                <div *ngIf=\\"!form.value[formControllerName]\\" class=\\"tw-text-placeholder\\">\\n                                    {{ placeholder }}\\n                                </div>\\n                            </ng-template>\\n                            <ng-template let-day pTemplate=\\"item\\">\\n                                <div>\\n                                    <p class=\\"tw-text-sub-text-color tw-text-14-px\\">{{ day | titlecase | snakeCaseToSpaceCase }}</p>\\n                                </div>\\n                            </ng-template>\\n                        </p-dropdown>\\n                    </div>\\n                    <div *ngIf=\\"formControllerName === \'dayOfMonth\'\\" class=\\"p-field-checkbox tw-mr-20-px tw-pl-34-px\\">\\n                        <p class=\\"tw-font-400 tw-text-faded-text-color tw-text-14-px\\">Day</p>\\n                        <p-dropdown appendTo=\\"body\\" [options]=\\"options\\" class=\\"dropdown-monthy\\" [formControlName]=\\"formControllerName\\" [placeholder]=\\"placeholder\\" [ngClass]=\\"[form.controls[formControllerName].invalid && isFieldMandatory && form.controls[formControllerName].touched ? \'error-box\' : \'normal-box\']\\"></p-dropdown>\\n                    </div>\\n                    <div class=\\"tw-mr-18-px\\" [ngClass]=\\"[formControllerName === \'dayOfMonth\' || formControllerName === \'dayOfWeek\' ? \'dropdown-time\' : \'dropdown-time-alone\']\\">\\n                        <p class=\\"tw-font-400 tw-text-faded-text-color tw-text-14-px\\">Time</p>\\n                        <p-dropdown appendTo=\\"body\\" [options]=\\"timeOption\\" formControlName=\\"timeOfDay\\" placeholder=\\"Select Time for export\\" ></p-dropdown>\\n                    </div>\\n                    <div [ngClass]=\\"[formControllerName === \'dayOfMonth\' || formControllerName === \'dayOfWeek\' ? \'dropdown-time\' : \'dropdown-time-alone\']\\">\\n                        <p-dropdown appendTo=\\"body\\" [options]=\\"meridiemOption\\" formControlName=\\"meridiem\\" placeholder=\\"Select meridiem of time\\" ></p-dropdown>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\"simpleOptions && !options\\" class=\\"p-field-checkbox tw-pl-34-px\\">\\n                <p-dropdown appendTo=\\"body\\" [options]=\\"simpleOptions\\" [formControlName]=\\"formControllerName\\" [placeholder]=\\"placeholder\\" [ngClass]=\\"[form.controls[formControllerName].invalid && isFieldMandatory && form.controls[formControllerName].touched ? \'error-box\' : \'normal-box\']\\">\\n                    <ng-template let-value pTemplate=\\"selectedItem\\" >\\n                        <div *ngIf=\\"form.value[formControllerName]\\" class=\\"tw-flex\\">\\n                            <p>{{ value | titlecase | snakeCaseToSpaceCase }}</p>\\n                        </div>\\n                        <div *ngIf=\\"!form.value[formControllerName]\\" class=\\"tw-text-placeholder\\">\\n                            {{ placeholder }}\\n                        </div>\\n                    </ng-template>\\n                    <ng-template let-memo pTemplate=\\"item\\">\\n                        <div>\\n                            <p class=\\"tw-text-sub-text-color tw-text-14-px\\">{{ memo | titlecase | snakeCaseToSpaceCase }}</p>\\n                        </div>\\n                    </ng-template>\\n                </p-dropdown>\\n            </div>\\n            <div [ngClass]=\\"[formControllerName !== \'dayOfMonth\' ? \'tw-pl-34-px\' : \'tw-pl-70-px\', formControllerName === \'dayOfWeek\' ? \'tw-pl-30-px\' : \'tw-pl-34-px\']\\">\\n                <app-mandatory-error-message *ngIf=\\"isFieldMandatory && form.controls[formControllerName].touched && !form.controls[formControllerName].valid && !form.controls[formControllerName].disabled\\" [listName]=\\"mandatoryErrorListName\\" [customErrorMessage]=\\"customErrorMessage\\"></app-mandatory-error-message>\\n            </div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\"isDefaultFields\\">\\n        <div class=\\"tw-text-faded-text-color tw-text-14-px\\">\\n            <div>\\n                <label>{{label}}</label>\\n            </div>\\n            <div class=\\"tw-pt-2\\">\\n                <p-dropdown appendTo=\\"body\\" [options]=\\"destinationAttributes\\" optionLabel=\\"value\\"\\n                [formControlName]=\\"formControllerName\\" [placeholder]=\\"placeholder\\" [ngClass]=\\"{\'selectedItem\': form.controls[formControllerName].value, \'filterDropdown\': !form.controls[formControllerName].value}\\">\\n                    <ng-template pTemplate=\\"selectedItem\\" let-item>\\n                        <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                            <span>\\n                                {{ item.value }}\\n                            </span>\\n                            <i class=\\"pi pi-times\\" (click)=\\"removeFilter(form.controls[formControllerName])\\"></i>\\n                        </div>\\n                    </ng-template>\\n                </p-dropdown>\\n            </div>  \\n        </div>\\n    </div>\\n</div>\\n\\n<div *ngIf=\\"isPreviewDialogVisible\\">\\n    <app-preview-dialog [isPreviewDialogVisible]=\\"true\\" [iconPath]=\\"exportTypeIconPath\\" (closeDialog)=\\"closeDialog()\\" [header]=\\"dialogHeader\\"></app-preview-dialog>\\n</div>\\n"},{"name":"ConfigurationSkipExportComponent","id":"component-ConfigurationSkipExportComponent-873e346fd2e55ae82170f447bc503048727277bb16477b16e553e8edfb0d0e4c2b83abd4849b167e6e512b1945c678815cce7b61f83c4d898447b6d132dcc0f1","file":"src/app/shared/components/configuration/configuration-skip-export/configuration-skip-export.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-skip-export","styleUrls":["./configuration-skip-export.component.scss"],"styles":[],"templateUrl":["./configuration-skip-export.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"conditionFieldOptions","deprecated":false,"deprecationMessage":"","line":21,"type":"ConditionField[]","decorators":[]},{"name":"enableSkipExport","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"expenseFilter","deprecated":false,"deprecationMessage":"","line":19,"type":"ExpenseFilterResponse","decorators":[]},{"name":"skipExportForm","deprecated":false,"deprecationMessage":"","line":17,"type":"FormGroup","decorators":[]}],"outputsClass":[{"name":"deleteSkipExportForm","defaultValue":"new EventEmitter<number>()","deprecated":false,"deprecationMessage":"","line":23,"type":"EventEmitter"}],"propertiesClass":[{"name":"customOperatorOptions","defaultValue":"[\\n    {\\n      label: \'Is\',\\n      value: CustomOperatorOption.Is\\n    },\\n    {\\n      label: \'Is empty\',\\n      value: CustomOperatorOption.IsEmpty\\n    },\\n    {\\n      label: \'Is not empty\',\\n      value: CustomOperatorOption.IsNotEmpty\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":45},{"name":"customSelectOperatorOptions","defaultValue":"[\\n    {\\n      label: \'is\',\\n      value: \'iexact\'\\n    },\\n    {\\n      label: \'is not\',\\n      value: \'not_in\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":60},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":25},{"name":"joinByOptions","defaultValue":"[{label: \'AND\', value: JoinOption.AND}, {label: \'OR\', value: JoinOption.OR}]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":43},{"name":"operatorFieldOptions1","deprecated":false,"deprecationMessage":"","type":"literal type[]","optional":false,"description":"","line":39},{"name":"operatorFieldOptions2","deprecated":false,"deprecationMessage":"","type":"literal type[]","optional":false,"description":"","line":41},{"name":"showAddButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":35},{"name":"showAdditionalCondition","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33},{"name":"showExpenseFilters","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"skippedCondition1","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29},{"name":"skippedCondition2","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":37}],"methodsClass":[{"name":"checkValidationCondition","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":190,"deprecated":false,"deprecationMessage":""},{"name":"conditionFieldWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":282,"deprecated":false,"deprecationMessage":""},{"name":"remCondition","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":""},{"name":"resetAdditionalFilter","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":""},{"name":"resetFields","args":[{"name":"operator","type":"AbstractControl","deprecated":false,"deprecationMessage":""},{"name":"value","type":"AbstractControl","deprecated":false,"deprecationMessage":""},{"name":"conditionSelected","type":"ConditionField","deprecated":false,"deprecationMessage":""},{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":144,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"operator","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionSelected","type":"ConditionField","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setConditionFields","args":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":""},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setCustomOperatorOptions","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""},{"name":"type","type":"string | null","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":256,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"type","type":"string | null","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setDefaultOperatorOptions","args":[{"name":"conditionField","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":226,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"conditionField","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setOperatorFieldOptions","args":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":""},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setSkippedConditions","args":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":""},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupSkipExportForm","args":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":""},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":272,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showChipField","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":220,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showDateField","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":215,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showInputField","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":210,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showValueHeader","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":205,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateAdditionalFilterVisibility","args":[{"name":"show","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"show","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { AbstractControl, FormGroup } from \'@angular/forms\';\\nimport { ConditionField, ExpenseFilterResponse } from \'src/app/core/models/common/advanced-settings.model\';\\nimport { JoinOption } from \'src/app/core/models/enum/enum.model\';\\nimport { CustomOperatorOption } from \'src/app/core/models/si/si-configuration/advanced-settings.model\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\n\\n@Component({\\n  selector: \'app-configuration-skip-export\',\\n  templateUrl: \'./configuration-skip-export.component.html\',\\n  styleUrls: [\'./configuration-skip-export.component.scss\']\\n})\\nexport class ConfigurationSkipExportComponent implements OnInit {\\n\\n  @Input() enableSkipExport: boolean;\\n\\n  @Input() skipExportForm: FormGroup;\\n\\n  @Input() expenseFilter: ExpenseFilterResponse;\\n\\n  @Input() conditionFieldOptions: ConditionField[];\\n\\n  @Output() deleteSkipExportForm = new EventEmitter<number>();\\n\\n  isLoading: boolean = true;\\n\\n  showExpenseFilters: boolean;\\n\\n  skippedCondition1: string;\\n\\n  skippedCondition2: string;\\n\\n  showAdditionalCondition: boolean = false;\\n\\n  showAddButton: boolean = true;\\n\\n  workspaceId: number;\\n\\n  operatorFieldOptions1: { label: string; value: string }[];\\n\\n  operatorFieldOptions2: { label: string; value: string }[];\\n\\n  joinByOptions = [{label: \'AND\', value: JoinOption.AND}, {label: \'OR\', value: JoinOption.OR}];\\n\\n  customOperatorOptions = [\\n    {\\n      label: \'Is\',\\n      value: CustomOperatorOption.Is\\n    },\\n    {\\n      label: \'Is empty\',\\n      value: CustomOperatorOption.IsEmpty\\n    },\\n    {\\n      label: \'Is not empty\',\\n      value: CustomOperatorOption.IsNotEmpty\\n    }\\n  ];\\n\\n  customSelectOperatorOptions = [\\n    {\\n      label: \'is\',\\n      value: \'iexact\'\\n    },\\n    {\\n      label: \'is not\',\\n      value: \'not_in\'\\n    }\\n  ];\\n\\n  constructor(\\n    private helper: HelperService\\n  ) { }\\n\\n  private setConditionFields(response: ExpenseFilterResponse, conditionArray: ConditionField[]) {\\n    response.results.forEach((element) => {\\n      const type = this.conditionFieldOptions.filter( (fieldOption) => fieldOption.field_name === element.condition);\\n      const selectedConditionOption : ConditionField = type[0];\\n      conditionArray.push(selectedConditionOption);\\n    });\\n  }\\n\\n  private setOperatorFieldOptions(response: ExpenseFilterResponse, conditionArray: ConditionField[]) {\\n    if (conditionArray.length) {\\n      if (response.results[0].is_custom) {\\n        this.setCustomOperatorOptions(response.results[0].rank, response.results[0].custom_field_type);\\n      } else {\\n        this.operatorFieldOptions1 = this.setDefaultOperatorOptions(response.results[0].condition);\\n      }\\n      if (response.results[0].join_by !== null) {\\n        if (response.results[1].is_custom) {\\n          this.setCustomOperatorOptions(response.results[1].rank, response.results[1].custom_field_type);\\n        } else {\\n          this.operatorFieldOptions2 = this.setDefaultOperatorOptions(response.results[1].condition);\\n        }\\n      }\\n    }\\n  }\\n\\n  private setSkippedConditions(response: ExpenseFilterResponse, conditionArray: ConditionField[]) {\\n    if (response.count > 0) {\\n      this.skippedCondition1 = conditionArray[0].field_name;\\n      if (response.count > 1 && response.results[0].join_by) {\\n        this.skippedCondition2 = conditionArray[1].field_name;\\n      } else {\\n        this.skippedCondition2 = \'\';\\n      }\\n    } else {\\n      this.skippedCondition1 = \'\';\\n      this.skippedCondition2 = \'\';\\n    }\\n  }\\n\\n  conditionFieldWatcher() {\\n    this.skipExportForm.controls.condition1.valueChanges.subscribe(\\n      (conditionSelected) => {\\n        this.resetFields(\\n          this.skipExportForm.controls.operator1,\\n          this.skipExportForm.controls.value1,\\n          conditionSelected,\\n          1\\n        );\\n      }\\n    );\\n\\n    this.skipExportForm.controls.condition2.valueChanges.subscribe(\\n      (conditionSelected) => {\\n        this.resetFields(\\n          this.skipExportForm.controls.operator2,\\n          this.skipExportForm.controls.value2,\\n          conditionSelected,\\n          2\\n        );\\n      }\\n    );\\n  }\\n\\n  resetAdditionalFilter() {\\n    this.skipExportForm.controls.join_by.reset();\\n    this.skipExportForm.controls.condition2.reset();\\n    this.skipExportForm.controls.value2.reset();\\n  }\\n\\n  resetFields(operator: AbstractControl, value: AbstractControl, conditionSelected: ConditionField, rank: number) {\\n    operator.reset();\\n    value.reset();\\n    if (rank === 1) {\\n      this.skipExportForm.controls.value1.reset();\\n    } else if (rank === 2) {\\n      this.skipExportForm.controls.value2.reset();\\n    }\\n    if (conditionSelected !== null) {\\n      if (conditionSelected.is_custom === true) {\\n        this.setCustomOperatorOptions(rank, conditionSelected.type);\\n      } else if (conditionSelected.is_custom === false) {\\n        if (rank === 1) {\\n          this.operatorFieldOptions1 = this.setDefaultOperatorOptions(\\n            conditionSelected.field_name\\n          );\\n        } else if (rank === 2) {\\n          this.operatorFieldOptions2 = this.setDefaultOperatorOptions(\\n            conditionSelected.field_name\\n          );\\n        }\\n      }\\n    }\\n  }\\n\\n  updateAdditionalFilterVisibility(show: boolean) {\\n    this.showAdditionalCondition = show;\\n    this.showAddButton = !show;\\n    if (this.showAdditionalCondition) {\\n      const fields = [\'join_by\', \'condition2\', \'operator2\'];\\n      this.helper.handleSkipExportFormUpdates(this.skipExportForm, fields, true);\\n      if (this.skipExportForm.controls.value2.value.length===0) {\\n        this.helper.markControllerAsRequired(this.skipExportForm, \'value2\');\\n      }\\n    }\\n  }\\n\\n  remCondition() {\\n    this.showAdditionalCondition = false;\\n    this.showAddButton = true;\\n    this.resetAdditionalFilter();\\n    const isDelete = this.expenseFilter.results.length > 1 ? this.deleteSkipExportForm.emit(2) : \'\';\\n    const fields = [\'join_by\', \'condition2\', \'operator2\', \'value2\'];\\n    this.helper.handleSkipExportFormUpdates(this.skipExportForm, fields, false);\\n  }\\n\\n  checkValidationCondition() {\\n    const condition1 = this.skipExportForm.controls.condition1;\\n    const condition2 = this.skipExportForm.controls.condition2;\\n    if (this.showAdditionalCondition) {\\n      if (condition1.valid && condition2.valid) {\\n        if (condition1.value?.field_name === condition2.value?.field_name) {\\n          this.skipExportForm.controls.operator2.setValue(null);\\n          return true;\\n        }\\n      }\\n    }\\n    return false;\\n  }\\n\\n  // For conditionally adding and removing Value fields from layout\\n  showValueHeader(rank: number): boolean {\\n    return rank === 1 ? (this.skipExportForm.value.operator1 !== \'is_empty\') && (this.skipExportForm.value.operator1 !== \'is_not_empty\')\\n      : (this.skipExportForm.value.operator2 !== \'is_empty\') && (this.skipExportForm.value.operator2 !== \'is_not_empty\');\\n  }\\n\\n  showInputField(rank: number) {\\n    return rank === 1 ? this.skipExportForm.value.condition1?.field_name === \'report_title\' && (this.skipExportForm.value.operator1 !== \'is_empty\' || this.skipExportForm.value.operator1 !== \'is_not_empty\')\\n      : this.skipExportForm.value?.condition2?.field_name && this.skipExportForm.value?.condition2?.field_name === \'report_title\'  && (this.skipExportForm.value.operator2 !== \'is_empty\' || this.skipExportForm.value.operator2 !== \'is_not_empty\');\\n  }\\n\\n  showDateField(rank: number) {\\n    return rank === 1 ? this.skipExportForm.value?.condition1?.type===\'DATE\' && (this.skipExportForm.value.operator1 !== \'is_empty\' || this.skipExportForm.value.operator1 !== \'is_not_empty\')\\n      : this.skipExportForm.value?.condition2?.type===\'DATE\' && (this.skipExportForm.value.operator2 !== \'is_empty\' || this.skipExportForm.value.operator2 !== \'is_not_empty\');\\n  }\\n\\n  showChipField(rank: number):boolean {\\n    return rank === 1 ?\\n      (this.skipExportForm.value.condition1?.field_name !== \'report_title\') && (!this.skipExportForm.value.condition1 || this.skipExportForm.value.condition1.type===\'SELECT\' || this.skipExportForm.value?.condition1?.type===\'TEXT\' || this.skipExportForm.value?.condition1?.type===\'NUMBER\') && (this.skipExportForm.value.operator1 !== \'is_empty\')  && (this.skipExportForm.value.operator1 !== \'is_not_empty\')\\n      :(this.skipExportForm.value?.condition2?.field_name !== \'report_title\') && (!this.skipExportForm.value?.condition2 || this.skipExportForm.value?.condition2?.type===\'SELECT\' || this.skipExportForm.value?.condition2?.type===\'TEXT\' || this.skipExportForm.value?.condition2?.type===\'NUMBER\') && (this.skipExportForm.value.operator2 !== \'is_empty\')  && (this.skipExportForm.value.operator2 !== \'is_not_empty\');\\n  }\\n\\n  setDefaultOperatorOptions(conditionField: string) {\\n    const operatorList = [];\\n    if (\\n      conditionField === \'claim_number\' ||\\n      conditionField === \'employee_email\' ||\\n      conditionField === \'report_title\'\\n    ) {\\n      operatorList.push({\\n        value: \'iexact\',\\n        label: \'is\'\\n      });\\n    } else if (conditionField === \'spent_at\') {\\n      operatorList.push({\\n        value: \'lt\',\\n        label: \'is before\'\\n      });\\n      operatorList.push({\\n        value: \'lte\',\\n        label: \'is on or before\'\\n      });\\n    }\\n    if (conditionField === \'report_title\') {\\n      operatorList.push({\\n        value: \'icontains\',\\n        label: \'contains\'\\n      });\\n    }\\n    return operatorList;\\n  }\\n\\n  setCustomOperatorOptions(rank: number, type: string | null) {\\n    if (type !== \'SELECT\') {\\n      if (rank === 1) {\\n        this.operatorFieldOptions1 = this.customOperatorOptions;\\n      } else if (rank === 2) {\\n        this.operatorFieldOptions2 = this.customOperatorOptions;\\n      }\\n    } else {\\n      if (rank === 1) {\\n        this.operatorFieldOptions1 = this.customSelectOperatorOptions;\\n      } else if (rank === 2) {\\n        this.operatorFieldOptions2 = this.customSelectOperatorOptions;\\n      }\\n    }\\n  }\\n\\n  setupSkipExportForm(response: ExpenseFilterResponse, conditionArray: ConditionField[]) {\\n    this.showAddButton = response.count !== 2 ? true : false;\\n    this.showAdditionalCondition = response.count === 2 ? true : false;\\n    this.setConditionFields(response, conditionArray);\\n    this.setOperatorFieldOptions(response, conditionArray);\\n    this.setSkippedConditions(response, conditionArray);\\n    this.conditionFieldWatcher();\\n    this.isLoading = false;\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupSkipExportForm(this.expenseFilter, []);\\n  }\\n}","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .error-box .p-dropdown {\\n    @apply tw-border-alert-toast #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-dropdown {\\n    @apply tw-border-box-color #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-dropdown.p-focus {\\n    @apply tw-border-slightly-normal-text-color #{!important};\\n}\\n\\n.fields-header {\\n    @apply tw-text-14-px tw-text-faded-text-color ;\\n}\\n  \\n.delete-icon {\\n    @apply tw-text-center tw-cursor-pointer tw-ml-26-px tw-max-h-20-px tw-max-w-20-px;\\n}\\n  \\n.value-input-field {\\n    @apply tw-border tw-border-line-inactive tw-rounded-4-px tw-py-6-px tw-px-10-px tw-inline-flex tw-items-center tw-w-296-px #{!important};\\n}\\n  \\n:host ::ng-deep .joinby-field .p-dropdown {\\n    @apply tw-w-98-px tw-h-38-px #{!important} ;\\n}\\n  \\n:host ::ng-deep .p-dropdown .p-dropdown-trigger-icon {\\n    @apply tw-text-12-px tw-mr-12-px tw-w-auto;\\n}\\n  \\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n    @apply tw-w-auto;\\n}\\n  \\n:host ::ng-deep .p-calendar .p-inputtext {\\n    @apply tw-cursor-pointer tw-w-360-px tw-h-40-px tw-border-solid tw-py-10-px tw-px-14-px #{!important};\\n}\\n  \\n:host ::ng-deep .p-chips-token {\\n    @apply tw-h-24-px tw-items-center tw-bg-white tw-border tw-border-line-inactive tw-shadow-chip-shadow\\n}\\n  \\n  /* To remove blue hover and other styles */\\n  :host ::ng-deep .p-chips input:focus {\\n    outline: none !important;\\n    box-shadow: none !important;\\n    border-color: inherit !important;\\n  }\\n  \\n  /* Scrollable container */\\n  :host ::ng-deep .p-chips-multiple-container {\\n    max-height: 80px;\\n    overflow-y: auto;\\n    width: 360px !important;\\n    height: auto !important;\\n    min-height: 38px !important;\\n    padding-top: 2px!important;\\n    padding-bottom: 2px!important;\\n  }\\n  \\n  /* Change text color to black */\\n  :host ::ng-deep .p-chips-token-label {\\n    @apply tw-py-4-px tw-px-8-px tw-text-slightly-normal-text-color #{!important};\\n  }\\n  \\n  \\n  :host ::ng-deep .p-chips-token-icon {\\n    @apply tw-text-slightly-normal-text-color #{!important};\\n  }\\n  \\n  :host ::ng-deep .p-chips-multiple-container::-webkit-scrollbar {\\n    background: transparent;  /* For WebKit browsers like Chrome and Safari */\\n  }\\n  \\n  :host ::ng-deep .p-dropdown-panel .p-dropdown-items .p-dropdown-item:not(.p-highlight):hover .p-calendar .p-inputtext{\\n    @apply tw-bg-disabled-bg-color #{!important};\\n  }\\n  \\n  :host ::ng-deep .p-calendar ::placeholder {\\n    @apply tw-text-placeholder #{!important};\\n  }\\n  \\n  .chip-hint {\\n    font-size: 12px !important;\\n    color: grey !important;\\n  }\\n  \\n  :host ::ng-deep .p-dropdown {\\n    transform: scale(0.9);\\n    width: 180px !important;\\n  }\\n  \\n  :host ::ng-deep input {\\n    @apply tw-text-14-px #{!important};\\n  }\\n  \\n  :host ::ng-deep .p-datepicker table td > span {\\n    @apply tw-w-auto tw-h-auto #{!important};\\n  }\\n  ","styleUrl":"./configuration-skip-export.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":69,"jsdoctags":[{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\">\\n</div>\\n<div *ngIf=\\"enableSkipExport && !isLoading\\">\\n    <div class=\\"tw-flex tw-flex-col\\">\\n      <form [formGroup]=\\"skipExportForm\\" class=\\"tw-flex tw-flex-col tw-pl-24-px\\">\\n            <div class=\\"tw-flex\\">\\n                <div class=\\"tw-ml-120-px tw-w-200-px tw-mr-6-px fields-header\\">\\n                    Condition\\n                    <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n                </div>\\n                  <div class=\\"tw-w-180-px tw-mr-24-px fields-header\\">\\n                    Operator\\n                    <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n                </div>\\n                <div class=\\"tw-w-296-px fields-header\\" *ngIf=\\"showValueHeader(1)\\">\\n                  Value\\n                  <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n                </div>\\n            </div>\\n            <div class=\\"tw-flex dropdown-row tw-mt-8-px tw-pb-24-px\\">\\n              <p class=\\"tw-text-14-px tw-text-sub-text-color tw-pt-6-px\\">Where</p>\\n              <div class=\\"tw-ml-80-px tw-mr-24-px\\">\\n                <p-dropdown appendTo=\\"body\\" [options]=\\"conditionFieldOptions\\" formControlName=\\"condition1\\" placeholder=\\"Select Condition\\">\\n                  For options\\n                  <ng-template let-option pTemplate=\\"item\\">\\n                    {{ option.field_name | snakeCaseToSpaceCase | titlecase }}\\n                  </ng-template>\\n                  For selected option\\n                  <ng-template let-selectedOption pTemplate=\\"selectedItem\\">\\n                    {{ selectedOption.field_name | snakeCaseToSpaceCase | titlecase }}\\n                  </ng-template>\\n                </p-dropdown>                               \\n                <app-mandatory-error-message *ngIf=\\"skipExportForm.controls.condition1.touched && !skipExportForm.controls.condition1.valid\\"\\n                [customErrorMessage]=\\"\'Please select the condition\'\\"></app-mandatory-error-message>\\n              </div>\\n              <div class=\\"tw-mr-24-px\\">\\n                <p-dropdown appendTo=\\"body\\" [options]=\\"operatorFieldOptions1\\" formControlName=\\"operator1\\" placeholder=\\"Select Operator\\"></p-dropdown>\\n                <app-mandatory-error-message *ngIf=\\"skipExportForm.controls.operator1.touched && !skipExportForm.controls.operator1.valid\\"\\n                [customErrorMessage]=\\"\'Please select the operator\'\\"></app-mandatory-error-message>\\n              </div>\\n              <div class=\\"tw-w-296-px\\" *ngIf=\\"showInputField(1)\\">\\n                <input type=\\"text\\" formControlName=\\"value1\\" class=\\"value-input-field\\" placeholder=\\"Enter Value\\">\\n              </div>\\n              <div class=\\"tw-w-296-px\\" *ngIf=\\"showDateField(1)\\">\\n                <p-calendar formControlName=\\"value1\\" [readonlyInput]=\\"true\\" placeholder=\\"Select Date\\"></p-calendar>\\n              </div>\\n              <div class=\\"tw-w-296-px\\" *ngIf=\\"showChipField(1)\\">\\n                <p-chips [addOnBlur]=\\"true\\" styleClass=\\"tw-w-[296px]\\" formControlName=\\"value1\\" separator=\\",\\" placeholder=\\"Enter Value\\"></p-chips>\\n                <small class=\\"chip-hint\\"><br>Separate your values with a comma or enter key.</small>\\n              </div>\\n        </div>\\n  \\n        <div *ngIf=\\"showAdditionalCondition\\" class=\\"tw-pb-24-px\\">\\n          <div class=\\"tw-flex tw-ml-120-px tw-mt-8-px\\">\\n              <div class=\\"tw-w-200-px tw-mr-6-px fields-header\\">\\n                  Condition\\n                  <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n              </div>\\n                <div class=\\"tw-w-180-px fields-header tw-mr-24-px\\">\\n                  Operator\\n                <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n              </div>\\n              <div class=\\"tw-w-296-px fields-header\\" *ngIf=\\"showValueHeader(2)\\">\\n                Value\\n                <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n              </div>\\n          </div>\\n          <div class=\\"tw-flex\\">\\n            <div class=\\"joinby-field\\">\\n              <p-dropdown appendTo=\\"body\\" class=\\"joinby-field\\" [options]=\\"joinByOptions\\" formControlName=\\"join_by\\" placeholder=\\"Join by\\">\\n                <ng-template let-selectedValue pTemplate=\\"selectedItem\\" >\\n                  {{ selectedValue.value }}\\n                </ng-template>\\n                <ng-template let-value pTemplate=\\"item\\">\\n                  {{ value.value }}\\n                </ng-template>\\n              </p-dropdown>\\n            </div>\\n            <div class=\\"tw-ml-24-px tw-mr-24-px\\">\\n              <p-dropdown appendTo=\\"body\\" [options]=\\"conditionFieldOptions\\" formControlName=\\"condition2\\" placeholder=\\"Select Condition\\">\\n                For options\\n                <ng-template let-option pTemplate=\\"item\\">\\n                  {{ option.field_name | snakeCaseToSpaceCase | titlecase }}\\n                </ng-template>\\n                For selected option\\n                <ng-template let-selectedOption pTemplate=\\"selectedItem\\">\\n                  {{ selectedOption.field_name | snakeCaseToSpaceCase | titlecase }}\\n                </ng-template>\\n              </p-dropdown>                            \\n              <app-mandatory-error-message *ngIf=\\"skipExportForm.controls.condition2.touched && !skipExportForm.controls.condition2.valid\\"\\n              [customErrorMessage]=\\"\'Please select the condition\'\\"></app-mandatory-error-message>\\n            </div>\\n            <div class=\\"tw-mr-24-px\\">\\n              <p-dropdown appendTo=\\"body\\" [options]=\\"operatorFieldOptions2\\" formControlName=\\"operator2\\" placeholder=\\"Select Operator\\"></p-dropdown>\\n              <app-mandatory-error-message *ngIf=\\"skipExportForm.controls.operator2.touched && !skipExportForm.controls.operator2.valid\\"\\n              [customErrorMessage]=\\"\'Please select the operator\'\\"></app-mandatory-error-message>\\n            </div>\\n            <div *ngIf=\\"showInputField(2)\\" class=\\"tw-w-296-px\\">\\n              <input type=\\"text\\" formControlName=\\"value2\\" placeholder=\\"Enter a value\\" class=\\"border p-2 rounded value-input-field\\" placeholder=\\"Enter Value\\">\\n            </div>\\n            <div *ngIf=\\"showChipField(2)\\" class=\\"tw-w-296-px\\">\\n              <p-chips [addOnBlur]=\\"true\\" styleClass=\\"tw-w-[296px]\\" formControlName=\\"value2\\" placeholder=\\"Enter Value\\"></p-chips>\\n              <small class=\\"chip-hint\\"><br>Separate your values with a comma or enter key.</small>\\n            </div>\\n            <div *ngIf=\\"showDateField(2)\\" class=\\"tw-w-296-px\\">\\n              <p-calendar formControlName=\\"value2\\" [readonlyInput]=\\"true\\" placeholder=\\"Select Date\\"></p-calendar>\\n            </div>\\n            <img class=\\"delete-icon\\" src=\\"assets/icons/delete.svg\\" (click)=\\"remCondition()\\" p-tooltip=\\"Remove Condition\\">\\n          </div>\\n          <div class=\\" tw-text-mandatory-field-color\\" *ngIf=\\"checkValidationCondition()\\">\\n            <p>*Condition selected should be distinct.</p>\\n          </div>\\n        </div>\\n        <div class=\\"tw-flex items-center tw-text-mandatory-field-color tw-pt-12-px tw-pb-24-px\\" *ngIf=\\"showAddButton\\">\\n          <img src=\\"assets/icons/add.svg\\" (click)=\\"updateAdditionalFilterVisibility(true)\\">\\n          <a class=\\"add-row-text tw-cursor-pointer tw-pl-8-px tw-text-14-px\\" (click)=\\"updateAdditionalFilterVisibility(true)\\">\\n            Add More Fields\\n          </a>\\n        </div>\\n      </form>\\n    </div>\\n</div>\\n  "},{"name":"ConfigurationStepFooterComponent","id":"component-ConfigurationStepFooterComponent-5646b5b4c9241b5f4435817028f2ea1fab8f66ec469b0f1bcb549bbd3e931c8e84b69217e07f1134f2a21208678b4e0054909dd9f7abed054fdf84cd3842ee08","file":"src/app/shared/components/configuration/configuration-step-footer/configuration-step-footer.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-step-footer","styleUrls":["./configuration-step-footer.component.scss"],"styles":[],"templateUrl":["./configuration-step-footer.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"ctaText","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"isButtonDisabled","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"showBackButton","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"showResetButton","deprecated":false,"deprecationMessage":"","line":16,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"navigateToPreviousStep","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":22,"type":"EventEmitter"},{"name":"resetCloneSetting","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":18,"type":"EventEmitter"},{"name":"save","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":20,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"navigate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""},{"name":"resetConfiguration","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""},{"name":"saveChanges","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-configuration-step-footer\',\\n  templateUrl: \'./configuration-step-footer.component.html\',\\n  styleUrls: [\'./configuration-step-footer.component.scss\']\\n})\\nexport class ConfigurationStepFooterComponent implements OnInit {\\n\\n  @Input() ctaText: string;\\n\\n  @Input() isButtonDisabled: boolean;\\n\\n  @Input() showBackButton: boolean;\\n\\n  @Input() showResetButton: boolean;\\n\\n  @Output() resetCloneSetting = new EventEmitter();\\n\\n  @Output() save = new EventEmitter();\\n\\n  @Output() navigateToPreviousStep = new EventEmitter();\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {}\\n\\n  navigate(): void {\\n    this.navigateToPreviousStep.emit();\\n  }\\n\\n  resetConfiguration(): void {\\n    this.resetCloneSetting.emit();\\n  }\\n\\n  saveChanges(): void {\\n    this.save.emit();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".back-btn {\\n    @apply tw-py-12-px  tw-px-20-px tw-bg-white tw-border tw-rounded  tw-text-14-px ;\\n}\\n\\n.back-btn i {\\n    color: #FF3366 \\n}","styleUrl":"./configuration-step-footer.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":22},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-p-24-px tw-border-t tw-border-t-gray-200\\" [ngClass]=\\"!showBackButton ? \'tw-justify-end\': \'tw-justify-between\'\\">\\n    <div *ngIf=\\"showBackButton\\">\\n        <button type=\\"button\\" class=\\"p-button-raised tw-bg-white back-btn\\" (click)=\\"navigate()\\">\\n            <i class=\\"tw-pr-10-px tw-pt-2-px !tw-text-12-px pi pi-arrow-left tw-text-btn-cta\\"></i>\\n            Back\\n        </button>\\n\\n        <button *ngIf=\\"showResetButton\\" type=\\"button\\" class=\\"p-button-raised tw-bg-white back-btn tw-ml-16-px\\" (click)=\\"resetConfiguration()\\">\\n            Reset Configuration\\n        </button>\\n    </div>\\n    <div>\\n        <button *ngIf=\\"ctaText !== \'Saving\' && ctaText !== \'Syncing\'\\" pButton type=\\"button\\" class=\\"p-button-raised\\" (click)=\\"saveChanges()\\" [disabled]=\\"isButtonDisabled\\">\\n            {{ ctaText }}\\n            <i *ngIf=\\"ctaText !== \'Save\'\\" class=\\"tw-pl-10-px tw-pt-2-px !tw-text-12-px pi pi-arrow-right\\"></i>\\n        </button>\\n        <button *ngIf=\\"ctaText === \'Saving\' || ctaText === \'Syncing\'\\" pButton type=\\"button\\" class=\\"p-button-raised\\" disabled>\\n            {{ ctaText }}\\n            <div style=\\"border-top-color:transparent\\"\\n                class=\\"tw-w-5 tw-h-5 tw-ml-2 tw-border-2 tw-border-b-white tw-border-r-white tw-border-l-white tw-border-t-transparent tw-border-solid tw-rounded-full tw-animate-spin\\"></div>\\n        </button>\\n    </div>\\n</div>\\n"},{"name":"ConfigurationStepHeaderComponent","id":"component-ConfigurationStepHeaderComponent-34b88ff981d0752ae9fdd5bdad2359aacf778fbc82d24d4863c8196d56f0a485f0f70d31dd7fae9d6a1c027597d99d2120d3f4c8004c84be5f2fe74cb506db90","file":"src/app/shared/components/configuration/configuration-step-header/configuration-step-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-step-header","styleUrls":["./configuration-step-header.component.scss"],"styles":[],"templateUrl":["./configuration-step-header.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appName","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"contentText","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]},{"name":"headerText","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"redirectLink","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]},{"name":"showSyncButton","deprecated":false,"deprecationMessage":"","line":21,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"refreshDimension","defaultValue":"new EventEmitter<boolean>()","deprecated":false,"deprecationMessage":"","line":25,"type":"EventEmitter"}],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27,"modifierKind":[148]},{"name":"windowService","deprecated":false,"deprecationMessage":"","type":"WindowService","optional":false,"description":"","line":30,"modifierKind":[125]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { AppName, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\n\\n@Component({\\n  selector: \'app-configuration-step-header\',\\n  templateUrl: \'./configuration-step-header.component.html\',\\n  styleUrls: [\'./configuration-step-header.component.scss\']\\n})\\nexport class ConfigurationStepHeaderComponent implements OnInit {\\n\\n  @Input() headerText: string;\\n\\n  @Input() contentText: string;\\n\\n  @Input() redirectLink: string;\\n\\n  @Input() showSyncButton: boolean;\\n\\n  @Input() appName: string;\\n\\n  @Output() refreshDimension = new EventEmitter<boolean>();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    public windowService: WindowService\\n  ) { }\\n\\n  refreshDimensions() {\\n    this.refreshDimension.emit(true);\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./configuration-step-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":27,"jsdoctags":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-p-24-px tw-border-b tw-border-b-gray-200\\">\\n    <div class=\\"tw-flex tw-items-center tw-justify-between\\">\\n        <div>\\n          <h3 class=\\"tw-text-normal-text-color tw-text-18-px tw-font-500\\">\\n            {{ headerText }}\\n          </h3>\\n          <h5 class=\\"tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400\\">\\n            {{ contentText }}\\n            <a *ngIf=\\"redirectLink\\"\\n              class=\\"tw-text-hyperlink-color tw-pl-4-px tw-w-fit tw-cursor-pointer\\"\\n              (click)=\\"windowService.openInNewTab(redirectLink)\\">\\n              Read More\\n                <svg-icon-sprite src=\\"open-in-new-tab\\" width=\\"14px\\" height=\\"14px\\"\\n                  class=\\"tw-text-hyperlink-color tw-pl-2-px tw-pt-3-px tw-w-fit tw-inline-block\\">\\n                </svg-icon-sprite>\\n              </a>\\n          </h5>\\n        </div>\\n\\n        <button *ngIf=\\"showSyncButton\\" [pTooltip]=\\"\'The integration will import all the newly updated \'+ appName +\' dimensions and \' + brandingConfig.brandName + \' expenses in the configured state of export\'\\"\\n            (click)=\\"refreshDimensions()\\" tooltipPosition=\\"bottom\\"\\n            class=\\"tw-h-32-px tw-w-80-px tw-mr-12-px tw-flex tw-items-center focus:tw-ring-0 tw-justify-center tw-rounded tw-bg-white tw-text-black tw-border tw-border-gray-300 focus:tw-outline-none focus:tw-ring-opacity-50 active:tw-scale-95 transition-transform\\">\\n            <img src=\\"assets/icons/stepper/sync.svg\\">\\n            <span class=\\"tw-text-14-px tw-pl-8-px\\">\\n                Sync\\n            </span>\\n        </button>\\n\\n      </div>                             \\n</div>\\n"},{"name":"ConfigurationStepSubHeaderComponent","id":"component-ConfigurationStepSubHeaderComponent-96dd61ac675664d549c3c32a6e3be8acc19aded5d6b1f34072aa917871c36af37195e8a713b17908c368a7876532cccaec9cf9c025478b257d76d919a54966fe","file":"src/app/shared/components/configuration/configuration-step-sub-header/configuration-step-sub-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-step-sub-header","styleUrls":["./configuration-step-sub-header.component.scss"],"styles":[],"templateUrl":["./configuration-step-sub-header.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"label","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]},{"name":"subLabel","deprecated":false,"deprecationMessage":"","line":13,"type":"string | SafeHtml","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { SafeHtml } from \'@angular/platform-browser\';\\n\\n@Component({\\n  selector: \'app-configuration-step-sub-header\',\\n  templateUrl: \'./configuration-step-sub-header.component.html\',\\n  styleUrls: [\'./configuration-step-sub-header.component.scss\']\\n})\\nexport class ConfigurationStepSubHeaderComponent implements OnInit {\\n\\n  @Input() label: string;\\n\\n  @Input() subLabel: string | SafeHtml;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./configuration-step-sub-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":13},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg tw-p-24-px\\">\\n    <h4 class=\\"tw-text-normal-text-color tw-font-500\\">\\n        {{label}}\\n    </h4>\\n    <h5 class=\\"tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400\\">\\n        {{subLabel}}\\n    </h5>\\n</div>\\n"},{"name":"ConfigurationTextFieldComponent","id":"component-ConfigurationTextFieldComponent-f9b51ff194f45cdffddc5e2b888b42b0a0d26c3faa95db0fbf37c47babeae2ba650f22354047a68bb605a50117d7b2d673717a2b23071a9a8bbf2cafd38f0e43","file":"src/app/shared/components/configuration/configuration-text-field/configuration-text-field.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-text-field","styleUrls":["./configuration-text-field.component.scss"],"styles":[],"templateUrl":["./configuration-text-field.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"customErrorMessage","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":11,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"isFieldMandatory","deprecated":false,"deprecationMessage":"","line":19,"type":"boolean","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]},{"name":"type","defaultValue":"\'text\'","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"changeFormControllerType","args":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\n\\n@Component({\\n  selector: \'app-configuration-text-field\',\\n  templateUrl: \'./configuration-text-field.component.html\',\\n  styleUrls: [\'./configuration-text-field.component.scss\']\\n})\\nexport class ConfigurationTextFieldComponent implements OnInit {\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() label: string;\\n\\n  @Input() formControllerName: string;\\n\\n  @Input() placeholder: string;\\n\\n  @Input() isFieldMandatory: boolean;\\n\\n  @Input() customErrorMessage: string;\\n\\n  @Input() type: string = \'text\';\\n\\n  constructor() { }\\n\\n  changeFormControllerType(state: boolean) {\\n    this.type = state ? \'text\' : \'password\';\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".error-box {\\n    @apply tw-border-alert-toast #{!important};\\n}\\n\\n.normal-box  {\\n    @apply tw-border-box-color #{!important};\\n}\\n\\n.normal-box :enabled:focus-visible {\\n    @apply tw-border-faded-text-color #{!important};\\n}\\n\\n.p-inputtext {\\n    @apply tw-w-400-px tw-h-40-px tw-py-10-px tw-pl-14-px tw-text-slightly-normal-text-color tw-border tw-border-solid tw-rounded-4-px #{!important}\\n}","styleUrl":"./configuration-text-field.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":23},"extends":[],"implements":["OnInit"],"templateData":"<div [formGroup]=\\"form\\" class=\\"tw-pb-24-px\\">\\n    <div>\\n        <span class=\\"tw-text-14-px tw-text-faded-text-color\\">\\n            {{label}}\\n        </span>\\n        <app-mandatory-field [noSpacing]=\\"true\\"></app-mandatory-field> \\n    </div>\\n\\n    <div class=\\"tw-mt-8-px\\">\\n        <span class=\\"p-input-icon-right\\">\\n            <i *ngIf=\\"type === \'password\'\\" class=\\"pi pi-eye tw-cursor-pointer\\" (click)=\\"changeFormControllerType(true)\\"></i>\\n            <i *ngIf=\\"type !== \'password\' && formControllerName === \'userPassword\'\\" class=\\"pi pi-eye-slash tw-cursor-pointer\\" (click)=\\"changeFormControllerType(false)\\"></i>\\n            <input [type]=\\"type\\" class=\\"tw-border-box-color\\" [ngClass]=\\"[form.controls[formControllerName].invalid && form.controls[formControllerName].touched ? \'error-box\' : \'normal-box\']\\"  pInputText [formControlName]=\\"formControllerName\\" [placeholder]=\\"placeholder\\" [required]=\\"isFieldMandatory\\">\\n        </span>\\n        <app-mandatory-error-message *ngIf=\\"isFieldMandatory && form.controls[formControllerName].touched && !form.controls[formControllerName].valid && !form.controls[formControllerName].disabled\\" [customErrorMessage]=\\"customErrorMessage\\"></app-mandatory-error-message>\\n    </div>\\n</div>\\n"},{"name":"ConfigurationToggleFieldComponent","id":"component-ConfigurationToggleFieldComponent-190d4557c7bf07191c66ee1bde00c64e66708576b8a2f6c46bd89f9cdfa6ddad107b821011f81d29adc7ba20bf85673d9cece39e381be265fc53d60868ecb38f","file":"src/app/shared/components/configuration/configuration-toggle-field/configuration-toggle-field.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-configuration-toggle-field","styleUrls":["./configuration-toggle-field.component.scss"],"styles":[],"templateUrl":["./configuration-toggle-field.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"form","deprecated":false,"deprecationMessage":"","line":12,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"hasDependentFields","deprecated":false,"deprecationMessage":"","line":26,"type":"boolean","decorators":[]},{"name":"iconPath","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"isSectionHeader","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":16,"type":"string","decorators":[]},{"name":"redirectLink","deprecated":false,"deprecationMessage":"","line":22,"type":"string","decorators":[]},{"name":"subLabel","deprecated":false,"deprecationMessage":"","line":18,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"windowService","deprecated":false,"deprecationMessage":"","type":"WindowService","optional":false,"description":"","line":29,"modifierKind":[125]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\n\\n@Component({\\n  selector: \'app-configuration-toggle-field\',\\n  templateUrl: \'./configuration-toggle-field.component.html\',\\n  styleUrls: [\'./configuration-toggle-field.component.scss\']\\n})\\nexport class ConfigurationToggleFieldComponent implements OnInit {\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() formControllerName: string;\\n\\n  @Input() label: string;\\n\\n  @Input() subLabel: string;\\n\\n  @Input() isSectionHeader: boolean;\\n\\n  @Input() redirectLink: string;\\n\\n  @Input() iconPath: string;\\n\\n  @Input() hasDependentFields: boolean;\\n\\n  constructor(\\n    public windowService: WindowService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-inputswitch.p-inputswitch-checked .p-inputswitch-slider::after {\\n    content: \'Yes\';\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: absolute;\\n    left: 8px;\\n    bottom: 1px;\\n    font-size: 12px;\\n    color: white;\\n    font-weight: 500;\\n}\\n\\n:host ::ng-deep .p-inputswitch:not(.p-inputswitch-checked) .p-inputswitch-slider::after {\\n    content: \'No\';\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: absolute;\\n    left: 24px;\\n    bottom: 1px;\\n    font-size: 12px;\\n    color: white;\\n    font-weight: 500;\\n}\\n","styleUrl":"./configuration-toggle-field.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":26,"jsdoctags":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div [formGroup]=\\"form\\" class=\\"tw-p-24-px tw-flex tw-justify-between tw-items-center\\" [ngClass]=\\"{\'tw-pb-0\': hasDependentFields && form.value[formControllerName]}\\">\\n    <div class=\\"tw-w-3/4 tw-flex tw-items-start\\">\\n      <div *ngIf=\\"iconPath\\" [ngClass]=\\"[iconPath ? \'tw-pr-16-px\' : \'\']\\">\\n        <svg-icon-sprite [src]=\\"iconPath\\" width=\\"24px\\" height=\\"24px\\" class=\\"tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n      </div>\\n      <div>\\n        <h4 [ngClass]=\\"{\'tw-text-slightly-normal-text-color\': !isSectionHeader}\\" class=\\"tw-text-16-px !tw-font-500 \\">{{ label }}</h4>\\n        <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-6-px !tw-font-400 !tw-leading-4\\">\\n          <span [innerHTML]=\\"subLabel\\"></span>\\n          <a *ngIf=\\"redirectLink\\"\\n            class=\\"tw-text-hyperlink-color tw-pl-4-px tw-w-fit tw-cursor-pointer\\"\\n            (click)=\\"windowService.openInNewTab(redirectLink)\\">Read More\\n            <svg-icon-sprite src=\\"open-in-new-tab\\" width=\\"14px\\" height=\\"14px\\"\\n              class=\\"tw-text-hyperlink-color tw-pl-2-px tw-pt-3-px tw-w-fit tw-inline-block\\">\\n            </svg-icon-sprite>\\n          </a>\\n        </h5>        \\n      </div>\\n    </div>\\n    <div class=\\"configuration--input-toggle-section\\">\\n      <p-inputSwitch [formControlName]=\\"formControllerName\\"></p-inputSwitch>\\n    </div>\\n  </div>\\n"},{"name":"DashboardAccountingErrorDialogComponent","id":"component-DashboardAccountingErrorDialogComponent-1fffb7cb858a342088c6f71b0ed02af5e0787d1923be78c951c4cedd2c67be658080e9434c4f28ebe5dc1fa776958281586f36d0a5e0a7807ff88440ea65a456","file":"src/app/shared/components/dashboard/dashboard-accounting-error-dialog/dashboard-accounting-error-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dashboard-accounting-error-dialog","styleUrls":["./dashboard-accounting-error-dialog.component.scss"],"styles":[],"templateUrl":["./dashboard-accounting-error-dialog.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"errorExpenses","deprecated":false,"deprecationMessage":"","line":13,"type":"Expense[]","decorators":[]},{"name":"isLoading","deprecated":false,"deprecationMessage":"","line":11,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""},{"name":"openUrl","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""},{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { Expense, ExpenseModel } from \'src/app/core/models/si/db/expense.model\';\\n\\n@Component({\\n  selector: \'app-dashboard-accounting-error-dialog\',\\n  templateUrl: \'./dashboard-accounting-error-dialog.component.html\',\\n  styleUrls: [\'./dashboard-accounting-error-dialog.component.scss\']\\n})\\nexport class DashboardAccountingErrorDialogComponent implements OnInit {\\n\\n  @Input() isLoading: boolean;\\n\\n  @Input() errorExpenses: Expense[];\\n\\n  constructor() { }\\n\\n  openUrl(event: Event, expense_id: string) {\\n    window.open(ExpenseModel.constructViewExpenseUrl(expense_id), \'_blank\');\\n    event.stopPropagation();\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {\\n    @apply tw-text-sub-text-color tw-text-14-px tw-font-400 tw-py-14-px tw-px-22-px tw-border-t tw-border-b-0 tw-border-t-box-color  #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\\n    @apply tw-text-slightly-normal-text-color tw-text-12-px tw-font-500 tw-py-12-px tw-px-22-px tw-border tw-border-box-color tw-bg-disabled-bg-color #{!important}\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td > button {\\n    @apply tw-pl-48-px #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span.p-highlight {\\n    @apply tw-text-white tw-bg-mandatory-field-color #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span:focus {\\n    @apply tw-shadow-none #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table th {\\n    @apply tw-text-center ;\\n}","styleUrl":"./dashboard-accounting-error-dialog.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":13},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <p-table [value]=\\"errorExpenses\\" [tableStyle]=\\"{ \'min-width\': \'20rem\' }\\">\\n      <ng-template pTemplate=\\"header\\">\\n          <tr>\\n              <th>Expense ID</th>\\n              <th>Employee Name and ID</th>\\n              <th>Expense Type</th>\\n          </tr>\\n      </ng-template>\\n      <ng-template pTemplate=\\"body\\" let-rowData let-rowIndex=\\"rowIndex\\">\\n          <tr>\\n              <td class=\\"tw-cursor-pointer tw-underline\\" (click)=\\"openUrl($event, rowData.expense_id)\\">\\n                  {{rowData.expense_number}}\\n              </td>\\n              <td>\\n                  <h4>\\n                      {{rowData.employee_name}}\\n                  </h4>\\n                  <h5 class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">\\n                      {{rowData.employee_email}}\\n                  </h5>\\n              </td>\\n              <td>\\n                  <h4>\\n                      {{rowData.fund_source === \'PERSONAL\' ? \'Reimbursable\' : \'Corporate Card\'}}\\n                  </h4>\\n              </td>\\n          </tr>\\n      </ng-template>\\n  </p-table>\\n</div>\\n"},{"name":"DashboardComponent","id":"component-DashboardComponent-2d761993e0994196988dd93158b5ca5f492dc25d5ac6f495a9382431a12739f22a8385b377c3d1753af3765de3d556994613a9f9f1dc33c187606499f702dbf8","file":"src/app/integrations/qbd/main/dashboard/dashboard.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dashboard","styleUrls":["./dashboard.component.scss"],"styles":[],"templateUrl":["./dashboard.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"accountingExports","deprecated":false,"deprecationMessage":"","type":"QbdExportTriggerResponse","optional":false,"description":"","line":23},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":82,"modifierKind":[148]},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":80},{"name":"dateOptions","defaultValue":"[\\n    {\\n      dateRange: \'This Month\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'This Week\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - new Date().getDay()),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'Today\',\\n      startDate: new Date(),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: new Date().toLocaleDateString(),\\n      startDate: new Date(),\\n      endDate: new Date()\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"DateFilter[]","optional":false,"description":"","line":31},{"name":"downloadingExportId","deprecated":false,"deprecationMessage":"","type":"boolean[]","optional":false,"description":"","line":62},{"name":"exportInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":64},{"name":"exportLogForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":58},{"name":"exportPresent","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":68},{"name":"exportProgressPercentage","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":66},{"name":"isCalendarVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":60},{"name":"isLoading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":21},{"name":"isRecordPresent","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":74},{"name":"limit","defaultValue":"10","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":27},{"name":"nextExportDate","deprecated":false,"deprecationMessage":"","type":"Date | undefined","optional":false,"description":"","line":70},{"name":"pageNo","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":29},{"name":"PaginatorPage","defaultValue":"PaginatorPage","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":78},{"name":"presentDate","defaultValue":"new Date().toLocaleDateString()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56},{"name":"processedCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":72},{"name":"selectedDateFilter","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"DateFilter | null","optional":false,"description":"","line":54},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":76},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":25}],"methodsClass":[{"name":"dateFilter","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"dropDownWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":""},{"name":"exportPolling","args":[{"name":"length","type":"number","deprecated":false,"deprecationMessage":""},{"name":"isImportPresent","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"length","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"isImportPresent","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDates","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":""},{"name":"getDownloadLink","args":[{"name":"exportData","type":"AccountingExportsResult","deprecated":false,"deprecationMessage":""},{"name":"index","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportData","type":"AccountingExportsResult","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"index","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExpenseType","args":[{"name":"type","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"type","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getNextExportDate","args":[{"name":"advancedSettings","type":"QBDAdvancedSettingsGet","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":217,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"advancedSettings","type":"QBDAdvancedSettingsGet","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTypeString","args":[{"name":"type","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"type","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":""},{"name":"pageOffsetChanges","args":[{"name":"pageNo","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"pageNo","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setUpDashboard","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":240,"deprecated":false,"deprecationMessage":""},{"name":"showCalendar","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"triggerExports","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":179,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup } from \'@angular/forms\';\\nimport { forkJoin, from, interval, switchMap, takeWhile } from \'rxjs\';\\nimport { ClickEvent, Page, PaginatorPage, QBDAccountingExportsState, QBDAccountingExportsType, QBDScheduleFrequency, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { AccountingExportsResult, QbdExportTriggerResponse, QbdAccountingExportDownload, QbdExportTriggerGet } from \'src/app/core/models/qbd/db/iif-logs.model\';\\nimport { DateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { QbdAdvancedSettingService } from \'src/app/core/services/qbd/qbd-configuration/qbd-advanced-setting.service\';\\nimport { QbdIifLogsService } from \'src/app/core/services/qbd/qbd-iif-log/qbd-iif-logs.service\';\\nimport { QBDAdvancedSettingsGet } from \'src/app/core/models/qbd/qbd-configuration/advanced-setting.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-dashboard\',\\n  templateUrl: \'./dashboard.component.html\',\\n  styleUrls: [\'./dashboard.component.scss\']\\n})\\nexport class DashboardComponent implements OnInit {\\n\\n  isLoading: boolean = false;\\n\\n  accountingExports: QbdExportTriggerResponse;\\n\\n  totalCount: number;\\n\\n  limit: number = 10;\\n\\n  pageNo: number = 0;\\n\\n  dateOptions: DateFilter[] = [\\n    {\\n      dateRange: \'This Month\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'This Week\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - new Date().getDay()),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'Today\',\\n      startDate: new Date(),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: new Date().toLocaleDateString(),\\n      startDate: new Date(),\\n      endDate: new Date()\\n    }\\n  ];\\n\\n  selectedDateFilter: DateFilter | null = null;\\n\\n  presentDate = new Date().toLocaleDateString();\\n\\n  exportLogForm: FormGroup;\\n\\n  isCalendarVisible: boolean = false;\\n\\n  downloadingExportId: boolean[];\\n\\n  exportInProgress: boolean = false;\\n\\n  exportProgressPercentage: number;\\n\\n  exportPresent: boolean = true;\\n\\n  nextExportDate: Date | undefined;\\n\\n  processedCount: number;\\n\\n  isRecordPresent: boolean;\\n\\n  sessionStartTime: Date = new Date();\\n\\n  PaginatorPage = PaginatorPage;\\n\\n  currentPage: number = 1;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private iifLogsService: QbdIifLogsService,\\n    private formBuilder: FormBuilder,\\n    private advancedSettingService: QbdAdvancedSettingService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService\\n  ) { }\\n\\n  getDates() {\\n    this.dateOptions[3].dateRange = this.exportLogForm.value.start[0].toLocaleDateString() + \'-\' + this.exportLogForm.value.start[1].toLocaleDateString();\\n    this.dateOptions[3].startDate = this.exportLogForm.value.start[0];\\n    this.dateOptions[3].endDate = this.exportLogForm.value.start[1];\\n    this.presentDate = this.dateOptions[3].dateRange;\\n    this.exportLogForm.controls.dateRange.patchValue(this.dateOptions[3]);\\n    const event = {\\n      value: this.dateOptions[3]\\n    };\\n    this.dateFilter(event);\\n  }\\n\\n  dropDownWatcher() {\\n    if (this.exportLogForm.controls.dateRange.value !== this.dateOptions[3].dateRange) {\\n      this.isCalendarVisible = false;\\n    } else {\\n      this.isCalendarVisible = true;\\n    }\\n  }\\n\\n  showCalendar(event: Event) {\\n    event.stopPropagation();\\n    this.isCalendarVisible = true;\\n  }\\n\\n  getExpenseType(type: string) {\\n    const expenseType = type === \'CCC\' ? QBDAccountingExportsType.CREDIT_CARD : QBDAccountingExportsType.REIMBURSABLE;\\n    return expenseType.split(\\"_\\").join(\' \');\\n  }\\n\\n  getTypeString(type: string): string {\\n    return type.split(\\"_\\").slice(1).join(\' \').split(\\",\\").join(\'\');\\n  }\\n\\n  dateFilter(event: any): void {\\n    this.isLoading = true;\\n    this.selectedDateFilter = event.value;\\n    this.iifLogsService.getQbdAccountingExports(QBDAccountingExportsState.COMPLETE, this.limit, this.pageNo, this.selectedDateFilter, [QBDAccountingExportsType.EXPORT_BILLS, QBDAccountingExportsType.EXPORT_CREDIT_CARD_PURCHASES, QBDAccountingExportsType.EXPORT_JOURNALS]).subscribe((accountingExportsResult: QbdExportTriggerResponse) => {\\n      this.accountingExports = accountingExportsResult;\\n      this.totalCount = this.accountingExports.count;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    this.limit = limit;\\n    this.pageNo = 0;\\n    this.currentPage = 1;\\n    this.selectedDateFilter = this.selectedDateFilter ? this.selectedDateFilter : null;\\n    this.iifLogsService.getQbdAccountingExports(QBDAccountingExportsState.COMPLETE, this.limit, this.pageNo, this.selectedDateFilter, [QBDAccountingExportsType.EXPORT_BILLS, QBDAccountingExportsType.EXPORT_CREDIT_CARD_PURCHASES, QBDAccountingExportsType.EXPORT_JOURNALS]).subscribe((accountingExportsResult: QbdExportTriggerResponse) => {\\n      this.accountingExports = accountingExportsResult;\\n      this.totalCount = this.accountingExports.count;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  pageOffsetChanges(pageNo: number): void {\\n    this.isLoading = true;\\n    this.pageNo = pageNo;\\n    this.currentPage = Math.ceil(this.pageNo / this.limit)+1;\\n    this.selectedDateFilter = this.selectedDateFilter ? this.selectedDateFilter : null;\\n    this.iifLogsService.getQbdAccountingExports(QBDAccountingExportsState.COMPLETE, this.limit, this.pageNo, this.selectedDateFilter, [QBDAccountingExportsType.EXPORT_BILLS, QBDAccountingExportsType.EXPORT_CREDIT_CARD_PURCHASES, QBDAccountingExportsType.EXPORT_JOURNALS]).subscribe((accountingExportsResult: QbdExportTriggerResponse) => {\\n      this.accountingExports = accountingExportsResult;\\n      this.totalCount = this.accountingExports.count;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  exportPolling(length: number, isImportPresent: boolean): void {\\n    this.exportProgressPercentage = 25;\\n    interval(3000).pipe(\\n      switchMap(() => from(this.iifLogsService.getQbdAccountingExports([QBDAccountingExportsState.ENQUEUED, QBDAccountingExportsState.IN_PROGRESS, QBDAccountingExportsState.COMPLETE], this.limit, this.pageNo, null, [QBDAccountingExportsType.EXPORT_BILLS, QBDAccountingExportsType.EXPORT_CREDIT_CARD_PURCHASES, QBDAccountingExportsType.EXPORT_JOURNALS]))),\\n      takeWhile((response) => response.results.filter(task => (task.status === QBDAccountingExportsState.IN_PROGRESS || task.status === QBDAccountingExportsState.ENQUEUED)).length > 0, true)\\n    ).subscribe((res) => {\\n      this.processedCount = res.results.filter(task => (task.status !== QBDAccountingExportsState.IN_PROGRESS && task.status !== QBDAccountingExportsState.ENQUEUED)).length;\\n      this.exportProgressPercentage = Math.round((this.processedCount / length) * 100);\\n      if (res.results.filter(task => (task.status === QBDAccountingExportsState.IN_PROGRESS || task.status === QBDAccountingExportsState.ENQUEUED)).length === 0) {\\n        this.iifLogsService.getQbdAccountingExports(QBDAccountingExportsState.COMPLETE, this.limit, this.pageNo, null, [QBDAccountingExportsType.EXPORT_BILLS, QBDAccountingExportsType.EXPORT_CREDIT_CARD_PURCHASES, QBDAccountingExportsType.EXPORT_JOURNALS]).subscribe((accountingExportsResult: QbdExportTriggerResponse) => {\\n          this.accountingExports = accountingExportsResult;\\n          this.exportPresent = isImportPresent;\\n          this.exportInProgress = false;\\n        });\\n      }\\n    });\\n  }\\n\\n  triggerExports(): void {\\n    this.exportInProgress = true;\\n    this.trackingService.onClickEvent(ClickEvent.QBD_EXPORT);\\n    setTimeout(() => {\\n      this.exportProgressPercentage = 15;\\n    }, 500);\\n    this.iifLogsService.triggerQBDExport().subscribe((triggerResponse: QbdExportTriggerGet) => {\\n      if (triggerResponse.new_expenses_imported) {\\n        this.iifLogsService.getQbdAccountingExports([QBDAccountingExportsState.ENQUEUED, QBDAccountingExportsState.IN_PROGRESS], this.limit, this.pageNo, null, null).subscribe((accountingExportsResponse: QbdExportTriggerResponse) => {\\n          const accountingResponseLength = accountingExportsResponse.count;\\n          this.exportPolling(accountingResponseLength, triggerResponse.new_expenses_imported);\\n        });\\n      } else {\\n        this.exportInProgress = false;\\n        this.exportPresent = triggerResponse.new_expenses_imported;\\n      }\\n\\n    }, () => {\\n      this.exportInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Export Failed, try again later\');\\n    });\\n  }\\n\\n  getDownloadLink(exportData: AccountingExportsResult, index: number): void {\\n    this.downloadingExportId[index] = true;\\n    this.iifLogsService.postQbdAccountingExports(exportData.id).subscribe((postQbdAccountingExports: QbdAccountingExportDownload) => {\\n      const link = document.createElement(\'a\');\\n      link.setAttribute(\'href\', postQbdAccountingExports.download_url);\\n      link.setAttribute(\'download\', `${postQbdAccountingExports.file_id}.iif`);\\n      document.body.appendChild(link);\\n      link.click();\\n      link.remove();\\n      this.downloadingExportId[index] = false;\\n    }, () => {\\n      this.downloadingExportId[index] = false;\\n    });\\n  }\\n\\n  getNextExportDate(advancedSettings: QBDAdvancedSettingsGet): void {\\n    if (advancedSettings.schedule_is_enabled) {\\n      const date = new Date();\\n      if (advancedSettings.frequency === QBDScheduleFrequency.MONTHLY) {\\n        let current;\\n        if (date.getMonth() === 11 && advancedSettings?.day_of_month) {\\n            current = new Date(date.getFullYear() + 1, 0, +advancedSettings?.day_of_month);\\n        } else if (advancedSettings?.day_of_month) {\\n            current = new Date(date.getFullYear(), date.getMonth() + 1, +advancedSettings?.day_of_month);\\n        }\\n        this.nextExportDate = current;\\n      } else if (advancedSettings.frequency === QBDScheduleFrequency.WEEKLY && advancedSettings.day_of_week) {\\n        const weekday = [\\"sunday\\", \\"monday\\", \\"tuesday\\", \\"wednesday\\", \\"thursday\\", \\"friday\\", \\"saturday\\"];\\n        const week = weekday.indexOf(advancedSettings.day_of_week.toLowerCase());\\n        const resultDate = new Date(new Date().getTime());\\n        resultDate.setDate(date.getDate() + ((7 + week - date.getDay()) % 7));\\n        this.nextExportDate = resultDate;\\n      } else {\\n        this.nextExportDate = new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()+1);\\n      }\\n    }\\n  }\\n\\n  setUpDashboard(): void {\\n    this.isLoading = true;\\n    this.exportLogForm = this.formBuilder.group({\\n      searchOption: [\'\'],\\n      dateRange: [null],\\n      start: [\'\'],\\n      end: [\'\']\\n    });\\n    forkJoin([\\n      this.iifLogsService.getQbdAccountingExports(QBDAccountingExportsState.COMPLETE, this.limit, this.pageNo, null, [QBDAccountingExportsType.EXPORT_BILLS, QBDAccountingExportsType.EXPORT_CREDIT_CARD_PURCHASES, QBDAccountingExportsType.EXPORT_JOURNALS]),\\n      this.advancedSettingService.getQbdAdvancedSettings()\\n    ]).subscribe((response) => {\\n      this.accountingExports = response[0];\\n      const advancedSettings = response[1];\\n      this.downloadingExportId =  [...Array(this.accountingExports.count).keys()].map(() => {\\n        return false;\\n      });\\n      this.getNextExportDate(advancedSettings);\\n      this.isRecordPresent = this.accountingExports.count > 0 ? true : false;\\n      this.totalCount = this.accountingExports.count;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setUpDashboard();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"::ng-deep .drop-down .p-dropdown {\\n    @apply tw-w-200-px tw-border-0 #{!important};\\n}\\n\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {\\n    @apply tw-text-sub-text-color tw-text-14-px tw-font-400 tw-py-14-px tw-px-22-px tw-border-t tw-border-b-0 tw-border-t-box-color  #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\\n    @apply tw-text-slightly-normal-text-color tw-text-12-px tw-font-500 tw-py-12-px tw-px-22-px tw-border tw-border-box-color tw-bg-disabled-bg-color #{!important}\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td > button {\\n    @apply tw-pl-48-px #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar {\\n    @apply tw-h-1.5 tw-bg-progress-bar-bg #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar .p-progressbar-value {\\n    @apply tw-bg-mandatory-field-color tw-rounded-50  #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar-determinate .p-progressbar-value {\\n    content: none #{!important};\\n}\\n\\n::ng-deep .export-btn:disabled {\\n    @apply tw-cursor-not-allowed tw-bg-cta-disabled #{!important};\\n}\\n\\n:host ::ng-deep .prevBtn:disabled, :host ::ng-deep .nextBtn:disabled {\\n    @apply tw-bg-disabled-bg-color #{!important};\\n}","styleUrl":"./dashboard.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"iifLogsService","type":"QbdIifLogsService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"advancedSettingService","type":"QbdAdvancedSettingService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""}],"line":82,"jsdoctags":[{"name":"iifLogsService","type":"QbdIifLogsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"advancedSettingService","type":"QbdAdvancedSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-40-px tw-px-120-px\\">\\n    <div class=\\"tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div *ngIf=\\"exportPresent\\" class=\\"tw-flex tw-justify-between tw-items-center \\">\\n                <div class=\\"tw-w-3/5\\">\\n                    <h3 class=\\"tw-text-18-px tw-font-500 tw-text-slightly-normal-text-color\\">Instantly download expenses from {{ brandingConfig.brandName }} as an IIF file.</h3>\\n                    <h5 class=\\"tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color tw-pt-2-px\\">The IIF files will be generated based on your configuration.</h5>\\n                </div>\\n                <div class=\\"tw-flex tw-items-end tw-justify-end\\">\\n                    <div>\\n                        <button type=\\"button\\" class=\\"export-btn tw-float-right tw-flex tw-justify-end tw-items-center tw-text-white tw-text-500 tw-px-24-px tw-py-12-px tw-bg-mandatory-field-color tw-rounded-4-px\\" (click)=\\"triggerExports()\\" [disabled]=\\"exportInProgress\\" >\\n                            <p class=\\"tw-text-14-px tw-font-400 tw-pl-5px\\" *ngIf=\\"!exportInProgress\\">Export IIF file\\n                                <i class=\\"tw-pl-10-px tw-pt-2-px !tw-text-12-px pi pi-arrow-right\\"></i>\\n                            </p>\\n                            <p class=\\"tw-text-14-px tw-font-400 tw-pl-5px\\" *ngIf=\\"exportInProgress\\">Exporting ...\\n                            </p>\\n                        </button><br>\\n                        <p *ngIf=\\"nextExportDate\\" class=\\"tw-pt-8-px tw-float-right tw-text-12-px tw-font-500 tw-text-faded-text-color\\">Next automated export schedule: {{ nextExportDate | date : \'d MMM, yyyy\'}}</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div *ngIf=\\"!exportPresent\\" class=\\"tw-flex tw-justify-between tw-items-center \\">\\n                <div class=\\"tw-flex tw-items-start\\">\\n                    <div class=\\"tw-pr-14-px\\">\\n                        <img src=\\"assets/icons/pinktick.svg\\" >\\n                    </div>\\n                    <div>\\n                        <h3 class=\\"tw-text-20-px tw-font-500 tw-text-normal-text-color\\">You are all caught up!</h3>\\n                        <h5 class=\\"tw-text-14-px tw-font-400 tw-text-faded-text-color tw-pt-2-px\\"> There are no expense in {{ brandingConfig.brandName }} as per the configuration setup to export.</h5>\\n                    </div>\\n                </div>\\n                <div>\\n                    <img src=\\"assets/icons/export.svg\\" alt=\\"\\">\\n                </div>\\n            </div>\\n        </div>\\n        <div  *ngIf=\\"exportInProgress\\">\\n            <p-progressBar class=\\"!tw-h-6-px\\" [value]=\\"exportProgressPercentage\\" [showValue]=\'false\'></p-progressBar>\\n        </div>\\n    </div>\\n    <div class=\\"tw-mt-40-px tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n        <div class=\\"tw-flex tw-justify-between tw-items-center tw-p-24-px\\">\\n            <div>\\n                <h4 class=\\"tw-font-500\\">IIF file logs</h4>\\n            </div>\\n            <div *ngIf=\\"isRecordPresent\\" [formGroup]=\\"exportLogForm\\" class=\\"tw-flex tw-justify-start tw-items-center tw-border tw-border-box-color tw-pl-16-px tw-rounded-4-px drop-down\\">\\n                <div>\\n                    <svg-icon-sprite src=\\"calender\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-placeholder\\"></svg-icon-sprite>\\n                </div>\\n                <p-dropdown appendTo=\\"body\\" [options]=\\"dateOptions\\" formControlName=\\"dateRange\\" (onChange)=\\"dateFilter($event)\\" (click)=\\"dropDownWatcher()\\">\\n                    <ng-template let-item pTemplate=\\"selectedItem\\">\\n                        <div *ngIf=\\"exportLogForm.controls.dateRange.value\\">\\n                            <div class=\\"my-dropdown-selected-item\\">\\n                                {{exportLogForm.controls.dateRange.value.dateRange}}\\n                              </div>\\n                        </div>\\n                        <div *ngIf=\\"!exportLogForm.controls.dateRange.value\\">\\n                            <div class=\\"my-dropdown-selected-item tw-text-placeholder\\">\\n                                Select date range\\n                              </div>\\n                        </div>\\n                    </ng-template>\\n                    <ng-template let-date pTemplate=\\"item\\">\\n                        <div>\\n                            <p-calendar (click)=\\"showCalendar($event)\\" placeholder=\\"Custom dates\\" formControlName=\\"start\\" (onClose)=\\"getDates()\\" [touchUI]=\\"isCalendarVisible\\" *ngIf=\\"date.dateRange === presentDate\\" selectionMode=\\"range\\" [readonlyInput]=\\"true\\" inputId=\\"range\\"></p-calendar>\\n                            <p class=\\"tw-text-sub-text-color tw-text-14-px\\" [ngClass]=\\"{\'!tw-text-mandatory-field-color\' : exportLogForm.controls.dateRange.value === date }\\" *ngIf=\\"date.dateRange !== presentDate\\">{{ date.dateRange | titlecase | snakeCaseToSpaceCase }}</p>\\n                            <p class=\\"tw-text-sub-text-color tw-text-12-px\\" *ngIf=\\"date.dateRange !== presentDate && date.dateRange !== \'Today\'\\">{{date.startDate | date : \'MMM dd, yyyy\'}} - {{date.endDate | date : \'MMM dd, yyyy\'}}</p>\\n                            <p class=\\"tw-text-sub-text-color tw-text-12-px\\" *ngIf=\\"date.dateRange === \'Today\'\\">{{date.startDate | date : \'MMM dd, yyyy\'}}</p>\\n                        </div>\\n                    </ng-template> \\n                </p-dropdown>\\n\\n            </div>\\n        </div>\\n        <div class=\\"tw-pt-24-px tw-border-y-2-px tw-border-y-separator tw-box-border tw-px-24-px tw-pt-24-px\\">\\n            <div *ngIf=\\"accountingExports.count > 0\\">\\n                <p-table [value]=\\"accountingExports.results\\">\\n                    <ng-template pTemplate=\\"header\\">\\n                        <tr>\\n                            <th>Date and Time of Export</th>\\n                            <th>Exported to QBD as</th>\\n                            <th>Expense Type</th>\\n                            <th>Download IIF File</th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\"body\\" let-exports let-i=\\"rowIndex\\">\\n                        <tr>\\n                            <td>\\n                                <p class=\\"tw-font-400 tw-text-sub-text-color\\">{{exports.created_at | date}}</p>\\n                                <span class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">{{exports.created_at | date : \\"HH:ss\\"}}</span>\\n                            </td>\\n                            <td>{{getTypeString(exports.type)| titlecase }}</td>\\n                            <td>{{getExpenseType(exports.fund_source)| titlecase }}</td>\\n                            <td>\\n                                <div *ngIf=\\"!downloadingExportId[i]\\">\\n                                    <button (click)=\\"getDownloadLink(exports,i)\\" pTooltip=\\"Download\\" tooltipPosition=\\"top\\"><svg-icon-sprite class=\\"tw-pt-5-px\\" src=\\"download\\" width=\\"20px\\" height=\\"20px\\"></svg-icon-sprite></button>\\n                                </div>\\n                                <div *ngIf=\\"downloadingExportId[i]\\" class=\\"tw-flex tw-items-center\\">\\n                                    <i class=\\"pi pi-spin pi-spinner tw-text-sub-text-color tw-text-16-px\\"></i>\\n                                    <p class=\\"tw-text-14-px tw-text-sub-text-color tw-pl-10-px\\">downloading...</p>\\n                                </div>\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n            </div>\\n            <div *ngIf=\\"accountingExports.count === 0\\">\\n                <app-zero-state-with-illustration [mainText]=\\"\'No IIF logs to show yet!\'\\" [subText]=\\"\'All your successful exports and their details will be stored here.\'\\"></app-zero-state-with-illustration>\\n            </div>\\n        </div>\\n        <div *ngIf=\\"accountingExports.count > 0\\" class=\\"tw-p-24-px\\">\\n            <app-paginator [totalCount]=\\"totalCount\\"(pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" (pageOffsetChangeEvent)=\\"pageOffsetChanges($event)\\" [pageType]=\\"PaginatorPage.DASHBOARD\\" [page]=\\"currentPage\\" [dropDownValue]=\\"limit\\"></app-paginator>\\n        </div>\\n    </div>\\n</div>"},{"name":"DashboardComponent","id":"component-DashboardComponent-822f4f20bb3b85dda6ef11270f5779a3e75516e4209ded5fd4e435692548a78cbf5e996c4d1c8458642fc1693226cba81a4b4cc0bec2d89285b9921c2b9e3408-1","file":"src/app/integrations/si/main/dashboard/dashboard.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dashboard","styleUrls":["./dashboard.component.scss"],"styles":[],"templateUrl":["./dashboard.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":109,"modifierKind":[148]},{"name":"dummyExpenseGroupList","defaultValue":"[{\\n    index: 0,\\n    exportedAt: new Date(),\\n    employee: [\'a\', \'b\'],\\n    expenseType: \'Corporate Card\',\\n    referenceNumber: \'123\',\\n    exportedAs: \'a\',\\n    intacctUrl: \'a\',\\n    fyleUrl: \'a\',\\n    fyleReferenceType: FyleReferenceType.EXPENSE,\\n    expenses: []\\n  }]","deprecated":false,"deprecationMessage":"","type":"ExpenseGroupList[]","optional":false,"description":"","line":96,"modifierKind":[148]},{"name":"employeeFieldMapping","deprecated":false,"deprecationMessage":"","type":"FyleField","optional":false,"description":"","line":65},{"name":"employeeName","defaultValue":"this.userService.getUserProfile().full_name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":82},{"name":"errors","deprecated":false,"deprecationMessage":"","type":"GroupedErrors","optional":false,"description":"","line":63},{"name":"eventStartTime","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":86},{"name":"expenseGroups","deprecated":false,"deprecationMessage":"","type":"ExpenseGroupList[]","optional":false,"description":"","line":69},{"name":"expenseGroupSetting","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":67},{"name":"ExpenseState","defaultValue":"ExpenseState","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":80},{"name":"exportableExpenseGroupIds","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"number[]","optional":false,"description":"","line":59},{"name":"exportInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":55},{"name":"exportLogHeader","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":49},{"name":"exportProgressPercentage","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":57},{"name":"ExportState","defaultValue":"ExportState","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":76},{"name":"failedExpenseGroupCount","defaultValue":"null","deprecated":false,"deprecationMessage":"","type":"number | null","optional":false,"description":"","line":53},{"name":"getExportErrors$","defaultValue":"this.dashboardService.getExportErrors()","deprecated":false,"deprecationMessage":"","type":"Observable<Error[]>","optional":false,"description":"","line":90},{"name":"getLastExport$","defaultValue":"this.dashboardService.getLastExport()","deprecated":false,"deprecationMessage":"","type":"Observable<LastExport>","optional":false,"description":"","line":92},{"name":"groupedError","deprecated":false,"deprecationMessage":"","type":"Error[]","optional":false,"description":"","line":41},{"name":"groupedErrorStat","defaultValue":"{\\n    [IntacctErrorType.EMPLOYEE_MAPPING]: null,\\n    [IntacctErrorType.CATEGORY_MAPPING]: null\\n  }","deprecated":false,"deprecationMessage":"","type":"GroupedErrorStat","optional":false,"description":"","line":71},{"name":"importState","deprecated":false,"deprecationMessage":"","type":"ExpenseState","optional":false,"description":"","line":78},{"name":"intacctErrorDetail","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43},{"name":"intacctErrorDialogVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":37},{"name":"intacctErrorExpenses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":39},{"name":"intacctErrorType","deprecated":false,"deprecationMessage":"","type":"IntacctErrorType","optional":false,"description":"","line":84},{"name":"IntacctErrorType","defaultValue":"IntacctErrorType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":88},{"name":"isExportLogFetchInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":29},{"name":"isExportLogVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33},{"name":"isImportInProgress","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":31},{"name":"isLoading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"isMappingResolveVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":35},{"name":"lastExport","deprecated":false,"deprecationMessage":"","type":"LastExport | null","optional":false,"description":"","line":61},{"name":"processedCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":51},{"name":"taskLogStatusComplete","defaultValue":"TaskLogState.COMPLETE","deprecated":false,"deprecationMessage":"","type":"TaskLogState","optional":false,"description":"","line":45},{"name":"taskLogStatusFailed","defaultValue":"TaskLogState.FAILED","deprecated":false,"deprecationMessage":"","type":"TaskLogState","optional":false,"description":"","line":47},{"name":"taskType","defaultValue":"[TaskLogType.CREATING_BILLS, TaskLogType.CREATING_CHARGE_CARD_TRANSACTIONS, TaskLogType.CREATING_JOURNAL_ENTRIES, TaskLogType.CREATING_EXPENSE_REPORTS]","deprecated":false,"deprecationMessage":"","type":"TaskLogType[]","optional":false,"description":"","line":94,"modifierKind":[123]}],"methodsClass":[{"name":"export","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":324,"deprecated":false,"deprecationMessage":""},{"name":"formatErrors","args":[{"name":"errors","type":"Error[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"GroupedErrors","typeParameters":[],"line":242,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"errors","type":"Error[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExpenseGroupingSetting","args":[{"name":"expenseGroupSetting","type":"ExpenseGroupSetting","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":277,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"expenseGroupSetting","type":"ExpenseGroupSetting","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExpenseGroups","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"TaskLogState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"status","type":"TaskLogState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":334,"deprecated":false,"deprecationMessage":""},{"name":"openUrl","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""},{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pollExportStatus","args":[{"name":"exportableExpenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"void","typeParameters":[],"line":176,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"exportableExpenseGroupIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":290,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showErrorStats","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":215,"deprecated":false,"deprecationMessage":""},{"name":"showExportLog","args":[{"name":"status","type":"TaskLogState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":138,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"status","type":"TaskLogState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showIntacctErrorDialog","args":[{"name":"intacctError","type":"Error","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"intacctError","type":"Error","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showMappingResolve","args":[{"name":"errorType","type":"IntacctErrorType","deprecated":false,"deprecationMessage":""},{"name":"groupedError","type":"Error[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":120,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"errorType","type":"IntacctErrorType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"groupedError","type":"Error[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"trackTimeTakenForResolvingMappingErrors","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":256,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Observable, catchError, forkJoin, from, interval, map, of, switchMap, takeWhile } from \'rxjs\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { AppName, ClickEvent, ExpenseState, ExportState, FyleField, FyleReferenceType, IntacctErrorType, RefinerSurveyType, TaskLogState, TaskLogType } from \'src/app/core/models/enum/enum.model\';\\nimport { ResolveMappingErrorProperty } from \'src/app/core/models/misc/tracking.model\';\\nimport { Error, GroupedErrorStat, GroupedErrors } from \'src/app/core/models/si/db/error.model\';\\nimport { ExpenseGroupSetting } from \'src/app/core/models/db/expense-group-setting.model\';\\nimport { ExpenseGroup, ExpenseGroupList, ExportableExpenseGroup } from \'src/app/core/models/si/db/expense-group.model\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\nimport { LastExport } from \'src/app/core/models/si/db/last-export.model\';\\nimport { Task } from \'src/app/core/models/si/db/task-log.model\';\\nimport { RefinerService } from \'src/app/core/services/integration/refiner.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { UserService } from \'src/app/core/services/misc/user.service\';\\nimport { ExportLogService } from \'src/app/core/services/si/export-log/export-log.service\';\\nimport { DashboardService } from \'src/app/core/services/si/si-core/dashboard.service\';\\nimport { SiWorkspaceService } from \'src/app/core/services/si/si-core/si-workspace.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-dashboard\',\\n  templateUrl: \'./dashboard.component.html\',\\n  styleUrls: [\'./dashboard.component.scss\']\\n})\\nexport class DashboardComponent implements OnInit {\\n\\n  isLoading: boolean = false;\\n\\n  isExportLogFetchInProgress: boolean;\\n\\n  isImportInProgress: boolean = true;\\n\\n  isExportLogVisible: boolean = false;\\n\\n  isMappingResolveVisible: boolean = false;\\n\\n  intacctErrorDialogVisible: boolean = false;\\n\\n  intacctErrorExpenses: Expense[] = [];\\n\\n  groupedError: Error[];\\n\\n  intacctErrorDetail: string;\\n\\n  taskLogStatusComplete: TaskLogState = TaskLogState.COMPLETE;\\n\\n  taskLogStatusFailed: TaskLogState = TaskLogState.FAILED;\\n\\n  exportLogHeader: string;\\n\\n  processedCount: number = 0;\\n\\n  failedExpenseGroupCount: number | null = null;\\n\\n  exportInProgress: boolean = false;\\n\\n  exportProgressPercentage: number = 0;\\n\\n  exportableExpenseGroupIds: number[] = [];\\n\\n  lastExport: LastExport | null;\\n\\n  errors: GroupedErrors;\\n\\n  employeeFieldMapping: FyleField;\\n\\n  expenseGroupSetting: string;\\n\\n  expenseGroups: ExpenseGroupList [];\\n\\n  groupedErrorStat: GroupedErrorStat = {\\n    [IntacctErrorType.EMPLOYEE_MAPPING]: null,\\n    [IntacctErrorType.CATEGORY_MAPPING]: null\\n  };\\n\\n  ExportState = ExportState;\\n\\n  importState: ExpenseState;\\n\\n  ExpenseState = ExpenseState;\\n\\n  employeeName: string = this.userService.getUserProfile().full_name;\\n\\n  intacctErrorType: IntacctErrorType;\\n\\n  eventStartTime: Date;\\n\\n  IntacctErrorType = IntacctErrorType;\\n\\n  getExportErrors$: Observable<Error[]> = this.dashboardService.getExportErrors();\\n\\n  getLastExport$: Observable<LastExport> = this.dashboardService.getLastExport();\\n\\n  private taskType: TaskLogType[] = [TaskLogType.CREATING_BILLS, TaskLogType.CREATING_CHARGE_CARD_TRANSACTIONS, TaskLogType.CREATING_JOURNAL_ENTRIES, TaskLogType.CREATING_EXPENSE_REPORTS];\\n\\n  readonly dummyExpenseGroupList: ExpenseGroupList[] = [{\\n    index: 0,\\n    exportedAt: new Date(),\\n    employee: [\'a\', \'b\'],\\n    expenseType: \'Corporate Card\',\\n    referenceNumber: \'123\',\\n    exportedAs: \'a\',\\n    intacctUrl: \'a\',\\n    fyleUrl: \'a\',\\n    fyleReferenceType: FyleReferenceType.EXPENSE,\\n    expenses: []\\n  }];\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private dashboardService: DashboardService,\\n    private exportLogService: ExportLogService,\\n    private refinerService: RefinerService,\\n    private trackingService: TrackingService,\\n    private userService: UserService,\\n    private workspaceService: SiWorkspaceService\\n  ) { }\\n\\n  showMappingResolve(errorType: IntacctErrorType, groupedError: Error[]) {\\n    this.eventStartTime = new Date();\\n    this.intacctErrorType = errorType;\\n    this.groupedError = groupedError;\\n    this.isMappingResolveVisible = true;\\n  }\\n\\n  showIntacctErrorDialog(intacctError: Error) {\\n    this.intacctErrorDialogVisible = true;\\n    this.intacctErrorDetail = intacctError.error_detail;\\n    this.intacctErrorExpenses = intacctError.expense_group.expenses;\\n  }\\n\\n  openUrl(event: Event, url: string) {\\n    window.open(url, \'_blank\');\\n    event.stopPropagation();\\n  }\\n\\n  showExportLog(status: TaskLogState) {\\n    this.isExportLogFetchInProgress = true;\\n    this.exportLogHeader = status === this.taskLogStatusComplete ? \'Successful\' : \'Failed\';\\n    this.getExpenseGroups(500, 0, status);\\n    this.isExportLogVisible = true;\\n  }\\n\\n  getExpenseGroups(limit: number, offset: number, status: TaskLogState) {\\n    const expenseGroups: ExpenseGroupList[] = [];\\n    const exportedAt = status === TaskLogState.COMPLETE ? this.lastExport?.last_exported_at : null;\\n\\n    return this.exportLogService.getExpenseGroups(status===TaskLogState.COMPLETE ? TaskLogState.COMPLETE : TaskLogState.FAILED, limit, offset, null, exportedAt).subscribe(expenseGroupResponse => {\\n      expenseGroupResponse.results.forEach((expenseGroup: ExpenseGroup) => {\\n        const referenceType: FyleReferenceType = this.exportLogService.getReferenceType(expenseGroup.description);\\n\\n        let referenceNumber: string = expenseGroup.description[referenceType];\\n\\n        if (referenceType === FyleReferenceType.EXPENSE) {\\n          referenceNumber = expenseGroup.expenses[0].expense_number;\\n        } else if (referenceType === FyleReferenceType.PAYMENT) {\\n          referenceNumber = expenseGroup.expenses[0].payment_number;\\n        }\\n\\n        expenseGroups.push({\\n          exportedAt: (status===TaskLogState.COMPLETE ? expenseGroup.exported_at : expenseGroup.updated_at),\\n          employee: [expenseGroup.employee_name, expenseGroup.description.employee_email],\\n          referenceNumber: referenceNumber,\\n          exportedAs: expenseGroup.export_type,\\n          expenses: expenseGroup.expenses,\\n          fyleUrl: this.exportLogService.generateFyleUrl(expenseGroup, referenceType),\\n          intacctUrl: `https://www-p02.intacct.com/ia/acct/ur.phtml?.r=${expenseGroup.response_logs?.url_id}`\\n        });\\n      });\\n      this.expenseGroups = expenseGroups;\\n      this.isExportLogFetchInProgress = false;\\n    });\\n  }\\n\\n  private pollExportStatus(exportableExpenseGroupIds: number[] = []): void {\\n    interval(3000).pipe(\\n      switchMap(() => from(this.dashboardService.getAllTasks([], exportableExpenseGroupIds, this.taskType))),\\n      takeWhile((response) => response.results.filter(task => (task.status === \'IN_PROGRESS\' || task.status === \'ENQUEUED\') && exportableExpenseGroupIds.includes(task.expense_group)).length > 0, true)\\n    ).subscribe((res) => {\\n      this.processedCount = res.results.filter(task => (task.status !== \'IN_PROGRESS\' && task.status !== \'ENQUEUED\') && (task.type !== TaskLogType.FETCHING_EXPENSES && task.type !== TaskLogType.CREATING_AP_PAYMENT && task.type !== TaskLogType.CREATING_REIMBURSEMENT) && exportableExpenseGroupIds.includes(task.expense_group)).length;\\n      this.exportProgressPercentage = Math.round((this.processedCount / exportableExpenseGroupIds.length) * 100);\\n\\n      if (res.results.filter(task => (task.status === \'IN_PROGRESS\' || task.status === \'ENQUEUED\') && exportableExpenseGroupIds.includes(task.expense_group)).length === 0) {\\n        this.isLoading = true;\\n        forkJoin([\\n          this.getExportErrors$,\\n          this.getLastExport$\\n        ]).subscribe(responses => {\\n          this.errors = this.formatErrors(responses[0]);\\n          this.groupedErrorStat = {\\n            EMPLOYEE_MAPPING: null,\\n            CATEGORY_MAPPING: null\\n          };\\n          this.lastExport = responses[1];\\n          this.isLoading = false;\\n        });\\n        this.dashboardService.getAllTasks([TaskLogState.FAILED, TaskLogState.FATAL], undefined, this.taskType).subscribe((taskResponse) => {\\n          this.failedExpenseGroupCount = taskResponse.count;\\n          this.exportableExpenseGroupIds = taskResponse.results.map((task: Task) => task.expense_group);\\n          this.exportInProgress = false;\\n          this.exportProgressPercentage = 0;\\n          this.processedCount = 0;\\n\\n          if (this.failedExpenseGroupCount === 0) {\\n            this.refinerService.triggerSurvey(\\n              AppName.INTACCT, environment.refiner_survey.intacct.export_done_survery_id, RefinerSurveyType.EXPORT_DONE\\n            );\\n          }\\n        });\\n      }\\n    });\\n  }\\n\\n  showErrorStats(): void {\\n    this.getExportErrors$.subscribe((errors) => {\\n      const newError: GroupedErrors = this.formatErrors(errors);\\n\\n      if (this.errors.CATEGORY_MAPPING.length !== newError.CATEGORY_MAPPING.length) {\\n        const totalCount = this.groupedErrorStat.CATEGORY_MAPPING ? this.groupedErrorStat.CATEGORY_MAPPING.totalCount : this.errors.CATEGORY_MAPPING.length;\\n\\n        this.groupedErrorStat.CATEGORY_MAPPING = {\\n          resolvedCount: totalCount - newError.CATEGORY_MAPPING.length,\\n          totalCount: totalCount\\n        };\\n      }\\n\\n      if (this.errors.EMPLOYEE_MAPPING.length !== newError.EMPLOYEE_MAPPING.length) {\\n        const totalCount = this.groupedErrorStat.EMPLOYEE_MAPPING ? this.groupedErrorStat.EMPLOYEE_MAPPING.totalCount : this.errors.EMPLOYEE_MAPPING.length;\\n\\n        this.groupedErrorStat.EMPLOYEE_MAPPING = {\\n          resolvedCount: totalCount - newError.EMPLOYEE_MAPPING.length,\\n          totalCount: totalCount\\n        };\\n      }\\n\\n      this.errors = newError;\\n      this.trackTimeTakenForResolvingMappingErrors();\\n    });\\n  }\\n\\n  private formatErrors(errors: Error[]): GroupedErrors {\\n    return errors.reduce((groupedErrors: GroupedErrors, error: Error) => {\\n      const group: Error[] = groupedErrors[error.type] || [];\\n      group.push(error);\\n      groupedErrors[error.type] = group;\\n\\n      return groupedErrors;\\n    }, {\\n      [IntacctErrorType.EMPLOYEE_MAPPING]: [],\\n      [IntacctErrorType.CATEGORY_MAPPING]: [],\\n      [IntacctErrorType.INTACCT_ERROR]: []\\n    });\\n  }\\n\\n  private trackTimeTakenForResolvingMappingErrors(): void {\\n    if (this.intacctErrorType === IntacctErrorType.CATEGORY_MAPPING || this.intacctErrorType === IntacctErrorType.EMPLOYEE_MAPPING) {\\n      const error = this.groupedErrorStat[this.intacctErrorType];\\n\\n      if (error?.totalCount && error?.totalCount > 0) {\\n        const properties: ResolveMappingErrorProperty = {\\n          resolvedCount: error?.resolvedCount ? error?.resolvedCount : 0,\\n          totalCount: error?.totalCount ? error?.totalCount : 0,\\n          unresolvedCount: error?.totalCount - error?.resolvedCount,\\n          resolvedAllErrors: error.resolvedCount === error.totalCount,\\n          startTime: this.eventStartTime,\\n          endTime: new Date(),\\n          durationInSeconds: Math.floor((new Date().getTime() - this.eventStartTime.getTime()) / 1000),\\n          errorType: this.intacctErrorType\\n        };\\n\\n        this.trackingService.onErrorResolve(properties);\\n      }\\n    }\\n  }\\n\\n  private getExpenseGroupingSetting(expenseGroupSetting: ExpenseGroupSetting): string {\\n    const grouping: string[] = expenseGroupSetting.reimbursable_expense_group_fields ? expenseGroupSetting.reimbursable_expense_group_fields : expenseGroupSetting.corporate_credit_card_expense_group_fields;\\n    if (grouping.includes(FyleReferenceType.EXPENSE)) {\\n      return \'expense\';\\n    } else if (grouping.includes(FyleReferenceType.REPORT_ID)) {\\n      return \'report\';\\n    } else if (grouping.includes(FyleReferenceType.PAYMENT)) {\\n      return \'payment\';\\n    }\\n\\n    return \'\';\\n  }\\n\\n  private setupPage(): void {\\n    forkJoin([\\n      this.getLastExport$.pipe(map((res) => res), catchError(() => of(null))),\\n      this.getExportErrors$,\\n      this.workspaceService.getConfiguration(),\\n      this.dashboardService.getAllTasks([TaskLogState.ENQUEUED, TaskLogState.IN_PROGRESS, TaskLogState.FAILED], undefined, this.taskType),\\n      this.exportLogService.getExpenseGroupSettings()\\n    ]).subscribe((responses) => {\\n      this.lastExport = responses[0];\\n      this.errors = this.formatErrors(responses[1]);\\n      this.employeeFieldMapping = responses[2].employee_field_mapping;\\n      this.expenseGroupSetting = this.getExpenseGroupingSetting(responses[4]);\\n      this.importState = responses[4].expense_state;\\n\\n      const queuedTasks: Task[] = responses[3].results.filter((task: Task) => task.status === TaskLogState.ENQUEUED || task.status === TaskLogState.IN_PROGRESS);\\n      this.failedExpenseGroupCount = responses[3].results.filter((task: Task) => task.status === TaskLogState.FAILED).length;\\n\\n      if (queuedTasks.length) {\\n        this.isImportInProgress = false;\\n        this.exportInProgress = true;\\n        this.exportableExpenseGroupIds = responses[3].results.filter((task: Task) => task.status === TaskLogState.ENQUEUED || task.status === TaskLogState.IN_PROGRESS).map((task: Task) => task.expense_group);\\n        this.pollExportStatus(this.exportableExpenseGroupIds);\\n      } else {\\n        this.dashboardService.importExpenseGroups().subscribe(() => {\\n          this.dashboardService.getExportableGroupsIds().subscribe((exportableExpenseGroups: ExportableExpenseGroup) => {\\n            this.exportableExpenseGroupIds = exportableExpenseGroups.exportable_expense_group_ids;\\n            this.isImportInProgress = false;\\n          });\\n        });\\n      }\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  export(): void {\\n    if (!this.exportInProgress && this.exportableExpenseGroupIds.length) {\\n      this.exportInProgress = true;\\n      this.trackingService.onClickEvent(ClickEvent.INTACCT_EXPORT);\\n      this.dashboardService.exportExpenseGroups().subscribe(() => {\\n        this.pollExportStatus(this.exportableExpenseGroupIds);\\n      });\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".container {\\n    justify-content: center;\\n}\\n\\n.pointer {\\n    cursor: pointer;\\n}\\n\\n.inside-container {\\n    border-radius: 8px;\\n    border: 1px solid var(--grayscale-light-border, #ECECEE);\\n    padding: 24px;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    gap: 16px;\\n    max-width: auto;\\n}\\n\\n.sub-text-container {\\n    border-radius: 8px;\\n    border: 1px solid var(--grayscale-light-border, #ECECEE);\\n    background: var(--grayscale-background, #FAFCFF);\\n    padding: 24px;\\n    flex-direction: column;\\n    align-items: flex-start;\\n    gap: 16px;\\n    max-width: auto;\\n}\\n\\n.flex-wrapper {\\n    display: flex;\\n    align-items: flex-start;\\n    justify-content: space-between\\n}\\n\\n.sub-header {\\n    font-size: 14px;\\n    font-weight: 400;\\n    color: grey;\\n}\\n\\n.truncate {\\n    @apply tw-w-100-px tw-whitespace-nowrap tw-overflow-hidden tw-text-ellipsis;\\n}\\n\\n:host ::ng-deep .drop-down .p-dropdown {\\n    @apply tw-w-200-px tw-border-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {\\n    @apply tw-text-sub-text-color tw-text-14-px tw-font-400 tw-py-14-px tw-px-22-px tw-border-t tw-border-b-0 tw-border-t-box-color  #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\\n    @apply tw-text-slightly-normal-text-color tw-text-12-px tw-font-500 tw-py-12-px tw-px-22-px tw-border tw-border-box-color tw-bg-disabled-bg-color #{!important}\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td > button {\\n    @apply tw-pl-48-px #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar {\\n    @apply tw-h-1.5 tw-bg-progress-bar-bg #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar .p-progressbar-value {\\n    @apply tw-bg-mandatory-field-color tw-rounded-50  #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar-determinate .p-progressbar-value {\\n    content: none #{!important};\\n}\\n\\n.export-btn:disabled {\\n    @apply tw-cursor-not-allowed tw-bg-cta-disabled #{!important};\\n}\\n\\n:host ::ng-deep .p-calendar .p-inputtext {\\n    @apply tw-p-0 tw-bg-white tw-border-0 tw-cursor-pointer tw-transition-none\\t;\\n}\\n\\n:host ::ng-deep .p-dropdown-panel .p-dropdown-items .p-dropdown-item:not(.p-highlight):hover .p-calendar .p-inputtext{\\n    @apply tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-calendar ::placeholder {\\n    @apply tw-text-sub-text-color #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span.p-highlight {\\n    @apply tw-text-white tw-bg-mandatory-field-color #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span:focus {\\n    @apply tw-shadow-none #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table th {\\n    @apply tw-text-center ;\\n}\\n\\n:host ::ng-deep .p-datepicker-touch-ui, .p-calendar .p-datepicker-touch-ui {\\n    @apply tw-min-w-fit tw-top-2/3 #{!important};\\n}\\n\\n:host  ::ng-deep .p-dialog {\\n    max-height: 100% !important;\\n    margin: 0rem !important;\\n  }  ","styleUrl":"./dashboard.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":""},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":""},{"name":"refinerService","type":"RefinerService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":109,"jsdoctags":[{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"refinerService","type":"RefinerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"DashboardComponent-1","templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-32-px tw-px-120-px\\">\\n    <div *ngIf=\\"!isImportInProgress\\" class=\\"tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-flex tw-justify-between tw-items-center \\">\\n                <div class=\\"tw-w-4/5\\">\\n                    <div class=\\"tw-flex\\">\\n                        <img class=\\"tw-mt-1-px tw-pr-8-px\\" *ngIf=\\"!exportInProgress && !exportableExpenseGroupIds.length\\" src=\\"assets/icons/tick_dashboard.svg\\">\\n                        <svg-icon-sprite class=\\"tw-mt-1-px tw-pr-8-px\\" *ngIf=\\"(!exportInProgress && exportableExpenseGroupIds.length) || (exportInProgress)\\" src=\\"arrow_tail\\" height=\\"24px\\" width=\\"24px\\"></svg-icon-sprite>\\n                        <h3 class=\\"tw-text-20-px tw-font-500 tw-text-slightly-normal-text-color\\" *ngIf=\\"!exportInProgress && !exportableExpenseGroupIds.length && !lastExport\\"> Sit back and relax!</h3>\\n                        <h3 class=\\"tw-text-20-px tw-font-500 tw-text-slightly-normal-text-color\\" *ngIf=\\"exportInProgress\\"> Exporting {{ processedCount }} of {{ exportableExpenseGroupIds.length }} expense{{exportableExpenseGroupIds.length > 1 ? \'s\' : \'\'}} to your Sage Intacct Account</h3>\\n                        <h3 class=\\"tw-text-20-px tw-font-500 tw-text-slightly-normal-text-color\\" *ngIf=\\"!exportInProgress && exportableExpenseGroupIds.length\\"> {{ exportableExpenseGroupIds.length }} expense{{exportableExpenseGroupIds.length > 1 ? \'s\' : \'\'}} ready to export</h3>\\n                        <h3 class=\\"tw-text-20-px tw-font-500 tw-text-slightly-normal-text-color\\" *ngIf=\\"!exportInProgress && !exportableExpenseGroupIds.length && lastExport?.successful_expense_groups_count\\">You are all caught up!</h3>\\n                        <img class=\\"tw-ml-4-px\\" src=\\"assets/icons/info_filled.svg\\" pTooltip=\\"All expenses that have reached your export state in {{brandingConfig.brandName}} will be automatically imported and kept ready for export.\\">\\n                    </div>\\n                    <h5 class=\\"tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color tw-pl-34-px tw-pt-8-px\\" *ngIf=\\"!exportInProgress && !exportableExpenseGroupIds.length && !lastExport\\">No new expenses to export in the configured state of export in {{brandingConfig.brandName}}. Once you start processing payments or closing your expenses, they will be automatically available here.</h5>\\n                    <h5 class=\\"tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color tw-pl-34-px tw-pt-8-px\\" *ngIf=\\"exportInProgress\\">This may take a few minutes...</h5>\\n                    <h5 class=\\"tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color tw-pl-34-px tw-pt-8-px\\" *ngIf=\\"!exportInProgress && !exportableExpenseGroupIds.length && lastExport?.successful_expense_groups_count\\">No new expenses to export from the payment processing state in {{brandingConfig.brandName}}.<br>Once you start processing payment for the expenses, they will be automatically available here to export.</h5>\\n                    <div *ngIf=\\"!exportInProgress && failedExpenseGroupCount !== null && failedExpenseGroupCount > 0\\" fxLayout=\\"row\\" fxFlex=\\"4\\" class=\\"tw-text-14-px tw-font-500 tw-text-slightly-normal-text-color tw-pl-34-px tw-pt-8-px tw-flex\\">\\n                        <h5>{{ exportableExpenseGroupIds.length - failedExpenseGroupCount > 0 ? exportableExpenseGroupIds.length - failedExpenseGroupCount : 0 }} new expense{{(exportableExpenseGroupIds.length - failedExpenseGroupCount) > 1 ? \'s\' : \'\'}}, {{ failedExpenseGroupCount }} previously failed expense{{failedExpenseGroupCount > 1 ? \'s\' : \'\'}}</h5>\\n                    </div>\\n                    <div *ngIf=\\"!exportInProgress && exportableExpenseGroupIds.length && (failedExpenseGroupCount === null || failedExpenseGroupCount === 0)\\" fxLayout=\\"row\\" fxFlex=\\"4\\" class=\\"tw-text-14-px tw-font-500 tw-text-slightly-normal-text-color tw-pl-34-px tw-pt-8-px tw-flex\\">\\n                        <h5>{{ exportableExpenseGroupIds.length }} new expense{{(exportableExpenseGroupIds.length) > 1 ? \'s\' : \'\'}}, {{ 0 }} previously failed expense</h5>\\n                    </div>\\n                </div>\\n                <div class=\\"tw-flex tw-items-end tw-justify-end\\">\\n                    <div>\\n                        <button type=\\"button\\" class=\\"export-btn tw-float-right tw-flex tw-justify-end tw-items-center tw-text-white tw-text-500 tw-bg-mandatory-field-color tw-rounded-4-px p-button-raised\\" pButton (click)=\\"export()\\" [ngClass]=\\"!exportableExpenseGroupIds.length || exportInProgress ? \'btn-disabled\' : \'btn-enabled\'\\" [disabled]=\\"exportInProgress || !exportableExpenseGroupIds.length\\">\\n                            <p class=\\"!tw-text-14-px !tw-font-500\\" *ngIf=\\"!exportInProgress\\">Export\\n                                <i class=\\"tw-pl-8-px tw-pt-2-px !tw-text-12-px pi pi-arrow-right\\"></i>\\n                            </p>\\n                            <p class=\\"!tw-text-14-px !tw-font-500\\" *ngIf=\\"exportInProgress\\">Exporting\\n                                <i class=\\"tw-pl-8-px tw-pt-2-px !tw-text-12-px pi pi-arrow-right\\"></i>\\n                            </p>\\n                        </button><br>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div  *ngIf=\\"exportInProgress\\">\\n            <p-progressBar class=\\"!tw-h-6-px\\" [value]=\\"exportProgressPercentage\\" [showValue]=\'false\'></p-progressBar>\\n        </div>\\n    </div>\\n\\n    \x3c!-- Shimmers --\x3e\\n    <div *ngIf=\\"isImportInProgress\\" class=\\"tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-flex tw-justify-between tw-items-center \\">\\n                <div class=\\"tw-w-3/5\\">\\n                    <div class=\\"tw-mb-10-px\\"><p-skeleton width=\\"250px\\" height=\\"16px\\" shape=\\"rectangle\\" ></p-skeleton></div>\\n                    <div class=\\"tw-mb-10-px\\"><p-skeleton width=\\"500px\\" height=\\"16px\\" shape=\\"rectangle\\"></p-skeleton></div>\\n                    <div class=\\"tw-mb-10-px\\"><p-skeleton width=\\"300px\\" height=\\"16px\\" shape=\\"rectangle\\"></p-skeleton></div>\\n                </div>\\n                <div class=\\"tw-flex tw-items-end tw-justify-end\\">\\n                    <p-skeleton width=\\"120px\\" height=\\"50px\\" shape=\\"rectangle\\" ></p-skeleton>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\"!isLoading && !isImportInProgress && !exportableExpenseGroupIds.length && !lastExport\\" class=\\"tw-flex tw-justify-center tw-items-center tw-mt-130-px\\">\\n        <div class=\\"tw-text-center\\">\\n            <img class=\\"tw-pr-4\\" src=\\"assets/icons/dashboard-illustration.svg\\" alt=\\"\\">\\n            <p class=\\"tw-pt-8 tw-font-400 tw-text-14-px\\">There are no expenses to export at the moment!</p>\\n        </div>\\n    </div>\\n    <div *ngIf=\\"lastExport || exportableExpenseGroupIds.length\\" class=\\"tw-mt-24-px tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n        <div class=\\"tw-flex tw-justify-between tw-items-center tw-p-24-px\\">\\n                <h4 class=\\"tw-font-500 tw-text-18-px\\">Your last export</h4>\\n        </div>\\n        <div class=\\"tw-border-separator tw-border-t-1-px\\">\\n            <div *ngIf=\\"true\\" class=\\"tw-p-6 tw-rounded-6-px tw-bg-white\\">\\n                <div *ngIf=\\"true\\" class=\\"inside-container tw-p-10 tw-rounded-6-px tw-bg-white\\">\\n                    <div class=\\"tw-flex tw-items-center tw-justify-between\\">\\n                        <div class=\\"tw-flex\\">\\n                                <img src=\\"assets/icons/green-tick.svg\\" alt=\\"Success Icon\\" class=\\"tw-mr-16-px\\">\\n                                <p class=\\"tw-text-14-px tw-font-500 tw-mt-2-px tw-text-slightly-normal-text-color\\">Successful Expenses</p>\\n                                <span class=\\"tw-w-120-px tw-text-right tw-mt-2-px tw-text-faded-text-color\\">\\n                                    {{ lastExport?.successful_expense_groups_count ? lastExport?.successful_expense_groups_count : 0 }}\\n                                </span>  \\n                            <a *ngIf=\\"lastExport?.successful_expense_groups_count\\" (click)=\\"showExportLog(taskLogStatusComplete)\\" class=\\"tw-ml-20-px tw-text-pink pointer\\">View</a>\\n                        </div>\\n                        <div class=\\"tw-flex tw-flex-col tw-mt-2-px\\">\\n                            <span class=\\"tw-w-260-px tw-text-left\\">\\n                                <span class=\\"tw-text-14-px tw-text-faded-text-color tw-font-400\\">Last Export at: </span>\\n                                <span class=\\"tw-text-14-px tw-font-500\\">{{ lastExport ? (lastExport.last_exported_at | date: \'h:mm a,\') : \'None\' }}\\n                                {{ lastExport ? (lastExport.last_exported_at | date: \'dd MMM yyyy\') : \'\' }}</span>\\n                            </span>                              \\n                        </div>\\n                    </div>\\n                    <div class=\\"tw-flex tw-items-center tw-mt-8-px tw-justify-between\\">\\n                        <div class=\\"tw-flex\\">\\n                            <img src=\\"assets/icons/red-error.svg\\" alt=\\"Error Icon\\" class=\\"tw-mr-16-px\\">\\n                            <p class=\\"tw-text-14-px tw-font-500 tw-mt-2-px tw-text-slightly-normal-text-color\\">Failed Expenses</p>\\n                            <span class=\\"tw-w-150-px tw-text-right tw-mt-2-px tw-text-faded-text-color\\">\\n                                {{ lastExport?.failed_expense_groups_count ? lastExport?.failed_expense_groups_count : 0 }}\\n                            </span>\\n                            <a *ngIf=\\"lastExport?.failed_expense_groups_count\\" (click)=\\"showExportLog(taskLogStatusFailed)\\" class=\\"tw-ml-20-px tw-text-pink pointer tw-mt-2-px\\">View</a>\\n                        </div>\\n                        <div class=\\"tw-flex tw-flex-col tw-mt-2-px\\">\\n                            <span class=\\"tw-w-260-px tw-text-left\\" *ngIf=\\"lastExport?.next_export_at\\">\\n                                <span class=\\"tw-text-14-px tw-text-faded-text-color tw-font-400\\">Next Export at: </span>\\n                                <span class=\\"tw-text-14-px tw-font-500\\">{{ lastExport?.next_export_at ? (lastExport?.next_export_at | date: \'h:mm a,\') : \'None\' }}\\n                                {{ lastExport ? (lastExport.next_export_at | date: \'dd MMM yyyy\') : \'\' }}</span>\\n                            </span> \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\"!isLoading && lastExport && ((errors.EMPLOYEE_MAPPING.length || errors.CATEGORY_MAPPING.length || errors.INTACCT_ERROR.length) || (groupedErrorStat.EMPLOYEE_MAPPING || groupedErrorStat.CATEGORY_MAPPING))\\" class=\\"tw-mt-24-px tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n        <div class=\\"tw-flex tw-justify-between tw-items-center tw-p-24-px\\">\\n                <h4 class=\\"!tw-font-500 !tw-text-18-px\\">Errors</h4>\\n        </div>\\n        <div class=\\"tw-border-separator tw-border-t-1-px tw-pb-24-px\\">\\n            <div class=\\"tw-mt-10-px tw-rounded-6-px tw-bg-white\\">\\n                <div *ngIf=\\"errors?.EMPLOYEE_MAPPING?.length || groupedErrorStat?.EMPLOYEE_MAPPING || errors?.CATEGORY_MAPPING?.length || groupedErrorStat?.CATEGORY_MAPPING\\" class=\\"tw-pl-24-px tw-pr-24-px tw-pt-24-px\\">\\n                    <div class=\\"container\\">\\n                        <div class=\\"sub-text-container\\">\\n                            <h4 class=\\"tw-text-16-px !tw-font-500 tw-text-normal-text-color\\">Integrations Errors</h4>\\n                            <h5 class=\\"!tw-text-faded-text-color tw-text-14-px !tw-font-400 !tw-leading-4\\">Check and resolve these errors before trying to re-export them again.</h5>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\"errors?.EMPLOYEE_MAPPING?.length || groupedErrorStat?.EMPLOYEE_MAPPING\\" class=\\"tw-pl-24-px tw-pr-24-px tw-mt-24-px\\">\\n                    <div class=\\"container\\">\\n                        <div class=\\"inside-container\\">\\n                            <h4 class=\\"tw-text-14-px !tw-font-500 tw-text-slightly-normal-text-color\\">Employee Mapping Errors</h4>\\n                            <h5 *ngIf=\\"groupedErrorStat.EMPLOYEE_MAPPING\\" class=\\"tw-text-faded-text-color tw-text-12-px\\">{{ groupedErrorStat.EMPLOYEE_MAPPING?.resolvedCount }}/{{ groupedErrorStat.EMPLOYEE_MAPPING?.totalCount }} error(s) resolved</h5>\\n                            <div class=\\"flex-wrapper\\">\\n                                <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-10-px !tw-font-400 !tw-leading-4\\">\\n                                    <p>Map the employees in {{brandingConfig.brandName}} to their corresponding records in Sage Intacct.</p>\\n                                </h5>\\n                                <button *ngIf=\\"!groupedErrorStat.EMPLOYEE_MAPPING || (groupedErrorStat.EMPLOYEE_MAPPING && groupedErrorStat.EMPLOYEE_MAPPING.resolvedCount !== groupedErrorStat.EMPLOYEE_MAPPING.totalCount)\\" type=\\"button\\" (click)=\\"showMappingResolve(IntacctErrorType.EMPLOYEE_MAPPING, errors.EMPLOYEE_MAPPING)\\" class=\\"tw-text-white tw-text-500 tw-text-12-px tw-px-12-px tw-py-6-px tw-bg-slightly-normal-text-color tw-rounded-4-px tw-w-100-px tw-font-500\\">\\n                                    Resolve\\n                                </button>\\n                                <div class=\\"tw-flex\\" *ngIf=\\"groupedErrorStat.EMPLOYEE_MAPPING && groupedErrorStat.EMPLOYEE_MAPPING.resolvedCount === groupedErrorStat.EMPLOYEE_MAPPING.totalCount\\">\\n                                    <svg-icon-sprite src=\\"green-tick\\" width=\\"18px\\" height=\\"18px\\" class=\\"tw-text-success-toast tw-pr-6-px\\"></svg-icon-sprite>\\n                                    <p class=\\"tw-text-faded-text-color tw-text-14-px\\">\\n                                      Resolved\\n                                    </p>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n                <div *ngIf=\\"errors?.CATEGORY_MAPPING?.length || (groupedErrorStat && groupedErrorStat.CATEGORY_MAPPING)\\" class=\\"tw-pl-24-px tw-pr-24-px tw-pt-16-px\\">\\n                    <div class=\\"container\\">\\n                        <div class=\\"inside-container\\">\\n                            <h4 class=\\"tw-text-14-px !tw-font-500 tw-text-slightly-normal-text-color\\">Category Mapping Errors</h4>\\n                            <h5 *ngIf=\\"groupedErrorStat.CATEGORY_MAPPING\\" class=\\"tw-pt-4-px tw-text-faded-text-color tw-text-12-px\\">{{ groupedErrorStat.CATEGORY_MAPPING.resolvedCount }}/{{ groupedErrorStat.CATEGORY_MAPPING?.totalCount }} error(s) resolved</h5>\\n                            <div class=\\"flex-wrapper\\">\\n                                <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-10-px !tw-font-400 !tw-leading-4\\"><p>Map the category in {{brandingConfig.brandName}} to their corresponding records in Sage Intacct.</p>\\n                                </h5>\\n                                <button *ngIf=\\"!groupedErrorStat.CATEGORY_MAPPING || (groupedErrorStat.CATEGORY_MAPPING && groupedErrorStat.CATEGORY_MAPPING.resolvedCount !== groupedErrorStat.CATEGORY_MAPPING.totalCount)\\" type=\\"button\\" (click)=\\"showMappingResolve(IntacctErrorType.CATEGORY_MAPPING, errors.CATEGORY_MAPPING)\\" class=\\"tw-text-white tw-text-500 tw-text-12-px tw-px-12-px tw-py-6-px tw-bg-slightly-normal-text-color tw-rounded-4-px tw-w-100-px tw-font-500\\">\\n                                    Resolve\\n                                </button>\\n                                <div class=\\"tw-flex\\" *ngIf=\\"groupedErrorStat.CATEGORY_MAPPING && groupedErrorStat.CATEGORY_MAPPING.resolvedCount === groupedErrorStat.CATEGORY_MAPPING.totalCount\\">\\n                                    <svg-icon-sprite src=\\"green-tick\\" width=\\"18px\\" height=\\"18px\\" class=\\"tw-text-success-toast tw-pr-6-px\\"></svg-icon-sprite>\\n                                    <p class=\\"tw-text-faded-text-color tw-text-14-px\\">\\n                                      Resolved\\n                                    </p>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\"errors?.INTACCT_ERROR?.length\\"  class=\\"tw-pl-24-px tw-pr-24-px tw-pt-16-px\\">\\n                    <div class=\\"container\\">\\n                        <div class=\\"sub-text-container\\">\\n                            <h4 class=\\"tw-text-16-px !tw-font-500 tw-text-normal-text-color\\">Sage Intacct Errors</h4>\\n                            <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-10-px !tw-font-400 !tw-leading-4\\">Resolve these errors on your Sage Intacct Account before trying to re-export them again.</h5>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngFor=\\"let error of errors?.INTACCT_ERROR\\" class=\\"tw-pl-24-px tw-pr-24-px tw-pt-16-px\\">\\n                    <div class=\\"container\\">\\n                        <div class=\\"inside-container\\">\\n                            <h4 class=\\"tw-text-14-px !tw-font-500 tw-text-slightly-normal-text-color tw-w-600-px\\">{{ error.error_title }}</h4>\\n                            <div class=\\"flex-wrapper\\">\\n                                <h5 class=\\"!tw-text-faded-text-color tw-text-12-px tw-pt-10-px !tw-font-400 !tw-leading-4 tw-w-600-px\\"><p>{{ error.error_detail }}</p>\\n                                </h5>\\n                                <button type=\\"button\\" (click)=\\"showIntacctErrorDialog(error)\\" class=\\"tw-flex hover:tw-shadow-btn-cta-shadow tw-items-center tw-justify-center tw-rounded tw-bg-white tw-text-black tw-px-3 tw-py-2 tw-border tw-border-gray-300 transition-transform tw-text-12-px tw-font-500 tw-text-slightly-normal-text-color\\">\\n                                    View Expense\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\x3c!-- Expenses Table --\x3e\\n<p-dialog header=\\"{{exportLogHeader}} Expenses\\" [dismissableMask]=\\"true\\" [modal]=\\"true\\" [draggable]=\\"false\\" [(visible)]=\\"isExportLogVisible\\" [position]=\\"\'top-right\'\\" [style]=\\"{ width: \'50vw\', height: \'100vh\' }\\">\\n    <div class=\\"tw-rounded-6-px tw-bg-white tw-border-1-px\\">\\n        <p-table #dt2 [value]=\\"expenseGroups ? expenseGroups : dummyExpenseGroupList\\">\\n            <ng-template pTemplate=\\"header\\">\\n                <tr>\\n                    <th>Reference ID</th>\\n                    <th>Date and Time of Export</th>\\n                    <th>Employee Name and ID</th>\\n                    <th *ngIf=\\"exportLogHeader===\'Successful\'\\">Exported As</th>\\n                    <th *ngIf=\\"exportLogHeader===\'Successful\'\\">Link to Sage Intacct</th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\"body\\" let-rowData>\\n                <tr *ngIf=\\"!isExportLogFetchInProgress\\">\\n                    <td class=\\"tw-underline tw-cursor-pointer\\" (click)=\\"openUrl($event, rowData.fyleUrl)\\">{{rowData.referenceNumber}}</td>\\n                    <td>\\n                        <p class=\\"tw-font-400 tw-text-sub-text-color\\">{{rowData.exportedAt | date}}</p>\\n                        <span class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">{{rowData.exportedAt | date : \\"HH:ss\\"}}</span>\\n                    </td>\\n                    <td>\\n                        <h4 [ngClass]=\\"{\'truncate\': rowData.employee[0]?.length > 16}\\"\\n                            [pTooltip]=\\"rowData.employee[0]?.length > 16 ? rowData.employee[0] : null\\"\\n                            tooltipPosition=\\"top\\">\\n                            {{rowData.employee[0]}}\\n                        </h4>\\n                        <h5 class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\"\\n                            [ngClass]=\\"{\'truncate\': rowData.employee[1]?.length > 16}\\"\\n                            [pTooltip]=\\"rowData.employee[1]?.length > 16 ? rowData.employee[1] : null\\"\\n                            tooltipPosition=\\"top\\">\\n                            {{rowData.employee[1]}}\\n                        </h5>                    \\n                    </td>\\n                    <td *ngIf=\\"exportLogHeader===\'Successful\'\\">{{rowData.exportedAs | snakeCaseToSpaceCase | titlecase}}</td>\\n                    <td *ngIf=\\"exportLogHeader===\'Successful\'\\">\\n                        <div *ngIf=\\"rowData.intacctUrl\\">\\n                          <button (click)=\\"openUrl($event, rowData.intacctUrl)\\" pTooltip=\\"Open in New Tab\\" tooltipPosition=\\"top\\">\\n                            <svg-icon-sprite class=\\"tw-pt-5-px\\" src=\\"open-in-new-tab\\" width=\\"20px\\" height=\\"20px\\"></svg-icon-sprite>\\n                          </button>\\n                        </div>\\n                    </td>\\n                </tr>\\n                <ng-container *ngTemplateOutlet=\\"shimmers\\"></ng-container>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n</p-dialog>\\n\\n\x3c!-- Mapping Errors --\x3e\\n<div>\\n    <p-dialog [dismissableMask]=\\"true\\" [(visible)]=\\"isMappingResolveVisible\\" [modal]=\\"true\\" [position]=\\"\'top-right\'\\" [style]=\\"{ width: \'50vw\', height:\'100vh\' }\\" [maximizable]=\\"false\\" [draggable]=\\"false\\" [resizable]=\\"false\\" [breakpoints]=\\"{ \'960px\': \'75vw\' }\\" (onHide)=\\"showErrorStats()\\">\\n        <p-header>\\n            <p>{{intacctErrorType | snakeCaseToSpaceCase | titlecase }} Errors</p>\\n          </p-header>\\n        <app-dashboard-mapping-resolve *ngIf=\\"isMappingResolveVisible\\" [employeeFieldMapping]=\\"employeeFieldMapping\\" [groupedError]=\\"groupedError\\" [mappingType]=\\"intacctErrorType\\" [isDialogVisible]=\\"isMappingResolveVisible\\"></app-dashboard-mapping-resolve>\\n    </p-dialog>\\n</div>\\n\\n\x3c!-- Intacct Errors --\x3e\\n<div *ngIf=\\"intacctErrorDialogVisible\\">\\n    <p-dialog [dismissableMask]=\\"true\\" [modal]=\\"true\\" [(visible)]=\\"intacctErrorDialogVisible\\" [position]=\\"\'top-right\'\\" [style]=\\"{ width: \'50vw\', height:\'100vh\' }\\" [maximizable]=\\"false\\" [draggable]=\\"false\\" [resizable]=\\"false\\" [breakpoints]=\\"{ \'960px\': \'75vw\' }\\">\\n        <p-header>\\n            <p>Sage Intacct Error</p>\\n            <h3 class=\\"sub-header\\">{{intacctErrorDetail}}</h3>\\n        </p-header>\\n        <app-dashboard-intacct-errors [intacctErrorExpenses]=\\"intacctErrorExpenses\\"></app-dashboard-intacct-errors>\\n    </p-dialog>\\n</div>\\n\\n<ng-template #shimmers>\\n    <tr *ngFor=\\"let _ of [0,1,2,3,4,5,6]\\">\\n        <td *ngIf=\\"isExportLogFetchInProgress\\"><p-skeleton width=\\"50px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n        <td *ngIf=\\"isExportLogFetchInProgress\\"><p-skeleton width=\\"100px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n        <td *ngIf=\\"isExportLogFetchInProgress\\"><p-skeleton width=\\"100px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n        <td *ngIf=\\"isExportLogFetchInProgress && exportLogHeader===\'Successful\'\\"><p-skeleton width=\\"50px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n        <td *ngIf=\\"isExportLogFetchInProgress && exportLogHeader===\'Successful\'\\"><p-skeleton width=\\"50px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n    </tr>\\n</ng-template>\\n"},{"name":"DashboardErrorSectionComponent","id":"component-DashboardErrorSectionComponent-707621f1483c1bc583c09031b1ffaea177804809247a34590ab703b4d9b6264c00c3874b473be4ad02544d26858a1692d59ac5e0ad5b9fb58055f19e3731c972","file":"src/app/shared/components/dashboard/dashboard-error-section/dashboard-error-section.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dashboard-error-section","styleUrls":["./dashboard-error-section.component.scss"],"styles":[],"templateUrl":["./dashboard-error-section.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"apiModuleUrl","deprecated":false,"deprecationMessage":"","line":36,"type":"AppUrl","decorators":[]},{"name":"appName","deprecated":false,"deprecationMessage":"","line":24,"type":"AppName","decorators":[]},{"name":"destinationFieldMap","deprecated":false,"deprecationMessage":"","line":28,"type":"DestinationFieldMap","decorators":[]},{"name":"destinationOptionsVersion","defaultValue":"\'v2\'","deprecated":false,"deprecationMessage":"","line":38,"type":"\\"v1\\" | \\"v2\\"","decorators":[]},{"name":"errors","deprecated":false,"deprecationMessage":"","line":26,"type":"AccountingGroupedErrors","decorators":[]},{"name":"errorsVersion","deprecated":false,"deprecationMessage":"","line":40,"type":"","decorators":[]},{"name":"exportLogHeader","deprecated":false,"deprecationMessage":"","line":34,"type":"string","decorators":[]},{"name":"groupedErrorStat","deprecated":false,"deprecationMessage":"","line":30,"type":"AccountingGroupedErrorStat","decorators":[]},{"name":"isCategoryMappingGeneric","deprecated":false,"deprecationMessage":"","line":42,"type":"boolean","decorators":[]},{"name":"isExportLogFetchInProgress","deprecated":false,"deprecationMessage":"","line":32,"type":"boolean","decorators":[]},{"name":"isImportItemsEnabled","deprecated":false,"deprecationMessage":"","line":44,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"alphabetFilter","defaultValue":"\'All\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":74},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":76,"modifierKind":[148]},{"name":"destinationField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":54},{"name":"destinationOptions","deprecated":false,"deprecationMessage":"","type":"DestinationAttribute[]","optional":false,"description":"","line":48},{"name":"employeeFieldMapping","deprecated":false,"deprecationMessage":"","type":"FyleField","optional":false,"description":"","line":78},{"name":"errorDetail","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":58},{"name":"errorExpenses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":60},{"name":"errorType","deprecated":false,"deprecationMessage":"","type":"AccountingErrorType","optional":false,"description":"","line":64},{"name":"ErrorType","defaultValue":"AccountingErrorType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70},{"name":"eventStartTime","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":62},{"name":"ExportErrorSourceType","defaultValue":"ExportErrorSourceType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":50},{"name":"filteredMappings","deprecated":false,"deprecationMessage":"","type":"ExtendedGenericMapping[]","optional":false,"description":"","line":46},{"name":"groupedError","deprecated":false,"deprecationMessage":"","type":"Error[]","optional":false,"description":"","line":66},{"name":"isAccountingErrorDialogVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":56},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"isMappingResolveVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":68},{"name":"selectedMappingFilter","defaultValue":"MappingState.ALL","deprecated":false,"deprecationMessage":"","type":"MappingState","optional":false,"description":"","line":72},{"name":"sourceField","deprecated":false,"deprecationMessage":"","type":"ExportErrorSourceType","optional":false,"description":"","line":52}],"methodsClass":[{"name":"formatErrors","args":[{"name":"errors","type":"Error[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"AccountingGroupedErrors","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"errors","type":"Error[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDestinationOptionsV1","args":[{"name":"errorType","type":"AccountingErrorType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"errorType","type":"AccountingErrorType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDestinationOptionsV2","args":[{"name":"errorType","type":"AccountingErrorType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"errorType","type":"AccountingErrorType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSourceType","args":[],"optional":false,"returnType":"DestinationFieldMap","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":""},{"name":"handleResolvedMappingStat","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":177,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":205,"deprecated":false,"deprecationMessage":""},{"name":"setErrors","args":[{"name":"errorType","type":"AccountingErrorType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"errorType","type":"AccountingErrorType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showErrorDialog","args":[{"name":"accountingError","type":"Error","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"accountingError","type":"Error","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showMappingResolve","args":[{"name":"errorType","type":"AccountingErrorType","deprecated":false,"deprecationMessage":""},{"name":"groupedError","type":"Error[]","deprecated":false,"deprecationMessage":""},{"name":"sourceField","type":"ExportErrorSourceType","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"errorType","type":"AccountingErrorType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"groupedError","type":"Error[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sourceField","type":"ExportErrorSourceType","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"trackTimeTakenForResolvingMappingErrors","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":156,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { Observable, filter, forkJoin } from \'rxjs\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { DestinationFieldMap } from \'src/app/core/models/db/dashboard.model\';\\nimport { DestinationAttribute, GroupedDestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { Error, AccountingGroupedErrors, AccountingGroupedErrorStat, ErrorModel, ErrorResponse } from \'src/app/core/models/db/error.model\';\\nimport { ExtendedGenericMapping, GenericMappingResponse } from \'src/app/core/models/db/extended-generic-mapping.model\';\\nimport { AccountingDisplayName, AccountingErrorType, AccountingField, AppName, AppUrl, ExportErrorSourceType, FyleField, MappingState } from \'src/app/core/models/enum/enum.model\';\\nimport { ResolveMappingErrorProperty } from \'src/app/core/models/misc/tracking.model\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\nimport { DashboardService } from \'src/app/core/services/common/dashboard.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\n\\n@Component({\\n  selector: \'app-dashboard-error-section\',\\n  templateUrl: \'./dashboard-error-section.component.html\',\\n  styleUrls: [\'./dashboard-error-section.component.scss\']\\n})\\nexport class DashboardErrorSectionComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  @Input() appName: AppName;\\n\\n  @Input() errors: AccountingGroupedErrors;\\n\\n  @Input() destinationFieldMap: DestinationFieldMap;\\n\\n  @Input() groupedErrorStat: AccountingGroupedErrorStat;\\n\\n  @Input() isExportLogFetchInProgress: boolean;\\n\\n  @Input() exportLogHeader: string;\\n\\n  @Input() apiModuleUrl: AppUrl;\\n\\n  @Input() destinationOptionsVersion: \'v1\' | \'v2\' = \'v2\';\\n\\n  @Input() errorsVersion: \'v1\';\\n\\n  @Input() isCategoryMappingGeneric: boolean;\\n\\n  @Input() isImportItemsEnabled: boolean;\\n\\n  filteredMappings: ExtendedGenericMapping[];\\n\\n  destinationOptions: DestinationAttribute[];\\n\\n  ExportErrorSourceType = ExportErrorSourceType;\\n\\n  sourceField: ExportErrorSourceType;\\n\\n  destinationField: string;\\n\\n  isAccountingErrorDialogVisible: boolean = false;\\n\\n  errorDetail: string;\\n\\n  errorExpenses: Expense[] = [];\\n\\n  eventStartTime: Date;\\n\\n  errorType: AccountingErrorType;\\n\\n  groupedError: Error[];\\n\\n  isMappingResolveVisible: boolean = false;\\n\\n  ErrorType = AccountingErrorType;\\n\\n  selectedMappingFilter: MappingState = MappingState.ALL;\\n\\n  alphabetFilter: string = \'All\';\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  employeeFieldMapping: FyleField;\\n\\n  constructor(\\n    private dashboardService: DashboardService,\\n    private mappingService: MappingService,\\n    private trackingService: TrackingService\\n  ) { }\\n\\n  getSourceType() {\\n    return this.destinationFieldMap[this.sourceField];\\n  }\\n\\n  getDestinationOptionsV1(errorType: AccountingErrorType): void {\\n    let displayName;\\n    if (this.destinationField === AccountingField.ACCOUNT) {\\n      displayName = this.isImportItemsEnabled ? `${AccountingDisplayName.ITEM},${AccountingDisplayName.ACCOUNT}` : AccountingDisplayName.ACCOUNT;\\n    }\\n\\n    this.mappingService.getDestinationAttributes(this.destinationField, \'v1\', this.apiModuleUrl, undefined, undefined, displayName).subscribe((response: any) => {\\n      this.destinationOptions = response;\\n\\n      this.setErrors(errorType);\\n    });\\n  }\\n\\n  private setErrors(errorType: AccountingErrorType): void {\\n    this.errors[errorType][0].expense_attribute;\\n    const isCategoryMappingGeneric = FyleField.CATEGORY === (this.sourceField as unknown as FyleField) ? this.isCategoryMappingGeneric : false;\\n    this.filteredMappings = ErrorModel.getErroredMappings(this.errors, errorType, isCategoryMappingGeneric);\\n    setTimeout(() => {\\n      this.isLoading = false;\\n    }, 100);\\n  }\\n\\n  private getDestinationOptionsV2(errorType: AccountingErrorType) {\\n    this.mappingService.getGroupedDestinationAttributes([this.destinationField], \'v2\').subscribe(groupedDestinationResponse => {\\n      if (this.sourceField === \'EMPLOYEE\') {\\n        this.destinationOptions = this.destinationField === FyleField.EMPLOYEE ? groupedDestinationResponse.EMPLOYEE : groupedDestinationResponse.VENDOR;\\n      } else if (this.sourceField === \'CATEGORY\') {\\n        if (this.destinationField === \'EXPENSE_TYPE\') {\\n          this.destinationOptions = groupedDestinationResponse.EXPENSE_TYPE;\\n        } else {\\n          this.destinationOptions = groupedDestinationResponse.ACCOUNT;\\n        }\\n      }\\n\\n      this.setErrors(errorType);\\n    });\\n\\n  }\\n\\n  showMappingResolve(errorType: AccountingErrorType, groupedError: Error[], sourceField: ExportErrorSourceType) {\\n    this.isLoading = true;\\n    this.eventStartTime = new Date();\\n    this.errorType = errorType;\\n    this.groupedError = groupedError;\\n    this.sourceField = sourceField;\\n    this.destinationField = this.destinationFieldMap[this.sourceField];\\n\\n    if (this.destinationOptionsVersion === \'v1\') {\\n      this.getDestinationOptionsV1(errorType);\\n    } else {\\n      this.getDestinationOptionsV2(errorType);\\n    }\\n\\n    this.isMappingResolveVisible = true;\\n  }\\n\\n  showErrorDialog(accountingError: Error) {\\n    this.isAccountingErrorDialogVisible = true;\\n    this.errorDetail = accountingError.error_detail;\\n    this.errorExpenses = accountingError.expense_group?.expenses;\\n  }\\n\\n  private formatErrors(errors: Error[]): AccountingGroupedErrors {\\n    return ErrorModel.formatErrors(errors);\\n  }\\n\\n  private trackTimeTakenForResolvingMappingErrors(): void {\\n    if (this.errorType === AccountingErrorType.CATEGORY_MAPPING || this.errorType === AccountingErrorType.EMPLOYEE_MAPPING) {\\n      const error = this.groupedErrorStat[this.errorType];\\n\\n      if (error?.totalCount && error?.totalCount > 0) {\\n        const properties: ResolveMappingErrorProperty = {\\n          resolvedCount: error?.resolvedCount ? error?.resolvedCount : 0,\\n          totalCount: error?.totalCount ? error?.totalCount : 0,\\n          unresolvedCount: error?.totalCount - error?.resolvedCount,\\n          resolvedAllErrors: error.resolvedCount === error.totalCount,\\n          startTime: this.eventStartTime,\\n          endTime: new Date(),\\n          durationInSeconds: Math.floor((new Date().getTime() - this.eventStartTime.getTime()) / 1000),\\n          errorType: this.errorType\\n        };\\n\\n        this.trackingService.onErrorResolve(properties);\\n      }\\n    }\\n  }\\n\\n  handleResolvedMappingStat(): void {\\n    this.dashboardService.getExportErrors(this.errorsVersion).subscribe((errors) => {\\n      const argument = this.errorsVersion === \'v1\' ? errors : (errors as ErrorResponse).results;\\n      const newError: AccountingGroupedErrors = this.formatErrors(argument);\\n\\n      if (this.errors.CATEGORY_MAPPING.length !== newError.CATEGORY_MAPPING.length) {\\n        const totalCount = this.groupedErrorStat.CATEGORY_MAPPING ? this.groupedErrorStat.CATEGORY_MAPPING.totalCount : this.errors.CATEGORY_MAPPING.length;\\n\\n        this.groupedErrorStat.CATEGORY_MAPPING = {\\n          resolvedCount: totalCount - newError.CATEGORY_MAPPING.length,\\n          totalCount: totalCount\\n        };\\n      }\\n\\n      if (this.errors.EMPLOYEE_MAPPING.length !== newError.EMPLOYEE_MAPPING.length) {\\n        const totalCount = this.groupedErrorStat.EMPLOYEE_MAPPING ? this.groupedErrorStat.EMPLOYEE_MAPPING.totalCount : this.errors.EMPLOYEE_MAPPING.length;\\n\\n        this.groupedErrorStat.EMPLOYEE_MAPPING = {\\n          resolvedCount: totalCount - newError.EMPLOYEE_MAPPING.length,\\n          totalCount: totalCount\\n        };\\n      }\\n\\n      this.errors = newError;\\n      this.trackTimeTakenForResolvingMappingErrors();\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.employeeFieldMapping = this.destinationFieldMap.EMPLOYEE as unknown as FyleField;\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".container {\\n    @apply tw-justify-center;\\n}\\n\\n.inside-container {\\n    @apply tw-rounded-8-px tw-p-24-px tw-flex-col tw-items-start tw-gap-4;\\n    border: 1px solid var(--grayscale-light-border, #ECECEE);\\n    max-width: auto;\\n}\\n\\n.sub-text-container {\\n    @apply tw-rounded-8-px tw-p-24-px tw-flex-col tw-items-start tw-gap-4;\\n    border: 1px solid var(--grayscale-light-border, #ECECEE);\\n    background: var(--grayscale-background, #FAFCFF);\\n    max-width: auto;\\n}\\n\\n.flex-wrapper {\\n    @apply tw-flex tw-items-start tw-justify-between;\\n}\\n\\n.sub-header {\\n    @apply tw-text-14-px tw-mt-8-px tw-font-400 tw-text-faded-text-color;\\n}\\n\\n:host  ::ng-deep .p-dialog {\\n    @apply tw-max-h-full tw-m-0 #{!important};\\n  }\\n\\n.dialog-sub-header {\\n    @apply tw-text-14-px tw-font-400 tw-w-400-px tw-mt-8-px tw-text-faded-text-color;\\n}","styleUrl":"./dashboard-error-section.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""}],"line":78,"jsdoctags":[{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-py-24-px tw-px-120-px\\">\\n    <div *ngIf=\\"errors\\" class=\\"tw-mt-24-px tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n        <div class=\\"tw-flex tw-justify-between tw-items-center tw-p-24-px\\">\\n                <h4 class=\\"!tw-font-500 !tw-text-18-px\\">Errors</h4>\\n        </div>\\n        <div class=\\"tw-border-separator tw-border-t-1-px tw-pb-24-px\\">\\n            <div class=\\"tw-mt-10-px tw-rounded-6-px tw-bg-white\\">\\n                <div *ngIf=\\"errors?.EMPLOYEE_MAPPING?.length || groupedErrorStat?.EMPLOYEE_MAPPING || errors?.CATEGORY_MAPPING?.length || groupedErrorStat?.CATEGORY_MAPPING\\" class=\\"tw-pl-24-px tw-pr-24-px tw-pt-24-px\\">\\n                    <div class=\\"container\\">\\n                        <div class=\\"sub-text-container\\">\\n                            <h4 class=\\"tw-text-16-px !tw-font-500 tw-text-normal-text-color\\">Integrations Errors</h4>\\n                            <h5 class=\\"!tw-text-faded-text-color tw-text-14-px !tw-font-400 !tw-leading-4 tw-pt-10-px\\">Check and resolve these errors before trying to re-export them again.</h5>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\"errors?.EMPLOYEE_MAPPING?.length || groupedErrorStat?.EMPLOYEE_MAPPING\\" class=\\"tw-pl-24-px tw-pr-24-px tw-mt-24-px\\">\\n                    <div class=\\"container\\">\\n                        <div class=\\"inside-container\\">\\n                            <h4 class=\\"tw-text-14-px !tw-font-500 tw-text-slightly-normal-text-color\\">Employee Mapping Errors</h4>\\n                            <h5 *ngIf=\\"groupedErrorStat.EMPLOYEE_MAPPING\\" class=\\"tw-text-faded-text-color tw-text-12-px\\">{{ groupedErrorStat.EMPLOYEE_MAPPING?.resolvedCount }}/{{ groupedErrorStat.EMPLOYEE_MAPPING?.totalCount }} error(s) resolved</h5>\\n                            <div class=\\"flex-wrapper\\">\\n                                <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-10-px !tw-font-400 !tw-leading-4\\">\\n                                    <p>Map employees in {{brandingConfig.brandName}} to their corresponding records in {{appName}}.</p>\\n                                </h5>\\n                                <button *ngIf=\\"!groupedErrorStat.EMPLOYEE_MAPPING || (groupedErrorStat.EMPLOYEE_MAPPING && groupedErrorStat.EMPLOYEE_MAPPING.resolvedCount !== groupedErrorStat.EMPLOYEE_MAPPING.totalCount)\\" type=\\"button\\" (click)=\\"showMappingResolve(ErrorType.EMPLOYEE_MAPPING, errors.EMPLOYEE_MAPPING, ExportErrorSourceType.EMPLOYEE)\\" class=\\"tw-text-white tw-text-500 tw-text-12-px tw-px-12-px tw-py-6-px tw-bg-slightly-normal-text-color tw-rounded-4-px tw-w-100-px tw-font-500\\">\\n                                    Resolve\\n                                </button>\\n                                <div class=\\"tw-flex\\" *ngIf=\\"groupedErrorStat.EMPLOYEE_MAPPING && groupedErrorStat.EMPLOYEE_MAPPING.resolvedCount === groupedErrorStat.EMPLOYEE_MAPPING.totalCount\\">\\n                                    <svg-icon-sprite src=\\"green-tick\\" width=\\"18px\\" height=\\"18px\\" class=\\"tw-text-success-toast tw-pr-6-px\\"></svg-icon-sprite>\\n                                    <p class=\\"tw-text-faded-text-color tw-text-14-px\\">\\n                                    Resolved\\n                                    </p>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n                \\n                <div *ngIf=\\"errors?.CATEGORY_MAPPING?.length || (groupedErrorStat && groupedErrorStat.CATEGORY_MAPPING)\\" class=\\"tw-pl-24-px tw-pr-24-px tw-pt-16-px\\">\\n                    <div class=\\"container\\">\\n                        <div class=\\"inside-container\\">\\n                            <h4 class=\\"tw-text-14-px !tw-font-500 tw-text-slightly-normal-text-color\\">Category Mapping Errors</h4>\\n                            <h5 *ngIf=\\"groupedErrorStat.CATEGORY_MAPPING\\" class=\\"tw-pt-4-px tw-text-faded-text-color tw-text-12-px\\">{{ groupedErrorStat.CATEGORY_MAPPING.resolvedCount }}/{{ groupedErrorStat.CATEGORY_MAPPING?.totalCount }} error(s) resolved</h5>\\n                            <div class=\\"flex-wrapper\\">\\n                                <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-10-px !tw-font-400 !tw-leading-4\\"><p>Map category in {{brandingConfig.brandName}} to their corresponding records in {{appName}}.</p>\\n                                </h5>\\n                                <button *ngIf=\\"!groupedErrorStat.CATEGORY_MAPPING || (groupedErrorStat.CATEGORY_MAPPING && groupedErrorStat.CATEGORY_MAPPING.resolvedCount !== groupedErrorStat.CATEGORY_MAPPING.totalCount)\\" type=\\"button\\" (click)=\\"showMappingResolve(ErrorType.CATEGORY_MAPPING, errors.CATEGORY_MAPPING, ExportErrorSourceType.CATEGORY)\\" class=\\"tw-text-white tw-text-500 tw-text-12-px tw-px-12-px tw-py-6-px tw-bg-slightly-normal-text-color tw-rounded-4-px tw-w-100-px tw-font-500\\">\\n                                    Resolve\\n                                </button>\\n                                <div class=\\"tw-flex\\" *ngIf=\\"groupedErrorStat.CATEGORY_MAPPING && groupedErrorStat.CATEGORY_MAPPING.resolvedCount === groupedErrorStat.CATEGORY_MAPPING.totalCount\\">\\n                                    <svg-icon-sprite src=\\"green-tick\\" width=\\"18px\\" height=\\"18px\\" class=\\"tw-text-success-toast tw-pr-6-px\\"></svg-icon-sprite>\\n                                    <p class=\\"tw-text-faded-text-color tw-text-14-px\\">\\n                                    Resolved\\n                                    </p>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div *ngIf=\\"errors?.ACCOUNTING_ERROR?.length\\" class=\\"tw-pl-24-px tw-pr-24-px tw-pt-16-px\\">\\n                    <div class=\\"container\\">\\n                        <div class=\\"sub-text-container\\">\\n                            <h4 class=\\"tw-text-16-px !tw-font-500 tw-text-normal-text-color\\">{{appName}} Errors</h4>\\n                            <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-10-px !tw-font-400 !tw-leading-4\\">Resolve these errors on your {{appName}} Account before trying to re-export them again.</h5>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div *ngFor=\\"let error of errors?.ACCOUNTING_ERROR\\" class=\\"tw-pl-24-px tw-pr-24-px tw-pt-16-px\\">\\n                    <div class=\\"container\\">\\n                        <div class=\\"inside-container\\">\\n                            <h4 class=\\"tw-text-14-px !tw-font-500 tw-text-slightly-normal-text-color tw-w-600-px\\">{{ error.error_title }}</h4>\\n                            <div class=\\"flex-wrapper\\">\\n                                <h5 class=\\"!tw-text-faded-text-color tw-text-12-px tw-pt-10-px !tw-font-400 !tw-leading-4 tw-w-600-px\\"><p>{{ error.error_detail }}</p>\\n                                </h5>\\n                                <button type=\\"button\\" (click)=\\"showErrorDialog(error)\\" class=\\"tw-flex hover:tw-shadow-btn-cta-shadow tw-items-center tw-justify-center tw-rounded tw-bg-white tw-text-black tw-px-3 tw-py-2 tw-border tw-border-gray-300 transition-transform tw-text-12-px tw-font-500 tw-text-slightly-normal-text-color\\">\\n                                    View Expense\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\x3c!-- Integration Specific Errors --\x3e\\n<div *ngIf=\\"isAccountingErrorDialogVisible\\">\\n    <p-dialog [dismissableMask]=\\"true\\" [modal]=\\"true\\" [(visible)]=\\"isAccountingErrorDialogVisible\\" [position]=\\"\'top-right\'\\" [style]=\\"{ width: \'fit-content\', height: \'100vh\' }\\" [maximizable]=\\"false\\" [draggable]=\\"false\\" [resizable]=\\"false\\" [breakpoints]=\\"{ \'960px\': \'75vw\' }\\">\\n        <p-header>\\n            <p class=\\"tw-line-height-20\\">{{appName}} Error</p>\\n            <h3 class=\\"sub-header\\">{{errorDetail}}</h3>\\n        </p-header>\\n        <app-dashboard-accounting-error-dialog  [isLoading]=\\"isLoading\\" [errorExpenses]=\\"errorExpenses\\"></app-dashboard-accounting-error-dialog>\\n    </p-dialog>\\n</div>\\n\\n<ng-template #shimmers>\\n    <app-shimmers [isExportLogFetchInProgress]=\\"isExportLogFetchInProgress\\" [exportLogHeader]=\\"exportLogHeader\\"></app-shimmers>\\n</ng-template>\\n\\n\\n\x3c!-- Mapping Errors --\x3e\\n<div>\\n    <p-dialog [dismissableMask]=\\"true\\" [(visible)]=\\"isMappingResolveVisible\\" [modal]=\\"true\\" [position]=\\"\'top-right\'\\" [style]=\\"{ width: \'fit-content\', height: \'100vh\' }\\" [maximizable]=\\"false\\" [draggable]=\\"false\\" [resizable]=\\"false\\" [breakpoints]=\\"{ \'960px\': \'75vw\' }\\" (onHide)=\\"handleResolvedMappingStat()\\">\\n        <p-header>\\n            <p class=\\"tw-line-height-20\\">{{errorType | snakeCaseToSpaceCase | titlecase }} Errors</p>\\n            <p class=\\"dialog-sub-header\\">Resolve the following mapping errors to export your failed expenses successfully to {{appName}}</p>\\n        </p-header>\\n          <app-generic-mapping-table [employeeFieldMapping]=\\"employeeFieldMapping\\" [isLoading]=\\"isLoading\\" [appName]=\\"appName\\" [isDashboardMappingResolve]=\\"true\\" [destinationField]=\\"destinationField\\" [filteredMappings]=\\"filteredMappings\\" [sourceField]=\\"sourceField\\" [destinationOptions]=\\"destinationOptions\\"></app-generic-mapping-table>\\n    </p-dialog>\\n</div>"},{"name":"DashboardExportLogDialogComponent","id":"component-DashboardExportLogDialogComponent-aa85ec7edb13caa87f3b21c4cd46e8c380a1b8eb4641b5346a82c8bb5c15def2457f5e6958780da42bb7623dbfb2c7228307697c2b66b746cb7351de12e0abeb","file":"src/app/shared/components/dashboard/dashboard-export-log-dialog/dashboard-export-log-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dashboard-export-log-dialog","styleUrls":["./dashboard-export-log-dialog.component.scss"],"styles":[],"templateUrl":["./dashboard-export-log-dialog.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"accountingExports","deprecated":false,"deprecationMessage":"","line":19,"type":"AccountingExportList[]","decorators":[]},{"name":"appName","deprecated":false,"deprecationMessage":"","line":23,"type":"AppName","decorators":[]},{"name":"exportLogHeader","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"exportLogSubHeader","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"isExportLogFetchInProgress","deprecated":false,"deprecationMessage":"","line":21,"type":"boolean","decorators":[]},{"name":"isExportLogVisible","deprecated":false,"deprecationMessage":"","line":17,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"hideExportLogDialog","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":25,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"handleDialogClose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":36,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""},{"name":"openUrl","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""},{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { AccountingExportList } from \'src/app/core/models/db/accounting-export.model\';\\nimport { AppName } from \'src/app/core/models/enum/enum.model\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\n\\n@Component({\\n  selector: \'app-dashboard-export-log-dialog\',\\n  templateUrl: \'./dashboard-export-log-dialog.component.html\',\\n  styleUrls: [\'./dashboard-export-log-dialog.component.scss\']\\n})\\nexport class DashboardExportLogDialogComponent implements OnInit {\\n\\n  @Input() exportLogHeader: string;\\n\\n  @Input() exportLogSubHeader: string;\\n\\n  @Input() isExportLogVisible: boolean;\\n\\n  @Input() accountingExports: AccountingExportList[];\\n\\n  @Input() isExportLogFetchInProgress: boolean;\\n\\n  @Input() appName: AppName;\\n\\n  @Output() hideExportLogDialog = new EventEmitter<void>();\\n\\n  constructor(\\n    private windowService: WindowService\\n  ) { }\\n\\n  openUrl(event: any, url: string) {\\n    this.windowService.openInNewTab(url);\\n    event.stopPropagation();\\n  }\\n\\n  handleDialogClose() {\\n    this.hideExportLogDialog.emit();\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host  ::ng-deep .p-dialog {\\n  @apply tw-max-h-full tw-m-0 #{!important};\\n  }  \\n\\n.sub-header {\\n    @apply tw-text-14-px tw-mt-8-px tw-font-400 tw-text-faded-text-color tw-w-450-px;\\n}","styleUrl":"./dashboard-export-log-dialog.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<p-dialog header=\\"{{exportLogHeader}} Expenses\\" [dismissableMask]=\\"true\\" [modal]=\\"true\\" [draggable]=\\"false\\" [(visible)]=\\"isExportLogVisible\\" (onHide)=\\"handleDialogClose()\\" [position]=\\"\'top-right\'\\" [style]=\\"{ width: \'50vw\', height: \'100vh\' }\\">\\n    <p-header>\\n        <p>{{exportLogHeader}}</p>\\n        <h3 class=\\"sub-header\\">{{exportLogSubHeader}}</h3>\\n    </p-header>\\n    <div class=\\"tw-rounded-6-px tw-bg-white tw-border-1-px\\">\\n        <app-export-log-table [appName]=\\"appName\\" [filteredExpenseGroups]=\\"accountingExports\\" [isDashboardFailed]=\\"exportLogHeader===\'Successful\' ? false : true\\" [isExportLogTable]=\\"false\\"></app-export-log-table>\\n    </div>\\n</p-dialog>\\n\\n<ng-template #shimmers>\\n    <app-shimmers [isExportLogFetchInProgress]=\\"isExportLogFetchInProgress\\" [exportLogHeader]=\\"exportLogHeader\\"></app-shimmers>\\n</ng-template>"},{"name":"DashboardExportSectionComponent","id":"component-DashboardExportSectionComponent-4497f51bf44fb6b392a3703c971b902c79631ad343c7036932e111297d765f28aa3fb90c187f17bb191a0848a9a26a83d4d847e9c361a568af464b32889ebeed","file":"src/app/shared/components/dashboard/dashboard-export-section/dashboard-export-section.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dashboard-export-section","styleUrls":["./dashboard-export-section.component.scss"],"styles":[],"templateUrl":["./dashboard-export-section.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"accountingExportSummary","deprecated":false,"deprecationMessage":"","line":25,"type":"AccountingExportSummary | null","decorators":[]},{"name":"appName","deprecated":false,"deprecationMessage":"","line":13,"type":"AppName","decorators":[]},{"name":"exportableAccountingExportIds","deprecated":false,"deprecationMessage":"","line":19,"type":"number[]","decorators":[]},{"name":"exportProgressPercentage","deprecated":false,"deprecationMessage":"","line":23,"type":"number","decorators":[]},{"name":"failedExpenseGroupCount","deprecated":false,"deprecationMessage":"","line":21,"type":"number","decorators":[]},{"name":"isExportInProgress","deprecated":false,"deprecationMessage":"","line":17,"type":"boolean","decorators":[]},{"name":"isImportInProgress","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"loaderType","defaultValue":"LoaderType.DETERMINATE","deprecated":false,"deprecationMessage":"","line":29,"type":"LoaderType","decorators":[]},{"name":"processedCount","deprecated":false,"deprecationMessage":"","line":27,"type":"number","decorators":[]}],"outputsClass":[{"name":"export","defaultValue":"new EventEmitter<boolean>()","deprecated":false,"deprecationMessage":"","line":31,"type":"EventEmitter"}],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33,"modifierKind":[148]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""},{"name":"triggerExport","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { AccountingExportSummary } from \'src/app/core/models/db/accounting-export-summary.model\';\\nimport { AppName, LoaderType } from \'src/app/core/models/enum/enum.model\';\\n\\n@Component({\\n  selector: \'app-dashboard-export-section\',\\n  templateUrl: \'./dashboard-export-section.component.html\',\\n  styleUrls: [\'./dashboard-export-section.component.scss\']\\n})\\nexport class DashboardExportSectionComponent implements OnInit {\\n\\n  @Input() appName: AppName;\\n\\n  @Input() isImportInProgress: boolean;\\n\\n  @Input() isExportInProgress: boolean;\\n\\n  @Input() exportableAccountingExportIds: number[];\\n\\n  @Input() failedExpenseGroupCount: number;\\n\\n  @Input() exportProgressPercentage: number;\\n\\n  @Input() accountingExportSummary: AccountingExportSummary | null;\\n\\n  @Input() processedCount: number;\\n\\n  @Input() loaderType: LoaderType = LoaderType.DETERMINATE;\\n\\n  @Output() export = new EventEmitter<boolean>();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor() { }\\n\\n  triggerExport() {\\n    this.export.emit(true);\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-progressbar {\\n    @apply tw-h-1.5 tw-bg-progress-bar-bg #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar .p-progressbar-value {\\n    @apply tw-bg-mandatory-field-color tw-rounded-50  #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar-determinate .p-progressbar-value {\\n    content: none #{!important};\\n}\\n\\n.export-btn:disabled {\\n    @apply tw-cursor-not-allowed tw-bg-cta-disabled #{!important};\\n}","styleUrl":"./dashboard-export-section.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":33},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-py-32-px tw-px-120-px\\">\\n    <div *ngIf=\\"!isImportInProgress\\" class=\\"tw-shadow-app-card tw-rounded-8-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-flex tw-justify-between tw-items-center \\">\\n                <div class=\\"tw-w-4/5\\">\\n                    <div class=\\"tw-flex\\">\\n                        <img class=\\"tw-mt-1-px tw-pr-8-px\\" *ngIf=\\"!isExportInProgress && !exportableAccountingExportIds.length\\" src=\\"assets/icons/tick_dashboard.svg\\">\\n                        <svg-icon-sprite class=\\"tw-mt-1-px tw-pr-8-px\\" *ngIf=\\"(!isExportInProgress && exportableAccountingExportIds.length) || (isExportInProgress)\\" src=\\"arrow_tail\\" height=\\"24px\\" width=\\"24px\\"></svg-icon-sprite>\\n                        <h3 class=\\"tw-text-20-px tw-font-500 tw-text-slightly-normal-text-color\\" *ngIf=\\"!isExportInProgress && !exportableAccountingExportIds.length && !accountingExportSummary\\"> Sit back and relax!</h3>\\n                        <h3 class=\\"tw-text-20-px tw-font-500 tw-text-slightly-normal-text-color\\" *ngIf=\\"isExportInProgress\\"> Exporting {{ processedCount }} of {{ exportableAccountingExportIds.length }} expense{{exportableAccountingExportIds.length > 1 ? \'s\' : \'\'}} to your {{appName}} account</h3>\\n                        <h3 class=\\"tw-text-20-px tw-font-500 tw-text-slightly-normal-text-color\\" *ngIf=\\"!isExportInProgress && exportableAccountingExportIds.length\\"> {{ exportableAccountingExportIds.length }} expense{{exportableAccountingExportIds.length > 1 ? \'s\' : \'\'}} ready to export</h3>\\n                        <h3 class=\\"tw-text-20-px tw-font-500 tw-text-slightly-normal-text-color\\" *ngIf=\\"!isExportInProgress && !exportableAccountingExportIds.length && accountingExportSummary?.successful_accounting_export_count\\">You are all caught up!</h3>\\n                        <img class=\\"tw-ml-4-px\\" src=\\"assets/icons/info_filled.svg\\" pTooltip=\\"All expenses that have reached your export state in {{brandingConfig.brandName}} will be automatically imported and kept ready for export.\\">\\n                    </div>\\n                    <h5 class=\\"tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color tw-pl-34-px tw-pt-8-px\\" *ngIf=\\"!isExportInProgress && !exportableAccountingExportIds.length && !accountingExportSummary\\">No new expenses to export in the configured state of export in {{brandingConfig.brandName}}. Once you start processing payments or closing your expenses, they will be automatically available here.</h5>\\n                    <h5 class=\\"tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color tw-pl-34-px tw-pt-8-px\\" *ngIf=\\"isExportInProgress\\">This may take a few minutes...</h5>\\n                    <h5 class=\\"tw-text-14-px tw-font-400 tw-text-slightly-normal-text-color tw-pl-34-px tw-pt-8-px\\" *ngIf=\\"!isExportInProgress && !exportableAccountingExportIds.length && accountingExportSummary?.successful_accounting_export_count\\">No new expenses to export from the payment processing state in {{brandingConfig.brandName}}.<br>Once you start processing payment for the expenses, they will be automatically available here to export.</h5>\\n                    <div *ngIf=\\"!isExportInProgress && failedExpenseGroupCount !== null && failedExpenseGroupCount > 0\\" fxLayout=\\"row\\" fxFlex=\\"4\\" class=\\"tw-text-14-px tw-font-500 tw-text-slightly-normal-text-color tw-pl-34-px tw-pt-8-px tw-flex\\">\\n                        <h5>{{ exportableAccountingExportIds.length - failedExpenseGroupCount > 0 ? exportableAccountingExportIds.length - failedExpenseGroupCount : 0 }} new expense{{(exportableAccountingExportIds.length - failedExpenseGroupCount) > 1 ? \'s\' : \'\'}}, {{ failedExpenseGroupCount }} previously failed expense{{failedExpenseGroupCount > 1 ? \'s\' : \'\'}}</h5>\\n                    </div>\\n                    <div *ngIf=\\"!isExportInProgress && exportableAccountingExportIds.length && (failedExpenseGroupCount === null || failedExpenseGroupCount === 0)\\" fxLayout=\\"row\\" fxFlex=\\"4\\" class=\\"tw-text-14-px tw-font-500 tw-text-slightly-normal-text-color tw-pl-34-px tw-pt-8-px tw-flex\\">\\n                        <h5>{{ exportableAccountingExportIds.length }} new expense{{(exportableAccountingExportIds.length) > 1 ? \'s\' : \'\'}}, {{ 0 }} previously failed expense</h5>\\n                    </div>\\n                </div>\\n                <div class=\\"tw-flex tw-items-end tw-justify-end\\">\\n                    <div>\\n                        <button type=\\"button\\" class=\\"export-btn tw-float-right tw-flex tw-justify-end tw-items-center tw-text-white tw-text-500 tw-bg-mandatory-field-color tw-rounded-4-px p-button-raised\\" pButton (click)=\\"triggerExport()\\" [ngClass]=\\"!exportableAccountingExportIds.length || isExportInProgress ? \'btn-disabled\' : \'btn-enabled\'\\" [disabled]=\\"isExportInProgress || !exportableAccountingExportIds.length\\">\\n                            <p class=\\"!tw-text-14-px !tw-font-500\\" *ngIf=\\"!isExportInProgress\\">Export\\n                                <i class=\\"tw-pl-8-px tw-pt-2-px !tw-text-12-px pi pi-arrow-right\\"></i>\\n                            </p>\\n                            <p class=\\"!tw-text-14-px !tw-font-500\\" *ngIf=\\"isExportInProgress\\">Exporting\\n                                <i class=\\"tw-pl-8-px tw-pt-2-px !tw-text-12-px pi pi-arrow-right\\"></i>\\n                            </p>\\n                        </button><br>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div  *ngIf=\\"isExportInProgress\\">\\n            <p-progressBar class=\\"!tw-h-6-px\\" [showValue]=\'false\' [mode]=\\"loaderType\\"></p-progressBar>\\n        </div>\\n    </div>\\n    \\n    \x3c!-- Shimmers --\x3e\\n    <div class=\\"tw-shadow-app-card tw-rounded-8-px tw-bg-white\\">\\n        <app-shimmers [isDashboardImportInProgress]=\\"isImportInProgress\\"></app-shimmers>\\n    </div>\\n</div>"},{"name":"DashboardExportSummarySectionComponent","id":"component-DashboardExportSummarySectionComponent-17899b98bc76891d596bec05030170954fa5050002f56c56d7723d9c3326036ba3adb221a468a74eab6302ce853dc04a7e4b86a8d1a90f82ba80451c0038db8d","file":"src/app/shared/components/dashboard/dashboard-export-summary-section/dashboard-export-summary-section.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dashboard-export-summary-section","styleUrls":["./dashboard-export-summary-section.component.scss"],"styles":[],"templateUrl":["./dashboard-export-summary-section.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"accountingExportSummary","deprecated":false,"deprecationMessage":"","line":18,"type":"AccountingExportSummary | null","decorators":[]},{"name":"accountingExportType","deprecated":false,"deprecationMessage":"","line":22,"type":"string[]","decorators":[]},{"name":"appName","deprecated":false,"deprecationMessage":"","line":20,"type":"AppName","decorators":[]},{"name":"exportLogVersion","defaultValue":"\'v2\'","deprecated":false,"deprecationMessage":"","line":24,"type":"\\"v1\\" | \\"v2\\"","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"accountingExports","deprecated":false,"deprecationMessage":"","type":"AccountingExportList[]","optional":false,"description":"","line":28},{"name":"AccountingExportStatus","defaultValue":"AccountingExportStatus","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36},{"name":"exportLogHeader","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":30},{"name":"exportLogSubHeader","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":32},{"name":"filteredAccountingExports","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"AccountingExportList[]","optional":false,"description":"","line":26},{"name":"isExportLogFetchInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":34},{"name":"isExportLogVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":38},{"name":"org_id","defaultValue":"this.userService.getUserProfile().org_id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40,"modifierKind":[123]}],"methodsClass":[{"name":"getAccountingExports","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"AccountingExportStatus","deprecated":false,"deprecationMessage":""},{"name":"lastExportedAt","type":"string | null","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"status","type":"AccountingExportStatus","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"lastExportedAt","type":"string | null","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"getExpenseGroups","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"AccountingExportStatus","deprecated":false,"deprecationMessage":""},{"name":"lastExportedAt","type":"string | null","deprecated":false,"deprecationMessage":"","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"status","type":"AccountingExportStatus","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"lastExportedAt","type":"string | null","deprecated":false,"deprecationMessage":"","optional":true,"tagName":{"text":"param"}}]},{"name":"handleDialogClose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":""},{"name":"setFormattedAccountingExport","args":[{"name":"accountingExports","type":"AccountingExportList[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"accountingExports","type":"AccountingExportList[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupAccountingExports","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""},{"name":"status","type":"AccountingExportStatus","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"status","type":"AccountingExportStatus","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showExportLog","args":[{"name":"status","type":"AccountingExportStatus","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"status","type":"AccountingExportStatus","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { AccountingExportSummary } from \'src/app/core/models/db/accounting-export-summary.model\';\\nimport { AccountingExport, AccountingExportList, AccountingExportModel } from \'src/app/core/models/db/accounting-export.model\';\\nimport { ExpenseGroup, ExpenseGroupResponse } from \'src/app/core/models/db/expense-group.model\';\\nimport { AccountingExportStatus, AppName, TaskLogState } from \'src/app/core/models/enum/enum.model\';\\nimport { SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\nimport { ExportLogService } from \'src/app/core/services/common/export-log.service\';\\nimport { UserService } from \'src/app/core/services/misc/user.service\';\\n\\n@Component({\\n  selector: \'app-dashboard-export-summary-section\',\\n  templateUrl: \'./dashboard-export-summary-section.component.html\',\\n  styleUrls: [\'./dashboard-export-summary-section.component.scss\']\\n})\\nexport class DashboardExportSummarySectionComponent implements OnInit {\\n\\n  @Input() accountingExportSummary: AccountingExportSummary | null;\\n\\n  @Input() appName: AppName;\\n\\n  @Input() accountingExportType: string[];\\n\\n  @Input() exportLogVersion: \'v1\' | \'v2\' = \'v2\';\\n\\n  filteredAccountingExports: AccountingExportList[] = [];\\n\\n  accountingExports: AccountingExportList[];\\n\\n  exportLogHeader: string;\\n\\n  exportLogSubHeader: string;\\n\\n  isExportLogFetchInProgress: boolean;\\n\\n  AccountingExportStatus = AccountingExportStatus;\\n\\n  isExportLogVisible: boolean;\\n\\n  private org_id: string = this.userService.getUserProfile().org_id;\\n\\n  constructor(\\n    private accountingExportService: AccountingExportService,\\n    private exportLogService: ExportLogService,\\n    private userService: UserService\\n  ) { }\\n\\n  handleDialogClose(){\\n    this.isExportLogVisible = false;\\n  }\\n\\n  private setFormattedAccountingExport(accountingExports: AccountingExportList[]): void {\\n    this.filteredAccountingExports = accountingExports;\\n    this.accountingExports = [...this.filteredAccountingExports];\\n  }\\n\\n  private getExpenseGroups(limit: number, offset: number, status: AccountingExportStatus, lastExportedAt?: string | null): void {\\n    this.exportLogService.getExpenseGroups((status as unknown as TaskLogState), limit, offset, null, lastExportedAt).subscribe((accountingExportResponse: ExpenseGroupResponse) => {\\n      const accountingExports: AccountingExportList[] = accountingExportResponse.results.map((accountingExport: ExpenseGroup) =>\\n        AccountingExportModel.parseExpenseGroupAPIResponseToExportLog(accountingExport, this.org_id)\\n      );\\n      this.setFormattedAccountingExport(accountingExports);\\n    });\\n  }\\n\\n  private getAccountingExports(limit: number, offset: number, status: AccountingExportStatus, lastExportedAt?: string | null) {\\n    this.accountingExportService.getAccountingExports(this.accountingExportType, [status], null, limit, offset, null, lastExportedAt).subscribe(accountingExportResponse => {\\n      const accountingExports: AccountingExportList[] = accountingExportResponse.results.map((accountingExport: AccountingExport) =>\\n        AccountingExportModel.parseAPIResponseToExportLog(accountingExport, this.org_id)\\n      );\\n      this.setFormattedAccountingExport(accountingExports);\\n    });\\n  }\\n\\n  private setupAccountingExports(limit: number, offset: number, status: AccountingExportStatus) {\\n    if (this.accountingExportSummary) {\\n      const lastExportedAt = status === AccountingExportStatus.COMPLETE ? this.accountingExportSummary.last_exported_at : null;\\n\\n      if (this.exportLogVersion === \'v1\') {\\n        this.getExpenseGroups(limit, offset, status, lastExportedAt);\\n      } else {\\n        this.getAccountingExports(limit, offset, status, lastExportedAt);\\n      }\\n    }\\n  }\\n\\n  showExportLog(status: AccountingExportStatus) {\\n    this.isExportLogFetchInProgress = true;\\n    this.exportLogHeader = status === AccountingExportStatus.COMPLETE ? \'Successful\' : \'Failed\';\\n    this.exportLogSubHeader = status === AccountingExportStatus.COMPLETE ? \'These expenses have been successfully exported to your \' + this.appName +\'.\' : \'These expenses have failed to export due to some errors. Resolve the errors on your dashboard to and try to re-export them again\';\\n    this.setupAccountingExports(500, 0, status);\\n    this.isExportLogVisible = true;\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".inside-container {\\n    @apply tw-border-r-8-px tw-p-24-px tw-flex-col tw-items-start tw-gap-4;\\n    border: 1px solid var(--grayscale-light-border, #ECECEE);\\n    max-width: auto;\\n}\\n\\n.pointer {\\n    @apply tw-cursor-pointer;\\n}","styleUrl":"./dashboard-export-summary-section.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-px-120-px\\">\\n    <div class=\\"tw-shadow-app-card tw-rounded-8-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n        <div class=\\"tw-flex tw-justify-between tw-items-center tw-p-24-px\\">\\n                <h4 class=\\"tw-font-500 tw-text-18-px\\">Your last export</h4>\\n        </div>\\n        <div class=\\"tw-border-separator tw-border-t-1-px\\">\\n            <div class=\\"tw-p-6 tw-rounded-6-px tw-bg-white\\">\\n                <div class=\\"inside-container tw-p-10 tw-rounded-6-px tw-bg-white\\">\\n                    <div class=\\"tw-flex tw-items-center tw-justify-between\\">\\n                        <div class=\\"tw-flex\\">\\n                                <img src=\\"assets/icons/green-tick.svg\\" alt=\\"Success Icon\\" class=\\"tw-mr-16-px\\">\\n                                <p class=\\"tw-text-14-px tw-font-500 tw-text-slightly-normal-text-color\\">Successful Expenses</p>\\n                                <span class=\\"tw-w-120-px tw-text-14-px tw-font-500 tw-text-right tw-text-faded-text-color\\">\\n                                    {{ accountingExportSummary?.successful_accounting_export_count ? accountingExportSummary?.successful_accounting_export_count : 0 }}\\n                                </span>  \\n                            <a *ngIf=\\"accountingExportSummary?.successful_accounting_export_count\\" (click)=\\"showExportLog(AccountingExportStatus.COMPLETE)\\" class=\\"tw-ml-20-px tw-text-14-px tw-font-500 tw-text-pink pointer\\">View</a>\\n                        </div>\\n                        <div class=\\"tw-flex tw-flex-col\\">\\n                            <span class=\\"tw-w-260-px tw-text-left\\">\\n                                <span class=\\"tw-text-14-px tw-text-faded-text-color tw-font-400\\">Last Export at: </span>\\n                                <span class=\\"tw-text-14-px tw-font-500\\">{{ accountingExportSummary ? (accountingExportSummary.last_exported_at | date: \'h:mm a,\') : \'None\' }}\\n                                {{ accountingExportSummary ? (accountingExportSummary.last_exported_at | date: \'dd MMM yyyy\') : \'\' }}</span>\\n                            </span>                              \\n                        </div>\\n                    </div>\\n                    <div class=\\"tw-flex tw-items-center tw-mt-8-px tw-justify-between\\">\\n                        <div class=\\"tw-flex\\">\\n                            <img src=\\"assets/icons/red-error.svg\\" alt=\\"Error Icon\\" class=\\"tw-mr-16-px\\">\\n                            <p class=\\"tw-text-14-px tw-font-500 tw-text-slightly-normal-text-color\\">Failed Expenses</p>\\n                            <span class=\\"tw-w-150-px tw-text-right tw-text-14-px tw-font-500 tw-text-faded-text-color\\">\\n                                {{ accountingExportSummary?.failed_accounting_export_count ? accountingExportSummary?.failed_accounting_export_count : 0 }}\\n                            </span>\\n                            <a *ngIf=\\"accountingExportSummary?.failed_accounting_export_count\\" (click)=\\"showExportLog(AccountingExportStatus.FAILED)\\" class=\\"tw-ml-20-px tw-text-14-px tw-font-500 tw-text-pink pointer\\">View</a>\\n                        </div>\\n                        <div class=\\"tw-flex tw-flex-col\\">\\n                            <span class=\\"tw-w-260-px tw-text-left\\" *ngIf=\\"accountingExportSummary?.next_export_at\\">\\n                                <span class=\\"tw-text-14-px tw-text-faded-text-color tw-font-400\\">Next Export at: </span>\\n                                <span class=\\"tw-text-14-px tw-font-500\\">{{ accountingExportSummary?.next_export_at ? (accountingExportSummary?.next_export_at | date: \'h:mm a,\') : \'None\' }}\\n                                {{ accountingExportSummary ? (accountingExportSummary.next_export_at | date: \'dd MMM yyyy\') : \'\' }}</span>\\n                            </span> \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div>\\n    <app-dashboard-export-log-dialog (hideExportLogDialog)=\\"handleDialogClose()\\" [appName]=\\"appName\\" [isExportLogVisible]=\\"isExportLogVisible\\" [accountingExports]=\\"filteredAccountingExports\\" [isExportLogFetchInProgress]=\\"isExportLogFetchInProgress\\" [exportLogHeader]=\\"exportLogHeader\\" [exportLogSubHeader]=\\"exportLogSubHeader\\"></app-dashboard-export-log-dialog>\\n</div>"},{"name":"DashboardIntacctErrorsComponent","id":"component-DashboardIntacctErrorsComponent-957f028544af32cb85f3b8d2cd67a36d4e858df9bb89d1b04d0aa7dea59400af0a6a1270d1c618affd9780e7f1bec76c217fea7faf49114ac2c5dab0a1b2f701","file":"src/app/shared/components/si/helper/dashboard-intacct-errors/dashboard-intacct-errors.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dashboard-intacct-errors","styleUrls":["./dashboard-intacct-errors.component.scss"],"styles":[],"templateUrl":["./dashboard-intacct-errors.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"intacctErrorExpenses","deprecated":false,"deprecationMessage":"","line":13,"type":"Expense[]","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""},{"name":"openUrl","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""},{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { ExpenseGroup } from \'src/app/core/models/si/db/expense-group.model\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-dashboard-intacct-errors\',\\n  templateUrl: \'./dashboard-intacct-errors.component.html\',\\n  styleUrls: [\'./dashboard-intacct-errors.component.scss\']\\n})\\nexport class DashboardIntacctErrorsComponent implements OnInit {\\n\\n  @Input() intacctErrorExpenses: Expense[];\\n\\n  constructor() { }\\n\\n  openUrl(event: Event, expense_id: string) {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}`;\\n    window.open(url, \'_blank\');\\n    event.stopPropagation();\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./dashboard-intacct-errors.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":13},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n      <p-table [value]=\\"intacctErrorExpenses\\" [tableStyle]=\\"{ \'min-width\': \'20rem\' }\\">\\n        <ng-template pTemplate=\\"header\\">\\n            <tr>\\n                <th>Expense ID</th>\\n                <th>Employee Name and ID</th>\\n                <th>Expense Type</th>\\n            </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\"body\\" let-rowData let-rowIndex=\\"rowIndex\\">\\n            <tr>\\n                <td class=\\"tw-cursor-pointer tw-underline\\" (click)=\\"openUrl($event, rowData.expense_id)\\">\\n                    {{rowData.expense_number}}\\n                </td>\\n                <td>\\n                    <h4>\\n                        {{rowData.employee_name}}\\n                    </h4>\\n                    <h5 class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">\\n                        {{rowData.employee_email}}\\n                    </h5>\\n                </td>\\n                <td>\\n                    <h4>\\n                        {{rowData.fund_source === \'PERSONAL\' ? \'Reimbursable\' : \'Corporate Card\'}}\\n                    </h4>\\n                </td>\\n            </tr>\\n        </ng-template>\\n    </p-table>\\n</div>\\n"},{"name":"DashboardMappingResolveComponent","id":"component-DashboardMappingResolveComponent-60128bfcb77ffefe61dfe676749e8b2a01777b141ef07383e5e8be2e0922ce23426af124d7267628510da962d83a9a2033b469fce0adf45acb573d323678dc4a","file":"src/app/shared/components/si/helper/dashboard-mapping-resolve/dashboard-mapping-resolve.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dashboard-mapping-resolve","styleUrls":["./dashboard-mapping-resolve.component.scss"],"styles":[],"templateUrl":["./dashboard-mapping-resolve.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"employeeFieldMapping","deprecated":false,"deprecationMessage":"","line":27,"type":"FyleField","decorators":[]},{"name":"groupedError","deprecated":false,"deprecationMessage":"","line":25,"type":"Error[]","decorators":[]},{"name":"isDialogVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","line":23,"type":"boolean","decorators":[]},{"name":"mappingType","deprecated":false,"deprecationMessage":"","line":21,"type":"IntacctErrorType","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"fyleEmployeeOptions","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":32},{"name":"intacctErrorType","deprecated":false,"deprecationMessage":"","type":"IntacctErrorType","optional":false,"description":"","line":29},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":19},{"name":"sageIntacctAccounts","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":35},{"name":"sageIntacctExpenseTypes","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":37}],"methodsClass":[{"name":"getCategoryDestinationType","args":[],"optional":false,"returnType":"IntacctCategoryDestination | SageIntacctField","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":""},{"name":"getCategoryMappingOptions","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":""},{"name":"getDestinationAttributeType","args":[],"optional":false,"returnType":"[]","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getEmployeeAttributeType","args":[],"optional":false,"returnType":"FyleField","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":""},{"name":"saveCategoryMapping","args":[{"name":"selectedRow","type":"ExpenseAttribute","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedRow","type":"ExpenseAttribute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"saveEmployeeMapping","args":[{"name":"selectedRow","type":"ExpenseAttribute","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedRow","type":"ExpenseAttribute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":""},{"name":"tableDropdownWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { FyleField, IntacctCategoryDestination, IntacctErrorType, SageIntacctField, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { CategoryMappingPost } from \'src/app/core/models/si/db/category-mapping.model\';\\nimport { IntacctDestinationAttribute } from \'src/app/core/models/si/db/destination-attribute.model\';\\nimport { EmployeeMappingPost } from \'src/app/core/models/si/db/employee-mapping.model\';\\nimport { Error } from \'src/app/core/models/si/db/error.model\';\\nimport { ExpenseAttribute } from \'src/app/core/models/si/db/expense-attribute.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { SiWorkspaceService } from \'src/app/core/services/si/si-core/si-workspace.service\';\\n\\n@Component({\\n  selector: \'app-dashboard-mapping-resolve\',\\n  templateUrl: \'./dashboard-mapping-resolve.component.html\',\\n  styleUrls: [\'./dashboard-mapping-resolve.component.scss\']\\n})\\nexport class DashboardMappingResolveComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  @Input() mappingType: IntacctErrorType;\\n\\n  @Input() isDialogVisible: boolean = false;\\n\\n  @Input() groupedError: Error[];\\n\\n  @Input() employeeFieldMapping: FyleField;\\n\\n  intacctErrorType: IntacctErrorType;\\n\\n  // Employee Mapping\\n  fyleEmployeeOptions: IntacctDestinationAttribute[];\\n\\n  // Category Mapping\\n  sageIntacctAccounts: IntacctDestinationAttribute[];\\n\\n  sageIntacctExpenseTypes: IntacctDestinationAttribute[];\\n\\n  constructor(\\n    private mappingService: SiMappingsService,\\n    private workspaceService: SiWorkspaceService,\\n    private toastService: IntegrationsToastService\\n  ) { }\\n\\n  tableDropdownWidth() {\\n    const element = document.querySelector(\'.p-dropdown-panel.p-component.ng-star-inserted\') as HTMLElement;\\n    if (element) {\\n      element.style.width = \'300px\';\\n    }\\n  }\\n\\n  saveEmployeeMapping(selectedRow: ExpenseAttribute, event: any): void {\\n    const employeeMapping: EmployeeMappingPost = {\\n      source_employee: {\\n        id: selectedRow.id\\n      },\\n      destination_vendor: {\\n        id: this.employeeFieldMapping === FyleField.VENDOR ? event.value.id : null\\n      },\\n      destination_employee: {\\n        id: this.employeeFieldMapping === FyleField.EMPLOYEE ? event.value.id : null\\n      },\\n      destination_card_account: {\\n        id: null\\n      },\\n      workspace: parseInt(this.workspaceService.getWorkspaceId())\\n    };\\n    this.mappingService.postEmployeeMappings(employeeMapping).subscribe(() => {\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Employee Mapping saved successfully\');\\n    }, () => {\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Something went wrong\');\\n    });\\n  }\\n\\n  getEmployeeAttributeType(): FyleField {\\n    if (this.employeeFieldMapping === FyleField.EMPLOYEE) {\\n      return FyleField.EMPLOYEE;\\n    }\\n\\n    return FyleField.VENDOR;\\n  }\\n\\n  // Resolve Category Mapping\\n  getCategoryMappingOptions() {\\n    if (this.employeeFieldMapping === FyleField.EMPLOYEE){\\n      return this.sageIntacctExpenseTypes;\\n    }\\n    return this.sageIntacctAccounts;\\n  }\\n\\n  saveCategoryMapping(selectedRow: ExpenseAttribute, event: any) {\\n    const sourceId = selectedRow.id;\\n\\n    const categoryMappingsPayload: CategoryMappingPost = {\\n      source_category: {\\n        id: sourceId\\n      },\\n      destination_account: {\\n        id: this.employeeFieldMapping === FyleField.VENDOR ? event.value.id : null\\n      },\\n      destination_expense_head: {\\n        id: this.employeeFieldMapping === FyleField.EMPLOYEE ? event.value.id : null\\n      },\\n      workspace: parseInt(this.workspaceService.getWorkspaceId())\\n    };\\n\\n    this.mappingService.postCategoryMappings(categoryMappingsPayload).subscribe(() => {\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Category Mapping saved successfully\');\\n    }, () => {\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Something went wrong\');\\n    });\\n  }\\n\\n  getCategoryDestinationType(): IntacctCategoryDestination | SageIntacctField {\\n    if (this.employeeFieldMapping === FyleField.EMPLOYEE) {\\n      return IntacctCategoryDestination.EXPENSE_TYPE;\\n    }\\n\\n    return SageIntacctField.ACCOUNT;\\n  }\\n\\n  private getDestinationAttributeType(): (FyleField | IntacctCategoryDestination | SageIntacctField)[] {\\n    const attributeType = [];\\n    if (this.mappingType === IntacctErrorType.EMPLOYEE_MAPPING) {\\n      if (this.employeeFieldMapping === FyleField.VENDOR) {\\n        attributeType.push(FyleField.VENDOR);\\n      } else {\\n        attributeType.push(FyleField.EMPLOYEE);\\n      }\\n    } else if (this.mappingType === IntacctErrorType.CATEGORY_MAPPING) {\\n      if (this.employeeFieldMapping === FyleField.VENDOR) {\\n        attributeType.push(SageIntacctField.ACCOUNT);\\n      } else {\\n        attributeType.push(IntacctCategoryDestination.EXPENSE_TYPE);\\n      }\\n    }\\n\\n    return attributeType;\\n  }\\n\\n  setupPage() {\\n    const attributeType = this.getDestinationAttributeType();\\n    this.mappingService.getGroupedDestinationAttributes(attributeType).subscribe((response) => {\\n      this.sageIntacctExpenseTypes = response.EXPENSE_TYPE;\\n      this.sageIntacctAccounts = response.ACCOUNT;\\n      this.fyleEmployeeOptions = this.getEmployeeAttributeType() === FyleField.EMPLOYEE ? response.EMPLOYEE : response.VENDOR;\\n      this.isLoading = false;\\n    });\\n }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./dashboard-mapping-resolve.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""}],"line":37,"jsdoctags":[{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <div *ngIf=\\"mappingType===\'CATEGORY_MAPPING\'\\">\\n      <p-table [value]=\\"groupedError\\">\\n        <ng-template pTemplate=\\"header\\">\\n            <tr>\\n                <th>Category</th>\\n                <th>{{getCategoryDestinationType() | snakeCaseToSpaceCase | titlecase}}</th>\\n            </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\"body\\" let-error let-rowIndex=\\"rowIndex\\">\\n            <tr *ngIf=\\"!isLoading\\">\\n                <td>{{ error.expense_attribute.value }}</td>\\n                <td>\\n                    <p-dropdown appendTo=\\"body\\" (onShow)=\\"tableDropdownWidth()\\"\\n                    [options]=\\"getCategoryMappingOptions()\\" \\n                    optionLabel=\\"value\\" \\n                    placeholder=\\"Select an Option\\" \\n                    (onChange)=\\"saveCategoryMapping(error.expense_attribute, $event);\\"\\n                    [filter]=\\"true\\"\\n                    filterBy=\\"value\\">\\n                    </p-dropdown> \\n                </td>\\n            </tr>\\n            <ng-container *ngTemplateOutlet=\\"shimmers\\"></ng-container>\\n        </ng-template>\\n    </p-table>\\n    </div>\\n    <div *ngIf=\\"mappingType===\'EMPLOYEE_MAPPING\'\\">\\n      <p-table [value]=\\"groupedError\\">\\n        <ng-template pTemplate=\\"header\\">\\n            <tr>\\n            <th>Employee Email</th>\\n            <th>Sage Intacct {{getEmployeeAttributeType() | titlecase}}</th>\\n            </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\"body\\" let-error>\\n            <tr *ngIf=\\"!isLoading\\">\\n                <td>{{ error.expense_attribute.value }}</td>\\n                <td>\\n                    <p-dropdown appendTo=\\"body\\" (onShow)=\\"tableDropdownWidth()\\"\\n                    [options]=\\"fyleEmployeeOptions\\" \\n                    optionLabel=\\"value\\" \\n                    placeholder=\\"Select an Option\\" \\n                    (onChange)=\\"saveEmployeeMapping(error.expense_attribute, $event);\\"\\n                    [filter]=\\"true\\"\\n                    filterBy=\\"value\\">\\n                    </p-dropdown>                \\n                </td>\\n            </tr>\\n            <ng-container *ngTemplateOutlet=\\"shimmers\\"></ng-container>\\n        </ng-template>\\n        </p-table>\\n    </div>\\n</div>\\n\\n<ng-template #shimmers>\\n    <tr *ngFor=\\"let _ of [0,1,2,3,4,5,6]\\">\\n        <td *ngIf=\\"isLoading\\"><p-skeleton width=\\"150px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n        <td *ngIf=\\"isLoading\\"><p-skeleton width=\\"250px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n    </tr>\\n</ng-template>\\n"},{"name":"DashboardMenuComponent","id":"component-DashboardMenuComponent-0df888e6a6c046eb13c443ea5c1f0c576f7218318a2b04705c7fd092b26b44eac24db477c00c253a49dc17ea40b05f336c272b83a3e8d700b5d26161366af7d3","file":"src/app/shared/components/core/dashboard-menu/dashboard-menu.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dashboard-menu","styleUrls":["./dashboard-menu.component.scss"],"styles":[],"templateUrl":["./dashboard-menu.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":27},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31,"modifierKind":[148]},{"name":"modules","defaultValue":"[\\n    {label: \'Dashboard\', routerLink: \'/integrations/intacct/main/dashboard\'},\\n    {label: \'Export Log\', routerLink: \'/integrations/intacct/main/export_log\'},\\n    {label: \'Mapping\', routerLink: \'/integrations/intacct/main/mapping\'},\\n    {label: \'Configuration\', routerLink: \'/integrations/intacct/main/configuration\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":20},{"name":"moreDropdown","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""},{"name":"redirectToOldApp","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { EventsService } from \'src/app/core/services/common/events.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { DashboardService } from \'src/app/core/services/si/si-core/dashboard.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-dashboard-menu\',\\n  templateUrl: \'./dashboard-menu.component.html\',\\n  styleUrls: [\'./dashboard-menu.component.scss\']\\n})\\nexport class DashboardMenuComponent implements OnInit {\\n\\n  modules: MenuItem[] = [\\n    {label: \'Dashboard\', routerLink: \'/integrations/intacct/main/dashboard\'},\\n    {label: \'Export Log\', routerLink: \'/integrations/intacct/main/export_log\'},\\n    {label: \'Mapping\', routerLink: \'/integrations/intacct/main/mapping\'},\\n    {label: \'Configuration\', routerLink: \'/integrations/intacct/main/configuration\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  moreDropdown: null;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private dashboardService: DashboardService,\\n    private eventsService: EventsService,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private mappingsService: SiMappingsService,\\n    private windowService: WindowService\\n  ) { }\\n\\n  redirectToOldApp(): void {\\n    this.moreDropdown = null;\\n    this.eventsService.redirectToOldIntacctApp.subscribe((redirectUri: string) => {\\n      this.windowService.openInNewTab(redirectUri);\\n    });\\n\\n    const payload = {\\n      callbackUrl: environment.si_callback_url,\\n      clientId: environment.si_client_id\\n    };\\n\\n    this.eventsService.postEvent(payload);\\n  }\\n\\n  refreshDimensions() {\\n    this.mappingsService.refreshSageIntacctDimensions().subscribe();\\n    this.mappingsService.refreshFyleDimensions().subscribe();\\n    this.dashboardService.syncExpensesFromFyle().subscribe();\\n    this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Refreshing data dimensions from Sage Intacct...\');\\n  }\\n\\n  ngOnInit(): void {\\n    this.activeModule = this.modules[0];\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-tabmenu .p-tabmenu-nav {\\n    @apply tw-border-b-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\\n    @apply tw-border-white;\\n}\\n\\n:host ::ng-deep .p-dropdown {\\n    @apply tw-w-80-px tw-h-32-px #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown-label {\\n    @apply tw-flex tw-flex-none tw-w-auto #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n    @apply tw-w-28-px tw-text-sub-text-color #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-pt-4-px tw-pl-12-px tw-pr-0 tw-pb-0 tw-text-slightly-normal-text-color #{!important};\\n}\\n","styleUrl":"./dashboard-menu.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":""},{"name":"eventsService","type":"EventsService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"mappingsService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":31,"jsdoctags":[{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"eventsService","type":"EventsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingsService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-border-gray-300 tw-rounded tw-flex tw-items-center tw-justify-between\\">\\n    <p-tabMenu [model]=\\"modules\\" [activeItem]=\\"activeModule\\" ></p-tabMenu>\\n\\n    <div class=\\"tw-flex tw-items-center\\">\\n        <button [pTooltip]=\\"\'The integration will import all the newly updated Sage Intacct dimensions and \' + brandingConfig.brandName + \' expenses in the configured state of export\'\\"\\n            (click)=\\"refreshDimensions()\\"\\n            class=\\"tw-h-32-px tw-w-80-px tw-mr-12-px tw-flex tw-items-center focus:tw-ring-0 tw-justify-center tw-rounded tw-bg-white tw-text-black tw-border tw-border-gray-300 focus:tw-outline-none focus:tw-ring-opacity-50 active:tw-scale-95 transition-transform\\">\\n            <img src=\\"assets/icons/stepper/sync.svg\\">\\n            <span class=\\"tw-text-14-px tw-pl-8-px\\">\\n                Sync\\n            </span>\\n        </button>\\n\\n        \x3c!-- <p-dropdown [(ngModel)]=\\"moreDropdown\\" (onChange)=\\"redirectToOldApp()\\" appendTo=\\"body\\" class=\\"tw-mr-26-px\\" [options]=\\"[\'Switch to Old View\']\\" placeholder=\\"More\\">\\n            <ng-template let-option pTemplate=\\"item\\">\\n                <div class=\\"tw-flex tw-justify-center\\">\\n                    <svg-icon-sprite src=\\"open-in-new-tab\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-pt-4-px tw-pr-8-px tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n                    <span>{{option}}</span>\\n                </div>\\n              </ng-template>\\n        </p-dropdown> --\x3e\\n    </div>\\n</div>\\n"},{"name":"DropdownComponent","id":"component-DropdownComponent-1b0e0c1a6244214631288d50c4bf45d3dd4e2c08c35074c72f9ee815ef2f37fb199f84f916b48f11317c9292725ad61f8abf385bf59a665652e0d156a9d18f54","file":"src/app/shared/components/input/dropdown/dropdown.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-dropdown","styleUrls":["./dropdown.component.scss"],"styles":[],"templateUrl":["./dropdown.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"additionalClasses","deprecated":false,"deprecationMessage":"","line":39,"type":"string","decorators":[]},{"name":"displayKey","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe key in the option objects used to display the text in the\\ndropdown options.\\n","description":"<p>The key in the option objects used to display the text in the\\ndropdown options.</p>\\n","line":37,"type":"string","decorators":[]},{"name":"form","defaultValue":"new FormGroup({number: new FormControl(3)})","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe form group that this dropdown is a part of.\\n","description":"<p>The form group that this dropdown is a part of.</p>\\n","line":25,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe name of the form control within the FormGroup that this\\ndropdown is associated with.\\n","description":"<p>The name of the form control within the FormGroup that this\\ndropdown is associated with.</p>\\n","line":31,"type":"string","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe options that the dropdown will display. Each option should\\ncontain an object with keys corresponding to `displayKey`.\\n","description":"<p>The options that the dropdown will display. Each option should\\ncontain an object with keys corresponding to <code>displayKey</code>.</p>\\n","line":15,"type":"any[]","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nThe placeholder text to display when no option is selected.\\n","description":"<p>The placeholder text to display when no option is selected.</p>\\n","line":20,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { FormControl, FormGroup } from \'@angular/forms\';\\n\\n@Component({\\n  selector: \'app-dropdown\',\\n  templateUrl: \'./dropdown.component.html\',\\n  styleUrls: [\'./dropdown.component.scss\']\\n})\\nexport class DropdownComponent {\\n\\n  /**\\n   * The options that the dropdown will display. Each option should\\n   * contain an object with keys corresponding to `displayKey`.\\n   */\\n  @Input() options: any[];\\n\\n  /**\\n   * The placeholder text to display when no option is selected.\\n   */\\n  @Input() placeholder: string;\\n\\n  /**\\n   * The form group that this dropdown is a part of.\\n   */\\n  @Input() form: FormGroup = new FormGroup({number: new FormControl(3)});\\n\\n  /**\\n   * The name of the form control within the FormGroup that this\\n   * dropdown is associated with.\\n   */\\n  @Input() formControllerName: string;\\n\\n  /**\\n   * The key in the option objects used to display the text in the\\n   * dropdown options.\\n   */\\n  @Input() displayKey: string;\\n\\n  @Input() additionalClasses: string;\\n\\n  constructor() { }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .dropdown-time-alone .p-dropdown {\\n    @apply tw-w-150-px #{!important};\\n}\\n\\n:host ::ng-deep .dropdown-time .p-dropdown {\\n    @apply tw-w-120-px #{!important};\\n}\\n\\n:host ::ng-deep .dropdown-monthy .p-dropdown {\\n    @apply lg:tw-w-176-px md:tw-w-120-px #{!important};\\n}\\n\\n:host ::ng-deep .error-box .p-dropdown {\\n    @apply tw-border-alert-toast #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-dropdown {\\n    @apply tw-border-box-color #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-dropdown.p-focus {\\n    @apply tw-border-slightly-normal-text-color #{!important};\\n}\\n\\n:host ::ng-deep  .dropdown-size-schedule .p-dropdown {\\n    @apply tw-w-70-px #{!important};\\n}\\n\\n:host ::ng-deep  .dropdown-size-schedule .p-disabled, .p-component:disabled {\\n    @apply tw-opacity-100;\\n}\\n\\n.sub-text {\\n    @apply tw-text-faded-text-color tw-text-12-px ;\\n}\\n\\n:host ::ng-deep .selectedItem .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n\\n:host ::ng-deep .dropdown-size-schedule .selectedItem  .p-dropdown-trigger {\\n    @apply tw-visible #{!important};\\n}\\n\\n:host ::ng-deep .hide-chevron .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n","styleUrl":"./dropdown.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":39},"extends":[],"templateData":"<form [formGroup]=\\"form\\">\\n    <p-dropdown\\n        appendTo=\\"body\\"\\n        [ngClass]=\\"additionalClasses ? additionalClasses : \'\'\\"\\n        [placeholder]=\\"placeholder\\"\\n        [options]=\\"options\\"\\n        [formControlName]=\\"formControllerName\\">\\n        <ng-template pTemplate=\\"item\\" let-item>\\n            <div\\n                #textElement\\n                class=\\"tw-flex tw-justify-between tw-items-center\\"\\n                [ngStyle]=\\"{\'white-space\': \'nowrap\', \'overflow\': \'hidden\', \'text-overflow\': \'ellipsis\', \'max-width\': \'16rem\'}\\"\\n                [pTooltip]=\\"textElement.offsetWidth < textElement.scrollWidth ? item[displayKey] : null\\"\\n                tooltipPosition=\\"top\\">\\n                {{ item[displayKey] }}\\n            </div>\\n        </ng-template>\\n\\n        <ng-template pTemplate=\\"selectedItem\\" let-item>\\n            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                <span>\\n                    {{ item[displayKey] }}\\n                </span>\\n            </div>\\n        </ng-template>\\n    </p-dropdown>\\n</form>\\n"},{"name":"EmailMultiSelectFieldComponent","id":"component-EmailMultiSelectFieldComponent-d141ffad32985c05fbb626070d5d90120739471f7f844f86be9b21943c7d0c8fbefaad9dede02dd61bfdc3b795966e87e06844839c6e5a9776a17a9cc750ea1e","file":"src/app/shared/components/configuration/email-multi-select-field/email-multi-select-field.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-email-multi-select-field","styleUrls":["./email-multi-select-field.component.scss"],"styles":[],"templateUrl":["./email-multi-select-field.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"customErrorMessage","deprecated":false,"deprecationMessage":"","line":38,"type":"string","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":22,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","line":32,"type":"string","decorators":[]},{"name":"iconPath","deprecated":false,"deprecationMessage":"","line":24,"type":"string","decorators":[]},{"name":"isCloneSettingView","deprecated":false,"deprecationMessage":"","line":40,"type":"boolean","decorators":[]},{"name":"isFieldMandatory","deprecated":false,"deprecationMessage":"","line":34,"type":"boolean","decorators":[]},{"name":"label","deprecated":false,"deprecationMessage":"","line":26,"type":"string","decorators":[]},{"name":"mandatoryErrorListName","deprecated":false,"deprecationMessage":"","line":36,"type":"string","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":20,"type":"EmailOptions[]","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[]},{"name":"subLabel","deprecated":false,"deprecationMessage":"","line":28,"type":"string","decorators":[]}],"outputsClass":[{"name":"updateConfiguration","defaultValue":"new EventEmitter<BambooHRConfigurationPost>()","deprecated":false,"deprecationMessage":"","line":47,"type":"EventEmitter"}],"propertiesClass":[{"name":"addEmailForm","defaultValue":"this.formBuilder.group({\\n    email: [null, Validators.compose([Validators.email, Validators.required])],\\n    name: [null, Validators.required]\\n  })","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":42},{"name":"emails","deprecated":false,"deprecationMessage":"","type":"EmailOptions[]","optional":false,"description":"","line":51},{"name":"selectedEmail","deprecated":false,"deprecationMessage":"","type":"string | null","optional":false,"description":"","line":18},{"name":"showDialog","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":49}],"methodsClass":[{"name":"addEmail","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":""},{"name":"assignSelectedEmail","args":[{"name":"emails","type":"EmailOptions[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"emails","type":"EmailOptions[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"clearSearch","args":[{"name":"options","type":"DropdownFilterOptions","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"options","type":"DropdownFilterOptions","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"closeModel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":""},{"name":"createEmailAdditionWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getEmailOptions","args":[{"name":"additionalEmails","type":"EmailOptions[]","deprecated":false,"deprecationMessage":""},{"name":"adminEmails","type":"EmailOptions[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"EmailOptions[]","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"additionalEmails","type":"EmailOptions[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"adminEmails","type":"EmailOptions[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isOverflowing","args":[{"name":"element","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"element","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":""},{"name":"openDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":""},{"name":"removeEmail","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":70,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { DropdownFilterOptions } from \'primeng/dropdown\';\\nimport { BambooHRConfigurationPost } from \'src/app/core/models/bamboo-hr/bamboo-hr.model\';\\nimport { ClickEvent, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { EmailOptions } from \'src/app/core/models/qbd/qbd-configuration/advanced-setting.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { EmailOption } from \'src/app/core/models/si/si-configuration/advanced-settings.model\';\\n\\n@Component({\\n  selector: \'app-email-multi-select-field\',\\n  templateUrl: \'./email-multi-select-field.component.html\',\\n  styleUrls: [\'./email-multi-select-field.component.scss\']\\n})\\nexport class EmailMultiSelectFieldComponent implements OnInit {\\n\\n  selectedEmail: string | null;\\n\\n  @Input() options: EmailOptions[];\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() iconPath: string;\\n\\n  @Input() label: string;\\n\\n  @Input() subLabel: string;\\n\\n  @Input() placeholder: string;\\n\\n  @Input() formControllerName: string;\\n\\n  @Input() isFieldMandatory: boolean;\\n\\n  @Input() mandatoryErrorListName: string;\\n\\n  @Input() customErrorMessage: string;\\n\\n  @Input() isCloneSettingView: boolean;\\n\\n  addEmailForm: FormGroup = this.formBuilder.group({\\n    email: [null, Validators.compose([Validators.email, Validators.required])],\\n    name: [null, Validators.required]\\n  });\\n\\n  @Output() updateConfiguration = new EventEmitter<BambooHRConfigurationPost>();\\n\\n  showDialog: boolean;\\n\\n  emails: EmailOptions[];\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private trackingService: TrackingService,\\n    private toastService: IntegrationsToastService\\n  ) { }\\n\\n  isOverflowing(element: any): boolean {\\n    return element.offsetWidth < element.scrollWidth;\\n  }\\n\\n  clearSearch(options: DropdownFilterOptions): void {\\n    if (options.reset) {\\n      options.reset();\\n    }\\n    this.form.controls.search.patchValue(null);\\n  }\\n\\n  removeEmail(): void {\\n    const selectedEmails = this.form.value.email;\\n    selectedEmails.splice(0, 1);\\n\\n    this.form.controls.email.patchValue(selectedEmails);\\n    this.selectedEmail = this.form.value.email.length ? this.form.value.email[0].email : null;\\n  }\\n\\n  addEmail(): void {\\n    this.trackingService.onClickEvent(ClickEvent.ADD_EMAIL_MANUALLY);\\n    const selectedEmails = this.form.value.email;\\n    selectedEmails.push(this.addEmailForm.value);\\n    this.emails.push(this.addEmailForm.value);\\n    this.assignSelectedEmail(selectedEmails);\\n    this.form.controls.email.patchValue(selectedEmails);\\n    if (this.form.controls.additionalEmails) {\\n      const additionalEmails = this.form.controls.additionalEmails.value;\\n      additionalEmails.push(this.addEmailForm.value);\\n      this.form.controls.additionalEmails.patchValue(additionalEmails);\\n    }\\n    this.addEmailForm.reset();\\n    this.showDialog = false;\\n    this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Email address saved successfully\');\\n  }\\n\\n  private assignSelectedEmail(emails: EmailOptions[]): void {\\n    if (emails.length) {\\n      this.selectedEmail = emails[0].email;\\n    } else {\\n      this.selectedEmail = null;\\n    }\\n  }\\n\\n  private createEmailAdditionWatcher(): void {\\n    this.assignSelectedEmail(this.form.value.email);\\n    this.form.controls.email.valueChanges.subscribe((emails: EmailOptions[]) => {\\n      this.assignSelectedEmail(emails);\\n    });\\n  }\\n\\n  private getEmailOptions(additionalEmails: EmailOptions[], adminEmails: EmailOptions[]): EmailOptions[] {\\n    return additionalEmails.concat(adminEmails).filter((email: EmailOptions, index: number, self: EmailOptions[]) => {\\n      return index === self.findIndex((e: EmailOptions) => {\\n        return e.email === email.email;\\n      });\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    this.assignSelectedEmail(this.form.value.email);\\n    this.emails = this.getEmailOptions(this.form.value.email, this.options);\\n    this.createEmailAdditionWatcher();\\n  }\\n\\n  openDialog(): void {\\n    this.showDialog = true;\\n  }\\n\\n  closeModel() {\\n    this.addEmailForm.reset();\\n    this.showDialog = false;\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-multiselect.p-multiselect-chip .p-multiselect-token {\\n    @apply tw-px-3 tw-py-1 tw-text-slightly-normal-text-color tw-bg-disabled-bg-color tw-rounded-xl #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-panel {\\n    @apply tw-w-300-px #{!important};\\n}\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-items {\\n    @apply tw-py-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-label {\\n    @apply tw-z-1 tw-w-270-px #{!important};      \\n}\\n\\n:host ::ng-deep .error-box .p-multiselect, :host ::ng-deep .error-box {\\n    @apply tw-border-alert-toast #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-multiselect, :host ::ng-deep .normal-box {\\n    @apply tw-border-box-color #{!important};\\n}\\n\\n:host ::ng-deep .normal-box .p-multiselect.p-focus {\\n    @apply tw-border-slightly-normal-text-color #{!important};\\n}\\n\\n.cancel-btn {\\n    @apply tw-px-24-px tw-py-12-px tw-mr-10-px tw-border tw-border-box-color tw-bg-white tw-rounded-4-px #{!important};\\n}\\n\\n.save-btn {\\n    @apply tw-text-white tw-px-24-px tw-py-12-px tw-bg-mandatory-field-color tw-rounded-4-px #{!important};\\n}\\n\\n:host ::ng-deep .p-button {\\n    @apply tw-w-fit #{!important};\\n}\\n\\n:host ::ng-deep .normal-box, :host ::ng-deep .error-box{\\n    @apply tw-w-full #{!important};\\n}\\n","styleUrl":"./email-multi-select-field.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""}],"line":51,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div [formGroup]=\\"form\\" [ngClass]=\\"!isCloneSettingView ? \'tw-p-24-px\': \'\'\\" class=\\"tw-flex tw-flex-row tw-justify-between\\">\\n    <div *ngIf=\\"!isCloneSettingView\\" class=\\"tw-w-3/5 tw-flex tw-items-start\\">\\n        <div [ngClass]=\\"[iconPath ? \'tw-pr-20-px tw-mt-4-px\' : \'tw-pr-40-px\']\\">\\n            <svg-icon-sprite *ngIf=\\"iconPath\\" src=\\"{{iconPath}}\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n        </div>\\n        <div>\\n            <h5 class=\\"tw-text-14-px !tw-font-500\\">{{ label }}<app-mandatory-field *ngIf=\\"isFieldMandatory\\"></app-mandatory-field></h5>\\n            <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\" [innerHTML]=\\"subLabel\\"></h5>\\n        </div>\\n    </div>\\n    <div class=\\"tw-pl-34-px\\">\\n        <p-multiSelect [options]=\\"emails\\" styleClass=\\"tw-z-1\\" [formControlName]=\\"formControllerName\\" [defaultLabel]=\\"placeholder\\" optionLabel=\\"email\\" class=\\"tw-text-sub-text-color\\"\\n\\t    display=\\"chip\\" [filter]=\\"true\\" [filterBy]=\\"\'email,name\'\\" [ngClass]=\\"[form.controls[formControllerName].invalid && form.controls[formControllerName].touched ? \'error-box\' : \'normal-box\']\\">\\n            <ng-template let-value pTemplate=\\"selectedItems\\">\\n                <div *ngIf=\\"selectedEmail\\"\\n                    class=\\"tw-flex tw-text-12-px tw-h-22-px tw-rounded-12-px tw-text-slightly-normal-text-color tw-border-1-px tw-border-box-color tw-bg-white\\">\\n                    <p class=\\"tw-pt-2-px tw-pl-12-px tw-pr-6-px\\">{{ selectedEmail }}</p>\\n                    <p class=\\"tw-w-1-px tw-mr-8-px tw-bg-separator\\"></p>\\n                    <svg-icon-sprite (click)=\\"removeEmail()\\" src=\\"close\\" width=\\"10px\\" height=\\"10px\\"\\n                        class=\\"tw-pr-10-px tw-pt-6-px tw-text-slightly-normal-text-color\\"></svg-icon-sprite>\\n                </div>\\n                <div *ngIf=\\"selectedEmail && form.value.email.length > 1\\" class=\\"tw-pl-8-px\\">\\n                    <p class=\\"tw-flex tw-justify-center tw-items-center tw-p-5-px tw-h-24-px tw-w-24-px tw-bg-disabled-bg-color tw-text-12-px tw-text-faded-text-color tw-rounded-12-px\\">\\n                        +{{ form.value.email.length - 1 }}\\n                    </p>\\n                </div>\\n                <div *ngIf=\\"!selectedEmail\\" class=\\"tw-text-placeholder\\">\\n                    Select Email Address\\n                </div>\\n            </ng-template>\\n            <ng-template pTemplate=\\"filter\\" let-options=\\"options\\">\\n                <div *ngIf=\\"emails.length\\" class=\\"p-inputgroup\\">\\n                    <div class=\\"p-input-icon-left p-input-icon-right\\">\\n                        <i class=\\"pi pi-search\\"></i>\\n                        <input type=\\"text\\" class=\\"!tw-h-32-px !tw-w-270-px\\" (keyup)=\\"options.filter($event)\\"\\n                            pInputText placeholder=\\"Search by Name / Email\\" formControlName=\\"search\\" />\\n                        <i class=\\"pi pi-times tw-cursor-pointer tw-pt-2-px\\" style=\\"font-size: 14px\\" (click)=\\"clearSearch(options)\\"></i>\\n                    </div>\\n                </div>\\n            </ng-template>\\n            <ng-template let-user pTemplate=\\"item\\">\\n                <div>\\n                    <span class=\\"tw-text-sub-text-color tw-text-14-px\\">\\n                        <span #textElement \\n                        [ngStyle]=\\"{\'white-space\': \'nowrap\', \'overflow\': \'hidden\', \'text-overflow\': \'ellipsis\', \'max-width\': \'16rem\'}\\"\\n                        [pTooltip]=\\"isOverflowing(textElement) ? user.name : null\\" tooltipPosition=\\"top\\">\\n                        {{ user.name }}\\n                        </span>\\n                    </span>\\n                    <p class=\\"tw-pt-4-px tw-text-faded-text-color tw-text-12-px\\">{{ user.email }}</p>\\n                </div>\\n            </ng-template>\\n        </p-multiSelect>\\n        <div>\\n            <app-mandatory-error-message *ngIf=\\"isFieldMandatory && form.controls[formControllerName].touched && !form.controls[formControllerName].valid && !form.controls[formControllerName].disabled\\" [listName]=\\"mandatoryErrorListName\\" [customErrorMessage]=\\"customErrorMessage\\"></app-mandatory-error-message>\\n        </div>\\n        <div>\\n            <div class=\\"tw-flex tw-pt-18-px\\">\\n                <p class=\\"tw-text-slightly-normal-text-color tw-text-14-px tw-pr-12-px\\">or</p>\\n                <div class=\\"tw-flex tw-cursor-pointer\\" (click)=\\"openDialog()\\">\\n                    <svg-icon-sprite src=\\"add\\" width=\\"18px\\" height=\\"18px\\"\\n                        class=\\"tw-text-mandatory-field-color\\">\\n                    </svg-icon-sprite>\\n                    <p class=\\"tw-pl-6-px tw-text-slightly-normal-text-color tw-text-14-px\\">Add new Email address</p>\\n                </div>\\n            </div> \\n        </div>\\n    </div>\\n</div>\\n\\n<p-dialog [dismissableMask]=\\"true\\" [showHeader]=\\"false\\" [modal]=\\"true\\" [(visible)]=\\"showDialog\\" [draggable]=\\"false\\" [style]=\\"{width: \'468px\'}\\">\\n    <div [formGroup]=\\"addEmailForm\\">\\n        <div class=\\"tw-p-24-px tw-border-b-1-px tw-border-b-box-color\\">\\n            <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                <p class=\\"tw-text-slightly-normal-text-color tw-text-20-px tw-font-500\\">Add new Email Address</p>\\n                <i class=\\"pi pi-times tw-cursor-pointer\\" style=\\"font-size: 12px\\" (click)=\\"closeModel()\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\"tw-p-24-px\\">\\n            <p class=\\"tw-text-sub-text-color tw-text-14-px tw-pb-8-px\\">\\n                Name <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n            </p>\\n            <input formControlName=\\"name\\" type=\\"text\\" class=\\"tw-w-388-px tw-h-48-px\\" pInputText placeholder=\\"Enter name\\" [ngClass]=\\"[addEmailForm.controls[\'name\'].touched && !addEmailForm.controls[\'name\'].valid && !addEmailForm.controls[\'name\'].disabled ? \'error-box\' : \'normal-box\']\\" required/>\\n            <app-mandatory-error-message *ngIf=\\"addEmailForm.controls[\'name\'].touched && !addEmailForm.controls[\'name\'].valid && !addEmailForm.controls[\'name\'].disabled\\" [customErrorMessage]=\\"\'Enter a valid Name\'\\"></app-mandatory-error-message>\\n            <p class=\\"tw-pt-16-px tw-pb-8-px tw-text-sub-text-color tw-text-14-px\\">\\n                Email Address <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n            </p>\\n\\n            <div>\\n                <input formControlName=\\"email\\" type=\\"text\\" class=\\"tw-w-388-px tw-h-48-px\\" pInputText placeholder=\\"Enter Email\\" [ngClass]=\\"[addEmailForm.controls[\'email\'].touched && !addEmailForm.controls[\'email\'].valid && !addEmailForm.controls[\'email\'].disabled ? \'error-box\' : \'normal-box\']\\" required />\\n                <app-mandatory-error-message *ngIf=\\"addEmailForm.controls[\'email\'].touched && !addEmailForm.controls[\'email\'].valid && !addEmailForm.controls[\'email\'].disabled\\" [customErrorMessage]=\\"\'Enter a valid E-mail\'\\"></app-mandatory-error-message>\\n            </div>\\n\\n            <div class=\\"tw-flex tw-justify-end tw-pt-24-px \\">\\n                <button type=\\"button\\" class=\\"cancel-btn\\" (click)=\\"closeModel()\\">\\n                    Cancel\\n                </button>\\n                <button type=\\"button\\" class=\\"save-btn\\" pButton [disabled]=\\"!addEmailForm.valid\\" (click)=\\"addEmail()\\">\\n                    Add and Save\\n                </button>\\n            </div>\\n        </div>\\n    </div>\\n</p-dialog>\\n"},{"name":"EmployeeMappingComponent","id":"component-EmployeeMappingComponent-30d2c691663118c48d05287e33c2f75631951c5a693f644d44781d9f2cbe3241cefe45ace48a4fa95093f82d986af6d639e4b1df0e083ac7cb4296e2d216c81b","file":"src/app/integrations/si/main/mapping/employee-mapping/employee-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-employee-mapping","styleUrls":["./employee-mapping.component.scss"],"styles":[],"templateUrl":["./employee-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"alphabetFilter","defaultValue":"\'All\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":74},{"name":"autoMapEmployee","deprecated":false,"deprecationMessage":"","type":"AutoMapEmployeeOptions | null","optional":false,"description":"","line":30},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":76,"modifierKind":[148]},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":66},{"name":"destinationFieldType","defaultValue":"FieldType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":70},{"name":"employeeFieldMapping","deprecated":false,"deprecationMessage":"","type":"FyleField","optional":false,"description":"","line":28},{"name":"employeeMapping","deprecated":false,"deprecationMessage":"","type":"EmployeeMappingsResponse","optional":false,"description":"","line":34},{"name":"filteredMappingCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":60},{"name":"filteredMappings","deprecated":false,"deprecationMessage":"","type":"EmployeeMappingResult[]","optional":false,"description":"","line":38},{"name":"fyleEmployeeOptions","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":42},{"name":"isInitialSetupComplete","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":54},{"name":"mappings","deprecated":false,"deprecationMessage":"","type":"EmployeeMappingResult[]","optional":false,"description":"","line":36},{"name":"mappingStats","deprecated":false,"deprecationMessage":"","type":"MappingStats","optional":false,"description":"","line":32},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":56},{"name":"operationgSystem","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":72},{"name":"optionSearchUpdate","defaultValue":"new Subject<DropdownOptionSearch>()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[123]},{"name":"optionsMap","defaultValue":"{}","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":44,"modifierKind":[123]},{"name":"PaginatorPage","defaultValue":"PaginatorPage","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":64},{"name":"sageIntacctEmployee","deprecated":false,"deprecationMessage":"","type":"MappingDestination[]","optional":false,"description":"","line":48},{"name":"sageIntacctEmployeeOptions","deprecated":false,"deprecationMessage":"","type":"MappingDestination[]","optional":false,"description":"","line":50},{"name":"searchTerm","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40},{"name":"searchValue","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":68},{"name":"selectedMappingFilter","defaultValue":"MappingState.ALL","deprecated":false,"deprecationMessage":"","type":"MappingState","optional":false,"description":"","line":62},{"name":"sourceType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":58}],"methodsClass":[{"name":"addMissingOption","args":[{"name":"dropdownOption","type":"IntacctDestinationAttribute","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":246,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"dropdownOption","type":"IntacctDestinationAttribute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAttributesFilteredByConfig","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":200,"deprecated":false,"deprecationMessage":""},{"name":"getDropdownValue","args":[{"name":"employeeMapping","type":"EmployeeMapping[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"employeeMapping","type":"EmployeeMapping[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFilteredMappings","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"mappingFilterUpdate","args":[{"name":"alphabet","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":192,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"alphabet","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mappingSearchFilter","args":[{"name":"searchValue","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":180,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"searchValue","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mappingStateFilter","args":[{"name":"state","type":"MappingState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":172,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"MappingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":301,"deprecated":false,"deprecationMessage":""},{"name":"optionSearchWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":216,"deprecated":false,"deprecationMessage":""},{"name":"pageOffsetChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[{"name":"selectedRow","type":"EmployeeMappingResult","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedRow","type":"EmployeeMappingResult","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"searchOptions","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""},{"name":"employeeMapping","type":"EmployeeMapping","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":239,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"employeeMapping","type":"EmployeeMapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupDropdownOptions","args":[{"name":"employeeMappingResponse","type":"EmployeeMappingsResponse","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":253,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"employeeMappingResponse","type":"EmployeeMappingsResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":270,"deprecated":false,"deprecationMessage":""},{"name":"sortDropdownOptions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":212,"deprecated":false,"deprecationMessage":""},{"name":"tableDropdownWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":""},{"name":"triggerAutoMapEmployees","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { Subject, debounce, debounceTime, forkJoin } from \'rxjs\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { AutoMapEmployeeOptions, FieldType, FyleField, MappingState, PaginatorPage, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { IntacctDestinationAttribute } from \'src/app/core/models/si/db/destination-attribute.model\';\\nimport { DropdownOptionSearch, EmployeeMapping, EmployeeMappingPost, EmployeeMappingResult, EmployeeMappingsResponse } from \'src/app/core/models/si/db/employee-mapping.model\';\\nimport { MappingDestination } from \'src/app/core/models/si/db/mapping-destination.model\';\\nimport { MappingStats } from \'src/app/core/models/si/db/mapping.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { PaginatorService } from \'src/app/core/services/si/si-core/paginator.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { SiWorkspaceService } from \'src/app/core/services/si/si-core/si-workspace.service\';\\n\\n@Component({\\n  selector: \'app-employee-mapping\',\\n  templateUrl: \'./employee-mapping.component.html\',\\n  styleUrls: [\'./employee-mapping.component.scss\']\\n})\\nexport class EmployeeMappingComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  isInitialSetupComplete: boolean = false;\\n\\n  employeeFieldMapping: FyleField;\\n\\n  autoMapEmployee: AutoMapEmployeeOptions | null;\\n\\n  mappingStats: MappingStats;\\n\\n  employeeMapping: EmployeeMappingsResponse;\\n\\n  mappings: EmployeeMappingResult[];\\n\\n  filteredMappings: EmployeeMappingResult[];\\n\\n  searchTerm: string = \'\';\\n\\n  fyleEmployeeOptions: IntacctDestinationAttribute[];\\n\\n  private optionsMap: {[key: string]: boolean} = {};\\n\\n  private optionSearchUpdate = new Subject<DropdownOptionSearch>();\\n\\n  sageIntacctEmployee: MappingDestination[];\\n\\n  sageIntacctEmployeeOptions: MappingDestination[];\\n\\n  sourceType: string;\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  totalCount: number;\\n\\n  filteredMappingCount: number;\\n\\n  selectedMappingFilter: MappingState = MappingState.ALL;\\n\\n  PaginatorPage = PaginatorPage;\\n\\n  currentPage: number = 1;\\n\\n  searchValue: string;\\n\\n  destinationFieldType = FieldType;\\n\\n  operationgSystem: string;\\n\\n  alphabetFilter: string = \'All\';\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private mappingService: SiMappingsService,\\n    private paginatorService: PaginatorService,\\n    private route: ActivatedRoute,\\n    private toastService: IntegrationsToastService,\\n    private workspaceService: SiWorkspaceService\\n  ) { }\\n\\n  tableDropdownWidth() {\\n    const element = document.querySelector(\'.p-dropdown-panel.p-component.ng-star-inserted\') as HTMLElement;\\n    if (element) {\\n      element.style.width = \'300px\';\\n    }\\n  }\\n\\n  triggerAutoMapEmployees() {\\n    this.isLoading = true;\\n    this.mappingService.triggerAutoMapEmployees().subscribe(() => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Auto mapping of employees may take few minutes\');\\n    }, () => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Something went wrong, please try again\');\\n    });\\n  }\\n\\n  private getFilteredMappings() {\\n    this.mappingService.getEmployeeMappings(this.limit, this.offset, this.getAttributesFilteredByConfig()[0], this.selectedMappingFilter, this.alphabetFilter).subscribe((intacctMappingResult: EmployeeMappingsResponse) => {\\n      this.filteredMappings = intacctMappingResult.results.concat();\\n      this.filteredMappingCount = this.filteredMappings.length;\\n      this.totalCount = intacctMappingResult.count;\\n      this.setupDropdownOptions(intacctMappingResult);\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  getDropdownValue(employeeMapping: EmployeeMapping[]) {\\n    if (employeeMapping.length) {\\n      if (this.employeeFieldMapping===FyleField.VENDOR) {\\n        return employeeMapping[0].destination_vendor;\\n      } else if (this.employeeFieldMapping===FyleField.EMPLOYEE) {\\n        return employeeMapping[0].destination_employee;\\n      }\\n    }\\n    return null;\\n  }\\n\\n  save(selectedRow: EmployeeMappingResult, event: any): void {\\n    const employeeMapping: EmployeeMappingPost = {\\n      source_employee: {\\n        id: selectedRow.id\\n      },\\n      destination_vendor: {\\n        id: this.employeeFieldMapping===FyleField.VENDOR ? event.value.id : (selectedRow.employeemapping.length && selectedRow.employeemapping[0].destination_vendor ? selectedRow.employeemapping[0].destination_vendor?.id : null)\\n      },\\n      destination_employee: {\\n        id: this.employeeFieldMapping===FyleField.EMPLOYEE ? event.value.id : (selectedRow.employeemapping.length && selectedRow.employeemapping[0].destination_employee ? selectedRow.employeemapping[0].destination_employee?.id : null)\\n      },\\n      destination_card_account: {\\n        id: (selectedRow.employeemapping.length && selectedRow.employeemapping[0].destination_card_account ? selectedRow.employeemapping[0].destination_card_account?.id : null)\\n      },\\n      workspace: parseInt(this.workspaceService.getWorkspaceId())\\n    };\\n    this.mappingService.postEmployeeMappings(employeeMapping).subscribe((response) => {\\n      // Decrement unmapped count only for new mappings, ignore updates\\n      if (!selectedRow.employeemapping.length) {\\n        this.mappingStats.unmapped_attributes_count -= 1;\\n      }\\n\\n      selectedRow.employeemapping = [response];\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Employee Mapping saved successfully\');\\n    }, () => {\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Something went wrong\');\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.MAPPING, limit);\\n    }\\n    this.limit = limit;\\n    this.offset = 0;\\n    this.currentPage = 1;\\n    this.getFilteredMappings();\\n  }\\n\\n  pageOffsetChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.offset = offset;\\n    this.currentPage = Math.ceil(this.offset / this.limit)+1;\\n    this.getFilteredMappings();\\n  }\\n\\n  mappingStateFilter(state: MappingState): void {\\n    this.isLoading = true;\\n    this.selectedMappingFilter = state;\\n    this.currentPage = 1;\\n    this.offset = 0;\\n    this.getFilteredMappings();\\n  }\\n\\n  mappingSearchFilter(searchValue: string) {\\n    if (searchValue.length > 0) {\\n      const results: EmployeeMappingResult[] = this.filteredMappings.filter((mapping) =>\\n        mapping.value?.toLowerCase().includes(searchValue)\\n      );\\n      this.filteredMappings = results;\\n    } else {\\n      this.filteredMappings = this.mappings.concat();\\n    }\\n    this.filteredMappingCount = this.filteredMappings.length;\\n  }\\n\\n  mappingFilterUpdate(alphabet: string) {\\n    this.isLoading = true;\\n    this.alphabetFilter = alphabet;\\n    this.currentPage = 1;\\n    this.offset = 0;\\n    this.getFilteredMappings();\\n  }\\n\\n  getAttributesFilteredByConfig() {\\n    const attributes = [];\\n\\n    if (this.employeeFieldMapping === \'VENDOR\') {\\n      attributes.push(\'VENDOR\');\\n    } else if (this.employeeFieldMapping === \'EMPLOYEE\') {\\n      attributes.push(\'EMPLOYEE\');\\n    }\\n\\n    return attributes;\\n  }\\n\\n  sortDropdownOptions() {\\n    this.fyleEmployeeOptions.sort((a, b) => a.value.localeCompare(b.value));\\n  }\\n\\n  optionSearchWatcher() {\\n    this.optionSearchUpdate.pipe(\\n      debounceTime(1000)\\n      ).subscribe((event: DropdownOptionSearch) => {\\n      const existingOptions = this.fyleEmployeeOptions.concat();\\n      const newOptions: IntacctDestinationAttribute[] = [];\\n\\n      this.mappingService.getPaginatedDestinationAttributes(this.getAttributesFilteredByConfig()[0], event.searchTerm).subscribe((response) => {\\n        response.results.forEach((option) => {\\n          // If option is not already present in the list, add it\\n          if (!this.optionsMap[option.id.toString()]) {\\n            this.optionsMap[option.id.toString()] = true;\\n            newOptions.push(option);\\n          }\\n        });\\n\\n        this.fyleEmployeeOptions = existingOptions.concat(newOptions);\\n        this.sortDropdownOptions();\\n        event.employeeMapping.isOptionSearchInProgress = false;\\n      });\\n    });\\n  }\\n\\n  searchOptions(event: any, employeeMapping: EmployeeMapping) {\\n    if (event.filter) {\\n      employeeMapping.isOptionSearchInProgress = true;\\n      this.optionSearchUpdate.next({searchTerm: event.filter, employeeMapping});\\n    }\\n  }\\n\\n  private addMissingOption(dropdownOption: IntacctDestinationAttribute): void {\\n    const option = this.fyleEmployeeOptions.find(attribute => attribute.id === dropdownOption.id);\\n    if (!option) {\\n      this.fyleEmployeeOptions.push(dropdownOption);\\n    }\\n  }\\n\\n  private setupDropdownOptions(employeeMappingResponse: EmployeeMappingsResponse): void {\\n    // Since pagination call doesn\'t return all results, we\'re making use of the mapping API to fill in options\\n    employeeMappingResponse.results.forEach((mapping) => {\\n      const employeeMapping = this.getDropdownValue(mapping.employeemapping);\\n      if (employeeMapping) {\\n        this.addMissingOption(employeeMapping);\\n      }\\n    });\\n\\n    this.sortDropdownOptions();\\n\\n    // Creating a map of primary keys to avoid duplicate options during search\\n    this.fyleEmployeeOptions.forEach((option) => {\\n      this.optionsMap[option.id.toString()] = true;\\n    });\\n  }\\n\\n  setupPage() {\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.MAPPING);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n    this.sourceType = decodeURIComponent(decodeURIComponent(this.route.snapshot.params.source_field));\\n    forkJoin([\\n      this.mappingService.getPaginatedDestinationAttributes(this.getAttributesFilteredByConfig()[0]),\\n      this.mappingService.getEmployeeMappings(this.limit, this.offset, this.getAttributesFilteredByConfig()[0], this.selectedMappingFilter, this.alphabetFilter),\\n      this.mappingService.getMappingStats(FyleField.EMPLOYEE, this.getAttributesFilteredByConfig()[0])\\n    ]).subscribe(\\n      ([groupedDestResponse, employeeMappingResponse, mappingStat]) => {\\n        this.totalCount = employeeMappingResponse.count;\\n        this.fyleEmployeeOptions = groupedDestResponse.results;\\n\\n        this.setupDropdownOptions(employeeMappingResponse);\\n\\n        this.optionSearchWatcher();\\n\\n        this.employeeMapping = employeeMappingResponse;\\n        if (!this.isInitialSetupComplete) {\\n          this.filteredMappingCount = employeeMappingResponse.count;\\n        }\\n        this.mappings = employeeMappingResponse.results;\\n        this.mappingStats = mappingStat;\\n        this.filteredMappings = this.mappings.concat();\\n        this.isInitialSetupComplete = true;\\n        this.isLoading = false;\\n      }\\n    );\\n  }\\n\\n  ngOnInit(): void {\\n    this.mappingService.getConfiguration().subscribe((response) => {\\n      this.employeeFieldMapping = response.employee_field_mapping;\\n      this.autoMapEmployee = response.auto_map_employees;\\n      this.setupPage();\\n    });\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .prevBtn:disabled > .pi-chevron-left,:host ::ng-deep .nextBtn:disabled > .pi-chevron-right,\\n:host ::ng-deep .prevBtn:disabled > .pi-minus, :host ::ng-deep .nextBtn:disabled > .pi-minus {\\n    @apply tw-text-placeholder #{!important};\\n}\\n\\n:host ::ng-deep .mappingFilterDropdown .p-dropdown {\\n    @apply tw-w-200-px #{!important}\\n}\\n\\n:host ::ng-deep .mapped {\\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-mapped-green-border tw-bg-mapped-green-bg tw-py-4-px tw-px-12-px tw-text-success-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .unmapped {\\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-unmapped-red-border tw-bg-unmapped-red-bg tw-py-4-px tw-px-12-px tw-text-alert-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .filterDropdown .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-10-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-5-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n\\n:host ::ng-deep .filterDropdown  .p-dropdown-trigger {\\n    @apply tw-block #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n    @apply tw-w-32-px #{!important};\\n}\\n\\n:host ::ng-deep .textbox {\\n    @apply tw-border-r-0 #{!important}\\n}\\n\\nth {\\n    @apply tw-text-12-px tw-text-normal-text-color tw-font-500 tw-h-40-px tw-py-10-px #{!important};\\n}\\n\\ntd {\\n    @apply tw-text-14-px tw-text-sub-text-color tw-font-400 #{!important};\\n}\\n\\n.pi-check:before {\\n    @apply tw-text-14-px tw-cursor-pointer tw-text-faded-text-color #{!important};\\n}\\n\\n:host ::ng-deep .tooltip-main {\\n    @apply tw-px-6 tw-pb-4 tw-text-center #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-save {\\n    @apply tw-text-12-px #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-return {\\n    @apply tw-mt-6-px tw-px-4-px tw-py-4-px tw-text-9-px tw-rounded-md tw-bg-placeholder  #{!important}\\n}","styleUrl":"./employee-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":76,"jsdoctags":[{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-16-px tw-px-120-px\\">\\n        <div class=\\"tw-flex tw-justify-between\\">\\n            <div class=\\"tw-flex\\">\\n                <div class=\\"tw-rounded-10-px tw-bg-white tw-border-1-px tw-border-separator tw-p-16-px tw-w-200-px tw-h-84-px\\">\\n                    <div class=\\"tw-w-36-px tw-h-6-px tw-rounded-12-px tw-bg-cta-disabled\\">\\n                    </div>\\n                    <div class=\\"tw-pt-8-px tw-text-faded-text-color tw-text-12-px\\">\\n                        <p>Total Employees</p>\\n                    </div>\\n                    <div class=\\"tw-text-20-px tw-text-500 tw-text-slightly-normal-text-color\\">\\n                        <p>{{mappingStats?.all_attributes_count}}</p>\\n                    </div>\\n                </div>\\n                <span class=\\"tw-pl-16-px\\"></span>\\n                <div class=\\"tw-rounded-10-px tw-bg-white tw-border-1-px tw-border-separator tw-p-16-px tw-w-200-px tw-h-84-px\\">\\n                    <div class=\\"tw-w-36-px tw-h-6-px tw-rounded-12-px tw-bg-cta-disabled\\">\\n                    </div>\\n                    <div class=\\"tw-pt-8-px tw-text-faded-text-color tw-text-12-px\\">\\n                        <p>Unmapped Employees</p>\\n                    </div>\\n                    <div class=\\"tw-text-20-px tw-text-500 tw-text-slightly-normal-text-color\\">\\n                        <p>{{mappingStats?.unmapped_attributes_count}}</p>\\n                    </div>\\n                </div>\\n            </div>\\n                <div *ngIf=\\"autoMapEmployee\\" class=\\"tw-mt-24-px\\">\\n                  <button type=\\"button\\" class=\\"tw-text-white tw-text-500 tw-px-24-px tw-py-12-px tw-bg-mandatory-field-color tw-rounded-4-px\\" (click)=\\"triggerAutoMapEmployees()\\">\\n                    <p class=\\"tw-text-14-px tw-font-400 tw-pl-5px\\">Auto Map Employees</p>\\n                  </button>\\n                </div>\\n        </div>\\n\\n    <div class=\\"tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator tw-mt-16-px\\">\\n        <div class=\\"tw-p-24-px tw-border-b-separator\\">\\n            <app-mapping-filter [selectedAlphabeticalFilter]=\\"alphabetFilter\\" [mappingFilter]=\\"selectedMappingFilter\\" (mappingFilterChangeEvent)=\\"mappingStateFilter($event)\\" (mappingSearchingEvent)=\\"mappingSearchFilter($event)\\" (mappingFilterUpdateHandler)=\\"mappingFilterUpdate($event)\\" [isAlphabetFilterHidden]=\\"false\\"></app-mapping-filter>\\n        </div>\\n        <div *ngIf=\\"filteredMappingCount\\" >\\n            <p-table [value]=\\"filteredMappings\\" [tableStyle]=\\"{ \'min-width\': \'50rem\'}\\">\\n                <ng-template pTemplate=\\"header\\">\\n                    <tr>\\n                    <th class=\\"!tw-pl-40-px\\">Employee in {{brandingConfig.brandName}}</th>\\n                    <th>{{getAttributesFilteredByConfig()[0] | titlecase}} in Sage Intacct</th>\\n                    <th>Status</th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\"body\\" let-mapping>\\n                    <tr>\\n                        <td>\\n                            <div class=\\"tw-flex tw-items-center\\">\\n                                <svg-icon-sprite *ngIf=\\"mapping.auto_mapped\\" pTooltip=\\"Auto-mapped\\" tooltipPosition=\\"top\\" src=\\"flash\\" width=\\"12px\\" height=\\"12px\\" class=\\"tw-mr-12-px tw-text-placeholder\\"></svg-icon-sprite>\\n                                <span [ngClass]=\\"{\'tw-pl-24-px\': !mapping.auto_mapped}\\">{{ mapping.value }}</span>\\n                            </div>\\n                        </td>\\n                        <td>\\n                            <p-dropdown appendTo=\\"body\\" (onShow)=\\"tableDropdownWidth()\\"\\n                            [ngModel]=\\"getDropdownValue(mapping.employeemapping)\\" \\n                            [options]=\\"fyleEmployeeOptions\\" \\n                            optionLabel=\\"value\\" \\n                            placeholder=\\"Select an Option\\" \\n                            (onChange)=\\"save(mapping, $event); getDropdownValue(mapping.employeemapping)\\"\\n                            [filter]=\\"true\\"\\n                            filterBy=\\"value\\"\\n                            [emptyFilterMessage]=\\"mapping.employeemapping.isOptionSearchInProgress ? \'Searching...\' : \'No results found\'\\"\\n                            [dropdownIcon]=\\"mapping.employeemapping.isOptionSearchInProgress ? \'pi pi-spinner pi-spin\' : \'pi pi-chevron-down\'\\"\\n                            (onFilter)=\\"searchOptions($event, mapping.employeemapping)\\">\\n                            </p-dropdown>\\n                        </td>\\n                        <td>\\n                            <p *ngIf=\\"getDropdownValue(mapping.employeemapping)\\" class=\\"mapped\\">MAPPED</p>\\n                            <p *ngIf=\\"!getDropdownValue(mapping.employeemapping)\\" class=\\"unmapped\\">UNMAPPED</p>\\n                        </td>\\n                    </tr>\\n                </ng-template>\\n                </p-table>\\n        </div>\\n        <div class=\\"tw-p-24-px tw-border-t-separator\\" *ngIf=\\"filteredMappingCount\\" >\\n            <app-paginator [totalCount]=\\"totalCount\\" [pageType]=\\"PaginatorPage.MAPPING\\" [page]=\\"currentPage\\" [dropDownValue]=\\"limit\\" (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" (pageOffsetChangeEvent)=\\"pageOffsetChanges($event)\\"></app-paginator>\\n        </div>\\n        <div *ngIf=\\"!filteredMappingCount\\">\\n            <app-zero-state-with-illustration [mainText]=\\"\'No employees to show yet!\'\\" [subText]=\\"\'Looks like your search term does not match any of Employee mappings\'\\"></app-zero-state-with-illustration>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"ErrorComponent","id":"component-ErrorComponent-22bedb41f05ab52db3ee5ac01d85d44ae2e9e71ec384e5b1db783114325bfa7a1530b21d449e42d38886b920a678f0034dbfc07be8f9aaf660a184b41ca22124","file":"src/app/shared/components/core/error/error.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-error","styleUrls":["./error.component.scss"],"styles":[],"templateUrl":["./error.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13,"modifierKind":[148]}],"methodsClass":[{"name":"copyToClipboard","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""},{"name":"emailSupport","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { MessageService } from \'primeng/api\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\n\\n@Component({\\n  selector: \'app-error\',\\n  templateUrl: \'./error.component.html\',\\n  styleUrls: [\'./error.component.scss\']\\n})\\nexport class ErrorComponent implements OnInit {\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private messageService: MessageService,\\n    private windowService: WindowService\\n  ) { }\\n\\n  emailSupport(): void {\\n    this.windowService.redirect(`mailto:${brandingConfig.supportEmail}`);\\n  }\\n\\n  copyToClipboard(): void {\\n    const selBox = document.createElement(\'textarea\');\\n    selBox.value = brandingConfig.supportEmail;\\n    document.body.appendChild(selBox);\\n    selBox.select();\\n    selBox.click();\\n    document.execCommand(\'copy\');\\n\\n    this.messageService.add({\\n      severity: \'success\',\\n      summary: \'Support Email copied to clipboard\'\\n    });\\n\\n    document.body.removeChild(selBox);\\n    event?.stopPropagation();\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./error.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"messageService","type":"MessageService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"messageService","type":"MessageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-flex-col tw-h-[87%] tw-justify-center tw-items-center\\">\\n    <img src=\\"assets/illustrations/error.svg\\">\\n    <p class=\\"tw-pt-24-px\\">Something unexpected happened while setting up connection</p>\\n    <p class=\\"tw-pt-8-px tw-text-14-px tw-text-faded-text-color\\">Connect our support team to get it resolved</p>\\n    <div class=\\"tw-flex tw-cursor-pointer tw-text-14-px tw-text-hyperlink-color tw-pt-12-px\\">\\n        <p (click)=\\"emailSupport()\\">{{brandingConfig.supportEmail}}</p>\\n        <svg-icon-sprite src=\\"copy\\" width=\\"12px\\" height=\\"16px\\" class=\\"tw-ml-10-px tw-mt-2-px\\" (click)=\\"copyToClipboard()\\"></svg-icon-sprite>\\n    </div>\\n</div>\\n"},{"name":"ExportLogChildTableDialogComponent","id":"component-ExportLogChildTableDialogComponent-6da28a05b97e25d838c4e0880c31a8fd649efdf95322bd735525f259398146a53b354a647a56878e1e45e336e38977fb9f3a86572d8f462e1fa46dbe60728898","file":"src/app/shared/components/export-log/export-log-dialog/export-log-child-table-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-export-log-child-table-dialog","styleUrls":["./export-log-child-table-dialog.component.scss"],"styles":[],"templateUrl":["./export-log-child-table-dialog.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"expenses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","line":15,"type":"Expense[]","decorators":[]},{"name":"isDialogOpen","deprecated":false,"deprecationMessage":"","line":13,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"hideChildTable","defaultValue":"new EventEmitter<void>()","deprecated":false,"deprecationMessage":"","line":17,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"handleDialogClose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":28,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""},{"name":"openExpenseinFyle","args":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":""},{"name":"org_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"org_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-export-log-child-table-dialog\',\\n  templateUrl: \'./export-log-child-table-dialog.component.html\',\\n  styleUrls: [\'./export-log-child-table-dialog.component.scss\']\\n})\\nexport class ExportLogChildTableDialogComponent implements OnInit {\\n\\n  @Input() isDialogOpen: boolean;\\n\\n  @Input() expenses: Expense[] = [];\\n\\n  @Output() hideChildTable = new EventEmitter<void>();\\n\\n  constructor(\\n    private windowService: WindowService\\n  ) { }\\n\\n  openExpenseinFyle(expense_id: string, org_id: string) {\\n    const url = `${environment.fyle_app_url}/app/admin/#/view_expense/${expense_id}?org_id=${org_id}`;\\n    this.windowService.openInNewTab(url);\\n  }\\n\\n  handleDialogClose() {\\n    this.hideChildTable.emit();\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-dialog {\\n    @apply tw-max-h-full tw-m-0 #{!important};\\n}\\n","styleUrl":"./export-log-child-table-dialog.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<p-dialog header=\\"Expenses\\" [(visible)]=\\"isDialogOpen\\" [position]=\\"\'top-right\'\\" [modal]=\\"true\\" [draggable]=\\"false\\" [dismissableMask]=\\"true\\" (onHide)=\\"handleDialogClose()\\" [style]=\\"{ width: \'50vw\', height: \'100vh\' }\\">\\n    <div class=\\"tw-rounded-6-px tw-bg-white tw-border-1-px\\">\\n        <p-table #dt2 [value]=\\"expenses\\">\\n            <ng-template pTemplate=\\"header\\">\\n                <tr>\\n                    <th>Expense ID.</th>\\n                    <th>Merchant</th>\\n                    <th>Category</th>\\n                    <th>Amount</th>\\n                </tr>\\n            </ng-template>\\n            <ng-template pTemplate=\\"body\\" let-rowData>\\n                <tr *ngFor=\\"let expense of expenses\\">\\n                    <td class=\\"tw-underline tw-cursor-pointer\\" (click)=\\"openExpenseinFyle(rowData.expense_id, rowData.org_id)\\">{{expense.expense_number}}</td>\\n                    <td>{{ expense.vendor ? expense.vendor : \'-\' }}</td>\\n                    <td>{{ expense.category }}</td>\\n                    <td>{{ expense.amount }}</td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n    </div>\\n</p-dialog>\\n"},{"name":"ExportLogComponent","id":"component-ExportLogComponent-3f395996e4e30ac543cecdde76dfc229075f80e2002948759858cfbdbf3684b81f8a2484a22e1d6674957ca97889cf727ea55d37e5255d599f575e369a6f5f01","file":"src/app/integrations/si/main/export-log/export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-export-log","styleUrls":["./export-log.component.scss"],"styles":[],"templateUrl":["./export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":19},{"name":"isLoading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12},{"name":"modules","defaultValue":"[\\n    {label: \'Completed\', routerLink: \'/integrations/intacct/main/export_log/complete_export_log\'},\\n    {label: \'Skipped\', routerLink: \'/integrations/intacct/main/export_log/skip_export_log\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":14}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\n\\n@Component({\\n  selector: \'app-export-log\',\\n  templateUrl: \'./export-log.component.html\',\\n  styleUrls: [\'./export-log.component.scss\']\\n})\\nexport class ExportLogComponent implements OnInit {\\n\\n  isLoading: boolean = false;\\n\\n  modules: MenuItem[] = [\\n    {label: \'Completed\', routerLink: \'/integrations/intacct/main/export_log/complete_export_log\'},\\n    {label: \'Skipped\', routerLink: \'/integrations/intacct/main/export_log/skip_export_log\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n\\n  ngOnInit(): void {\\n    this.activeModule = this.modules[0];\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"/* Mimic the look of the calendar field */\\n.custom-search-field {\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    padding: 2px 10px;\\n    display: inline-flex;\\n    align-items: center;\\n    width: 400px;\\n}\\n\\n.custom-search-field i.pi-search {\\n    margin-right: 10px;\\n}\\n\\n.custom-search-field input[type=\\"text\\"] {\\n    border: none;\\n    outline: none;\\n    width: 100%;\\n}\\n\\n.clickable-row:hover {\\n    cursor: pointer;\\n    &:hover {\\n        background: #FAFCFF;\\n      }\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\\n    background-color: transparent;\\n    @apply tw-px-24-px tw-py-12-px tw-mx-10-px tw-mt-0 tw-border-x-box-color tw-border-t-box-color tw-border-t tw-border-x tw-rounded-t-lg #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link:not(.p-disabled):hover {\\n    @apply tw-text-slightly-normal-text-color tw-border-b-transparent tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover .p-menuitem-link{\\n    background-color: transparent !important;\\n    @apply tw-border-b-transparent tw-font-500 #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link:not(.p-highlight):hover{\\n    @apply tw-border-b-transparent tw-font-500 tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav {\\n    background-color: transparent;\\n    @apply tw-border-b tw-border-b-box-color #{!important};\\n}\\n\\n:host ::ng-deep .drop-down .p-dropdown {\\n    @apply tw-w-200-px tw-border-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {\\n    @apply tw-text-sub-text-color tw-text-14-px tw-font-400 tw-py-14-px tw-px-22-px tw-border-t tw-border-b-0 tw-border-t-box-color  #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\\n    @apply tw-text-slightly-normal-text-color tw-text-12-px tw-font-500 tw-py-12-px tw-px-22-px tw-border tw-border-box-color tw-bg-disabled-bg-color #{!important}\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td > button {\\n    @apply tw-pl-48-px #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar {\\n    @apply tw-h-1.5 tw-bg-progress-bar-bg #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar .p-progressbar-value {\\n    @apply tw-bg-mandatory-field-color tw-rounded-50  #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar-determinate .p-progressbar-value {\\n    content: none #{!important};\\n}\\n\\n.export-btn:disabled {\\n    @apply tw-cursor-not-allowed tw-bg-cta-disabled #{!important};\\n}\\n\\n:host ::ng-deep .p-calendar .p-inputtext {\\n    @apply tw-p-0 tw-bg-white tw-border-0 tw-cursor-pointer tw-transition-none\\t;\\n}\\n\\n:host ::ng-deep .p-dropdown-panel .p-dropdown-items .p-dropdown-item:not(.p-highlight):hover .p-calendar .p-inputtext{\\n    @apply tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-calendar ::placeholder {\\n    @apply tw-text-sub-text-color #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span.p-highlight {\\n    @apply tw-text-white tw-bg-mandatory-field-color #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span:focus {\\n    @apply tw-shadow-none #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table th {\\n    @apply tw-text-center ;\\n}\\n\\n:host ::ng-deep .p-datepicker-touch-ui, .p-calendar .p-datepicker-touch-ui {\\n    @apply tw-min-w-fit tw-top-2/3 #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem {\\n    margin-right: -10px;\\n}","styleUrl":"./export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":19,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-40-px tw-px-120-px\\">\\n    <div class=\\"tw-mb-16-px\\">\\n        <p-tabMenu [model]=\\"modules\\" [activeItem]=\\"activeModule\\"></p-tabMenu>\\n    </div>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>"},{"name":"ExportLogFilterComponent","id":"component-ExportLogFilterComponent-61b5413f7105b82fd63e35016b37224735c182f508056a41408df9431767ba15352152d8155acfed895856937d50f0d5611bf85ce459b9a0c71623e603a00688","file":"src/app/shared/components/export-log/export-log-filter/export-log-filter.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-export-log-filter","styleUrls":["./export-log-filter.component.scss"],"styles":[],"templateUrl":["./export-log-filter.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"dateOptions","deprecated":false,"deprecationMessage":"","line":16,"type":"DateFilter[]","decorators":[]},{"name":"exportLogForm","deprecated":false,"deprecationMessage":"","line":14,"type":"FormGroup","decorators":[]}],"outputsClass":[{"name":"handleSimpleSearch","defaultValue":"new EventEmitter<any>()","deprecated":false,"deprecationMessage":"","line":22,"type":"EventEmitter"}],"propertiesClass":[{"name":"isCalendarVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"isDateFieldFocused","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"isSearchFocused","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":18},{"name":"presentDate","defaultValue":"new Date().toLocaleDateString()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26}],"methodsClass":[{"name":"dropDownWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""},{"name":"filterTable","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDates","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":""},{"name":"removeFilter","args":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showCalendar","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { AbstractControl, FormGroup } from \'@angular/forms\';\\nimport { AccountingExportModel } from \'src/app/core/models/db/accounting-export.model\';\\nimport { DateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { ExportLogService } from \'src/app/core/services/common/export-log.service\';\\n\\n@Component({\\n  selector: \'app-export-log-filter\',\\n  templateUrl: \'./export-log-filter.component.html\',\\n  styleUrls: [\'./export-log-filter.component.scss\']\\n})\\nexport class ExportLogFilterComponent implements OnInit {\\n\\n  @Input() exportLogForm: FormGroup;\\n\\n  @Input() dateOptions: DateFilter[];\\n\\n  isSearchFocused: boolean;\\n\\n  isDateFieldFocused: boolean;\\n\\n  @Output() handleSimpleSearch = new EventEmitter<any>();\\n\\n  isCalendarVisible: boolean;\\n\\n  presentDate = new Date().toLocaleDateString();\\n\\n  constructor() { }\\n\\n  filterTable(event: any) {\\n    this.handleSimpleSearch.emit(event);\\n  }\\n\\n  dropDownWatcher() {\\n    if (this.exportLogForm.controls.dateRange.value !== this.dateOptions[3].dateRange) {\\n      this.isCalendarVisible = false;\\n    } else {\\n      this.isCalendarVisible = true;\\n    }\\n  }\\n\\n  removeFilter(formField: AbstractControl) {\\n    (formField as FormGroup).reset();\\n    event?.stopPropagation();\\n  }\\n\\n  showCalendar(event: Event) {\\n    event.stopPropagation();\\n    this.isCalendarVisible = true;\\n  }\\n\\n  getDates() {\\n    this.dateOptions[3].dateRange = this.exportLogForm.value.start[0].toLocaleDateString() + \'-\' + this.exportLogForm.value.start[1].toLocaleDateString();\\n    this.dateOptions[3].startDate = this.exportLogForm.value.start[0];\\n    this.dateOptions[3].endDate = this.exportLogForm.value.start[1];\\n    this.presentDate = this.dateOptions[3].dateRange;\\n    this.exportLogForm.controls.dateRange.patchValue(this.dateOptions[3]);\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".custom-search-field {\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    padding: 2px 10px;\\n    display: inline-flex;\\n    align-items: center;\\n    width: 350px;\\n    height: 40px;\\n}\\n\\n.custom-search-field i.pi-search {\\n    margin-right: 10px;\\n    color: grey;\\n}\\n\\n.custom-search-field input[type=\\"text\\"] {\\n    border: none;\\n    outline: none;\\n    width: 100%;\\n}\\n\\ninput.custom-focus:focus {\\n    outline: none;\\n    border: 1px solid black !important;\\n  }\\n\\n.clickable-row:hover {\\n    cursor: pointer;\\n    &:hover {\\n        background: #FAFCFF;\\n      }\\n}\\n\\n:host ::ng-deep .drop-down .p-dropdown {\\n    @apply tw-w-200-px tw-border-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {\\n    @apply tw-text-sub-text-color tw-text-14-px tw-font-400 tw-py-14-px tw-px-22-px tw-border-t tw-border-b-0 tw-border-t-box-color  #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\\n    @apply tw-text-slightly-normal-text-color tw-text-12-px tw-font-500 tw-py-12-px tw-px-22-px tw-border tw-border-box-color tw-bg-disabled-bg-color #{!important}\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td > button {\\n    @apply tw-pl-48-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span.p-highlight {\\n    @apply tw-text-white tw-bg-mandatory-field-color #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span:focus {\\n    @apply tw-shadow-none #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table th {\\n    @apply tw-text-center ;\\n}\\n\\n:host ::ng-deep .p-datepicker-touch-ui, .p-calendar .p-datepicker-touch-ui {\\n    @apply tw-min-w-fit tw-top-2/3 #{!important};\\n}\\n\\n:host ::ng-deep .p-calendar ::placeholder {\\n    @apply tw-text-sub-text-color #{!important};\\n}\\n\\n:host ::ng-deep .p-calendar .p-inputtext {\\n    @apply tw-p-0 tw-bg-white tw-border-0 tw-cursor-pointer tw-transition-none\\t;\\n}\\n\\n:host ::ng-deep .p-dialog {\\n    @apply tw-max-h-full tw-m-0 #{!important};\\n}","styleUrl":"./export-log-filter.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":26},"extends":[],"implements":["OnInit"],"templateData":"<div [formGroup]=\\"exportLogForm\\" class=\\"tw-flex tw-items-center tw-p-24-px\\">\\n\\n    <span class=\\"custom-search-field\\" [ngStyle]=\\"{ \'border-color\': isSearchFocused ? \'black\' : \'#ccc\' }\\">\\n        <i class=\\"pi pi-search\\"></i>\\n        <input class=\\"tw-pb-1 tw-pt-1 tw-text-14-px\\" type=\\"text\\" (input)=\\"filterTable($event)\\" (focus)=\\"isSearchFocused = true\\" (blur)=\\"isSearchFocused = false\\" placeholder=\\"Search by Employee Name or Expense ID\\" />\\n    </span>\\n    <div class=\\"tw-flex tw-mr-4\\"></div>\\n    <span [ngClass]=\\"{\'tw-border-black\': isDateFieldFocused}\\" class=\\"tw-flex tw-justify-start tw-items-center tw-border tw-border-box-color tw-pl-12-px tw-rounded-4-px drop-down\\">\\n        <div>\\n            <svg-icon-sprite src=\\"calender\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-placeholder\\"></svg-icon-sprite>\\n        </div>\\n        <p-dropdown placeholder=\\"Select date range\\" appendTo=\\"body\\" [options]=\\"dateOptions\\"\\n        formControlName=\\"dateRange\\" (click)=\\"dropDownWatcher()\\" (onFocus)=\\"isDateFieldFocused = true\\" (onBlur)=\\"isDateFieldFocused = false\\"\\n        [ngClass]=\\"{\'selectedItem\': exportLogForm.controls.dateRange.value, \'filterDropdown\': !exportLogForm.controls.dateRange.value}\\">\\n            <ng-template let-item pTemplate=\\"selectedItem\\">\\n                <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                    <span>\\n                        <div *ngIf=\\"exportLogForm.controls.dateRange.value\\">\\n                            <div class=\\"my-dropdown-selected-item\\">\\n                                {{exportLogForm.controls.dateRange.value.dateRange}}\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\"!exportLogForm.controls.dateRange.value\\">\\n                            <div class=\\"my-dropdown-selected-item tw-text-placeholder tw-text-14-px\\">\\n                                Select date range\\n                            </div>\\n                        </div>\\n                    </span>\\n                    <i class=\\"pi pi-times\\" (click)=\\"removeFilter(exportLogForm.controls.dateRange)\\"></i>\\n                </div>\\n            </ng-template>\\n            <ng-template let-date pTemplate=\\"item\\">\\n                <div>\\n                    <p-calendar (click)=\\"showCalendar($event)\\" placeholder=\\"Custom dates\\" formControlName=\\"start\\" (onClose)=\\"getDates()\\" [touchUI]=\\"isCalendarVisible\\" *ngIf=\\"date.dateRange === presentDate\\" selectionMode=\\"range\\" [readonlyInput]=\\"true\\" inputId=\\"range\\"></p-calendar>\\n                    <p class=\\"tw-text-sub-text-color tw-text-14-px\\" [ngClass]=\\"{\'!tw-text-mandatory-field-color\' : exportLogForm.controls.dateRange.value === date }\\" *ngIf=\\"date.dateRange !== presentDate\\">{{ date.dateRange | titlecase | snakeCaseToSpaceCase }}</p>\\n                    <p class=\\"tw-text-sub-text-color tw-text-12-px\\" *ngIf=\\"date.dateRange !== presentDate && date.dateRange !== \'Today\'\\">{{date.startDate | date : \'MMM dd, yyyy\'}} - {{date.endDate | date : \'MMM dd, yyyy\'}}</p>\\n                    <p class=\\"tw-text-sub-text-color tw-text-12-px\\" *ngIf=\\"date.dateRange === \'Today\'\\">{{date.startDate | date : \'MMM dd, yyyy\'}}</p>\\n                </div>\\n            </ng-template> \\n        </p-dropdown>\\n    </span>\\n</div>"},{"name":"ExportLogTableComponent","id":"component-ExportLogTableComponent-6de4cd97ee8b6342045918df4a87b9cc69485bc2a305a2daf93c8b7133e59fd18be60013be0dfd7950466cdc59026af09e39f42f447c3e15014146cf3ec42948","file":"src/app/shared/components/export-log/export-log-table/export-log-table.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-export-log-table","styleUrls":["./export-log-table.component.scss"],"styles":[],"templateUrl":["./export-log-table.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appName","deprecated":false,"deprecationMessage":"","line":18,"type":"AppName","decorators":[]},{"name":"filteredExpenseGroups","deprecated":false,"deprecationMessage":"","line":16,"type":"AccountingExportList[]","decorators":[]},{"name":"isDashboardFailed","deprecated":false,"deprecationMessage":"","line":22,"type":"boolean","decorators":[]},{"name":"isExportLogTable","deprecated":false,"deprecationMessage":"","line":20,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"BrandingConfiguration","optional":false,"description":"","line":26},{"name":"expenses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":24},{"name":"isChildTableVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28}],"methodsClass":[{"name":"displayChildTable","args":[{"name":"rowData","type":"AccountingExportList","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rowData","type":"AccountingExportList","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleDialogClose","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""},{"name":"openUrl","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { BrandingConfiguration } from \'src/app/core/models/branding/branding-configuration.model\';\\nimport { AccountingExportList } from \'src/app/core/models/db/accounting-export.model\';\\nimport { AppName } from \'src/app/core/models/enum/enum.model\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\n\\n@Component({\\n  selector: \'app-export-log-table\',\\n  templateUrl: \'./export-log-table.component.html\',\\n  styleUrls: [\'./export-log-table.component.scss\']\\n})\\nexport class ExportLogTableComponent implements OnInit {\\n\\n  @Input() filteredExpenseGroups: AccountingExportList [];\\n\\n  @Input() appName: AppName;\\n\\n  @Input() isExportLogTable: boolean;\\n\\n  @Input() isDashboardFailed: boolean;\\n\\n  expenses: Expense [] = [];\\n\\n  brandingConfig: BrandingConfiguration = brandingConfig;\\n\\n  isChildTableVisible: boolean = false;\\n\\n  constructor(\\n    private windowService: WindowService\\n  ) { }\\n\\n  handleDialogClose(){\\n    this.isChildTableVisible = false;\\n  }\\n\\n  displayChildTable(rowData: AccountingExportList) {\\n    if (this.isExportLogTable) {\\n      this.expenses = rowData.expenses;\\n      this.isChildTableVisible = true;\\n    }\\n  }\\n\\n  openUrl(url: string) {\\n    this.windowService.openInNewTab(url);\\n    event?.stopPropagation();\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".clickable-row:hover {\\n    cursor: pointer;\\n    &:hover {\\n        background: #FAFCFF;\\n      }\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {\\n  @apply tw-text-sub-text-color tw-text-14-px tw-font-400 tw-py-14-px tw-px-22-px tw-border-t tw-border-b-0 tw-border-t-box-color  #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\\n  @apply tw-text-slightly-normal-text-color tw-text-12-px tw-font-500 tw-py-12-px tw-px-22-px tw-border tw-border-box-color tw-bg-disabled-bg-color #{!important}\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td > button {\\n  @apply tw-pl-48-px #{!important};\\n}","styleUrl":"./export-log-table.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":28,"jsdoctags":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<p-table *ngIf=\\"filteredExpenseGroups.length > 0\\" #dt1 [value]=\\"filteredExpenseGroups\\">\\n    <ng-template pTemplate=\\"header\\">\\n        <tr>\\n            <th *ngIf=\\"!isDashboardFailed\\">Date and Time of Export</th>\\n            <th>Employee Name and ID</th>\\n            <th *ngIf=\\"isExportLogTable\\">Expense Type</th>\\n            <th>Reference ID</th>\\n            <th *ngIf=\\"!isDashboardFailed\\">Exported As</th>\\n            <th *ngIf=\\"!isDashboardFailed\\">Link to {{appName}}</th>\\n            <th *ngIf=\\"isDashboardFailed\\">Link to {{ brandingConfig.brandName }}</th>\\n        </tr>\\n    </ng-template>\\n\\n    <ng-template pTemplate=\\"body\\" let-rowData>\\n        <tr class=\\"clickable-row\\" (click)=\\"displayChildTable(rowData)\\">\\n            <td *ngIf=\\"!isDashboardFailed\\">\\n                <p class=\\"tw-font-400 tw-text-sub-text-color\\">{{rowData.exportedAt | date}}</p>\\n                <span class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">{{rowData.exportedAt | date : \\"HH:ss\\"}}</span>\\n            </td>\\n            <td>\\n                <h4>\\n                    {{rowData.employee[0]}}\\n                </h4>\\n                <h5 class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">\\n                    {{rowData.employee[1]}}\\n                </h5>\\n            </td>\\n            <td *ngIf=\\"isExportLogTable\\">{{rowData.expenseType | titlecase}}</td>\\n            <td class=\\"tw-underline\\" (click)=\\"openUrl(rowData.fyleUrl)\\">{{rowData.referenceNumber}}</td>\\n            <td *ngIf=\\"!isDashboardFailed\\">{{rowData.exportedAs | snakeCaseToSpaceCase | titlecase}}</td>\\n            <td *ngIf=\\"!isDashboardFailed\\">\\n                <div>\\n                  <button (click)=\\"openUrl(rowData.integrationUrl)\\" pTooltip=\\"Open in New Tab\\" tooltipPosition=\\"top\\">\\n                    <svg-icon-sprite class=\\"tw-pt-5-px\\" src=\\"open-in-new-tab\\" width=\\"20px\\" height=\\"20px\\"></svg-icon-sprite>\\n                  </button>\\n                </div>\\n            </td>\\n            <td *ngIf=\\"isDashboardFailed\\">\\n                <div>\\n                  <button (click)=\\"openUrl(rowData.fyleUrl)\\" pTooltip=\\"Open in New Tab\\" tooltipPosition=\\"top\\">\\n                    <svg-icon-sprite class=\\"tw-pt-5-px\\" src=\\"open-in-new-tab\\" width=\\"20px\\" height=\\"20px\\"></svg-icon-sprite>\\n                  </button>\\n                </div>\\n            </td>\\n        </tr>\\n    </ng-template>\\n</p-table>\\n\\n<app-export-log-child-table-dialog [isDialogOpen]=\\"isChildTableVisible\\" [expenses]=\\"expenses\\" (hideChildTable)=\\"handleDialogClose()\\"></app-export-log-child-table-dialog>"},{"name":"ExportSettingComponent","id":"component-ExportSettingComponent-b4485232160d96c3d60a3ba4a5b9b0312145744dfb6d8a450ddebc4d77e1c80ac51f8377e105d1c9f2bdfd80f43db5b9b795f198ed6842f7034fd5c03fe0435d","file":"src/app/shared/components/qbd/configuration/export-setting/export-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-export-setting","styleUrls":["./export-setting.component.scss"],"styles":[],"templateUrl":["./export-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":103,"modifierKind":[148]},{"name":"cccEntityNameOptions","defaultValue":"[\\n    {\\n      label: \'Employee\',\\n      value: QBDEntity.EMPLOYEE\\n    },\\n    {\\n      label: \'Vendor\',\\n      value: QBDEntity.VENDOR\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":86},{"name":"cccExpenseGroupingDateOptions","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":62},{"name":"cccExpenseStateOptions","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":34},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28},{"name":"creditCardExportTypes","defaultValue":"[\\n    {\\n      label: \'Credit Card Purchase\',\\n      value: QBDCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE\\n    },\\n    {\\n      label: \'Journal Entry\',\\n      value: QBDCorporateCreditCardExpensesObject.JOURNAL_ENTRY\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":64},{"name":"customMessage","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":99},{"name":"expenseGroupingFieldOptions","defaultValue":"[\\n    {\\n      label: \'Report\',\\n      value: QBDExpenseGroupedBy.REPORT\\n    },\\n    {\\n      label: \'Expense\',\\n      value: QBDExpenseGroupedBy.EXPENSE\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":40},{"name":"expenseStateOptions","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":32},{"name":"exportSettings","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingGet","optional":false,"description":"","line":97},{"name":"exportSettingsForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":26},{"name":"is_simplify_report_closure_enabled","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":36},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"isOnboarding","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"QBDReimbursableExpensesObject","defaultValue":"QBDReimbursableExpensesObject","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30},{"name":"redirectLink","defaultValue":"brandingKbArticles.topLevelArticles.QBD","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38},{"name":"reimbursableExpenseGroupingDateOptions","defaultValue":"[\\n    {\\n      label: \'Spend Date\',\\n      value: QBDExportDateType.SPENT_AT\\n    },\\n    {\\n      label: \'Date of export\',\\n      value: QBDExportDateType.LAST_SPENT_AT\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":51},{"name":"reimbursableExportTypes","defaultValue":"[\\n    {\\n      label: \'Bill\',\\n      value: QBDReimbursableExpensesObject.BILL\\n    },\\n    {\\n      label: \'Journal Entry\',\\n      value: QBDReimbursableExpensesObject.JOURNAL_ENTRY\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":75},{"name":"saveInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":101,"modifierKind":[123]}],"methodsClass":[{"name":"accountName","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":""},{"name":"CCCExportGroupWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":131,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"CCCExportTypeWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":353,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createCreditCardExpenseWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":196,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createReimbursableExpenseWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":173,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"exportSelectionValidator","args":[],"optional":false,"returnType":"ValidatorFn","typeParameters":[],"line":235,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"exportType","args":[{"name":"exportTypeValue","type":"string","deprecated":false,"deprecationMessage":""},{"name":"exportTypeOptions","type":"QBDExportSettingFormOption[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":169,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"exportTypeValue","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportTypeOptions","type":"QBDExportSettingFormOption[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getPhase","args":[],"optional":false,"returnType":"ProgressPhase","typeParameters":[],"line":349,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":297,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"namePreference","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":""},{"name":"navigateToMapping","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":393,"deprecated":false,"deprecationMessage":""},{"name":"reimbursableExpenseGroupingDateOptionsFn","args":[],"optional":false,"returnType":"QBDExportSettingFormOption[]","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":387,"deprecated":false,"deprecationMessage":""},{"name":"setCreditCardExpenseGroupingDateOptions","args":[{"name":"cccExportType","type":"QBDCorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":""},{"name":"cccExportGroup","type":"QBDExpenseGroupedBy","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"cccExportType","type":"QBDCorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"cccExportGroup","type":"QBDExpenseGroupedBy","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setExportSettingValidatorsAndWatchers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":224,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupCCCExpenseGroupingDateOptions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":288,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setUpExpenseStates","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":264,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormBuilder, FormGroup, ValidatorFn, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { QBDCorporateCreditCardExpensesObject, ConfigurationCta, QBDExpenseGroupedBy, ExpenseState, QBDExportDateType, QBDReimbursableExpensesObject, QBDOnboardingState, QBDEntity, ToastSeverity, ClickEvent, Page, ProgressPhase, UpdateEvent, CCCExpenseState } from \'src/app/core/models/enum/enum.model\';\\nimport { ExportSettingModel, QBDExportSettingFormOption, QBDExportSettingGet } from \'src/app/core/models/qbd/qbd-configuration/export-setting.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { QbdExportSettingService } from \'src/app/core/services/qbd/qbd-configuration/qbd-export-setting.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { QbdWorkspaceService } from \'src/app/core/services/qbd/qbd-core/qbd-workspace.service\';\\nimport { QbdMappingService } from \'src/app/core/services/qbd/qbd-mapping/qbd-mapping.service\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-export-setting\',\\n  templateUrl: \'./export-setting.component.html\',\\n  styleUrls: [\'./export-setting.component.scss\']\\n})\\nexport class ExportSettingComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  saveInProgress: boolean = false;\\n\\n  isOnboarding: boolean = true;\\n\\n  exportSettingsForm: FormGroup;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  QBDReimbursableExpensesObject= QBDReimbursableExpensesObject;\\n\\n  expenseStateOptions: QBDExportSettingFormOption[];\\n\\n  cccExpenseStateOptions: QBDExportSettingFormOption[];\\n\\n  is_simplify_report_closure_enabled: boolean = false;\\n\\n  redirectLink = brandingKbArticles.topLevelArticles.QBD;\\n\\n  expenseGroupingFieldOptions: QBDExportSettingFormOption[] = [\\n    {\\n      label: \'Report\',\\n      value: QBDExpenseGroupedBy.REPORT\\n    },\\n    {\\n      label: \'Expense\',\\n      value: QBDExpenseGroupedBy.EXPENSE\\n    }\\n  ];\\n\\n  reimbursableExpenseGroupingDateOptions: QBDExportSettingFormOption[] = [\\n    {\\n      label: \'Spend Date\',\\n      value: QBDExportDateType.SPENT_AT\\n    },\\n    {\\n      label: \'Date of export\',\\n      value: QBDExportDateType.LAST_SPENT_AT\\n    }\\n  ];\\n\\n  cccExpenseGroupingDateOptions: QBDExportSettingFormOption[];\\n\\n  creditCardExportTypes: QBDExportSettingFormOption[] = [\\n    {\\n      label: \'Credit Card Purchase\',\\n      value: QBDCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE\\n    },\\n    {\\n      label: \'Journal Entry\',\\n      value: QBDCorporateCreditCardExpensesObject.JOURNAL_ENTRY\\n    }\\n  ];\\n\\n  reimbursableExportTypes: QBDExportSettingFormOption[] = [\\n    {\\n      label: \'Bill\',\\n      value: QBDReimbursableExpensesObject.BILL\\n    },\\n    {\\n      label: \'Journal Entry\',\\n      value: QBDReimbursableExpensesObject.JOURNAL_ENTRY\\n    }\\n  ];\\n\\n  cccEntityNameOptions: QBDExportSettingFormOption[] = [\\n    {\\n      label: \'Employee\',\\n      value: QBDEntity.EMPLOYEE\\n    },\\n    {\\n      label: \'Vendor\',\\n      value: QBDEntity.VENDOR\\n    }\\n  ];\\n\\n  exportSettings: QBDExportSettingGet;\\n\\n  customMessage: string;\\n\\n  private sessionStartTime = new Date();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private router: Router,\\n    private exportSettingService: QbdExportSettingService,\\n    private formBuilder: FormBuilder,\\n    private workspaceService: QbdWorkspaceService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService,\\n    private mappingService: QbdMappingService\\n  ) { }\\n\\n  navigateToMapping() {\\n    this.router.navigate([`/integrations/qbd/main/mapping`]);\\n  }\\n\\n  reimbursableExpenseGroupingDateOptionsFn(): QBDExportSettingFormOption[] {\\n    const reimbursableExpenseGroup: QBDExportSettingFormOption[] = [];\\n    reimbursableExpenseGroup.push(this.reimbursableExpenseGroupingDateOptions[1]);\\n    return reimbursableExpenseGroup;\\n  }\\n\\n  private CCCExportTypeWatcher(): void {\\n    this.exportSettingsForm.controls.cccExportType.valueChanges.subscribe((cccExportType: QBDCorporateCreditCardExpensesObject) => {\\n      this.setCreditCardExpenseGroupingDateOptions(cccExportType, this.exportSettingsForm.controls.cccExportGroup.value);\\n    });\\n  }\\n\\n  private CCCExportGroupWatcher(): void {\\n    this.exportSettingsForm.controls.cccExportGroup.valueChanges.subscribe((cccExportGroup: QBDExpenseGroupedBy) => {\\n      this.setCreditCardExpenseGroupingDateOptions(this.exportSettingsForm.controls.cccExportType.value, cccExportGroup);\\n    });\\n  }\\n\\n  private setCreditCardExpenseGroupingDateOptions(cccExportType: QBDCorporateCreditCardExpensesObject, cccExportGroup: QBDExpenseGroupedBy) : void {\\n    if (cccExportType === QBDCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE){\\n      this.cccExpenseGroupingDateOptions = [\\n        {\\n          label: \'Card Transaction Post date\',\\n          value: QBDExportDateType.POSTED_AT\\n        },\\n        {\\n          label: \'Spend Date\',\\n          value: QBDExportDateType.SPENT_AT\\n        }\\n      ];\\n    } else if (cccExportType === QBDCorporateCreditCardExpensesObject.JOURNAL_ENTRY && cccExportGroup === QBDExpenseGroupedBy.EXPENSE) {\\n      this.cccExpenseGroupingDateOptions = this.reimbursableExpenseGroupingDateOptions.concat([{\\n        label: \'Card Transaction Post date\',\\n        value: QBDExportDateType.POSTED_AT\\n      }]);\\n    } else {\\n      this.cccExpenseGroupingDateOptions = [this.reimbursableExpenseGroupingDateOptions[1]];\\n    }\\n  }\\n\\n  namePreference(): string {\\n    return `Grouping reflects how the expense entries of a ${this.exportType(this.exportSettingsForm.value.cccExportType, this.creditCardExportTypes) } are posted in QuickBooks Desktop.`;\\n  }\\n\\n  accountName(): string {\\n    const name = this.exportSettingsForm.value.reimbursableExportType === QBDReimbursableExpensesObject.BILL ? \'Accounts Payable\' : \'Bank\';\\n    this.customMessage = \'Please enter \' + name + \' name\';\\n    return name;\\n  }\\n\\n  exportType(exportTypeValue:string, exportTypeOptions: QBDExportSettingFormOption[]) {\\n    return exportTypeValue === exportTypeOptions[0].value ? exportTypeOptions[0].label : exportTypeOptions[1].label;\\n  }\\n\\n  private createReimbursableExpenseWatcher(): void {\\n    this.exportSettingsForm.controls.reimbursableExpense.valueChanges.subscribe((isReimbursableExpenseSelected) => {\\n      if (isReimbursableExpenseSelected) {\\n        this.exportSettingsForm.controls.reimbursableExportType.setValidators(Validators.required);\\n        this.exportSettingsForm.controls.reimbursableExportGroup.setValidators(Validators.required);\\n        this.exportSettingsForm.controls.reimbursableExportDate.setValidators(Validators.required);\\n        this.exportSettingsForm.controls.reimbursableExpenseState.setValidators(Validators.required);\\n        this.exportSettingsForm.controls.bankAccount.setValidators(Validators.required);\\n      } else {\\n        this.exportSettingsForm.controls.reimbursableExportType.clearValidators();\\n        this.exportSettingsForm.controls.reimbursableExportGroup.clearValidators();\\n        this.exportSettingsForm.controls.reimbursableExportDate.clearValidators();\\n        this.exportSettingsForm.controls.reimbursableExpenseState.clearValidators();\\n        this.exportSettingsForm.controls.bankAccount.clearValidators();\\n        this.exportSettingsForm.controls.bankAccount.setValue(null);\\n        this.exportSettingsForm.controls.reimbursableExpenseState.setValue(null);\\n        this.exportSettingsForm.controls.reimbursableExportType.setValue(null);\\n        this.exportSettingsForm.controls.reimbursableExportGroup.setValue(null);\\n        this.exportSettingsForm.controls.reimbursableExportDate.setValue(null);\\n      }\\n    });\\n  }\\n\\n  private createCreditCardExpenseWatcher(): void {\\n    this.exportSettingsForm.controls.creditCardExpense.valueChanges.subscribe((isCreditCardExpenseSelected) => {\\n      if (isCreditCardExpenseSelected) {\\n        this.exportSettingsForm.controls.cccExportType.setValidators(Validators.required);\\n        this.exportSettingsForm.controls.cccExportGroup.setValidators(Validators.required);\\n        this.exportSettingsForm.controls.cccExportGroup.patchValue(this.exportSettings?.credit_card_expense_grouped_by ? this.exportSettings?.credit_card_expense_grouped_by : this.expenseGroupingFieldOptions[1].value);\\n        this.exportSettingsForm.controls.cccExportDate.setValidators(Validators.required);\\n        this.exportSettingsForm.controls.cccExportDate.patchValue(this.exportSettings?.credit_card_expense_date ? this.exportSettings?.credit_card_expense_date : this.cccExpenseGroupingDateOptions[0].value);\\n        this.exportSettingsForm.controls.cccEntityName.setValidators(Validators.required);\\n        this.exportSettingsForm.controls.cccExpenseState.setValidators(Validators.required);\\n        this.exportSettingsForm.controls.cccAccountName.setValidators(Validators.required);\\n      } else {\\n        this.exportSettingsForm.controls.cccExportType.clearValidators();\\n        this.exportSettingsForm.controls.cccExportGroup.clearValidators();\\n        this.exportSettingsForm.controls.cccExportDate.clearValidators();\\n        this.exportSettingsForm.controls.cccEntityName.clearValidators();\\n        this.exportSettingsForm.controls.cccExpenseState.clearValidators();\\n        this.exportSettingsForm.controls.cccAccountName.clearValidators();\\n        this.exportSettingsForm.controls.cccExportType.setValue(null);\\n        this.exportSettingsForm.controls.cccExpenseState.setValue(null);\\n        this.exportSettingsForm.controls.cccAccountName.setValue(null);\\n        this.exportSettingsForm.controls.cccExportGroup.setValue(null);\\n        this.exportSettingsForm.controls.cccExportDate.setValue(null);\\n        this.exportSettingsForm.controls.cccEntityName.setValue(null);\\n      }\\n    });\\n  }\\n\\n  private setExportSettingValidatorsAndWatchers(): void {\\n\\n    // Toggles\\n    this.createReimbursableExpenseWatcher();\\n    this.createCreditCardExpenseWatcher();\\n\\n    // CCCDateoptions\\n    this.CCCExportGroupWatcher();\\n    this.CCCExportTypeWatcher();\\n  }\\n\\n  private exportSelectionValidator(): ValidatorFn {\\n    return (control: AbstractControl): {[key: string]: object} | null => {\\n      let forbidden = true;\\n      if (this.exportSettingsForm ) {\\n        if (typeof control.value === \'boolean\') {\\n          if (control.value) {\\n            forbidden = false;\\n          } else {\\n            if (control.parent?.get(\'reimbursableExpense\')?.value || control.parent?.get(\'creditCardExpense\')?.value) {\\n              forbidden = false;\\n            }\\n          }\\n        } else if ((control.value === ExpenseState.PAID || control.value === ExpenseState.PAYMENT_PROCESSING) && (control.parent?.get(\'reimbursableExpense\')?.value || control.parent?.get(\'creditCardExpense\')?.value)) {\\n          forbidden = false;\\n        }\\n        if (!forbidden) {\\n          control.parent?.get(\'reimbursableExpense\')?.setErrors(null);\\n          control.parent?.get(\'creditCardExpense\')?.setErrors(null);\\n          return null;\\n        }\\n      }\\n      return {\\n        forbiddenOption: {\\n          value: control.value\\n        }\\n      };\\n    };\\n  }\\n\\n  private setUpExpenseStates(): void {\\n    this.cccExpenseStateOptions = [\\n      {\\n        label: this.is_simplify_report_closure_enabled ? \'Approved\' : \'Payment Processing\',\\n        value: this.is_simplify_report_closure_enabled ? CCCExpenseState.APPROVED: CCCExpenseState.PAYMENT_PROCESSING\\n      },\\n      {\\n        label: this.is_simplify_report_closure_enabled ? \'Closed\' : \'Paid\',\\n        value: CCCExpenseState.PAID\\n      }\\n    ];\\n\\n    this.expenseStateOptions = [\\n      {\\n        label: this.is_simplify_report_closure_enabled ? \'Processing\' : \'Payment Processing\',\\n        value: ExpenseState.PAYMENT_PROCESSING\\n      },\\n      {\\n        label: this.is_simplify_report_closure_enabled ? \'Closed\' : \'Paid\',\\n        value: ExpenseState.PAID\\n      }\\n    ];\\n  }\\n\\n  private setupCCCExpenseGroupingDateOptions(): void {\\n    if (this.exportSettings?.credit_card_expense_export_type) {\\n      const creditCardExpenseExportGroup = this.exportSettings?.credit_card_expense_grouped_by ? this.exportSettings?.credit_card_expense_grouped_by : QBDExpenseGroupedBy.EXPENSE;\\n      this.setCreditCardExpenseGroupingDateOptions(this.exportSettings?.credit_card_expense_export_type, creditCardExpenseExportGroup);\\n    } else {\\n      this.setCreditCardExpenseGroupingDateOptions(QBDCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE, QBDExpenseGroupedBy.EXPENSE);\\n    }\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    this.isLoading = true;\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    this.exportSettingService.getQbdExportSettings().subscribe((exportSettingResponse : QBDExportSettingGet) => {\\n      this.exportSettings = exportSettingResponse;\\n      this.is_simplify_report_closure_enabled = this.exportSettings?.is_simplify_report_closure_enabled;\\n      this.setUpExpenseStates();\\n      this.setupCCCExpenseGroupingDateOptions();\\n\\n      this.exportSettingsForm = this.formBuilder.group({\\n        reimbursableExportType: [this.exportSettings?.reimbursable_expenses_export_type],\\n        reimbursableExpense: [this.exportSettings?.reimbursable_expenses_export_type ? true : false, this.exportSelectionValidator()],\\n        reimbursableExportGroup: [this.exportSettings?.reimbursable_expense_grouped_by ? this.exportSettings?.reimbursable_expense_grouped_by : null],\\n        reimbursableExportDate: [this.exportSettings?.reimbursable_expense_date ? this.exportSettings?.reimbursable_expense_date : null],\\n        creditCardExpense: [this.exportSettings?.credit_card_expense_export_type ? true : false, this.exportSelectionValidator()],\\n        cccExportType: [this.exportSettings?.credit_card_expense_export_type ? this.exportSettings?.credit_card_expense_export_type : null],\\n        cccExportGroup: [this.exportSettings?.credit_card_expense_grouped_by ? this.exportSettings?.credit_card_expense_grouped_by : this.expenseGroupingFieldOptions[1].value],\\n        cccExportDate: [this.exportSettings?.credit_card_expense_date ? this.exportSettings?.credit_card_expense_date : this.cccExpenseGroupingDateOptions[0].value],\\n        bankAccount: [this.exportSettings?.bank_account_name ? this.exportSettings?.bank_account_name : null],\\n        mileageAccountName: [this.exportSettings?.mileage_account_name ? this.exportSettings?.mileage_account_name : null],\\n        cccEntityName: [this.exportSettings?.credit_card_entity_name_preference ? this.exportSettings?.credit_card_entity_name_preference : null],\\n        cccAccountName: [this.exportSettings?.credit_card_account_name ? this.exportSettings?.credit_card_account_name : null],\\n        reimbursableExpenseState: [this.exportSettings?.reimbursable_expense_state ? this.exportSettings?.reimbursable_expense_state : null],\\n        cccExpenseState: [this.exportSettings?.credit_card_expense_state ? this.exportSettings?.credit_card_expense_state : null]\\n      });\\n      this.setExportSettingValidatorsAndWatchers();\\n      this.isLoading = false;\\n    }, () => {\\n        this.setUpExpenseStates();\\n        this.setupCCCExpenseGroupingDateOptions();\\n        this.exportSettingsForm = this.formBuilder.group({\\n          reimbursableExportType: [null],\\n          reimbursableExpense: [false, this.exportSelectionValidator()],\\n          reimbursableExportGroup: [this.expenseGroupingFieldOptions[1].value],\\n          reimbursableExportDate: [null],\\n          creditCardExpense: [false, this.exportSelectionValidator()],\\n          cccExportType: [null],\\n          cccExportGroup: [this.expenseGroupingFieldOptions[1].value],\\n          cccExportDate: [this.cccExpenseGroupingDateOptions[0].value],\\n          bankAccount: [null],\\n          mileageAccountName: [null],\\n          cccEntityName: [null],\\n          cccAccountName: [null],\\n          reimbursableExpenseState: [null],\\n          cccExpenseState: [null]\\n        });\\n        this.setExportSettingValidatorsAndWatchers();\\n        this.isLoading = false;\\n      }\\n    );\\n  }\\n\\n  private getPhase(): ProgressPhase {\\n    return this.isOnboarding ? ProgressPhase.ONBOARDING : ProgressPhase.POST_ONBOARDING;\\n  }\\n\\n  private constructPayloadAndSave(): void {\\n    this.saveInProgress = true;\\n    const exportSettingPayload = ExportSettingModel.constructPayload(this.exportSettingsForm);\\n    this.exportSettingService.postQbdExportSettings(exportSettingPayload).subscribe((response: QBDExportSettingGet) => {\\n      this.saveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Export settings saved successfully\');\\n      this.mappingService.refreshMappingPages();\\n      this.trackingService.trackTimeSpent(Page.EXPORT_SETTING_QBD, this.sessionStartTime);\\n      if (this.workspaceService.getOnboardingState() === QBDOnboardingState.EXPORT_SETTINGS) {\\n        this.trackingService.onOnboardingStepCompletion(QBDOnboardingState.EXPORT_SETTINGS, 2, exportSettingPayload);\\n      } else {\\n        this.trackingService.onUpdateEvent(\\n          UpdateEvent.ADVANCED_SETTINGS_QBD,\\n          {\\n            phase: this.getPhase(),\\n            oldState: this.exportSettings,\\n            newState: response\\n          }\\n        );\\n      }\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(QBDOnboardingState.FIELD_MAPPINGS);\\n        this.router.navigate([`/integrations/qbd/onboarding/field_mappings`]);\\n      }\\n\\n\\n    }, () => {\\n      this.saveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving export settings, please try again later\');\\n      });\\n  }\\n\\n\\n  save(): void {\\n    if (this.exportSettingsForm.valid) {\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSettingsAndSetupForm();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .error-box {\\n    @apply tw-border-alert-toast #{!important};\\n}\\n\\n:host ::ng-deep .normal-box  {\\n    @apply tw-border-box-color #{!important};\\n}\\n\\n:host ::ng-deep .normal-box :enabled:focus-visible {\\n    @apply tw-border-slightly-normal-text-color #{!important};\\n}","styleUrl":"./export-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"exportSettingService","type":"QbdExportSettingService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"QbdMappingService","deprecated":false,"deprecationMessage":""}],"line":103,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportSettingService","type":"QbdExportSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"QbdMappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header \\n        [headerText]=\\"\'Export Settings\'\\"\\n        [contentText]=\\"\'In this section, you can configure how and when expenses from \' + brandingConfig.brandName + \' can be exported to QuickBooks Desktop.\'\\"\\n        [redirectLink]=\\"redirectLink\\"></app-configuration-step-header>\\n    </div>\\n    <div>\\n        <form [formGroup]=\\"exportSettingsForm\\">\\n            <div class=\\"tw-p-24-px\\">\\n                <div class=\\"tw-mb-16-px\\">\\n                    <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg\\">\\n                        <app-configuration-toggle-field \\n                        [form]=\\"exportSettingsForm\\"\\n                        [label]=\\"\'Export Reimbursable Expenses\'\\" \\n                        [subLabel]=\\"\'Enable this to export the reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any <b>out-of-pocket</b> expenses will not be exported to QuickBooks Desktop.\'\\" \\n                        [formControllerName]=\\"\'reimbursableExpense\'\\"\\n                        [isSectionHeader]=\\"true\\"></app-configuration-toggle-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingsForm.value.reimbursableExpense\\">\\n                        <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <app-configuration-radio-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'how expenses to be exported\'\\"\\n                            [label]=\\"\'How should the expenses be exported?\'\\"\\n                            [subLabel]=\\"\'Choose the type of transaction in QuickBooks Desktop to export your \' + brandingConfig.brandName + \' expenses.\'\\"\\n                            [options]=\\"reimbursableExportTypes\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [formControllerName]=\\"\'reimbursableExportType\'\\"></app-configuration-radio-field>\\n\\n                            <div *ngIf=\\"exportSettingsForm.value.reimbursableExportType\\">\\n                                <div class=\\"tw-pl-16 tw-pt-16-px tw-pr-24-px tw-pb-24-px tw-flex tw-flex-row tw-space-between\\">\\n                                    <div class=\\"lg:tw-w-3/5 md:tw-w-1/2\\">\\n                                        <h4 class=\\"!tw-text-14-px !tw-font-500\\">To which {{ accountName() }} account should the {{ exportType(exportSettingsForm.value.reimbursableExportType, reimbursableExportTypes) }} be posted to?<app-mandatory-field></app-mandatory-field></h4>\\n                                        <h5 class=\\"!tw-text-faded-text-color !tw-font-400 !tw-text-14-px tw-pt-6-px !tw-leading-4\\">Please share the exact name of the {{ accountName() }} account as per your QuickBooks Desktop setup. This is the account to which all the expenses from {{brandingConfig.brandName}} will be posted. </h5>\\n                                    </div>\\n\\n                                    <div class=\\"tw-pl-18-px\\">\\n                                        <input type=\\"text\\" class=\\"tw-w-300-px !tw-px-10-px !tw-py-8-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\"[ngClass]=\\"[exportSettingsForm.controls.bankAccount.invalid && exportSettingsForm.controls.bankAccount.touched ? \'error-box\' : \'normal-box\']\\"  pInputText formControlName=\\"bankAccount\\" placeholder=\\"Enter {{ exportSettingsForm.value.reimbursableExportType === QBDReimbursableExpensesObject.BILL ? \'Accounts Payable\' : \'Bank\'}} Name\\" [required]=\\"exportSettingsForm.value.reimbursableExpense\\"> \\n                                        <app-mandatory-error-message *ngIf=\\"true && exportSettingsForm.controls.bankAccount.touched && !exportSettingsForm.controls.bankAccount.valid && !exportSettingsForm.controls.bankAccount.disabled\\" [customErrorMessage]=\\"customMessage\\"></app-mandatory-error-message>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div *ngIf=\\"exportSettingsForm.value.reimbursableExportType\\">\\n                                <div class=\\"tw-pl-16 tw-pt-16-px tw-pr-24-px tw-pb-24-px tw-flex tw-flex-row tw-space-between\\">\\n                                    <div class=\\"lg:tw-w-3/5 md:tw-w-1/2\\">\\n                                        <h4 class=\\"!tw-text-14-px !tw-font-500\\">To which account should the Mileage expenses be posted to?</h4>\\n                                        <h5 class=\\"!tw-text-faded-text-color !tw-font-400 !tw-text-14-px tw-pt-6-px !tw-leading-4\\">Please share the exact name of the Mileage account as per your QuickBooks Desktop setup. This is the account to which all the mileage expenses from {{ brandingConfig.brandName }} will be posted.</h5>\\n                                    </div>\\n                            \\n                                    <div class=\\"tw-pl-18-px\\">\\n                                        <input type=\\"text\\" class=\\"tw-w-300-px !tw-px-10-px !tw-py-8-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\"  pInputText formControlName=\\"mileageAccountName\\" placeholder=\\"Enter Mileage Account Name\\"> \\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <app-configuration-radio-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'how expenses to be grouped\'\\"\\n                            [label]=\\"\'How would you like to group your expenses?\'\\"\\n                            [subLabel]=\\"\'Grouping reflects how the expense entries are posted in QuickBooks Desktop.\'\\"\\n                            [options]=\\"expenseGroupingFieldOptions\\"\\n                            [iconPath]=\\"\'copy-v2\'\\"\\n                            [formControllerName]=\\"\'reimbursableExportGroup\'\\"></app-configuration-radio-field>\\n                        </div>\\n                        <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <div *ngIf=\\"exportSettingsForm.controls.reimbursableExportGroup.value === expenseGroupingFieldOptions[0].value\\">\\n                                <app-configuration-select-field\\n                                [form]=\\"exportSettingsForm\\"\\n                                [label]=\\"\'Set the transaction date\'\\"\\n                                [subLabel]=\\"\'The selected date will reflect in expenses exported to QuickBooks Desktop\'\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'transaction date\'\\"\\n                                [options]=\\"reimbursableExpenseGroupingDateOptionsFn()\\"\\n                                [iconPath]=\\"\'calender\'\\"\\n                                [placeholder]=\\"\'Select date type\'\\"\\n                                [formControllerName]=\\"\'reimbursableExportDate\'\\"></app-configuration-select-field>\\n                            </div>\\n                            <div *ngIf=\\"exportSettingsForm.controls.reimbursableExportGroup.value === expenseGroupingFieldOptions[1].value\\">\\n                                <app-configuration-select-field\\n                                [form]=\\"exportSettingsForm\\"\\n                                [label]=\\"\'Set the transaction date\'\\"\\n                                [subLabel]=\\"\'The selected date will reflect in expenses exported to QuickBooks Desktop\'\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'transaction date\'\\"\\n                                [options]=\\"reimbursableExpenseGroupingDateOptions\\"\\n                                [iconPath]=\\"\'calender\'\\"\\n                                [placeholder]=\\"\'Select date type\'\\"\\n                                [formControllerName]=\\"\'reimbursableExportDate\'\\"></app-configuration-select-field>\\n                            </div>\\n                        </div>\\n                        <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <app-configuration-select-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export state\'\\"\\n                            [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                            [subLabel]=\\"\'You could choose to export expenses when they have been approved and are awaiting payment clearance, OR simply when they have been paid out.\'\\"\\n                            [options]=\\"expenseStateOptions\\"\\n                            [iconPath]=\\"\'questionmark\'\\"\\n                            [placeholder]=\\"\'Select expense state \'\\"\\n                            [formControllerName]=\\"\'reimbursableExpenseState\'\\"></app-configuration-select-field>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div>\\n                    <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg\\">\\n                        <app-configuration-toggle-field \\n                        [form]=\\"exportSettingsForm\\"\\n                        [label]=\\"\'Export Corporate Card Expenses\'\\" \\n                        [subLabel]=\\"\'Enable the export of <b>credit card</b> expenses from \' + brandingConfig.brandName + \' to QuickBooks Desktop.\'\\"\\n                        [formControllerName]=\\"\'creditCardExpense\'\\"\\n                        [isSectionHeader]=\\"true\\"></app-configuration-toggle-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingsForm.value.creditCardExpense\\">\\n                        <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <app-configuration-radio-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'expenses to be exported\'\\"\\n                            [label]=\\"\'How should the expenses be exported?\'\\"\\n                            [subLabel]=\\"\'Choose the type of transaction in QuickBooks Desktop to export your \' + brandingConfig.brandName + \' expenses.\'\\"\\n                            [options]=\\"creditCardExportTypes\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [formControllerName]=\\"\'cccExportType\'\\"></app-configuration-radio-field>\\n\\n                            <div *ngIf=\\"exportSettingsForm.value.cccExportType\\">\\n                                <div class=\\"tw-pl-16 tw-pt-16-px tw-pr-24-px tw-pb-24-px tw-flex tw-flex-row tw-space-between\\">\\n                                    <div class=\\"lg:tw-w-3/5 md:tw-w-1/2\\">\\n                                        <h4 class=\\"!tw-text-14-px !tw-font-500\\">Enter the Credit card account name<app-mandatory-field></app-mandatory-field></h4>\\n                                        <h5 class=\\"!tw-text-faded-text-color !tw-font-400 !tw-text-14-px tw-pt-6-px !tw-leading-4\\">Please share the exact name of the Credit Card Account as per your QuickBooks Desktop setup. This is the account to which all the expenses from {{brandingConfig.brandName}} will be posted. </h5>\\n                                    </div>\\n\\n                                    <div class=\\"tw-pl-18-px\\">\\n                                        <input type=\\"text\\" class=\\"tw-w-300-px !tw-px-10-px !tw-py-8-px tw-border tw-border-solid !tw-border-separator tw-rounded-4-px\\" [ngClass]=\\"[exportSettingsForm.controls.cccAccountName.invalid && exportSettingsForm.controls.cccAccountName.touched ? \'error-box\' : \'normal-box\']\\" pInputText formControlName=\\"cccAccountName\\" placeholder=\\"Enter Credit Card Account Name\\" [required]=\\"exportSettingsForm.value.creditCardExpense\\"> \\n                                        <app-mandatory-error-message *ngIf=\\"true && exportSettingsForm.controls.cccAccountName.touched && !exportSettingsForm.controls.cccAccountName.valid && !exportSettingsForm.controls.cccAccountName.disabled\\" [customErrorMessage]=\\"\'Please enter a Credit Card Account name\'\\"></app-mandatory-error-message>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\"tw-pl-16 tw-pr-24-px\\">\\n                                    <div class=\\"tw-p-12-px tw-bg-info-section tw-rounded-4-px tw-flex tw-flex-row tw-items-start\\">\\n                                        <div class=\\"tw-mr-6-px tw-mt-2-px\\">\\n                                            <div class=\\"tw-w-4 tw-h-4 tw-rounded-full tw-bg-info tw-flex tw-items-center tw-justify-center\\">\\n                                                <strong class=\\"tw-text-white tw-text-12-px tw-font-bold\\">i</strong>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\"tw-text-14-px tw-text-400 tw-text-faded-text-color\\">\\n                                            <span *ngIf=\\"isOnboarding\\" class=\\"tw-max-w-sm tw-break-words\\">If you wish to export expenses to individual credit card accounts, you can establish credit card mappings in the integration dashboard after launching the integration.</span>\\n                                            <span *ngIf=\\"!isOnboarding\\" class=\\"tw-max-w-sm tw-break-words\\">If you wish to export expenses to individual credit card accounts, you can establish credit card mappings in the <a class=\\"tw-text-hyperlink-color tw-cursor-pointer\\" (click)=\\"navigateToMapping()\\">Mapping section</a>.</span>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div>\\n                                    <app-configuration-select-field\\n                                        [form]=\\"exportSettingsForm\\"\\n                                        [isFieldMandatory]=\\"true\\"\\n                                        [mandatoryErrorListName]=\\"\'entity name\'\\"\\n                                        [label]=\\"\'Set the PURCHASED FROM field to\'\\"\\n                                        [subLabel]=\\"\'Select how the Vendor or Employee should be represented as Payee for the credit card purchase.\'\\"\\n                                        [options]=\\"cccEntityNameOptions\\"\\n                                        [placeholder]=\\"\'Select Credit Card Entity Name Preference\'\\"\\n                                        [formControllerName]=\\"\'cccEntityName\'\\"></app-configuration-select-field>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <div *ngIf=\\"exportSettingsForm.value.cccExportType === creditCardExportTypes[0].value\\">\\n                                <app-configuration-label\\n                                [label]=\\"\'How would you like to group your expenses?\'\\"\\n                                [subLabel]=\\"\'Grouping reflects how the expense entries are posted in QuickBooks Desktop.\'\\"\\n                                [labelValue]=\\"expenseGroupingFieldOptions[1]\\"\\n                                [iconPath]=\\"\'copy-v2\'\\"></app-configuration-label>\\n                            </div>\\n                            <div *ngIf=\\"exportSettingsForm.value.cccExportType !== creditCardExportTypes[0].value\\">\\n                                <app-configuration-radio-field\\n                                [form]=\\"exportSettingsForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'expense to be grouped\'\\"\\n                                [label]=\\"\'How would you like to group your expenses?\'\\"\\n                                [subLabel]=\\"\'Grouping reflects how the expense entries are posted in QuickBooks Desktop.\'\\"\\n                                [options]=\\"expenseGroupingFieldOptions\\"\\n                                [iconPath]=\\"\'copy-v2\'\\"\\n                                [formControllerName]=\\"\'cccExportGroup\'\\"></app-configuration-radio-field>\\n                            </div>\\n                        </div>\\n                        <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingsForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'transaction date\'\\"\\n                                [label]=\\"\'Set the transaction date\'\\"\\n                                [subLabel]=\\"\'The selected date will reflect in expenses exported to QuickBooks Desktop\'\\"\\n                                [options]=\\"cccExpenseGroupingDateOptions\\"\\n                                [iconPath]=\\"\'calender\'\\"\\n                                [placeholder]=\\"\'Select date type\'\\"\\n                                [formControllerName]=\\"\'cccExportDate\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n                        <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <app-configuration-select-field\\n                            [form]=\\"exportSettingsForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'expense state\'\\"\\n                            [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                            [subLabel]=\\"\'You could choose to export expenses when they have been approved and are awaiting payment clearance, OR simply when they have been paid out.\'\\"\\n                            [options]=\\"cccExpenseStateOptions\\"\\n                            [iconPath]=\\"\'questionmark\'\\"\\n                            [placeholder]=\\"\'Select expense state \'\\"\\n                            [formControllerName]=\\"\'cccExpenseState\'\\"></app-configuration-select-field>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div>\\n                <app-configuration-step-footer [ctaText]=\\"!saveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" [isButtonDisabled]=\\"!exportSettingsForm.valid || saveInProgress\\" (save)=\\"save()\\"></app-configuration-step-footer>\\n            </div>\\n        </form>\\n    </div>\\n</div>"},{"name":"FieldMappingComponent","id":"component-FieldMappingComponent-d3b4b5a97d153e8c61d68c6aa589fcb8df2db75b6492671d7fb349a415b070d132908632d2a479cf13eda61e7c421300b3f2c712b5f89bd16fde969315ebdc99","file":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-field-mapping","styleUrls":["./field-mapping.component.scss"],"styles":[],"templateUrl":["./field-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":47,"modifierKind":[148]},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":28},{"name":"fieldMapping","deprecated":false,"deprecationMessage":"","type":"QBDFieldMappingGet","optional":false,"description":"","line":45},{"name":"fieldMappingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":24},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"isOnboarding","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"redirectLink","defaultValue":"brandingKbArticles.topLevelArticles.QBD","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":30},{"name":"representationOption","defaultValue":"[\\n    {\\n      label: \'Project\',\\n      value: QBDFyleField.PROJECT\\n    },\\n    {\\n      label: \'Cost Center\',\\n      value: QBDFyleField.COST_CENTER\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingFormOption[]","optional":false,"description":"","line":32},{"name":"saveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":43,"modifierKind":[123]}],"methodsClass":[{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":""},{"name":"getPhase","args":[],"optional":false,"returnType":"ProgressPhase","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"mappingFieldFormOptionsFunction","args":[{"name":"formControllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"QBDExportSettingFormOption[]","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"formControllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { ConfigurationCta, QBDOnboardingState, QBDFyleField, ToastSeverity, ClickEvent, Page, ProgressPhase, UpdateEvent } from \'src/app/core/models/enum/enum.model\';\\nimport { QBDExportSettingFormOption } from \'src/app/core/models/qbd/qbd-configuration/export-setting.model\';\\nimport { FieldMappingModel, QBDFieldMappingGet } from \'src/app/core/models/qbd/qbd-configuration/field-mapping.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { QbdFieldMappingService } from \'src/app/core/services/qbd/qbd-configuration/qbd-field-mapping.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { QbdWorkspaceService } from \'src/app/core/services/qbd/qbd-core/qbd-workspace.service\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-field-mapping\',\\n  templateUrl: \'./field-mapping.component.html\',\\n  styleUrls: [\'./field-mapping.component.scss\']\\n})\\nexport class FieldMappingComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  saveInProgress: boolean;\\n\\n  fieldMappingForm: FormGroup;\\n\\n  isOnboarding: boolean = true;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  redirectLink = brandingKbArticles.topLevelArticles.QBD;\\n\\n  representationOption: QBDExportSettingFormOption[] = [\\n    {\\n      label: \'Project\',\\n      value: QBDFyleField.PROJECT\\n    },\\n    {\\n      label: \'Cost Center\',\\n      value: QBDFyleField.COST_CENTER\\n    }\\n  ];\\n\\n  private sessionStartTime = new Date();\\n\\n  fieldMapping: QBDFieldMappingGet;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private router: Router,\\n    private formBuilder: FormBuilder,\\n    private fieldMappingService: QbdFieldMappingService,\\n    private workspaceService: QbdWorkspaceService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService\\n  ) { }\\n\\n  mappingFieldFormOptionsFunction(formControllerName: string): QBDExportSettingFormOption[] {\\n    return this.representationOption.filter(option => {\\n      return option.value !== this.fieldMappingForm.value[formControllerName];\\n    });\\n  }\\n\\n  private getPhase(): ProgressPhase {\\n    return this.isOnboarding ? ProgressPhase.ONBOARDING : ProgressPhase.POST_ONBOARDING;\\n  }\\n\\n  constructPayloadAndSave(): void {\\n    this.saveInProgress = true;\\n    const fieldMappingPayload = FieldMappingModel.constructPayload(this.fieldMappingForm);\\n\\n    this.fieldMappingService.postQbdFieldMapping(fieldMappingPayload).subscribe((response: QBDFieldMappingGet) => {\\n      this.saveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Field mapping saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.FIELD_MAPPING_QBD, this.sessionStartTime);\\n      if (this.workspaceService.getOnboardingState() === QBDOnboardingState.FIELD_MAPPINGS) {\\n        this.trackingService.onOnboardingStepCompletion(QBDOnboardingState.FIELD_MAPPINGS, 3, fieldMappingPayload);\\n      } else {\\n        this.trackingService.onUpdateEvent(\\n          UpdateEvent.ADVANCED_SETTINGS_QBD,\\n          {\\n            phase: this.getPhase(),\\n            oldState: this.fieldMapping,\\n            newState: response\\n          }\\n        );\\n      }\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(QBDOnboardingState.ADVANCED_SETTINGS);\\n        this.router.navigate([`/integrations/qbd/onboarding/advanced_settings`]);\\n      }\\n    }, () => {\\n      this.saveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving field mapping, please try again later\');\\n      });\\n  }\\n\\n  save(): void {\\n    if (this.fieldMappingForm.valid) {\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    this.isLoading = true;\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    this.fieldMappingService.getQbdFieldMapping().subscribe((fieldMappingResponse : QBDFieldMappingGet) => {\\n      this.fieldMapping = fieldMappingResponse;\\n      this.fieldMappingForm = this.formBuilder.group({\\n        classType: [this.fieldMapping?.class_type ? this.fieldMapping?.class_type : null],\\n        customerType: [this.fieldMapping?.project_type ? this.fieldMapping?.project_type : null]\\n      });\\n      this.isLoading = false;\\n    }, () => {\\n        this.fieldMappingForm = this.formBuilder.group({\\n          classType: [null],\\n          customerType: [null]\\n        });\\n        this.isLoading = false;\\n      }\\n    );\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSettingsAndSetupForm();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./field-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"fieldMappingService","type":"QbdFieldMappingService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""}],"line":47,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"fieldMappingService","type":"QbdFieldMappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header \\n        [headerText]=\\"\'Field Mapping\'\\"\\n        [contentText]=\\"\'In this section, choose appropriate representation of your Customers & Classes on \' + brandingConfig.brandName + \'.\'\\"\\n        [redirectLink]=\\"redirectLink\\"></app-configuration-step-header>\\n    </div>\\n    <div>\\n        <form [formGroup]=\\"fieldMappingForm\\">\\n            <div class=\\"tw-p-24-px\\">\\n                <div class=\\"tw-mb-16-px\\">\\n                    <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"fieldMappingForm\\"\\n                        [label]=\\"\'How to map CUSTOMER: JOB in QuickBooks Desktop to \' + brandingConfig.brandName + \'\'\\"\\n                        [subLabel]=\\"\'Select the field in \' + brandingConfig.brandName + \' that needs to be mapped to the \\\\\'Customers\\\\\' field in QuickBooks Desktops\'\\"\\n                        [options]=\\"mappingFieldFormOptionsFunction(\'classType\')\\"\\n                        [iconPath]=\\"\'people\'\\"\\n                        [placeholder]=\\"\'Select representation\'\\"\\n                        [formControllerName]=\\"\'customerType\'\\"></app-configuration-select-field>\\n                    </div>\\n                    <div class=\\"tw-mt-12-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"fieldMappingForm\\"\\n                        [label]=\\"\'How to map CLASS in QuickBooks Desktop to \' + brandingConfig.brandName + \'\'\\"\\n                        [subLabel]=\\"\'Select the field in \' + brandingConfig.brandName + \' that needs to be mapped to the \\\\\'Class\\\\\' field in QuickBooks Desktops\'\\"\\n                        [options]=\\"mappingFieldFormOptionsFunction(\'customerType\')\\"\\n                        [iconPath]=\\"\'expense\'\\"\\n                        [placeholder]=\\"\'Select representation\'\\"\\n                        [formControllerName]=\\"\'classType\'\\"></app-configuration-select-field>\\n                    </div>\\n                </div> \\n            </div>\\n            <div>\\n                <app-configuration-step-footer [ctaText]=\\"!saveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" [isButtonDisabled]=\\"!fieldMappingForm.valid || saveInProgress\\" (save)=\\"save()\\"></app-configuration-step-footer>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n"},{"name":"GenericMappingComponent","id":"component-GenericMappingComponent-a261d6a64149514493b09289aa81722c7f3ebc3daf734f3ae5cf048150328efb8ea8d506f3aba54e6cfbce8f546960e63cfa0a18d1fff0479fef54248070069b","file":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-generic-mapping","styleUrls":["./generic-mapping.component.scss"],"styles":[],"templateUrl":["./generic-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[148]},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":38},{"name":"destinationFieldType","defaultValue":"FieldType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":42},{"name":"filteredMappings","deprecated":false,"deprecationMessage":"","type":"Mapping[]","optional":false,"description":"","line":24},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":18},{"name":"limit","defaultValue":"10","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":28},{"name":"mappings","deprecated":false,"deprecationMessage":"","type":"MappingResponse","optional":false,"description":"","line":22},{"name":"mappingStats","deprecated":false,"deprecationMessage":"","type":"MappingStats","optional":false,"description":"","line":20},{"name":"operationgSystem","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44},{"name":"pageNo","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30},{"name":"PaginatorPage","defaultValue":"PaginatorPage","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":36},{"name":"searchValue","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40},{"name":"selectedMappingFilter","defaultValue":"MappingState.ALL","deprecated":false,"deprecationMessage":"","type":"MappingState","optional":false,"description":"","line":34},{"name":"sourceType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":26},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":32}],"methodsClass":[{"name":"getFilteredMappings","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getOperatingSystem","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":""},{"name":"mappingSeachingFilter","args":[{"name":"searchValue","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"searchValue","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mappingStateFilter","args":[{"name":"state","type":"MappingState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"MappingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":""},{"name":"pageOffsetChanges","args":[{"name":"pageNo","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"pageNo","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postMapping","args":[{"name":"mappingPayload","type":"MappingPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mappingPayload","type":"MappingPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { FieldType, MappingState, PaginatorPage, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { Mapping, MappingPost, MappingResponse, MappingStats } from \'src/app/core/models/qbd/db/mapping.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { QbdMappingService } from \'src/app/core/services/qbd/qbd-mapping/qbd-mapping.service\';\\n\\n@Component({\\n  selector: \'app-generic-mapping\',\\n  templateUrl: \'./generic-mapping.component.html\',\\n  styleUrls: [\'./generic-mapping.component.scss\']\\n})\\nexport class GenericMappingComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  mappingStats: MappingStats;\\n\\n  mappings: MappingResponse;\\n\\n  filteredMappings: Mapping[];\\n\\n  sourceType: string;\\n\\n  limit: number = 10;\\n\\n  pageNo: number = 0;\\n\\n  totalCount: number;\\n\\n  selectedMappingFilter: MappingState = MappingState.ALL;\\n\\n  PaginatorPage = PaginatorPage;\\n\\n  currentPage: number = 1;\\n\\n  searchValue: string;\\n\\n  destinationFieldType = FieldType;\\n\\n  operationgSystem: string;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private mappingService: QbdMappingService,\\n    private route: ActivatedRoute,\\n    private toastService: IntegrationsToastService,\\n    private window: WindowService\\n  ) { }\\n\\n  private getFilteredMappings(): void {\\n    this.mappingService.getMappings(this.limit, this.pageNo, this.sourceType, this.selectedMappingFilter).subscribe((qbdMappingResult: MappingResponse) => {\\n      this.filteredMappings = qbdMappingResult.results.concat();\\n      this.totalCount = qbdMappingResult.count;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  getOperatingSystem(): void {\\n    this.operationgSystem = this.window.getOperatingSystem();\\n  }\\n\\n  mappingSeachingFilter(searchValue: string): void {\\n    if (searchValue.length > 0) {\\n      const results: Mapping[] = this.mappings.results.filter((mapping) =>\\n        mapping.source_value.toLowerCase().includes(searchValue)\\n      );\\n      this.filteredMappings = results;\\n    } else {\\n      this.filteredMappings = this.mappings.results.concat();\\n    }\\n    this.totalCount = this.filteredMappings.length;\\n  }\\n\\n  postMapping(mappingPayload: MappingPost): void {\\n    this.mappingService.postMappings(mappingPayload).subscribe(() => {\\n      this.mappingService.getMappingStats(this.sourceType).subscribe((mappingStat: MappingStats) => {\\n        this.mappingStats = mappingStat;\\n        this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Changes saved successfully\');\\n      });\\n    }, () => {\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving the mappings, please try again later\');\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    this.limit = limit;\\n    this.pageNo = 0;\\n    this.currentPage = 1;\\n    this.getFilteredMappings();\\n  }\\n\\n  pageOffsetChanges(pageNo: number): void {\\n    this.isLoading = true;\\n    this.pageNo = pageNo;\\n    this.currentPage = Math.ceil(this.pageNo / this.limit)+1;\\n    this.getFilteredMappings();\\n  }\\n\\n  mappingStateFilter(state: MappingState): void {\\n    this.isLoading = true;\\n    this.selectedMappingFilter = state;\\n    this.currentPage = 1;\\n    this.limit = 10;\\n    this.pageNo = 0;\\n    this.getFilteredMappings();\\n  }\\n\\n  private setupPage(): void {\\n    this.isLoading = true;\\n    this.sourceType = decodeURIComponent(decodeURIComponent(this.route.snapshot.params.source_field));\\n    forkJoin([\\n      this.mappingService.getMappingStats(this.sourceType),\\n      this.mappingService.getMappings(this.limit, this.pageNo, this.sourceType, MappingState.ALL)\\n    ]).subscribe((response) => {\\n      this.mappingStats = response[0];\\n      this.mappings = response[1];\\n      this.filteredMappings = this.mappings.results.concat();\\n      this.totalCount = this.mappings.count;\\n      this.getOperatingSystem();\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .prevBtn:disabled > .pi-chevron-left,:host ::ng-deep .nextBtn:disabled > .pi-chevron-right,\\n:host ::ng-deep .prevBtn:disabled > .pi-minus, :host ::ng-deep .nextBtn:disabled > .pi-minus {\\n    @apply tw-text-placeholder #{!important};\\n}\\n\\n:host ::ng-deep .mappingFilterDropdown .p-dropdown {\\n    @apply tw-w-200-px #{!important}\\n}\\n\\n:host ::ng-deep .mapped {\\n    @apply tw-text-11-px tw-rounded-full tw-border tw-border-solid tw-border-mapped-green-border tw-bg-mapped-green-bg tw-py-4-px tw-px-12-px tw-text-success-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .unmapped {\\n    @apply tw-text-11-px tw-rounded-full tw-border tw-border-solid tw-border-unmapped-red-border tw-bg-unmapped-red-bg tw-py-4-px tw-px-12-px tw-text-alert-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .filterDropdown .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-10-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-5-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n\\n:host ::ng-deep .filterDropdown  .p-dropdown-trigger {\\n    @apply tw-block #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n    @apply tw-w-32-px #{!important};\\n}\\n\\n:host ::ng-deep .textbox {\\n    @apply tw-border-r-0 #{!important}\\n}","styleUrl":"./generic-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"mappingService","type":"QbdMappingService","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"window","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":46,"jsdoctags":[{"name":"mappingService","type":"QbdMappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"window","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-16-px tw-px-120-px\\">\\n    <div>\\n        <app-mapping-header-section [sourceType]=\\"\'Corporate Card\'\\" [mappingStats]=\\"mappingStats\\"></app-mapping-header-section>\\n    </div>\\n\\n    <div class=\\"tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator tw-mt-16-px\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <app-mapping-filter [mappingFilter]=\\"selectedMappingFilter\\" (mappingFilterChangeEvent)=\\"mappingStateFilter($event)\\" (mappingSearchingEvent)=\\"mappingSeachingFilter($event)\\" [isAlphabetFilterHidden]=\\"true\\"></app-mapping-filter>\\n        </div>\\n        <div *ngIf=\\"totalCount > 0\\" >\\n            <app-mapping-table [mappings]=\\"filteredMappings\\" [destinationFieldType]=\\"destinationFieldType.TEXT\\" [fyleHeaderName]=\\"\'Corporate Card in \' + brandingConfig.brandName + \'\'\\" [destinationHeaderName]=\\"\'QuickBooks Desktop Credit Card Account\'\\" [operatingSystem]=\\"operationgSystem\\" (postMapping)=\\"postMapping($event)\\"></app-mapping-table>\\n        </div>\\n        <div class=\\"tw-p-24-px tw-border tw-border-t-separator\\" *ngIf=\\"totalCount > 0\\" >\\n            <app-paginator [totalCount]=\\"totalCount\\" [pageType]=\\"PaginatorPage.MAPPING\\" [page]=\\"currentPage\\" [dropDownValue]=\\"limit\\" (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" (pageOffsetChangeEvent)=\\"pageOffsetChanges($event)\\"></app-paginator>\\n        </div>\\n        <div *ngIf=\\"totalCount === 0\\">\\n            <app-zero-state-with-illustration [mainText]=\\"\'No corporate card to show yet!\'\\" [subText]=\\"\'Add corporate cards to \' + brandingConfig.brandName + \' to map them to individual credit card account in QuickBooks Desktop\'\\"></app-zero-state-with-illustration>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"GenericMappingComponent","id":"component-GenericMappingComponent-22b47aa5695b24d38a2c02f2ec876a8eca0403b32a19ca57ada2dad609d28178b38f604515edac6a1dcac6fe506b140bb4e8dee915164846b4c0c54ee9526415-1","file":"src/app/integrations/si/main/mapping/generic-mapping/generic-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-generic-mapping","styleUrls":["./generic-mapping.component.scss"],"styles":[],"templateUrl":["./generic-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"alphabetFilter","defaultValue":"\'All\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":66},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":68,"modifierKind":[148]},{"name":"configuration","deprecated":false,"deprecationMessage":"","type":"Configuration","optional":false,"description":"","line":28},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":58},{"name":"destinationFieldType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":62},{"name":"dropdownOptions","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":38},{"name":"filteredMappingCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":50},{"name":"filteredMappings","deprecated":false,"deprecationMessage":"","type":"ExtendedExpenseAttribute[]","optional":false,"description":"","line":36},{"name":"isInitialSetupComplete","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":52},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":44},{"name":"mappings","deprecated":false,"deprecationMessage":"","type":"ExtendedExpenseAttribute[]","optional":false,"description":"","line":34},{"name":"mappingSetting","deprecated":false,"deprecationMessage":"","type":"MinimalMappingSetting","optional":false,"description":"","line":30},{"name":"mappingStats","deprecated":false,"deprecationMessage":"","type":"MappingStats","optional":false,"description":"","line":32},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":46},{"name":"operationgSystem","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":64},{"name":"page","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":40},{"name":"PaginatorPage","defaultValue":"PaginatorPage","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56},{"name":"searchValue","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":60},{"name":"selectedMappingFilter","defaultValue":"MappingState.ALL","deprecated":false,"deprecationMessage":"","type":"MappingState","optional":false,"description":"","line":54},{"name":"sourceType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":42},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":48}],"methodsClass":[{"name":"getDropdownValue","args":[{"name":"mapping","type":"ExtendedExpenseAttribute","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mapping","type":"ExtendedExpenseAttribute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFilteredMappings","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":112,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"mappingFilterUpdate","args":[{"name":"alphabet","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"alphabet","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mappingSearchFilter","args":[{"name":"searchValue","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"searchValue","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mappingStateFilter","args":[{"name":"state","type":"MappingState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"MappingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":""},{"name":"pageOffsetChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":132,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[{"name":"selectedRow","type":"ExtendedExpenseAttribute","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedRow","type":"ExtendedExpenseAttribute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":167,"deprecated":false,"deprecationMessage":""},{"name":"tableDropdownWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { MappingState, PaginatorPage, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { MappingStats } from \'src/app/core/models/qbd/db/mapping.model\';\\nimport { Configuration } from \'src/app/core/models/db/configuration.model\';\\nimport { MinimalMappingSetting } from \'src/app/core/models/si/db/mapping-setting.model\';\\nimport { MappingPost } from \'src/app/core/models/si/db/mapping.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { TitleCasePipe } from \'@angular/common\';\\nimport { SnakeCaseToSpaceCasePipe } from \'src/app/shared/pipes/snake-case-to-space-case.pipe\';\\nimport { ExtendedExpenseAttribute, ExtendedExpenseAttributeResponse } from \'src/app/core/models/si/db/expense-attribute.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { PaginatorService } from \'src/app/core/services/si/si-core/paginator.service\';\\nimport { IntacctDestinationAttribute } from \'src/app/core/models/si/db/destination-attribute.model\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-generic-mapping\',\\n  templateUrl: \'./generic-mapping.component.html\',\\n  styleUrls: [\'./generic-mapping.component.scss\']\\n})\\nexport class GenericMappingComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  configuration: Configuration;\\n\\n  mappingSetting: MinimalMappingSetting;\\n\\n  mappingStats: MappingStats;\\n\\n  mappings: ExtendedExpenseAttribute[];\\n\\n  filteredMappings: ExtendedExpenseAttribute[];\\n\\n  dropdownOptions: IntacctDestinationAttribute[];\\n\\n  page: string;\\n\\n  sourceType: string;\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  totalCount: number;\\n\\n  filteredMappingCount: number;\\n\\n  isInitialSetupComplete: boolean = false;\\n\\n  selectedMappingFilter: MappingState = MappingState.ALL;\\n\\n  PaginatorPage = PaginatorPage;\\n\\n  currentPage: number = 1;\\n\\n  searchValue: string;\\n\\n  destinationFieldType: string;\\n\\n  operationgSystem: string;\\n\\n  alphabetFilter: string = \'All\';\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private paginatorService: PaginatorService,\\n    private route: ActivatedRoute,\\n    private toastService: IntegrationsToastService,\\n    private mappingService: SiMappingsService\\n  ) { }\\n\\n  tableDropdownWidth() {\\n    const element = document.querySelector(\'.p-dropdown-panel.p-component.ng-star-inserted\') as HTMLElement;\\n    if (element) {\\n      element.style.width = \'300px\';\\n    }\\n  }\\n\\n  getDropdownValue(mapping: ExtendedExpenseAttribute) {\\n    if (mapping.mapping.length) {\\n      return mapping.mapping[0].destination;\\n    }\\n    return null;\\n  }\\n\\n  save(selectedRow: ExtendedExpenseAttribute, event:any) {\\n    const payload: MappingPost = {\\n      source_type: this.mappingSetting.source_field,\\n      source_value: selectedRow.value,\\n      destination_type: this.mappingSetting.destination_field,\\n      destination_id: event.value.destination_id,\\n      destination_value: event.value.value\\n    };\\n    this.mappingService.postMapping(payload).subscribe((response) => {\\n      // Decrement unmapped count only for new mappings, ignore updates\\n      if (!selectedRow.mapping.length) {\\n        this.mappingStats.unmapped_attributes_count -= 1;\\n      }\\n\\n      selectedRow.mapping = [response];\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Mapping saved successfully\');\\n    }, () => {\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Something went wrong\');\\n    });\\n  }\\n\\n  private getFilteredMappings() {\\n    this.mappingService.getMappings(this.selectedMappingFilter, this.limit, this.offset, this.sourceType, this.mappingSetting.destination_field, this.alphabetFilter).subscribe((response: ExtendedExpenseAttributeResponse) => {\\n      this.filteredMappings = response.results.concat();\\n      this.filteredMappingCount = this.filteredMappings.length;\\n      this.totalCount = response.count;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.MAPPING, limit);\\n    }\\n    this.limit = limit;\\n    this.offset = 0;\\n    this.currentPage = 1;\\n    this.getFilteredMappings();\\n  }\\n\\n  pageOffsetChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.offset = offset;\\n    this.currentPage = Math.ceil(this.offset / this.limit)+1;\\n    this.getFilteredMappings();\\n  }\\n\\n  mappingFilterUpdate(alphabet: string) {\\n    this.isLoading = true;\\n    this.alphabetFilter = alphabet;\\n    this.currentPage = 1;\\n    this.offset = 0;\\n    this.getFilteredMappings();\\n  }\\n\\n  mappingStateFilter(state: MappingState): void {\\n    this.isLoading = true;\\n    this.selectedMappingFilter = state;\\n    this.currentPage = 1;\\n    this.offset = 0;\\n    this.getFilteredMappings();\\n  }\\n\\n  mappingSearchFilter(searchValue: string) {\\n    if (searchValue.length > 0) {\\n      const results: ExtendedExpenseAttribute[] = this.filteredMappings.filter((mapping) =>\\n        mapping.value?.toLowerCase().includes(searchValue)\\n      );\\n      this.filteredMappings = results;\\n    } else {\\n      this.filteredMappings = this.mappings.concat();\\n    }\\n    this.filteredMappingCount = this.filteredMappings.length;\\n  }\\n\\n  setupPage() {\\n    this.isLoading = true;\\n    this.sourceType = decodeURIComponent(decodeURIComponent(this.route.snapshot.params.source_field));\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.MAPPING);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n\\n    forkJoin([\\n      this.mappingService.getConfiguration(),\\n      this.mappingService.getMappingSettings()\\n    ]).subscribe((response) => {\\n      const mappingSetting = response[1].results.filter((mappingSetting) => mappingSetting.source_field === this.sourceType.toUpperCase());\\n      this.mappingSetting = mappingSetting[0];\\n      this.destinationFieldType = this.mappingSetting.destination_field;\\n      this.page = `${new TitleCasePipe().transform(new SnakeCaseToSpaceCasePipe().transform(this.mappingSetting.source_field))} Mapping`;\\n      this.configuration = response[0];\\n      forkJoin([\\n        this.mappingService.getSageIntacctDestinationAttributes(this.mappingSetting.destination_field),\\n        this.mappingService.getMappingStats(this.sourceType.toUpperCase(), this.mappingSetting.destination_field),\\n        this.mappingService.getMappings(MappingState.ALL, this.limit, this.offset, this.sourceType, this.mappingSetting.destination_field, this.alphabetFilter)\\n      ]).subscribe(([options, mappingStats, mappings]) => {\\n        this.mappingStats = mappingStats;\\n        this.totalCount = mappings.count;\\n        if (!this.isInitialSetupComplete) {\\n          this.filteredMappingCount = mappings.count;\\n        }\\n        this.isInitialSetupComplete = true;\\n        this.mappings = mappings.results;\\n        this.filteredMappings = this.mappings.concat();\\n        this.dropdownOptions = options;\\n        this.isLoading = false;\\n      });\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.route.params.subscribe(() => {\\n      this.isLoading = true;\\n      this.setupPage();\\n    });\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .prevBtn:disabled > .pi-chevron-left,:host ::ng-deep .nextBtn:disabled > .pi-chevron-right,\\n:host ::ng-deep .prevBtn:disabled > .pi-minus, :host ::ng-deep .nextBtn:disabled > .pi-minus {\\n    @apply tw-text-placeholder #{!important};\\n}\\n\\n:host ::ng-deep .mappingFilterDropdown .p-dropdown {\\n    @apply tw-w-200-px #{!important}\\n}\\n\\n:host ::ng-deep .mapped {\\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-mapped-green-border tw-bg-mapped-green-bg tw-py-4-px tw-px-12-px tw-text-success-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .unmapped {\\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-unmapped-red-border tw-bg-unmapped-red-bg tw-py-4-px tw-px-12-px tw-text-alert-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .filterDropdown .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-10-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-5-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n\\n:host ::ng-deep .filterDropdown  .p-dropdown-trigger {\\n    @apply tw-block #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n    @apply tw-w-32-px #{!important};\\n}\\n\\n:host ::ng-deep .textbox {\\n    @apply tw-border-r-0 #{!important}\\n}\\n\\nth {\\n    @apply tw-text-12-px tw-text-normal-text-color tw-font-500 tw-h-40-px tw-py-10-px #{!important};\\n}\\n\\ntd {\\n    @apply tw-text-14-px tw-text-sub-text-color tw-font-400 #{!important};\\n}\\n\\n.pi-check:before {\\n    @apply tw-text-14-px tw-cursor-pointer tw-text-faded-text-color #{!important};\\n}\\n\\n:host ::ng-deep .tooltip-main {\\n    @apply tw-px-6 tw-pb-4 tw-text-center #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-save {\\n    @apply tw-text-12-px #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-return {\\n    @apply tw-mt-6-px tw-px-4-px tw-py-4-px tw-text-9-px tw-rounded-md tw-bg-placeholder  #{!important}\\n}","styleUrl":"./generic-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""}],"line":68,"jsdoctags":[{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"GenericMappingComponent-1","templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-16-px tw-px-120-px\\">\\n    <div class=\\"tw-inline-flex tw-space-x-4\\">\\n        <div class=\\"tw-rounded-10-px tw-bg-white tw-border-1-px tw-border-separator tw-p-16-px tw-w-200-px tw-h-84-px\\">\\n            <div class=\\"tw-w-36-px tw-h-6-px tw-rounded-12-px tw-bg-cta-disabled\\">\\n            </div>\\n            <div class=\\"tw-pt-8-px tw-text-faded-text-color tw-text-12-px\\">\\n                <p>Total {{ this.sourceType | snakeCaseToSpaceCase | titlecase }}{{mappingStats.all_attributes_count > 0 ? \'s\' : \'\'}}</p>\\n            </div>\\n            <div class=\\"tw-text-20-px tw-text-500 tw-text-slightly-normal-text-color\\">\\n                <p>{{mappingStats?.all_attributes_count}}</p>\\n            </div>\\n        </div>\\n    \\n        <div class=\\"tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator tw-p-16-px tw-w-200-px tw-h-84-px\\">\\n            <div class=\\"tw-w-36-px tw-h-6-px tw-rounded-12-px tw-bg-cta-disabled\\">\\n            </div>\\n            <div class=\\"tw-pt-8-px tw-text-faded-text-color tw-text-12-px\\">\\n                <p>Unmapped {{ this.sourceType | snakeCaseToSpaceCase | titlecase }}{{mappingStats.unmapped_attributes_count > 0 ? \'s\' : \'\'}}</p>\\n            </div>\\n            <div class=\\"tw-text-20-px tw-text-500 tw-text-slightly-normal-text-color\\">\\n                <p>{{mappingStats?.unmapped_attributes_count}}</p>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\"tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator tw-mt-16-px\\">\\n        <div class=\\"tw-p-24-px tw-border-b-separator\\">\\n            <app-mapping-filter [selectedAlphabeticalFilter]=\\"alphabetFilter\\" [mappingFilter]=\\"selectedMappingFilter\\" (mappingFilterChangeEvent)=\\"mappingStateFilter($event)\\" (mappingSearchingEvent)=\\"mappingSearchFilter($event)\\" (mappingFilterUpdateHandler)=\\"mappingFilterUpdate($event)\\" [isAlphabetFilterHidden]=\\"false\\"></app-mapping-filter>\\n        </div>\\n        <div *ngIf=\\"filteredMappingCount > 0\\" >\\n            <p-table [value]=\\"filteredMappings\\" [tableStyle]=\\"{ \'min-width\': \'50rem\' }\\">\\n                <ng-template pTemplate=\\"header\\">\\n                    <tr>\\n                        <th class=\\"!tw-pl-40-px\\">{{ this.sourceType | snakeCaseToSpaceCase | titlecase }} in {{brandingConfig.brandName}}</th>\\n                        <th>{{ this.destinationFieldType | snakeCaseToSpaceCase | titlecase }} in Sage Intacct</th>\\n                        <th>Status</th>\\n                    </tr>\\n                </ng-template>\\n                <ng-template pTemplate=\\"body\\" let-mapping let-rowIndex=\\"rowIndex\\">\\n                    <tr>\\n                        <td>\\n                            <div class=\\"tw-flex tw-items-center\\">\\n                                <svg-icon-sprite *ngIf=\\"mapping.auto_mapped\\" pTooltip=\\"Auto-mapped\\" tooltipPosition=\\"top\\" src=\\"flash\\" width=\\"12px\\" height=\\"12px\\" class=\\"tw-mr-12-px tw-text-placeholder\\"></svg-icon-sprite>\\n                                <span [ngClass]=\\"{\'tw-pl-24-px\': !mapping.auto_mapped}\\">{{ mapping.value }}</span>\\n                            </div>\\n                        </td>\\n                        <td>\\n                            <p-dropdown appendTo=\\"body\\" (onShow)=\\"tableDropdownWidth()\\"\\n                            [options]=\\"dropdownOptions\\" \\n                            optionLabel=\\"value\\" \\n                            placeholder=\\"Select an Option\\" \\n                            (onChange)=\\"save(mapping, $event);\\"\\n                            [ngModel]=\\"getDropdownValue(mapping)\\"\\n                            [filter]=\\"true\\"\\n                            filterBy=\\"value\\">\\n                            </p-dropdown> \\n                        </td>\\n                        <td>\\n                            <p *ngIf=\\"mapping.mapping.length\\" class=\\"mapped\\">MAPPED</p>\\n                            <p *ngIf=\\"!mapping.mapping.length\\" class=\\"unmapped\\">UNMAPPED</p>\\n                        </td>\\n                    </tr>\\n                </ng-template>\\n            </p-table>\\n        </div>\\n        <div class=\\"tw-p-24-px tw-border-t-separator\\" *ngIf=\\"filteredMappingCount\\" >\\n            <app-paginator [totalCount]=\\"totalCount\\" [pageType]=\\"PaginatorPage.MAPPING\\" [page]=\\"currentPage\\" [dropDownValue]=\\"limit\\" (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" (pageOffsetChangeEvent)=\\"pageOffsetChanges($event)\\"></app-paginator>\\n        </div>\\n        <div *ngIf=\\"!filteredMappingCount\\">\\n            <app-zero-state-with-illustration [mainText]=\\"\'No results to show yet!\'\\" [subText]=\\"\'Looks like your search term does not match any mappings\'\\"></app-zero-state-with-illustration>\\n        </div>\\n    </div>\\n</div>"},{"name":"GenericMappingTableComponent","id":"component-GenericMappingTableComponent-32238fb4f2b77f00cd1b165cbb68402588e62ab308a67a81c68bce4bdd5a4621c14e099195f16fdd619bce0c0e3a060c0290fdd30159c37b351a8d9af8293d4d","file":"src/app/shared/components/helper/mapping/generic-mapping-table/generic-mapping-table.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-generic-mapping-table","styleUrls":["./generic-mapping-table.component.scss"],"styles":[],"templateUrl":["./generic-mapping-table.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appName","deprecated":false,"deprecationMessage":"","line":20,"type":"AppName","decorators":[]},{"name":"cccExpenseObject","deprecated":false,"deprecationMessage":"","line":36,"type":"CorporateCreditCardExpensesObject","decorators":[]},{"name":"destinationField","deprecated":false,"deprecationMessage":"","line":30,"type":"string","decorators":[]},{"name":"destinationOptions","deprecated":false,"deprecationMessage":"","line":38,"type":"DestinationAttribute[]","decorators":[]},{"name":"employeeFieldMapping","deprecated":false,"deprecationMessage":"","line":32,"type":"FyleField","decorators":[]},{"name":"filteredMappings","deprecated":false,"deprecationMessage":"","line":22,"type":"ExtendedGenericMapping[]","decorators":[]},{"name":"isDashboardMappingResolve","deprecated":false,"deprecationMessage":"","line":40,"type":"boolean","decorators":[]},{"name":"isLoading","deprecated":false,"deprecationMessage":"","line":18,"type":"boolean","decorators":[]},{"name":"mappingError","deprecated":false,"deprecationMessage":"","line":24,"type":"Error[]","decorators":[]},{"name":"mappingStats","deprecated":false,"deprecationMessage":"","line":28,"type":"MappingStats","decorators":[]},{"name":"reimbursableExpenseObject","deprecated":false,"deprecationMessage":"","line":34,"type":"IntacctReimbursableExpensesObject","decorators":[]},{"name":"sourceField","deprecated":false,"deprecationMessage":"","line":26,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"decrementUnmappedCountIfNeeded","args":[{"name":"mapping","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"mapping","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"displayErrorToast","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":117,"deprecated":false,"deprecationMessage":""},{"name":"displaySuccessToast","args":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"message","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDropdownValue","args":[{"name":"genericMapping","type":"ExtendedGenericMapping","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":55,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"genericMapping","type":"ExtendedGenericMapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getTableSourceData","args":[],"optional":false,"returnType":"{}","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":131,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[{"name":"selectedRow","type":"ExtendedGenericMapping","deprecated":false,"deprecationMessage":""},{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedRow","type":"ExtendedGenericMapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"tableDropdownWidth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":48,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnChanges, OnInit, SimpleChanges } from \'@angular/core\';\\nimport { DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { ExtendedGenericMapping } from \'src/app/core/models/db/extended-generic-mapping.model\';\\nimport { GenericMapping, MappingClass } from \'src/app/core/models/db/generic-mapping.model\';\\nimport { MappingStats } from \'src/app/core/models/db/mapping.model\';\\nimport { AppName, CorporateCreditCardExpensesObject, FyleField, IntacctReimbursableExpensesObject, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\n\\n@Component({\\n  selector: \'app-generic-mapping-table\',\\n  templateUrl: \'./generic-mapping-table.component.html\',\\n  styleUrls: [\'./generic-mapping-table.component.scss\']\\n})\\nexport class GenericMappingTableComponent implements OnInit {\\n\\n  @Input() isLoading: boolean;\\n\\n  @Input() appName: AppName;\\n\\n  @Input() filteredMappings: ExtendedGenericMapping[];\\n\\n  @Input() mappingError: Error[];\\n\\n  @Input() sourceField: string;\\n\\n  @Input() mappingStats: MappingStats;\\n\\n  @Input() destinationField: string;\\n\\n  @Input() employeeFieldMapping: FyleField;\\n\\n  @Input() reimbursableExpenseObject?: IntacctReimbursableExpensesObject;\\n\\n  @Input() cccExpenseObject?: CorporateCreditCardExpensesObject;\\n\\n  @Input() destinationOptions: DestinationAttribute[];\\n\\n  @Input() isDashboardMappingResolve: boolean;\\n\\n  constructor(\\n    private mappingService: MappingService,\\n    private toastService: IntegrationsToastService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  tableDropdownWidth() {\\n    const element = document.querySelector(\'.p-dropdown-panel.p-component.ng-star-inserted\') as HTMLElement;\\n    if (element) {\\n      element.style.width = \'300px\';\\n    }\\n  }\\n\\n  getDropdownValue(genericMapping: ExtendedGenericMapping) {\\n    if (genericMapping.employeemapping?.length) {\\n      if (this.employeeFieldMapping===FyleField.VENDOR) {\\n        return genericMapping?.employeemapping[0].destination_vendor;\\n      } else if (this.employeeFieldMapping===FyleField.EMPLOYEE) {\\n        return genericMapping?.employeemapping[0].destination_employee;\\n      }\\n    } else if (genericMapping.categorymapping?.length) {\\n      if (this.destinationField === \'ACCOUNT\') {\\n        return genericMapping.categorymapping[0].destination_account;\\n      }\\n        return genericMapping.categorymapping[0].destination_expense_head;\\n\\n    } else if (genericMapping.mapping?.length) {\\n      return genericMapping.mapping[0].destination;\\n    }\\n    return null;\\n  }\\n\\n  save(selectedRow: ExtendedGenericMapping, event: any): void {\\n    if (selectedRow.employeemapping) {\\n      const employeeMapping = MappingClass.constructEmployeeMappingPayload(selectedRow, event, this.employeeFieldMapping, this.workspaceService.getWorkspaceId());\\n      this.mappingService.postEmployeeMappings(employeeMapping).subscribe((response) => {\\n        this.decrementUnmappedCountIfNeeded(selectedRow.employeemapping);\\n        selectedRow.employeemapping = [response];\\n        this.displaySuccessToast(\'Employee Mapping saved successfully\');\\n      }, () => {\\n        this.displayErrorToast();\\n      });\\n    } else if (selectedRow.categorymapping) {\\n      const categoryMappingsPayload = MappingClass.constructCategoryMappingPayload(selectedRow, event, this.destinationField, this.workspaceService.getWorkspaceId());\\n\\n      this.mappingService.postCategoryMappings(categoryMappingsPayload).subscribe((response) => {\\n        this.decrementUnmappedCountIfNeeded(selectedRow.categorymapping);\\n        selectedRow.categorymapping = [response];\\n        this.displaySuccessToast(\'Category Mapping saved successfully\');\\n      }, () => {\\n        this.displayErrorToast();\\n      });\\n    } else {\\n      const genericMappingPayload = MappingClass.constructGenericMappingPayload(selectedRow, event, {source_field: this.sourceField, destination_field: this.destinationField});\\n\\n      this.mappingService.postMapping(genericMappingPayload).subscribe((response: GenericMapping) => {\\n        this.decrementUnmappedCountIfNeeded(selectedRow.mapping);\\n        selectedRow.mapping = [response];\\n        this.displaySuccessToast(\'Mapping saved successfully\');\\n      }, () => {\\n        this.displayErrorToast();\\n      });\\n    }\\n  }\\n\\n  decrementUnmappedCountIfNeeded(mapping: any): void {\\n    if (!mapping?.length && !this.isDashboardMappingResolve) {\\n      this.mappingStats.unmapped_attributes_count -= 1;\\n    }\\n  }\\n\\n  displaySuccessToast(message: string): void {\\n    this.toastService.displayToastMessage(ToastSeverity.SUCCESS, message);\\n  }\\n\\n  displayErrorToast(): void {\\n    this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Something went wrong\');\\n  }\\n\\n\\n  getTableSourceData() {\\n    if (this.filteredMappings) {\\n      return this.filteredMappings;\\n    } else if (this.mappingError) {\\n      return this.mappingError;\\n    }\\n    return [];\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .dropdown-width {\\n    @apply tw-w-220-px #{!important};\\n}\\n\\n:host ::ng-deep .prevBtn:disabled > .pi-chevron-left,:host ::ng-deep .nextBtn:disabled > .pi-chevron-right,\\n:host ::ng-deep .prevBtn:disabled > .pi-minus, :host ::ng-deep .nextBtn:disabled > .pi-minus {\\n    @apply tw-text-placeholder #{!important};\\n}\\n\\n:host ::ng-deep .mappingFilterDropdown .p-dropdown {\\n    @apply tw-w-200-px #{!important}\\n}\\n\\n:host ::ng-deep .mapped {\\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-mapped-green-border tw-bg-mapped-green-bg tw-py-4-px tw-px-12-px tw-text-success-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .unmapped {\\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-unmapped-red-border tw-bg-unmapped-red-bg tw-py-4-px tw-px-12-px tw-text-alert-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .filterDropdown .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-10-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-5-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n\\n:host ::ng-deep .filterDropdown  .p-dropdown-trigger {\\n    @apply tw-block #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n    @apply tw-w-32-px #{!important};\\n}\\n\\n:host ::ng-deep .textbox {\\n    @apply tw-border-r-0 #{!important}\\n}\\n\\nth {\\n    @apply tw-text-12-px tw-text-normal-text-color tw-font-500 tw-h-40-px tw-py-10-px #{!important};\\n}\\n\\ntd {\\n    @apply tw-text-14-px tw-text-sub-text-color tw-font-400 #{!important};\\n}\\n\\n.pi-check:before {\\n    @apply tw-text-14-px tw-cursor-pointer tw-text-faded-text-color #{!important};\\n}\\n\\n:host ::ng-deep .tooltip-main {\\n    @apply tw-px-6 tw-pb-4 tw-text-center #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-save {\\n    @apply tw-text-12-px #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-return {\\n    @apply tw-mt-6-px tw-px-4-px tw-py-4-px tw-text-9-px tw-rounded-md tw-bg-placeholder  #{!important}\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {\\n    @apply tw-text-sub-text-color tw-text-14-px tw-font-400 tw-py-14-px tw-px-22-px tw-border-t tw-border-b-0 tw-border-t-box-color  #{!important};\\n  }\\n  \\n  :host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\\n    @apply tw-text-slightly-normal-text-color tw-text-12-px tw-font-500 tw-py-12-px tw-px-22-px tw-border tw-border-box-color tw-bg-disabled-bg-color #{!important}\\n  }\\n  \\n  :host ::ng-deep .p-datatable .p-datatable-tbody > tr > td > button {\\n    @apply tw-pl-48-px #{!important};\\n  }","styleUrl":"./generic-mapping-table.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<p-table [value]=\\"getTableSourceData()\\" [tableStyle]=\\"{ \'min-width\': \'50rem\'}\\">\\n    <ng-template pTemplate=\\"header\\">\\n        <tr>\\n        <th class=\\"!tw-pl-40-px\\">{{sourceField | snakeCaseToSpaceCase | titlecase}} in Fyle</th>\\n        <th>{{destinationField | snakeCaseToSpaceCase | titlecase}} in {{appName}}</th>\\n        <th *ngIf=\\"!isDashboardMappingResolve\\">Status</th>\\n        </tr>\\n    </ng-template>\\n    <ng-template pTemplate=\\"body\\" let-mapping>\\n        <tr *ngIf=\\"!isLoading\\" [ngClass]=\\"{\'tw-h-70-px\': isDashboardMappingResolve}\\">\\n            <td>\\n                <div class=\\"tw-flex tw-items-center\\">\\n                    <svg-icon-sprite *ngIf=\\"mapping.auto_mapped && !isDashboardMappingResolve\\" pTooltip=\\"Auto-mapped\\" tooltipPosition=\\"top\\" src=\\"flash\\" width=\\"12px\\" height=\\"12px\\" class=\\"tw-mr-12-px tw-text-placeholder\\"></svg-icon-sprite>\\n                    <span [ngClass]=\\"{\'tw-pl-24-px\': !mapping.auto_mapped}\\">{{ mapping.value }}</span>\\n                </div>\\n            </td>\\n            <td>\\n                <p-dropdown appendTo=\\"body\\" (onShow)=\\"tableDropdownWidth()\\"\\n                [ngClass]=\\"{\'dropdown-width\': isDashboardMappingResolve}\\"\\n                [ngModel]=\\"getDropdownValue(mapping)\\" \\n                [options]=\\"destinationOptions\\" \\n                optionLabel=\\"value\\" \\n                placeholder=\\"Select an Option\\" \\n                (onChange)=\\"save(mapping, $event); getDropdownValue(mapping)\\"\\n                [filter]=\\"true\\"\\n                filterBy=\\"value\\">\\n                </p-dropdown>                \\n            </td>\\n            <td *ngIf=\\"!isDashboardMappingResolve\\">\\n                <p *ngIf=\\"getDropdownValue(mapping)\\" class=\\"mapped\\">MAPPED</p>\\n                <p *ngIf=\\"!getDropdownValue(mapping)\\" class=\\"unmapped\\">UNMAPPED</p>\\n            </td>\\n        </tr>\\n        <ng-container *ngTemplateOutlet=\\"shimmers\\"></ng-container>\\n    </ng-template>\\n</p-table>\\n\\n<ng-template #shimmers>\\n    <tr *ngFor=\\"let _ of [0,1,2,3,4,5,6]\\">\\n        <td *ngIf=\\"isLoading\\"><p-skeleton width=\\"150px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n        <td *ngIf=\\"isLoading\\"><p-skeleton width=\\"250px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n    </tr>\\n</ng-template>"},{"name":"GenericMappingV2Component","id":"component-GenericMappingV2Component-4a8c796a9bc96c686a9c11eaa88ea11f7677b6c5b8455afdb3f74ce9f0251ab9a0a11f632528ea1f52280037b73869c077b021956633b3eb7f25e9e69472bdaa","file":"src/app/shared/components/helper/mapping/generic-mapping-v2/generic-mapping-v2.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-generic-mapping-v2","styleUrls":["./generic-mapping-v2.component.scss"],"styles":[],"templateUrl":["./generic-mapping-v2.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"appName","deprecated":false,"deprecationMessage":"","line":31,"type":"AppName","decorators":[]},{"name":"destinationField","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]},{"name":"destinationOptions","deprecated":false,"deprecationMessage":"","line":29,"type":"DestinationAttribute[]","decorators":[]},{"name":"employeeFieldMapping","deprecated":false,"deprecationMessage":"","line":25,"type":"FyleField","decorators":[]},{"name":"isCategoryMappingGeneric","deprecated":false,"deprecationMessage":"","line":33,"type":"boolean","decorators":[]},{"name":"isLoading","deprecated":false,"deprecationMessage":"","line":19,"type":"boolean","decorators":[]},{"name":"showAutoMapEmployee","deprecated":false,"deprecationMessage":"","line":27,"type":"boolean","decorators":[]},{"name":"sourceField","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]}],"outputsClass":[{"name":"triggerAutoMapEmployee","defaultValue":"new EventEmitter<boolean>()","deprecated":false,"deprecationMessage":"","line":63,"type":"EventEmitter"}],"propertiesClass":[{"name":"alphabetFilter","defaultValue":"\'All\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":61},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":59},{"name":"filteredMappingCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":53},{"name":"filteredMappings","deprecated":false,"deprecationMessage":"","type":"ExtendedGenericMapping[]","optional":false,"description":"","line":41},{"name":"isInitialSetupComplete","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":35},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":47},{"name":"mappings","deprecated":false,"deprecationMessage":"","type":"ExtendedGenericMapping[]","optional":false,"description":"","line":39},{"name":"mappingStats","deprecated":false,"deprecationMessage":"","type":"MappingStats","optional":false,"description":"","line":37},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":49},{"name":"PaginatorPage","defaultValue":"PaginatorPage","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57},{"name":"searchTerm","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43},{"name":"selectedMappingFilter","defaultValue":"MappingState.ALL","deprecated":false,"deprecationMessage":"","type":"MappingState","optional":false,"description":"","line":55},{"name":"sourceType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":45},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":51}],"methodsClass":[{"name":"getFilteredMappings","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"mappingFilterUpdate","args":[{"name":"alphabet","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":121,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"alphabet","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mappingSearchFilter","args":[{"name":"searchValue","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"searchValue","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"mappingStateFilter","args":[{"name":"state","type":"MappingState","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"state","type":"MappingState","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":152,"deprecated":false,"deprecationMessage":""},{"name":"pageOffsetChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":""},{"name":"triggerAutoMapEmployees","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { ExtendedGenericMapping, GenericMappingResponse } from \'src/app/core/models/db/extended-generic-mapping.model\';\\nimport { MappingStats } from \'src/app/core/models/db/mapping.model\';\\nimport { AppName, FyleField, MappingState, PaginatorPage, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { PaginatorService } from \'src/app/core/services/common/paginator.service\';\\n\\n@Component({\\n  selector: \'app-generic-mapping-v2\',\\n  templateUrl: \'./generic-mapping-v2.component.html\',\\n  styleUrls: [\'./generic-mapping-v2.component.scss\']\\n})\\nexport class GenericMappingV2Component implements OnInit {\\n\\n  @Input() isLoading: boolean;\\n\\n  @Input() sourceField: string;\\n\\n  @Input() destinationField: string;\\n\\n  @Input() employeeFieldMapping: FyleField;\\n\\n  @Input() showAutoMapEmployee: boolean;\\n\\n  @Input() destinationOptions: DestinationAttribute[];\\n\\n  @Input() appName: AppName;\\n\\n  @Input() isCategoryMappingGeneric: boolean;\\n\\n  isInitialSetupComplete: boolean = false;\\n\\n  mappingStats: MappingStats;\\n\\n  mappings: ExtendedGenericMapping[];\\n\\n  filteredMappings: ExtendedGenericMapping[];\\n\\n  searchTerm: string = \'\';\\n\\n  sourceType: string;\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  totalCount: number;\\n\\n  filteredMappingCount: number;\\n\\n  selectedMappingFilter: MappingState = MappingState.ALL;\\n\\n  PaginatorPage = PaginatorPage;\\n\\n  currentPage: number = 1;\\n\\n  alphabetFilter: string = \'All\';\\n\\n  @Output() triggerAutoMapEmployee = new EventEmitter<boolean>();\\n\\n  constructor(\\n    private mappingService: MappingService,\\n    private paginatorService: PaginatorService,\\n    private route: ActivatedRoute\\n  ) { }\\n\\n  triggerAutoMapEmployees() {\\n    this.triggerAutoMapEmployee.emit(true);\\n  }\\n\\n  private getFilteredMappings() {\\n    this.mappingService.getGenericMappingsV2(this.limit, this.offset, this.destinationField, this.selectedMappingFilter, this.alphabetFilter, this.sourceField, this.isCategoryMappingGeneric).subscribe((mappingResponse: GenericMappingResponse) => {\\n      this.filteredMappings = mappingResponse.results.concat();\\n      this.filteredMappingCount = this.filteredMappings.length;\\n      this.totalCount = mappingResponse.count;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.MAPPING, limit);\\n    }\\n    this.limit = limit;\\n    this.offset = 0;\\n    this.currentPage = 1;\\n    this.getFilteredMappings();\\n  }\\n\\n  pageOffsetChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.offset = offset;\\n    this.currentPage = Math.ceil(this.offset / this.limit)+1;\\n    this.getFilteredMappings();\\n  }\\n\\n  mappingStateFilter(state: MappingState): void {\\n    this.isLoading = true;\\n    this.selectedMappingFilter = state;\\n    this.currentPage = 1;\\n    this.offset = 0;\\n    this.getFilteredMappings();\\n  }\\n\\n  mappingSearchFilter(searchValue: string) {\\n    if (searchValue.length > 0) {\\n      this.filteredMappings = this.filteredMappings.filter((mapping) =>\\n      mapping.value?.toLowerCase().includes(searchValue)\\n    );\\n    } else {\\n      this.filteredMappings = this.mappings.concat();\\n    }\\n    this.filteredMappingCount = this.filteredMappings.length;\\n  }\\n\\n  mappingFilterUpdate(alphabet: string) {\\n    this.isLoading = true;\\n    this.alphabetFilter = alphabet;\\n    this.currentPage = 1;\\n    this.offset = 0;\\n    this.getFilteredMappings();\\n  }\\n\\n  setupPage() {\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.MAPPING);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n    this.sourceType = decodeURIComponent(decodeURIComponent(this.route.snapshot.params.source_field)).toUpperCase();\\n    forkJoin([\\n      this.mappingService.getGenericMappingsV2(this.limit, 0, this.destinationField, this.selectedMappingFilter, this.alphabetFilter, this.sourceField, this.isCategoryMappingGeneric),\\n      this.mappingService.getMappingStats(this.sourceField, this.destinationField, this.appName)\\n    ]).subscribe(\\n      ([mappingResponse, mappingStat]) => {\\n        this.totalCount = mappingResponse.count;\\n        if (!this.isInitialSetupComplete) {\\n          this.filteredMappingCount = mappingResponse.count;\\n        }\\n        this.mappings = mappingResponse.results;\\n        this.mappingStats = mappingStat;\\n        this.filteredMappings = this.mappings.concat();\\n        this.isInitialSetupComplete = true;\\n        this.isLoading = false;\\n      }\\n    );\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .prevBtn:disabled > .pi-chevron-left,:host ::ng-deep .nextBtn:disabled > .pi-chevron-right,\\n:host ::ng-deep .prevBtn:disabled > .pi-minus, :host ::ng-deep .nextBtn:disabled > .pi-minus {\\n    @apply tw-text-placeholder #{!important};\\n}\\n\\n:host ::ng-deep .mappingFilterDropdown .p-dropdown {\\n    @apply tw-w-200-px #{!important}\\n}\\n\\n:host ::ng-deep .mapped {\\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-mapped-green-border tw-bg-mapped-green-bg tw-py-4-px tw-px-12-px tw-text-success-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .unmapped {\\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-unmapped-red-border tw-bg-unmapped-red-bg tw-py-4-px tw-px-12-px tw-text-alert-toast tw-w-fit #{!important}\\n}\\n\\n:host ::ng-deep .filterDropdown .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-10-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-py-5-px #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}\\n\\n:host ::ng-deep .filterDropdown  .p-dropdown-trigger {\\n    @apply tw-block #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n    @apply tw-w-32-px #{!important};\\n}\\n\\n:host ::ng-deep .textbox {\\n    @apply tw-border-r-0 #{!important}\\n}\\n\\nth {\\n    @apply tw-text-12-px tw-text-normal-text-color tw-font-500 tw-h-40-px tw-py-10-px #{!important};\\n}\\n\\ntd {\\n    @apply tw-text-14-px tw-text-sub-text-color tw-font-400 #{!important};\\n}\\n\\n.pi-check:before {\\n    @apply tw-text-14-px tw-cursor-pointer tw-text-faded-text-color #{!important};\\n}\\n\\n:host ::ng-deep .tooltip-main {\\n    @apply tw-px-6 tw-pb-4 tw-text-center #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-save {\\n    @apply tw-text-12-px #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-return {\\n    @apply tw-mt-6-px tw-px-4-px tw-py-4-px tw-text-9-px tw-rounded-md tw-bg-placeholder  #{!important}\\n}","styleUrl":"./generic-mapping-v2.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""}],"line":63,"jsdoctags":[{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\">\\n        <div>\\n            <app-card-mapping-header (triggerAutoMapEmployee)=\\"triggerAutoMapEmployees()\\" [sourceField]=\\"sourceField\\" [showAutoMapEmployee]=\\"showAutoMapEmployee\\" [mappingStats]=\\"mappingStats\\" (triggerAutoMapEmployee)=\\"triggerAutoMapEmployees\\"></app-card-mapping-header>\\n        </div>\\n        <div class=\\"tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator tw-mt-16-px\\">\\n            <div class=\\"tw-p-24-px tw-border-b-separator\\">\\n                <app-mapping-filter [selectedAlphabeticalFilter]=\\"alphabetFilter\\" [mappingFilter]=\\"selectedMappingFilter\\" (mappingFilterChangeEvent)=\\"mappingStateFilter($event)\\" (mappingSearchingEvent)=\\"mappingSearchFilter($event)\\" (mappingFilterUpdateHandler)=\\"mappingFilterUpdate($event)\\" [isAlphabetFilterHidden]=\\"false\\"></app-mapping-filter>\\n            </div>\\n            <div *ngIf=\\"filteredMappingCount\\">\\n                <app-generic-mapping-table [isLoading]=\\"isLoading\\" [appName]=\\"appName\\" [isDashboardMappingResolve]=\\"false\\" [destinationField]=\\"destinationField\\" [filteredMappings]=\\"filteredMappings\\" [sourceField]=\\"sourceField\\" [mappingStats]=\\"mappingStats\\" [employeeFieldMapping]=\\"employeeFieldMapping\\" [destinationOptions]=\\"destinationOptions\\"></app-generic-mapping-table>\\n            </div>\\n            <div class=\\"tw-p-24-px tw-border-t-separator\\" *ngIf=\\"filteredMappingCount\\" >\\n                <app-paginator [totalCount]=\\"totalCount\\" [pageType]=\\"PaginatorPage.MAPPING\\" [page]=\\"currentPage\\" [dropDownValue]=\\"limit\\" (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" (pageOffsetChangeEvent)=\\"pageOffsetChanges($event)\\"></app-paginator>\\n            </div>\\n            <div *ngIf=\\"!filteredMappingCount\\">\\n                <app-zero-state-with-illustration \\n                [mainText]=\\"\'No search result to show yet!\'\\" \\n                [subText]=\\"\'Looks like your search term does not match any of \' + (this.sourceField | snakeCaseToSpaceCase | titlecase) + \' mappings\'\\">\\n              </app-zero-state-with-illustration>              \\n            </div>\\n        </div>\\n</div>\\n"},{"name":"GustoComponent","id":"component-GustoComponent-011556491386841e89f8edcb283e3858f95b58535ebafb1dcf59a8f63430e3208359e77285bd92866d8df31221f18be5a74a73b09fc319814516702d24f8ff44","file":"src/app/integrations/gusto/gusto.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-gusto","styleUrls":["./gusto.component.scss"],"styles":[],"templateUrl":["./gusto.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"additionalEmails","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"EmailOption[]","optional":false,"description":"","line":48},{"name":"appName","defaultValue":"InAppIntegration.GUSTO","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":52},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56,"modifierKind":[148]},{"name":"brandingKbArticles","defaultValue":"brandingKbArticles","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40},{"name":"gustoConfiguration","deprecated":false,"deprecationMessage":"","type":"GustoConfiguration","optional":false,"description":"","line":44},{"name":"gustoData","deprecated":false,"deprecationMessage":"","type":"Gusto","optional":false,"description":"","line":46},{"name":"hideRefreshIcon","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":36},{"name":"iframeSource","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":22},{"name":"iframeSourceUrl","deprecated":false,"deprecationMessage":"","type":"SafeResourceUrl","optional":false,"description":"","line":24},{"name":"isConfigurationSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":38},{"name":"isGustoConnected","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28},{"name":"isGustoConnectionInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":30},{"name":"isGustoSetupInProgress","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":32},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":34},{"name":"org","defaultValue":"this.orgService.getCachedOrg()","deprecated":false,"deprecationMessage":"","type":"Org","optional":false,"description":"","line":50},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"showDialog","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"showErrorScreen","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":42}],"methodsClass":[{"name":"addConnectionWidget","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"checkGustoDataAndTriggerConnectionWidget","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":104,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"configurationUpdatesHandler","args":[{"name":"payload","type":"GustoConfigurationPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"payload","type":"GustoConfigurationPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getGustoConfiguration","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":178,"deprecated":false,"deprecationMessage":""},{"name":"getSyncData","args":[],"optional":false,"returnType":"Observable[]","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":205,"deprecated":false,"deprecationMessage":""},{"name":"setupGusto","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":158,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":195,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupWorkatoConnectionWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":122,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"syncEmployees","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":""},{"name":"updateOrCreateGustoConfiguration","args":[{"name":"workatoConnectionStatus","type":"WorkatoConnectionStatus","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"workatoConnectionStatus","type":"WorkatoConnectionStatus","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { SafeResourceUrl } from \'@angular/platform-browser\';\\nimport { catchError, concat, merge, Observable, of, toArray } from \'rxjs\';\\nimport { AppName, ClickEvent, InAppIntegration, Page, ConfigurationCta, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { EmailOption, Gusto, GustoConfiguration, GustoConfigurationPost } from \'src/app/core/models/gusto/gusto.model\';\\nimport { Org } from \'src/app/core/models/org/org.model\';\\nimport { WorkatoConnectionStatus } from \'src/app/core/models/travelperk/travelperk.model\';\\nimport { EventsService } from \'src/app/core/services/common/events.service\';\\nimport { GustoService } from \'src/app/core/services/gusto/gusto.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { OrgService } from \'src/app/core/services/org/org.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-gusto\',\\n  templateUrl: \'./gusto.component.html\',\\n  styleUrls: [\'./gusto.component.scss\']\\n})\\nexport class GustoComponent implements OnInit {\\n\\n  iframeSource: string;\\n\\n  iframeSourceUrl: SafeResourceUrl;\\n\\n  showDialog: boolean;\\n\\n  isGustoConnected: boolean;\\n\\n  isGustoConnectionInProgress: boolean;\\n\\n  isGustoSetupInProgress: boolean = true;\\n\\n  isLoading: boolean = true;\\n\\n  hideRefreshIcon: boolean;\\n\\n  isConfigurationSaveInProgress: boolean;\\n\\n  brandingKbArticles = brandingKbArticles;\\n\\n  showErrorScreen: boolean;\\n\\n  gustoConfiguration: GustoConfiguration;\\n\\n  gustoData: Gusto;\\n\\n  additionalEmails: EmailOption[] = [];\\n\\n  org: Org = this.orgService.getCachedOrg();\\n\\n  appName: string = InAppIntegration.GUSTO;\\n\\n  private sessionStartTime = new Date();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private gustoService: GustoService,\\n    private orgService: OrgService,\\n    private trackingService: TrackingService,\\n    private toastService: IntegrationsToastService,\\n    private eventsService: EventsService\\n  ) { }\\n\\n  private addConnectionWidget() {\\n    const connectionId = this.gustoData.connection_id.toString();\\n    const managedUserId = this.org.managed_user_id;\\n    this.isLoading = true;\\n    this.orgService.generateToken(managedUserId).subscribe(res => {\\n      const token = res.token;\\n      const workatoBaseUrl = \'https://app.workato.com/direct_link/embedded/connections/\';\\n      const iframeSource = workatoBaseUrl + connectionId + \'?workato_dl_token=\' + token;\\n      this.iframeSourceUrl = this.orgService.sanitizeUrl(iframeSource);\\n      this.isGustoSetupInProgress = false;\\n      this.isLoading = false;\\n    }, () => {\\n      this.isLoading = false;\\n      this.isGustoSetupInProgress = false;\\n      this.showErrorScreen = true;\\n    });\\n  }\\n\\n  syncEmployees(): void {\\n    this.trackingService.onClickEvent(ClickEvent.SYNC_GUSTO_EMPLOYEES);\\n    this.hideRefreshIcon = true;\\n    this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Syncing Employees Started\');\\n    this.gustoService.syncEmployees().subscribe(() => {\\n      this.hideRefreshIcon = false;\\n    });\\n  }\\n\\n  configurationUpdatesHandler(payload: GustoConfigurationPost): void {\\n    this.trackingService.onClickEvent(ClickEvent.CONFIGURE_GUSTO);\\n    this.isConfigurationSaveInProgress = true;\\n    this.gustoService.postConfigurations(payload).subscribe((updatedConfiguration: GustoConfiguration) => {\\n      this.gustoConfiguration = updatedConfiguration;\\n      this.isConfigurationSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Configuration saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.CONFIGURE_GUSTO, this.sessionStartTime);\\n    });\\n  }\\n\\n  private checkGustoDataAndTriggerConnectionWidget() {\\n    if (!this.gustoData) {\\n      this.gustoService.getGustoData().subscribe((gustoData : Gusto) => {\\n        this.gustoData = gustoData;\\n        this.addConnectionWidget();\\n      });\\n    } else {\\n      this.addConnectionWidget();\\n    }\\n  }\\n\\n  private updateOrCreateGustoConfiguration(workatoConnectionStatus:WorkatoConnectionStatus) {\\n      this.isGustoConnected = workatoConnectionStatus.payload.connected ? true : false;\\n      this.gustoService.getConfigurations().subscribe(() => {\\n        this.gustoService.patchConfigurations(this.isGustoConnected).subscribe();\\n      }, () => {});\\n  }\\n\\n  private setupWorkatoConnectionWatcher(): void {\\n    this.eventsService.getWorkatoConnectionStatus.subscribe((workatoConnectionStatus: WorkatoConnectionStatus) => {\\n      this.updateOrCreateGustoConfiguration(workatoConnectionStatus);\\n    });\\n  }\\n\\n  private getSyncData(): Observable<{}>[] {\\n    const syncData = [];\\n    if (!this.org?.managed_user_id) {\\n      syncData.push(this.orgService.createWorkatoWorkspace());\\n    }\\n\\n    if (!this.gustoData || !this.gustoData?.folder_id) {\\n      syncData.push(this.gustoService.createFolder());\\n    }\\n\\n    if (!this.gustoData || !this.gustoData?.package_id) {\\n      syncData.push(this.gustoService.uploadPackage());\\n    }\\n\\n    if (!this.org?.is_fyle_connected) {\\n      syncData.push(this.orgService.connectFyle(AppName.GUSTO));\\n    }\\n\\n    if (!this.gustoData?.connection_id) {\\n      syncData.push(this.gustoService.connect());\\n    }\\n\\n    if (!this.org?.is_sendgrid_connected) {\\n      syncData.push(this.orgService.connectSendgrid());\\n    }\\n\\n    syncData.push(this.orgService.getOrgs(this.org.fyle_org_id));\\n    return syncData;\\n  }\\n\\n  setupGusto(): void {\\n    this.setupWorkatoConnectionWatcher();\\n    const syncData = this.getSyncData();\\n    this.isGustoSetupInProgress = true;\\n    concat(...syncData).pipe(\\n      toArray()\\n    ).subscribe((responses) => {\\n      responses.forEach((response: any) => {\\n        if (response?.hasOwnProperty(\'managed_user_id\') ) {\\n          this.org.managed_user_id = response.managed_user_id;\\n        }\\n      });\\n      this.checkGustoDataAndTriggerConnectionWidget();\\n    }, () => {\\n      this.isLoading = false;\\n      this.isGustoSetupInProgress = false;\\n      this.showErrorScreen = true;\\n    });\\n  }\\n\\n  getGustoConfiguration(): void {\\n    const data = merge(\\n      this.orgService.getAdditionalEmails(),\\n      this.gustoService.getConfigurations().pipe(catchError(() => of(null)))\\n    );\\n    data.pipe(toArray()).subscribe((responses) => {\\n      responses.forEach((response: any) => {\\n        if (Array.isArray(response) && response.length) {\\n          this.additionalEmails = response;\\n        } else if (response?.hasOwnProperty(\'additional_email_options\')) {\\n          this.gustoConfiguration = response;\\n        }\\n      });\\n      this.setupGusto();\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    this.gustoService.getGustoData().subscribe((gustoData: Gusto) => {\\n      this.gustoData = gustoData;\\n      this.getGustoConfiguration();\\n    }, () => {\\n      this.isGustoConnected = false;\\n      this.getGustoConfiguration();\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./gusto.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"gustoService","type":"GustoService","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"eventsService","type":"EventsService","deprecated":false,"deprecationMessage":""}],"line":56,"jsdoctags":[{"name":"gustoService","type":"GustoService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"eventsService","type":"EventsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <app-landing-page-header \\n        [iconPath]=\\"\'assets/logos/gusto-logo.svg\'\\" \\n        [appName]=\\"appName\\" \\n        [appDescription]=\\"\'Auto sync employee details between\' + brandingConfig.brandName + \'and Gusto.\'\\" \\n        [isLoading]=\\"isLoading\\" \\n        [hideRefreshIcon]=\\"hideRefreshIcon\\" \\n        [showErrorScreen]=\\"showErrorScreen\\" \\n        [isRecipeRunning]=\\"gustoConfiguration?.recipe_status ? true : false\\"\\n        [isIntegrationSetupInProgress]=\\"isGustoSetupInProgress\\" \\n        [isIntegrationConnected]=\\"isGustoConnected\\" \\n        [redirectLink]=\\"brandingKbArticles.topLevelArticles.GUSTO\\"\\n        [iframeSourceUrl]=\\"iframeSourceUrl\\"\\n        (syncEmployees)=\\"syncEmployees()\\"\\n    ></app-landing-page-header>\\n    \\n    <app-landing-page-body  *ngIf=\\"!isLoading && !isGustoConnected && !showErrorScreen\\"  [headerText]=\\"\'Connect your Gusto account to your \' + brandingConfig.brandName + \' account to atuo-sync employee data.\'\\" [svgPath]=\\"\'assets/flow-charts/gusto-flow-chart.svg\'\\" [redirectLink]=\\"brandingKbArticles.topLevelArticles.GUSTO\\"></app-landing-page-body>\\n\\n    <div *ngIf=\\"showErrorScreen\\" class=\\"tw-pt-100-px\\">\\n        <app-error></app-error>\\n    </div>\\n\\n    <app-gusto-configuration *ngIf=\\"!isLoading && isGustoConnected && !showErrorScreen\\" [additionalEmails]=\\"additionalEmails\\" [gustoConfiguration]=\\"gustoConfiguration\\" (updateConfiguration)=\\"configurationUpdatesHandler($event)\\"></app-gusto-configuration>\\n\\n    <div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-pt-70-px\\">\\n        <div *ngFor=\\"let _ of [0,1,2,3,4,5,6]\\" class=\\"tw-w-75-vw tw-h-78-px tw-border-separator tw-border-1-px tw-rounded-8-px tw-mb-18-px\\">\\n            <div class=\\"tw-w-14-vw tw-h-18-px tw-pl-24-px tw-pt-16-px tw-pb-10-px\\">\\n                <p-skeleton shape=\\"rectangle\\"></p-skeleton>\\n            </div>\\n    \\n            <div class=\\"tw-w-50-vw tw-h-18-px tw-pl-24-px tw-pt-16-px tw-pb-10-px\\">\\n                <p-skeleton shape=\\"rectangle\\"></p-skeleton>\\n            </div>\\n        </div>\\n    </div>\\n</div>"},{"name":"GustoConfigurationComponent","id":"component-GustoConfigurationComponent-73d094154d68931fbb5ebbe4563c2516a82584d160573dc6b7a3c38010879ea95bde44a27469d4a3d1c1a467527bf20bcfe1a6f6fe48c920e3b6728a463b972c","file":"src/app/integrations/gusto/gusto-configuration/gusto-configuration.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-gusto-configuration","styleUrls":["./gusto-configuration.component.scss"],"styles":[],"templateUrl":["./gusto-configuration.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"additionalEmails","deprecated":false,"deprecationMessage":"","line":21,"type":"EmailOption[]","decorators":[]},{"name":"gustoConfiguration","deprecated":false,"deprecationMessage":"","line":19,"type":"GustoConfiguration","decorators":[]}],"outputsClass":[{"name":"updateConfiguration","defaultValue":"new EventEmitter<GustoConfigurationPost>()","deprecated":false,"deprecationMessage":"","line":23,"type":"EventEmitter"}],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37,"modifierKind":[148]},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"configurationFields","defaultValue":"[\'Employee Name\', \'Employee ID\', \'Email ID\', \'Department\', \'Manager\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":33},{"name":"configurationForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":25},{"name":"org","defaultValue":"this.orgService.getCachedOrg()","deprecated":false,"deprecationMessage":"","type":"Org","optional":false,"description":"","line":31},{"name":"saveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35,"modifierKind":[123]}],"methodsClass":[{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":74,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":""},{"name":"setupGustoConfiguration","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { AppName, Page, ConfigurationCta, QBDOnboardingState, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { EmailOption, GustoConfiguration, GustoConfigurationPost, GustoModel } from \'src/app/core/models/gusto/gusto.model\';\\nimport { Org } from \'src/app/core/models/org/org.model\';\\nimport { GustoService } from \'src/app/core/services/gusto/gusto.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { OrgService } from \'src/app/core/services/org/org.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-gusto-configuration\',\\n  templateUrl: \'./gusto-configuration.component.html\',\\n  styleUrls: [\'./gusto-configuration.component.scss\']\\n})\\nexport class GustoConfigurationComponent implements OnInit {\\n\\n  @Input() gustoConfiguration: GustoConfiguration;\\n\\n  @Input() additionalEmails: EmailOption[];\\n\\n  @Output() updateConfiguration = new EventEmitter<GustoConfigurationPost>();\\n\\n  configurationForm: FormGroup;\\n\\n  saveInProgress: boolean;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  org: Org = this.orgService.getCachedOrg();\\n\\n  configurationFields: string[] = [\'Employee Name\', \'Employee ID\', \'Email ID\', \'Department\', \'Manager\'];\\n\\n  private sessionStartTime = new Date();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private gustoService: GustoService,\\n    private formBuilder: FormBuilder,\\n    private orgService: OrgService,\\n    private trackingService: TrackingService,\\n    private toastService: IntegrationsToastService\\n  ) { }\\n\\n  private constructPayloadAndSave(): void {\\n    this.saveInProgress = true;\\n    const configurationPayload = GustoModel.constructGustoConfigurationPayload(this.configurationForm, this.org.id);\\n    this.gustoService.postConfigurations(configurationPayload).subscribe((response: GustoConfiguration) => {\\n      this.saveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Your configurations have been saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.ADVANCED_SETTINGS_QBD, this.sessionStartTime);\\n    }, () => {\\n      this.saveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error while saving your configuration, please try again later\');\\n      });\\n  }\\n\\n  save(): void {\\n    if (this.configurationForm.valid) {\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  setupGustoConfiguration() {\\n    this.configurationForm = this.formBuilder.group({\\n      email: [this.gustoConfiguration?.emails_selected.length > 0 ? this.gustoConfiguration?.emails_selected : []],\\n      additionalEmails: [this.gustoConfiguration?.additional_email_options.length > 0 ? this.gustoConfiguration?.additional_email_options : []],\\n      search: []\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupGustoConfiguration();\\n  }\\n\\n}","assetsDirs":[],"styleUrlsData":[{"data":"table > tbody > tr:nth-child(1) > td {\\n    @apply tw-pt-20-px tw-font-400 tw-text-14-px tw-text-slightly-normal-text-color #{!important};\\n}\\n\\ntable > tbody > tr > td {\\n    @apply tw-pt-28-px tw-font-400 tw-text-14-px tw-px-0 tw-text-slightly-normal-text-color #{!important};\\n}\\n\\ntable > thead > tr > th{\\n    @apply tw-text-14-px tw-text-slightly-normal-text-color tw-text-left tw-pl-14-px #{!important};\\n}\\n\\n:host :ng-deep .pi .pi-arrow-right {\\n    @apply tw-w-60-px #{!important};\\n}\\n\\n:host ::ng-deep .right-arrow > svg-icon-sprite > svg {\\n    @apply tw-h-10-px tw-px-0 #{!important};\\n}\\n\\n.gusto-configuration-fields {\\n    @apply tw-w-300-px tw-px-10-px tw-bg-disabled-bg-color tw-py-8-px tw-border tw-border-solid tw-border-separator tw-rounded-4-px #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-header {\\n    @apply tw-px-16-px #{!important}\\n}","styleUrl":"./gusto-configuration.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"gustoService","type":"GustoService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""}],"line":37,"jsdoctags":[{"name":"gustoService","type":"GustoService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-mt-56-px tw-mx-80-px tw-pb-56-px\\">\\n    <div class=\\"tw-shadow-app-card tw-rounded-12-px\\">\\n        <div>\\n            <app-configuration-step-header \\n                [headerText]=\\"\'Configuration\'\\"\\n                [contentText]=\\"\'The \' + brandingConfig.brandName + \'-Gusto Integration will import and auto-sync employee information between Gusto and \' + brandingConfig.brandName + \'. Admins will be notified when the imports fail.\'\\"\\n            ></app-configuration-step-header>\\n        </div>\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-rounded-12-px tw-border-1-px tw-border-separator tw-mb-24-px \\">\\n                <div class=\\"tw-p-24-px tw-border-b-1-px tw-border-b-separator tw-flex tw-items-start\\">\\n                    <div class=\\"tw-pr-20-px tw-mt-4-px\\">\\n                        <svg-icon-sprite src=\\"multiple-people\\" width=\\"24px\\" hight=\\"24px\\" class=\\"tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n                    </div>\\n                    <div>\\n                        <h5 class=\\"tw-text-14-px !tw-font-500\\">Import Employee</h5>\\n                        <h5 class=\\"!tw-text-faded-text-color tw-text-14-px tw-pt-8-px !tw-font-400 !tw-leading-4\\" >The following employee fields in Gusto will be mapped to their respective fields in {{ brandingConfig.brandName }} as shown below. Any changes made to the below fields in Gusto will be auto-synced to {{ brandingConfig.brandName }} every 24 hours.</h5>\\n                    </div>\\n                </div>\\n                <div class=\\"tw-pt-20-px tw-pb-44-px tw-flex tw-items-center tw-justify-center\\">\\n                    <table class=\\"tw-table-fixed\\">\\n                        <thead>\\n                          <tr>\\n                            <th>Gusto Field</th>\\n                            <th></th>\\n                            <th>{{ brandingConfig.brandName }} Field</th>\\n                          </tr>\\n                        </thead>\\n                        <tbody>\\n                          <tr *ngFor=\\"let field of configurationFields\\"> \\n                            <td><input type=\\"text\\" [value]=\\"field\\" class=\\"gusto-configuration-fields\\" disabled></td>\\n                            <td class=\\"right-arrow tw-content-center \\"><svg-icon-sprite src=\\"arrow\\" width=\\"60px\\" hight=\\"10px\\" class=\\"tw-text-box-color\\"></svg-icon-sprite></td>\\n                            <td><input type=\\"text\\" [value]=\\"field\\" class=\\"gusto-configuration-fields\\" disabled></td>\\n                          </tr>\\n                        </tbody>\\n                    </table>\\n                </div>\\n            </div>\\n            <div class=\\"tw-rounded-12-px tw-border-1-px tw-border-separator tw-flex tw-items-start\\">\\n                <app-email-multi-select-field\\n                    [form]=\\"configurationForm\\"\\n                    [label]=\\"\'Send error notification to\'\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [mandatoryErrorListName]=\\"\'email for export\'\\"\\n                    [subLabel]=\\"\'Select or add an email address to notify upon import failure or integration error.\'\\"\\n                    [options]=\\"additionalEmails\\"\\n                    [iconPath]=\\"\'email\'\\"\\n                    [placeholder]=\\"\'Select email address\'\\"\\n                    [formControllerName]=\\"\'email\'\\">\\n                </app-email-multi-select-field>\\n            </div>\\n        </div>\\n        <div>\\n            <app-configuration-step-footer [ctaText]=\\"!saveInProgress ? ConfigurationCtaText.SAVE : ConfigurationCtaText.SAVING\\" [isButtonDisabled]=\\"!configurationForm.valid || saveInProgress || configurationForm.controls.email.value.length === 0\\" (save)=\\"save()\\"></app-configuration-step-footer>\\n        </div>\\n    </div>\\n</div>"},{"name":"IntacctConnectorComponent","id":"component-IntacctConnectorComponent-dcbc6c21043b4ed25a76781dcb1ea8f2bbf614900822f9000af50f3a09592205b81e51120cbb5469b93ddae628aab377605afc67346f19d18b9927b30d2e914f","file":"src/app/shared/components/si/core/intacct-connector/intacct-connector.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-intacct-connector","styleUrls":["./intacct-connector.component.scss"],"styles":[],"templateUrl":["./intacct-connector.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[{"name":"setupConnectionStatus","defaultValue":"new EventEmitter<boolean>()","deprecated":false,"deprecationMessage":"","line":31,"type":"EventEmitter"}],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33,"modifierKind":[148]},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":21},{"name":"connectSageIntacctForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":19},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":17},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":23},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.INTACCT.CONNECTOR","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"saveInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":25},{"name":"windowReference","deprecated":false,"deprecationMessage":"","type":"Window","optional":false,"description":"","line":29}],"methodsClass":[{"name":"clearField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":90,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, OnInit, Output } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { ConfigurationCta, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { IntacctConnectorService } from \'src/app/core/services/si/si-core/intacct-connector.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\n\\n@Component({\\n  selector: \'app-intacct-connector\',\\n  templateUrl: \'./intacct-connector.component.html\',\\n  styleUrls: [\'./intacct-connector.component.scss\']\\n})\\nexport class IntacctConnectorComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  connectSageIntacctForm: FormGroup;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  isOnboarding: boolean;\\n\\n  saveInProgress: boolean = false;\\n\\n  redirectLink: string = brandingKbArticles.onboardingArticles.INTACCT.CONNECTOR;\\n\\n  windowReference: Window;\\n\\n  @Output() setupConnectionStatus = new EventEmitter<boolean>();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private router: Router,\\n    private formBuilder: FormBuilder,\\n    private connectorService: IntacctConnectorService,\\n    private mappingsService: SiMappingsService,\\n    private toastService: IntegrationsToastService\\n  ) { }\\n\\n  clearField() {\\n    this.connectSageIntacctForm.get(\\"userID\\")?.setValue(\'\');\\n    this.connectSageIntacctForm.get(\\"companyID\\")?.setValue(\'\');\\n    this.connectSageIntacctForm.get(\\"userPassword\\")?.setValue(\'\');\\n  }\\n\\n    save() {\\n      const userID = this.connectSageIntacctForm.value.userID;\\n      const companyID = this.connectSageIntacctForm.value.companyID;\\n      const userPassword = this.connectSageIntacctForm.value.userPassword;\\n\\n      this.isLoading = true;\\n      this.connectorService.connectSageIntacct({\\n        si_user_id: userID,\\n        si_company_id: companyID,\\n        si_user_password: userPassword\\n      }).subscribe((response) => {\\n        this.mappingsService.refreshSageIntacctDimensions([\'location_entities\']).subscribe(() => {\\n          this.setupConnectionStatus.emit(true);\\n          this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Connection Successful.\');\\n          this.isLoading = false;\\n        });\\n      }, () => {\\n        this.setupConnectionStatus.emit(false);\\n        this.clearField();\\n        this.isLoading = false;\\n        this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error while connecting, please try again later.\');\\n      });\\n    }\\n\\n    private setupPage(): void {\\n      this.isLoading = true;\\n      this.isOnboarding = this.router.url.includes(\'onboarding\');\\n      this.connectorService.getSageIntacctCredential().subscribe((intacctCredential) => {\\n        this.setupConnectionStatus.emit(true);\\n        this.isLoading = false;\\n      }, () => {\\n        this.connectSageIntacctForm = this.formBuilder.group({\\n          userID: [\'\', Validators.required],\\n          companyID: [\'\', Validators.required],\\n          userPassword: [\'\', Validators.required]\\n        });\\n        this.setupConnectionStatus.emit(false);\\n        this.isLoading = false;\\n      });\\n    }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .error-box {\\n    @apply tw-border-alert-toast #{!important};\\n}\\n\\n:host ::ng-deep .normal-box  {\\n    @apply tw-border-box-color #{!important};\\n}\\n\\n:host ::ng-deep .normal-box :enabled:focus-visible {\\n    @apply tw-border-slightly-normal-text-color #{!important};\\n}\\n\\ninput.custom-focus:focus {\\n  outline: none;\\n  border: 1px solid black !important;\\n}\\n\\n.container {\\n    display: flex;\\n    flex-direction: column;\\n    align-items: center;\\n  }\\n\\n  /* Add these styles to highlight the input fields with red border */\\n.tw-border-red-600 {\\n  border-color: #EF4444; /* Red color */\\n}\\n\\n.incorrect-credential {\\n  color: #DA1E28;\\n  font-size: 12px;\\n  font-style: normal;\\n  font-weight: 400;\\n  line-height: normal;\\n  }\\n\\n::placeholder {\\n  @apply tw-text-placeholder tw-text-14-px;\\n}\\n","styleUrl":"./intacct-connector.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"connectorService","type":"IntacctConnectorService","deprecated":false,"deprecationMessage":""},{"name":"mappingsService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""}],"line":33,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"connectorService","type":"IntacctConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingsService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n   <app-loader></app-loader>\\n</div>\\n<div  class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n   <div>\\n      <app-configuration-step-header \\n      [headerText]=\\"\'Connect to Sage Intacct\'\\"\\n      [contentText]=\\"\'Connect to your Sage Intacct account to establish a connection between \' + brandingConfig.brandName + \' and Sage Intacct.\'\\"\\n      [redirectLink]=\\"redirectLink\\"></app-configuration-step-header>\\n   </div>\\n   <div *ngIf=\\"!isLoading\\">\\n      <form [formGroup]=\\"connectSageIntacctForm\\">\\n         <div class=\\"tw-p-24-px\\">\\n           <div class=\\"container\\">\\n             <div class=\\"tw-mb-4\\">\\n               <p class=\\"tw-text-faded-text-color tw-pb-8-px\\">User ID<app-mandatory-field [noSpacing]=\\"true\\"></app-mandatory-field></p>\\n               <input placeholder=\\"Enter User ID\\" type=\\"text\\" id=\\"userId\\" name=\\"userId\\" formControlName=\\"userID\\" class=\\"custom-focus tw-border tw-border-gray-300 tw-rounded tw-px-3 tw-py-2 tw-w-400-px\\" [ngClass]=\\"[connectSageIntacctForm.controls.userID.invalid && connectSageIntacctForm.controls.userID.touched ? \'error-box\' : \'normal-box\']\\">\\n               <div *ngIf=\\"connectSageIntacctForm.controls.userID.invalid && connectSageIntacctForm.controls.userID.touched\\" class=\\"incorrect-credential\\">\\n                  Invalid User ID. Please enter valid User ID.\\n               </div>\\n             </div>\\n             <div class=\\"tw-mb-4\\">\\n               <p for=\\"companyId\\" class=\\"tw-text-faded-text-color tw-pb-8-px tw-pt-16-px\\">Company ID<app-mandatory-field [noSpacing]=\\"true\\"></app-mandatory-field></p>\\n               <input placeholder=\\"Enter Company ID\\" type=\\"text\\" id=\\"companyId\\" name=\\"companyId\\" formControlName=\\"companyID\\" class=\\"custom-focus tw-border tw-border-gray-300 tw-rounded tw-px-3 tw-py-2 tw-w-400-px\\" [ngClass]=\\"[connectSageIntacctForm.controls.companyID.invalid && connectSageIntacctForm.controls.companyID.touched ? \'error-box\' : \'normal-box\']\\">\\n               <div *ngIf=\\"connectSageIntacctForm.controls.companyID.invalid && connectSageIntacctForm.controls.companyID.touched\\" class=\\"incorrect-credential\\">\\n                 Invalid Company ID. Please enter valid Company ID.\\n               </div>\\n             </div>\\n             <div class=\\"tw-mb-4\\">\\n               <p for=\\"userPassword\\" class=\\"tw-text-faded-text-color tw-pb-8-px tw-pt-16-px\\">User Password<app-mandatory-field [noSpacing]=\\"true\\"></app-mandatory-field></p>\\n               <input placeholder=\\"Enter User Password\\" type=\\"password\\" formControlName=\\"userPassword\\" class=\\"custom-focus tw-border tw-border-gray-300 tw-rounded tw-px-3 tw-py-2 tw-w-400-px\\" [ngClass]=\\"[connectSageIntacctForm.controls.userPassword.invalid && connectSageIntacctForm.controls.userPassword.touched ? \'error-box\' : \'normal-box\']\\">\\n               <div *ngIf=\\"connectSageIntacctForm.controls.userPassword.invalid && connectSageIntacctForm.controls.userPassword.touched\\" class=\\"incorrect-credential\\">\\n                  Incorrect Password. Please enter correct Password.\\n                </div>\\n             </div>\\n           </div>\\n         </div>\\n       </form>\\n       \\n      <div>\\n         <app-configuration-step-footer [ctaText]=\\"!saveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!connectSageIntacctForm.valid\\"></app-configuration-step-footer>\\n      </div>\\n   </div>\\n</div>"},{"name":"IntacctLocationEntityComponent","id":"component-IntacctLocationEntityComponent-0c1d58641d41ef55ed31ce67c6d0e665b0c4b6896fc04213a3263051edd2574dd50bd33502220b8afcbefeade00a5e0b58d2792344f66ec62d18eae280ab8cfa","file":"src/app/shared/components/si/core/intacct-location-entity/intacct-location-entity.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-intacct-location-entity","styleUrls":["./intacct-location-entity.component.scss"],"styles":[],"templateUrl":["./intacct-location-entity.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":46,"modifierKind":[148]},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40},{"name":"fyleOrgName","defaultValue":"this.userService.getUserProfile().org_name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":44},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":30},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":32},{"name":"isRefreshDimensionInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":34},{"name":"locationEntity","deprecated":false,"deprecationMessage":"","type":"LocationEntityMapping","optional":false,"description":"","line":28},{"name":"locationEntityForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":24},{"name":"locationEntityOptions","deprecated":false,"deprecationMessage":"","type":"IntacctDestinationAttribute[]","optional":false,"description":"","line":26},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.INTACCT.CONNECTOR","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":42},{"name":"saveInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":36},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":38}],"methodsClass":[{"name":"getLocationEntityMappingPayload","args":[{"name":"locationEntityId","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"LocationEntityPost","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"locationEntityId","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"handleSuccess","args":[{"name":"locationEntityMappingPayload","type":"LocationEntityPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"locationEntityMappingPayload","type":"LocationEntityPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"navigateToExportSetting","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":165,"deprecated":false,"deprecationMessage":""},{"name":"patchFormValue","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":""},{"name":"setOnboardingStateAndRedirect","args":[{"name":"locationEntityMappingPayload","type":"LocationEntityPost","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":106,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"locationEntityMappingPayload","type":"LocationEntityPost","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupLocationEntityMapping","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { ConfigurationCta, IntacctField, IntacctOnboardingState, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { LocationEntityMapping } from \'src/app/core/models/si/db/location-entity-mapping.model\';\\nimport { UserService } from \'src/app/core/services/misc/user.service\';\\nimport { IntacctConnectorService } from \'src/app/core/services/si/si-core/intacct-connector.service\';\\nimport { StorageService } from \'src/app/core/services/common/storage.service\';\\nimport { SiWorkspaceService } from \'src/app/core/services/si/si-core/si-workspace.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { LocationEntityPost } from \'src/app/core/models/si/si-configuration/connector.model\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { IntacctDestinationAttribute } from \'src/app/core/models/si/db/destination-attribute.model\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-intacct-location-entity\',\\n  templateUrl: \'./intacct-location-entity.component.html\',\\n  styleUrls: [\'./intacct-location-entity.component.scss\']\\n})\\nexport class IntacctLocationEntityComponent implements OnInit {\\n\\n  locationEntityForm: FormGroup;\\n\\n  locationEntityOptions: IntacctDestinationAttribute[];\\n\\n  locationEntity: LocationEntityMapping;\\n\\n  isLoading: boolean = true;\\n\\n  isOnboarding: boolean;\\n\\n  isRefreshDimensionInProgress: boolean;\\n\\n  saveInProgress: boolean = false;\\n\\n  workspaceId: number;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  redirectLink: string = brandingKbArticles.onboardingArticles.INTACCT.CONNECTOR;\\n\\n  fyleOrgName: string = this.userService.getUserProfile().org_name;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private mappingsService: SiMappingsService,\\n    private connectorService: IntacctConnectorService,\\n    private userService: UserService,\\n    private storageService: StorageService,\\n    private router: Router,\\n    private workspaceService: SiWorkspaceService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService\\n  ) { }\\n\\n  patchFormValue(event: any): void {\\n    this.locationEntityForm.controls.locationEntity.patchValue(event.value);\\n  }\\n\\n  save() {\\n    this.isLoading = true;\\n    this.saveInProgress = true;\\n\\n    const locationEntityId = this.locationEntityForm.value.locationEntity;\\n    const locationEntityMappingPayload: LocationEntityPost = this.getLocationEntityMappingPayload(locationEntityId);\\n\\n    this.connectorService.postLocationEntityMapping(locationEntityMappingPayload).subscribe(\\n      (locationEntity) => {\\n        this.locationEntity = locationEntity;\\n        this.isLoading = false;\\n        this.handleSuccess(locationEntityMappingPayload);\\n      },\\n      () => {\\n        this.isLoading = false;\\n        this.saveInProgress = false;\\n      }\\n    );\\n  }\\n\\n  private getLocationEntityMappingPayload(locationEntityId: any): LocationEntityPost {\\n    if (locationEntityId.destination_id !== \'top_level\') {\\n      const locationEntity = this.locationEntityOptions.filter(entity => entity.destination_id === locationEntityId.destination_id);\\n      return {\\n        location_entity_name: locationEntity[0].value,\\n        destination_id: locationEntity[0].destination_id,\\n        country_name: locationEntity[0].detail?.country ? locationEntity[0].detail.country : null,\\n        workspace: this.workspaceId\\n      };\\n    }\\n    return {\\n      location_entity_name: \'Top Level\',\\n      destination_id: \'top_level\',\\n      country_name: null,\\n      workspace: this.workspaceId\\n    };\\n  }\\n\\n  navigateToExportSetting() {\\n    this.router.navigate([\'/integrations/intacct/onboarding/export_settings\']);\\n  }\\n\\n  private setOnboardingStateAndRedirect(locationEntityMappingPayload: LocationEntityPost): void {\\n    if (this.workspaceService.getIntacctOnboardingState() === IntacctOnboardingState.CONNECTION) {\\n      this.trackingService.integrationsOnboardingCompletion(IntacctOnboardingState.CONNECTION, 2, locationEntityMappingPayload);\\n    }\\n\\n    if (this.isOnboarding) {\\n      this.workspaceService.setIntacctOnboardingState(IntacctOnboardingState.EXPORT_SETTINGS);\\n      this.router.navigate([\'/integrations/intacct/onboarding/export_settings\']);\\n    }\\n    this.isLoading = false;\\n    this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Location Entity Selected Successfully.\');\\n  }\\n\\n  private handleSuccess(locationEntityMappingPayload: LocationEntityPost): void {\\n    this.isRefreshDimensionInProgress = true;\\n    this.mappingsService.refreshSageIntacctDimensions().subscribe(() => {\\n      this.setOnboardingStateAndRedirect(locationEntityMappingPayload);\\n    }, () => {\\n      this.setOnboardingStateAndRedirect(locationEntityMappingPayload);\\n    });\\n  }\\n\\n  private setupPage() {\\n    this.workspaceId = this.storageService.get(\'si.workspaceId\');\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    this.mappingsService.getSageIntacctDestinationAttributes(IntacctField.LOCATION_ENTITY).subscribe((locationEntities) => {\\n      const topLevelOption = {\\n        id: 1,\\n        attribute_type: \'LOCATION_ENTITY\',\\n        display_name: \'Location Entity\',\\n        destination_id: \'top_level\',\\n        value: \'Top Level\',\\n        active: true,\\n        created_at: new Date(),\\n        updated_at: new Date(),\\n        workspace: this.workspaceId,\\n        detail: {}\\n      };\\n      this.locationEntityOptions = [topLevelOption].concat(locationEntities);\\n      this.setupLocationEntityMapping();\\n    });\\n  }\\n\\n  private setupLocationEntityMapping() {\\n    this.connectorService.getLocationEntityMapping().subscribe(locationEntityMappings => {\\n      this.locationEntity = locationEntityMappings;\\n      this.locationEntityForm = this.formBuilder.group({\\n        locationEntity: [this.locationEntity ? this.locationEntity : \'\']\\n      });\\n      this.locationEntityForm.controls.locationEntity.disable();\\n      this.isLoading = false;\\n    }, () => {\\n      this.locationEntityForm = this.formBuilder.group({\\n        locationEntity: [null, Validators.required]\\n      });\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit() {\\n    this.setupPage();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"/* Common styles */\\n.tw-flex {\\n  display: flex;\\n}\\n\\n.tw-justify-center {\\n  justify-content: center;\\n}\\n\\n.tw-items-center {\\n  align-items: center;\\n}\\n\\n.tw-relative {\\n  position: relative;\\n}\\n\\n.tw-absolute {\\n  position: absolute;\\n}\\n\\n.tw-h-screen {\\n  height: 100vh;\\n}\\n\\n.sub-text-color {\\n  color: #5A5D72;\\n}\\n\\n/* Loader styles */\\n.intacct-connector--loader {\\n  position: fixed;\\n  z-index: 9999;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-color: rgba(255, 255, 255, 0.7);\\n}\\n\\n/* Content styles */\\n.connector--org-switch-separator {\\n  border-top: 1px solid #F5F5F5;\\n  width: 302px;\\n}\\n\\n.connector--connection-block-separator-1 {\\n  left: -82px;\\n}\\n\\n.connector--connection-block-separator-2 {\\n  right: -82px;\\n}\\n\\n/* PrimeNG component styles */\\n.p-grid {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n  gap: 10px;\\n}\\n\\n.actionable-text {\\n  color: #FF3366;\\n  cursor: pointer;\\n}\\n\\n.intacct-location-select {\\n  margin-left: 20px;\\n}\\n\\n.connector {\\n  &--connection-block-separator {\\n    border-top: 1px solid #F5F5F5;\\n    transform: rotate(90deg);\\n    position: absolute;\\n    margin-left: -82px;\\n  }\\n\\n  &--connection-block-separator-1 {\\n    @extend .connector--connection-block-separator;\\n    width: 102px;\\n    height: 160px;\\n    margin-top: -112px;\\n  }\\n\\n  &--connection-block-separator-2 {\\n    @extend .connector--connection-block-separator;\\n    width: 165px;\\n    height: 100px;\\n    margin-top: 7px;\\n  }\\n}","styleUrl":"./intacct-location-entity.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"mappingsService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""},{"name":"connectorService","type":"IntacctConnectorService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""}],"line":46,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingsService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"connectorService","type":"IntacctConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n  <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n  <div class=\\"configuration--step-header configuration--step-header-styles\\">\\n    <app-configuration-step-header\\n      [headerText]=\\"\'Connect to Sage Intacct\'\\"\\n      [contentText]=\\"\'Expenses will be posted to the Sage Intacct Location entity selected here. Once configured, you can not change \' + brandingConfig.brandName + \' Organization or Location Entity.\'\\"\\n      [redirectLink]=\\"redirectLink\\">\\n    </app-configuration-step-header>\\n  </div>\\n  <div class=\\"tw-flex\\">\\n    <div class=\\"tw-w-40-vw tw-h-240-px tw-flex tw-flex-col tw-items-center tw-justify-center\\">\\n      <h5 class=\\"tw-text-14-px tw-font-500 align-center tw-text-sub-text-color tw-cursor-default\\">\\n        {{ brandingConfig.brandName | uppercase }}\\n      </h5>\\n      <h3 [pTooltip]=\\"fyleOrgName\\" [tooltipDisabled]=\\"fyleOrgName.length < 26\\" tooltipPosition=\\"left\\" tooltipStyleClass=\\"left\\" class=\\"tw-text-18-px tw-pt-18-px tw-whitespace-nowrap tw-cursor-default\\">\\n        {{ fyleOrgName | trimCharacter: 26 }}\\n      </h3>\\n    </div>\\n    <div class=\\"tw-flex tw-justify-center tw-items-center tw-w-20-vw\\">\\n      <div>\\n        <img src=\\"assets/gifs/disconnect.gif\\" height=\\"100px\\" width=\\"100px\\" alt=\\"Disconnect GIF\\" />\\n      </div>\\n    </div>\\n      <form class=\\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-w-40-vw\\" [formGroup]=\\"locationEntityForm\\">\\n        <div class=\\"tw-whitespace-nowrap\\">\\n          <div>\\n            <h5 class=\\"tw-text-14-px tw-font-500 tw-items-center tw-text-sub-text-color\\">\\n            SAGE INTACCT\\n          </h5>\\n          </div>\\n        </div>\\n          <div class=\\"tw-pt-16-px\\">\\n            <p-dropdown appendTo=\\"body\\" (onChange)=\\"patchFormValue($event)\\" class=\\"tw-pl-7\\" *ngIf=\\"!locationEntity?.location_entity_name\\" placeholder=\\"Select Location Entity\\" formControllerName=\\"locationEntity\\" [options]=\\"locationEntityOptions\\" optionLabel=\\"value\\">\\n            </p-dropdown>\\n        </div>\\n          <h3 *ngIf=\\"locationEntity\\" [pTooltip]=\\"locationEntity.location_entity_name\\" [tooltipDisabled]=\\"locationEntity.location_entity_name.length < 26\\" tooltipPosition=\\"left\\" tooltipStyleClass=\\"left\\" class=\\"tw-text-18-px center-align-text tw-whitespace-nowrap tw-cursor-default\\">\\n            {{ locationEntity.location_entity_name | trimCharacter: 26 }}\\n          </h3>\\n\\n          <div *ngIf=\\"!locationEntity\\" class=\\"tw-text-14-px tw-pt-16-px tw-w-300-px tw-text-faded-text-color tw-text-center\\">\\n            Please select a Location (Entity) from Sage Intacct to proceed further.\\n          </div>\\n\\n          <div *ngIf=\\"isRefreshDimensionInProgress\\" class=\\"tw-text-14-px tw-pt-16-px tw-w-300-px tw-text-faded-text-color tw-text-center\\">\\n            Please hold on; we are fetching data from your Sage Intacct account, which may take a few seconds.\\n          </div>\\n      </form>\\n  </div>\\n  <div>\\n    <app-configuration-step-footer *ngIf=\\"!locationEntity\\" [ctaText]=\\"saveInProgress ? ConfigurationCtaText.SYNCING : ConfigurationCtaText.SAVE_AND_CONTINUE\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!locationEntityForm.valid\\"></app-configuration-step-footer>\\n    <app-configuration-step-footer *ngIf=\\"locationEntity\\" [ctaText]=\\"saveInProgress ? ConfigurationCtaText.SYNCING : ConfigurationCtaText.CONTINUE\\" (save)=\\"navigateToExportSetting()\\" [isButtonDisabled]=\\"saveInProgress\\"></app-configuration-step-footer>\\n  </div>\\n</div>\\n"},{"name":"IntacctStepperComponent","id":"component-IntacctStepperComponent-88cbab44fa10bf55b4f97cb4e0f0590d9a213332f0c866d4e6eba343ebcecafb89a8bfa0b7b86bbcc16af81457ab1face14d9e128dd7c6485137d1685a2b862d","file":"src/app/shared/components/si/helper/intacct-stepper/intacct-stepper.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-intacct-stepper","styleUrls":["./intacct-stepper.component.scss"],"styles":[],"templateUrl":["./intacct-stepper.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"currentStep","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"[\\n    {\\n      active: false,\\n      completed: false,\\n      number: 1,\\n      step: \'Connect to Sage Intacct\',\\n      icon: \'connector\',\\n      route: \'connector\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      }\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 2,\\n      step: \'Export Settings\',\\n      icon: \'export-setting\',\\n      route: \'export_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      }\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 3,\\n      step: \'Import Settings\',\\n      icon: \'import-setting\',\\n      route: \'import_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      }\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 4,\\n      step: \'Advanced Settings\',\\n      icon: \'advanced-setting\',\\n      route: \'advanced_settings\',\\n      size: {\\n        height: \'20px\',\\n        width: \'20px\'\\n      }\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":21}],"methodsClass":[{"name":"navigate","args":[{"name":"canNavigate","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"route","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"canNavigate","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":""},{"name":"updateActiveAndCompletedSteps","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":72,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { IntacctOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { SiWorkspaceService } from \'src/app/core/services/si/si-core/si-workspace.service\';\\n\\n@Component({\\n  selector: \'app-intacct-stepper\',\\n  templateUrl: \'./intacct-stepper.component.html\',\\n  styleUrls: [\'./intacct-stepper.component.scss\']\\n})\\nexport class IntacctStepperComponent implements OnInit {\\n\\n  constructor(\\n    private router: Router,\\n    private workspaceService: SiWorkspaceService\\n  ) { }\\n\\n  @Input() currentStep: string;\\n\\n  onboardingSteps: OnboardingStepper[] = [\\n    {\\n      active: false,\\n      completed: false,\\n      number: 1,\\n      step: \'Connect to Sage Intacct\',\\n      icon: \'connector\',\\n      route: \'connector\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      }\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 2,\\n      step: \'Export Settings\',\\n      icon: \'export-setting\',\\n      route: \'export_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      }\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 3,\\n      step: \'Import Settings\',\\n      icon: \'import-setting\',\\n      route: \'import_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      }\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 4,\\n      step: \'Advanced Settings\',\\n      icon: \'advanced-setting\',\\n      route: \'advanced_settings\',\\n      size: {\\n        height: \'20px\',\\n        width: \'20px\'\\n      }\\n    }\\n  ];\\n\\n  private updateActiveAndCompletedSteps(): void {\\n    this.onboardingSteps.forEach(step => {\\n      if (step.step === this.currentStep) {\\n        step.active = true;\\n      }\\n    });\\n    const onboardingState: IntacctOnboardingState = this.workspaceService.getIntacctOnboardingState();\\n    const onboardingStateStepMap = {\\n      [IntacctOnboardingState.CONNECTION]: 1,\\n      [IntacctOnboardingState.LOCATION_ENTITY]: 2,\\n      [IntacctOnboardingState.EXPORT_SETTINGS]: 3,\\n      [IntacctOnboardingState.IMPORT_SETTINGS]: 4,\\n      [IntacctOnboardingState.ADVANCED_CONFIGURATION]: 5,\\n      [IntacctOnboardingState.COMPLETE]: 6\\n    };\\n\\n    for (let index = onboardingStateStepMap[onboardingState] - 2; index > 0; index--) {\\n      this.onboardingSteps[index - 1].completed = true;\\n    }\\n  }\\n\\n  navigate(canNavigate: boolean, route: string): void {\\n    if (canNavigate) {\\n      this.router.navigate([`/integrations/intacct/onboarding/${route}`]);\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n    this.updateActiveAndCompletedSteps();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".step {\\n    @apply tw-w-48-px tw-h-48-px tw-rounded-full tw-box-border tw-flex tw-items-center ; \\n  }\\n  \\n  .step-state {\\n    @apply tw-bg-white tw-border ;\\n  }\\n  \\n  .icon {\\n    @apply tw-w-20-px tw-h-20-px ;\\n  }\\n  \\n  .line-active {\\n    @apply tw-border-t-2-px tw-border-dashed tw-border-line-inactive tw-w-40 tw-h-2-px ;\\n  }\\n  \\n  .line-inactive {\\n    @apply tw-border-t-2-px tw-border-solid tw-border-success-toast tw-w-40 tw-h-2-px ;\\n  }\\n\\n  .step-name-connector {\\n    position: relative;\\n    left: -50px;\\n  }\\n  \\n  .step-name-export {\\n    position: relative;\\n    left: -20px;\\n  }\\n  \\n  .step-name-import {\\n    position: relative;\\n    left: -18px;\\n  }\\n  \\n  .step-name-advanced {\\n    position: relative;\\n    left: -30px;\\n  }\\n  ","styleUrl":"./intacct-stepper.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-168-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-168-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div class=\\"tw-py-60-px tw-text-slightly-normal-text-color\\">\\n    <div>\\n        <div class=\\"tw-text-center tw-pb-38-px\\">\\n            <p class=\\"tw-font-500\\">Configure the following settings to set up your integration</p>\\n        </div>\\n        <div class=\\"tw-flex tw-justify-center\\">\\n            <div *ngFor=\\"let onboardingStep of onboardingSteps\\">\\n                <div class=\\"tw-grip tw-grid-cols-1\\">\\n                    <div class=\\"tw-flex tw-items-center\\">\\n                        <div class=\\"tw-flex tw-justify-center step\\" (click)=\\"navigate(onboardingStep.completed, onboardingStep.route)\\" [ngClass]=\\"[onboardingStep.active && !onboardingStep.completed ? \'step-state tw-border-success-toast tw-cursor-pointer\' : \'step-state tw-border-box-color tw-cursor-not-allowed\', onboardingStep.active && onboardingStep.completed ? \'step-state tw-border-success-toast !tw-cursor-pointer\' : \'\',onboardingStep.completed && !onboardingStep.active ? \'!tw-bg-success-toast tw-border-success-toast !tw-cursor-pointer\':\'\',]\\">\\n                            <img *ngIf=\\"onboardingStep.active\\" src=\'{{ \\"../../../../../assets/icons/integrations-stepper/\\" + onboardingStep.icon + \\".svg\\" }}\' class=\\"icon\\" >\\n                            <img *ngIf=\\"!onboardingStep.active && onboardingStep.completed\\" src=\\"../../../../../assets/icons/tick.svg\\" class=\\"icon\\">\\n                            <img *ngIf=\\"!onboardingStep.active && !onboardingStep.completed\\" src=\'{{ \\"../../../../../assets/icons/integrations-stepper/\\" + onboardingStep.icon + \\"-inactive.svg\\" }}\' class=\\"icon\\">\\n                        </div>\\n                        <div *ngIf=\\"onboardingStep.number !== 4\\" >\\n                            <div *ngIf=\\"!onboardingStep.completed\\">\\n                                <hr class=\\"line-active\\">\\n                            </div>\\n                            <div *ngIf=\\"onboardingStep.completed\\" class=\\"\\">\\n                                <hr class=\\"line-inactive\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\"tw-text-14-px tw-pt-10-px tw-font-500\\" [ngClass]=\\"[onboardingStep.step === \'Connect to Sage Intacct\' ? \'step-name-connector\' : \'\', onboardingStep.step === \'Export Settings\' ? \'step-name-export\' : \'\', onboardingStep.step === \'Import Settings\' ? \'step-name-import\' : \'\', onboardingStep.step === \'Advanced Settings\' ? \'step-name-advanced\' : \'\']\\">\\n                        {{ onboardingStep.step }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>"},{"name":"IntegrationsComponent","id":"component-IntegrationsComponent-d3e5dc76efac50223c765ab3b4fbc1b2ce8d58802e2715c41476a77bbed4ac84cad9ed18a126135f1644d338b3e1bb7e444de3d2eb7c9f370f66c4e21da69c4f","file":"src/app/integrations/integrations.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-integrations","styleUrls":["./integrations.component.scss"],"styles":[],"templateUrl":["./integrations.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":25},{"name":"org","deprecated":false,"deprecationMessage":"","type":"Org","optional":false,"description":"","line":23},{"name":"user","deprecated":false,"deprecationMessage":"","type":"MinimalUser | null","optional":false,"description":"","line":21},{"name":"windowReference","deprecated":false,"deprecationMessage":"","type":"Window","optional":false,"description":"","line":19}],"methodsClass":[{"name":"getOrCreateOrg","args":[],"optional":false,"returnType":"Promise<Org | undefined>","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":""},{"name":"setupOrg","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MinimalUser } from \'../core/models/db/user.model\';\\nimport { Org } from \'../core/models/org/org.model\';\\nimport { StorageService } from \'../core/services/common/storage.service\';\\nimport { WindowService } from \'../core/services/common/window.service\';\\nimport { TrackingService } from \'../core/services/integration/tracking.service\';\\nimport { UserService } from \'../core/services/misc/user.service\';\\nimport { OrgService } from \'../core/services/org/org.service\';\\nimport { EventsService } from \'../core/services/common/events.service\';\\n\\n@Component({\\n  selector: \'app-integrations\',\\n  templateUrl: \'./integrations.component.html\',\\n  styleUrls: [\'./integrations.component.scss\']\\n})\\nexport class IntegrationsComponent implements OnInit {\\n\\n  windowReference: Window;\\n\\n  user: MinimalUser | null;\\n\\n  org: Org;\\n\\n  isLoading: boolean = true;\\n\\n  constructor(\\n    private eventsService: EventsService,\\n    private orgService: OrgService,\\n    private router: Router,\\n    private storageService: StorageService,\\n    private trackingService: TrackingService,\\n    private userService: UserService,\\n    private windowService: WindowService\\n  ) {\\n    this.windowReference = this.windowService.nativeWindow;\\n  }\\n\\n  private navigate(): void {\\n    const pathName = this.windowReference.location.pathname;\\n    this.isLoading = false;\\n    if (pathName === \'/integrations\') {\\n      this.router.navigate([\'/integrations/landing\']);\\n    }\\n  }\\n\\n  private getOrCreateOrg(): Promise<Org | undefined> {\\n    return this.orgService.getOrgs(this.user?.org_id).toPromise().then(orgs => {\\n      if (orgs) {\\n        return orgs;\\n      }\\n\\n      return undefined;\\n    }).catch(() => {\\n      return this.orgService.createOrg().toPromise().then(org => {\\n        return org;\\n      });\\n    });\\n  }\\n\\n  private setupOrg(): void {\\n    this.eventsService.setupRouteWatcher();\\n    this.user = this.userService.getUserProfile();\\n    this.getOrCreateOrg().then((org: Org | undefined) => {\\n      if (org) {\\n        this.trackingService.onOpenLandingPage(this.user?.email, org.id, org.name, org.fyle_org_id);\\n        this.org = org;\\n        this.storageService.set(\'orgId\', this.org.id);\\n        this.storageService.set(\'org\', this.org);\\n      }\\n      this.navigate();\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupOrg();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./integrations.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"eventsService","type":"EventsService","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"eventsService","type":"EventsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet *ngIf=\\"!isLoading\\"></router-outlet>\\n"},{"name":"LandingComponent","id":"component-LandingComponent-697e7649adad3429b59fe0a242df055f2f23daf0daf5baf5c95b6c8216ec95607df65338f704259a17edaecc663b11ad66b2666dd6821d402b9987565c379e14","file":"src/app/integrations/landing/landing.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-landing","styleUrls":["./landing.component.scss"],"styles":[],"templateUrl":["./landing.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"AccountingIntegrationApp","defaultValue":"AccountingIntegrationApp","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25},{"name":"accountingIntegrationEventMap","defaultValue":"{\\n    [AccountingIntegrationApp.NETSUITE]: ClickEvent.OPEN_NETSUITE_INTEGRATION,\\n    [AccountingIntegrationApp.QBO]: ClickEvent.OPEN_QBO_INTEGRATION,\\n    [AccountingIntegrationApp.SAGE_INTACCT]: ClickEvent.OPEN_SAGE_INTACCT_INTEGRATION,\\n    [AccountingIntegrationApp.XERO]: ClickEvent.OPEN_XERO_INTEGRATION\\n  }","deprecated":false,"deprecationMessage":"","type":"AccountingIntegrationEvent","optional":false,"description":"","line":68,"modifierKind":[123,148]},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":77,"modifierKind":[148]},{"name":"exposeIntacctNewApp","defaultValue":"EXPOSE_INTACCT_NEW_APP","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":35},{"name":"InAppIntegration","defaultValue":"InAppIntegration","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27},{"name":"inAppIntegrationUrlMap","defaultValue":"{\\n    [InAppIntegration.BAMBOO_HR]: \'/integrations/bamboo_hr/\',\\n    [InAppIntegration.QBD]: \'/integrations/qbd/\',\\n    [InAppIntegration.TRAVELPERK]: \'/integrations/travelperk/\',\\n    [InAppIntegration.GUSTO]: \'/integrations/gusto/\',\\n    [InAppIntegration.INTACCT]: \'/integrations/intacct\',\\n    [InAppIntegration.SAGE300]: \'/integrations/sage300\',\\n    [InAppIntegration.BUSINESS_CENTRAL]: \'/integrations/business_central\'\\n  }","deprecated":false,"deprecationMessage":"","type":"InAppIntegrationUrlMap","optional":false,"description":"","line":58,"modifierKind":[123,148]},{"name":"integrationCallbackUrlMap","defaultValue":"{\\n    [AccountingIntegrationApp.NETSUITE]: [environment.ns_callback_url, environment.ns_client_id],\\n    [AccountingIntegrationApp.QBO]: [environment.qbo_callback_url, environment.qbo_client_id],\\n    [AccountingIntegrationApp.SAGE_INTACCT]: [environment.si_callback_url, environment.si_client_id],\\n    [AccountingIntegrationApp.XERO]: [environment.xero_callback_url, environment.xero_client_id]\\n  }","deprecated":false,"deprecationMessage":"","type":"IntegrationCallbackUrl","optional":false,"description":"","line":51,"modifierKind":[123,148]},{"name":"IntegrationsView","defaultValue":"IntegrationView","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23},{"name":"integrationTabs","defaultValue":"{\\n    [IntegrationView.ACCOUNTING]: false,\\n    [IntegrationView.HRMS]: false,\\n    [IntegrationView.ALL]: true,\\n    [IntegrationView.TRAVEL]: false\\n  }","deprecated":false,"deprecationMessage":"","type":"IntegrationsView","optional":false,"description":"","line":44},{"name":"integrationTabsInitialState","defaultValue":"{\\n    [IntegrationView.ACCOUNTING]: false,\\n    [IntegrationView.HRMS]: false,\\n    [IntegrationView.ALL]: false,\\n    [IntegrationView.TRAVEL]: false\\n  }","deprecated":false,"deprecationMessage":"","type":"IntegrationsView","optional":false,"description":"","line":37,"modifierKind":[123,148]},{"name":"isGustoAllowed","defaultValue":"this.org.allow_gusto","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33},{"name":"isTravelperkAllowed","defaultValue":"this.org.allow_travelperk","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":31},{"name":"org","defaultValue":"this.orgService.getCachedOrg()","deprecated":false,"deprecationMessage":"","type":"Org","optional":false,"description":"","line":29},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":75,"modifierKind":[123,148]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":""},{"name":"openAccountingIntegrationApp","args":[{"name":"accountingIntegrationApp","type":"AccountingIntegrationApp","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"accountingIntegrationApp","type":"AccountingIntegrationApp","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"openInAppIntegration","args":[{"name":"inAppIntegration","type":"InAppIntegration","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"inAppIntegration","type":"InAppIntegration","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupLoginWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"switchView","args":[{"name":"clickedView","type":"IntegrationView","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"clickedView","type":"IntegrationView","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { AccountingIntegrationApp, ClickEvent, InAppIntegration, IntegrationView, Page } from \'src/app/core/models/enum/enum.model\';\\nimport { AccountingIntegrationEvent, InAppIntegrationUrlMap, IntegrationCallbackUrl, IntegrationsView } from \'src/app/core/models/integrations/integrations.model\';\\nimport { EXPOSE_INTACCT_NEW_APP, EventsService } from \'src/app/core/services/common/events.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { OrgService } from \'src/app/core/services/org/org.service\';\\nimport { environment } from \'src/environments/environment\';\\nimport { Org } from \'src/app/core/models/org/org.model\';\\nimport { SiAuthService } from \'src/app/core/services/si/si-core/si-auth.service\';\\nimport { StorageService } from \'src/app/core/services/common/storage.service\';\\nimport { Token } from \'src/app/core/models/misc/token.model\';\\nimport { MinimalUser } from \'src/app/core/models/db/user.model\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-landing\',\\n  templateUrl: \'./landing.component.html\',\\n  styleUrls: [\'./landing.component.scss\']\\n})\\nexport class LandingComponent implements OnInit {\\n\\n  IntegrationsView = IntegrationView;\\n\\n  AccountingIntegrationApp = AccountingIntegrationApp;\\n\\n  InAppIntegration = InAppIntegration;\\n\\n  org: Org = this.orgService.getCachedOrg();\\n\\n  isTravelperkAllowed: boolean = this.org.allow_travelperk;\\n\\n  isGustoAllowed: boolean = this.org.allow_gusto;\\n\\n  exposeIntacctNewApp: boolean = EXPOSE_INTACCT_NEW_APP;\\n\\n  private readonly integrationTabsInitialState: IntegrationsView = {\\n    [IntegrationView.ACCOUNTING]: false,\\n    [IntegrationView.HRMS]: false,\\n    [IntegrationView.ALL]: false,\\n    [IntegrationView.TRAVEL]: false\\n  };\\n\\n  integrationTabs: IntegrationsView = {\\n    [IntegrationView.ACCOUNTING]: false,\\n    [IntegrationView.HRMS]: false,\\n    [IntegrationView.ALL]: true,\\n    [IntegrationView.TRAVEL]: false\\n  };\\n\\n  private readonly integrationCallbackUrlMap: IntegrationCallbackUrl = {\\n    [AccountingIntegrationApp.NETSUITE]: [environment.ns_callback_url, environment.ns_client_id],\\n    [AccountingIntegrationApp.QBO]: [environment.qbo_callback_url, environment.qbo_client_id],\\n    [AccountingIntegrationApp.SAGE_INTACCT]: [environment.si_callback_url, environment.si_client_id],\\n    [AccountingIntegrationApp.XERO]: [environment.xero_callback_url, environment.xero_client_id]\\n  };\\n\\n  private readonly inAppIntegrationUrlMap: InAppIntegrationUrlMap = {\\n    [InAppIntegration.BAMBOO_HR]: \'/integrations/bamboo_hr/\',\\n    [InAppIntegration.QBD]: \'/integrations/qbd/\',\\n    [InAppIntegration.TRAVELPERK]: \'/integrations/travelperk/\',\\n    [InAppIntegration.GUSTO]: \'/integrations/gusto/\',\\n    [InAppIntegration.INTACCT]: \'/integrations/intacct\',\\n    [InAppIntegration.SAGE300]: \'/integrations/sage300\',\\n    [InAppIntegration.BUSINESS_CENTRAL]: \'/integrations/business_central\'\\n  };\\n\\n  private readonly accountingIntegrationEventMap: AccountingIntegrationEvent = {\\n    [AccountingIntegrationApp.NETSUITE]: ClickEvent.OPEN_NETSUITE_INTEGRATION,\\n    [AccountingIntegrationApp.QBO]: ClickEvent.OPEN_QBO_INTEGRATION,\\n    [AccountingIntegrationApp.SAGE_INTACCT]: ClickEvent.OPEN_SAGE_INTACCT_INTEGRATION,\\n    [AccountingIntegrationApp.XERO]: ClickEvent.OPEN_XERO_INTEGRATION\\n  };\\n\\n  private readonly sessionStartTime = new Date();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private eventsService: EventsService,\\n    private router: Router,\\n    private siAuthService: SiAuthService,\\n    private storageService: StorageService,\\n    private trackingService: TrackingService,\\n    private orgService: OrgService\\n  ) { }\\n\\n\\n  switchView(clickedView: IntegrationView): void {\\n    const initialState = Object.create(this.integrationTabsInitialState);\\n    this.trackingService.onClickEvent(ClickEvent.INTEGRATION_TABS);\\n\\n    // Resetting to initial state and setting clicked view to true\\n    this.integrationTabs = initialState;\\n    this.integrationTabs[clickedView] = true;\\n  }\\n\\n  openAccountingIntegrationApp(accountingIntegrationApp: AccountingIntegrationApp): void {\\n    this.trackingService.trackTimeSpent(Page.LANDING, this.sessionStartTime);\\n    this.trackingService.onClickEvent(this.accountingIntegrationEventMap[accountingIntegrationApp]);\\n\\n    const payload = {\\n      callbackUrl: this.integrationCallbackUrlMap[accountingIntegrationApp][0],\\n      clientId: this.integrationCallbackUrlMap[accountingIntegrationApp][1]\\n    };\\n\\n    this.eventsService.postEvent(payload);\\n  }\\n\\n  openInAppIntegration(inAppIntegration: InAppIntegration): void {\\n    this.trackingService.trackTimeSpent(Page.LANDING, this.sessionStartTime);\\n    this.router.navigate([this.inAppIntegrationUrlMap[inAppIntegration]]);\\n  }\\n\\n  private setupLoginWatcher(): void {\\n    const intacctLogin$ = this.eventsService.sageIntacctLogin.subscribe((redirectUri: string) => {\\n      const authCode = redirectUri.split(\'code=\')[1].split(\'&\')[0];\\n      this.siAuthService.loginWithAuthCode(authCode).subscribe((token: Token) => {\\n        const user: MinimalUser = {\\n          \'email\': token.user.email,\\n          \'access_token\': token.access_token,\\n          \'refresh_token\': token.refresh_token,\\n          \'full_name\': token.user.full_name,\\n          \'user_id\': token.user.user_id,\\n          \'org_id\': token.user.org_id,\\n          \'org_name\': token.user.org_name\\n        };\\n        this.storageService.set(\'user\', user);\\n        intacctLogin$.unsubscribe();\\n        this.openInAppIntegration(InAppIntegration.INTACCT);\\n      });\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupLoginWatcher();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".landing {\\n    &--active-tag {\\n        @apply tw-bg-slightly-normal-text-color tw-h-2-px tw-w-[100%] tw-rounded-tr-4-px tw-rounded-tl-4-px;\\n    }\\n\\n    &--tab {\\n        @apply tw-mt-20-px tw-flex tw-flex-col tw-justify-between tw-items-center tw-h-36-px tw-cursor-pointer;\\n    }\\n\\n    &--divider {\\n        @apply tw-h-1-px tw-w-[100%] tw-bg-separator;\\n    }\\n\\n    &--section-divider {\\n        @extend .landing--divider;\\n        @apply tw-my-40-px;\\n    }\\n\\n    &--accounting-app {\\n        @apply tw-flex tw-flex-col tw-w-20-vw tw-h-168-px tw-items-center tw-justify-center tw-cursor-pointer tw-rounded-4-px tw-border-1-px tw-shadow-app-card;\\n    }\\n\\n    &--accounting-app-name {\\n        @apply tw-pt-22-px tw-text-14-px tw-flex;\\n    }\\n\\n    &--accounting-app-open {\\n        @apply tw-pl-6-px tw-pt-3-px tw-text-slightly-normal-text-color;\\n    }\\n\\n    &--section-heading {\\n        @apply tw-text-18-px tw-pb-8-px;\\n    }\\n\\n    &--section-caption {\\n        @apply tw-text-sub-text-color tw-text-14-px tw-pb-24-px;\\n    }\\n\\n    &--other-integrations {\\n        @apply tw-grid tw-grid-cols-3 tw-mt-50-px;\\n    }\\n\\n    &--other-integration-app {\\n        @apply tw-flex tw-items-center tw-justify-center;\\n    }\\n}\\n","styleUrl":"./landing.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"eventsService","type":"EventsService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"siAuthService","type":"SiAuthService","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""}],"line":77,"jsdoctags":[{"name":"eventsService","type":"EventsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"siAuthService","type":"SiAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-text-slightly-normal-text-color\\">\\n    <div class=\\"tw-flex tw-text-14-px tw-h-56-px\\">\\n        <div class=\\"tw-pl-24-px tw-pr-48-px landing--tab\\" (click)=\\"switchView(IntegrationsView.ALL)\\">\\n            All\\n            <p *ngIf=\\"integrationTabs.ALL\\" class=\\"landing--active-tag\\"></p>\\n        </div>\\n        <div class=\\"tw-pr-48-px landing--tab\\" (click)=\\"switchView(IntegrationsView.ACCOUNTING)\\">\\n            Accounting\\n            <p *ngIf=\\"integrationTabs.ACCOUNTING\\" class=\\"landing--active-tag\\"></p>\\n        </div>\\n        <div class=\\"tw-pr-48-px landing--tab\\" (click)=\\"switchView(IntegrationsView.HRMS)\\">\\n            HRMS\\n            <p *ngIf=\\"integrationTabs.HRMS\\" class=\\"landing--active-tag\\"></p>\\n        </div>\\n        <div *ngIf=\\"isTravelperkAllowed\\" class=\\"tw-pr-48-px landing--tab\\" (click)=\\"switchView(IntegrationsView.TRAVEL)\\">\\n            Travel\\n            <p *ngIf=\\"integrationTabs.TRAVEL\\" class=\\"landing--active-tag\\"></p>\\n        </div>\\n    </div>\\n\\n    <p class=\\"tw-mt-1-px landing--divider\\"></p>\\n\\n    <div class=\\"tw-pt-40-px tw-ml-126-px tw-mr-126-px\\">\\n        <div *ngIf=\\"integrationTabs.ALL || integrationTabs.ACCOUNTING\\">\\n            <p class=\\"landing--section-heading\\">\\n                Accounting\\n            </p>\\n            <p class=\\"landing--section-caption\\">\\n                If your company uses any of the accounting systems below, you can easily integrate your {{ brandingConfig.brandName }} account with it.\\n            </p>\\n\\n            <div class=\\"tw-flex\\">\\n                <div>\\n                    <div class=\\"landing--accounting-app tw-mr-20-px\\" (click)=\\"openAccountingIntegrationApp(AccountingIntegrationApp.NETSUITE)\\">\\n                        <img src=\\"assets/logos/netsuite-logo.png\\" width=\\"110px\\" height=\\"60px\\" />\\n                        <span class=\\"landing--accounting-app-name\\">\\n                            NetSuite\\n                            <svg-icon-sprite src=\\"open-in-new-tab\\" width=\\"14px\\" height=\\"14px\\" class=\\"landing--accounting-app-open\\"></svg-icon-sprite>\\n                        </span>\\n                    </div>\\n                    <div class=\\"landing--accounting-app tw-mr-20-px tw-mt-20-px\\" (click)=\\"openInAppIntegration(InAppIntegration.QBD)\\">\\n                        <img src=\\"assets/logos/quickbooks-desktop.svg\\" class=\\"tw-mt-[-20px]\\" width=\\"100px\\" height=\\"60px\\" />\\n                        <span class=\\"landing--accounting-app-name\\">\\n                            QuickBooks Desktop\\n                        </span>\\n                    </div>\\n                </div>\\n                <div>\\n                    <div class=\\"landing--accounting-app tw-mr-20-px\\" (click)=\\"openAccountingIntegrationApp(AccountingIntegrationApp.SAGE_INTACCT)\\">\\n                        <img src=\\"assets/logos/intacct-logo.png\\" width=\\"110px\\" height=\\"60px\\" />\\n                        <span class=\\"landing--accounting-app-name\\">\\n                            Sage Intacct\\n                            <svg-icon-sprite *ngIf=\\"!exposeIntacctNewApp\\" src=\\"open-in-new-tab\\" width=\\"14px\\" height=\\"14px\\" class=\\"landing--accounting-app-open\\"></svg-icon-sprite>\\n                        </span>\\n                    </div>\\n                    \x3c!-- <div class=\\"landing--accounting-app tw-mr-20-px tw-mt-20-px\\" (click)=\\"openInAppIntegration(InAppIntegration.SAGE300)\\">\\n                        <img src=\\"assets/logos/sage300-logo.svg\\" width=\\"110px\\" height=\\"60px\\" />\\n                        <span class=\\"landing--accounting-app-name\\">\\n                            Sage 300 CRE\\n                        </span>\\n                    </div> --\x3e\\n                </div>\\n                <div>\\n                    <div class=\\"landing--accounting-app tw-mr-20-px\\" (click)=\\"openAccountingIntegrationApp(AccountingIntegrationApp.QBO)\\">\\n                        <img src=\\"assets/logos/quickbooks-logo.png\\" width=\\"110px\\" height=\\"60px\\" />\\n                        <span class=\\"landing--accounting-app-name\\">\\n                            QuickBooks Online\\n                            <svg-icon-sprite src=\\"open-in-new-tab\\" width=\\"14px\\" height=\\"14px\\" class=\\"landing--accounting-app-open\\"></svg-icon-sprite>\\n                        </span>\\n                    </div>\\n                    \x3c!-- <div class=\\"landing--accounting-app tw-mr-20-px tw-mt-20-px\\" (click)=\\"openInAppIntegration(InAppIntegration.BUSINESS_CENTRAL)\\">\\n                        <img src=\\"assets/logos/BusinessCentral-logo.svg\\" class=\\"tw-mt-[-20px]\\" width=\\"50px\\" height=\\"60px\\" />\\n                        <span class=\\"landing--accounting-app-name\\">\\n                            Dynamics 365 Business Central\\n                        </span>\\n                    </div> --\x3e\\n                </div>\\n                <div class=\\"landing--accounting-app\\" (click)=\\"openAccountingIntegrationApp(AccountingIntegrationApp.XERO)\\">\\n                    <img src=\\"assets/logos/xero-logo.png\\" class=\\"tw-mt-[-20px]\\" width=\\"50px\\" height=\\"60px\\" />\\n                    <span class=\\"landing--accounting-app-name\\">\\n                        Xero\\n                        <svg-icon-sprite src=\\"open-in-new-tab\\" width=\\"14px\\" height=\\"14px\\" class=\\"landing--accounting-app-open\\"></svg-icon-sprite>\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\"integrationTabs.ALL || integrationTabs.HRMS\\">\\n            <p *ngIf=\\"integrationTabs.ALL\\" class=\\"tw-mt-1-px landing--section-divider\\"></p>\\n            <p class=\\"landing--section-heading\\">\\n                HRMS\\n            </p>\\n            <p class=\\"landing--section-caption\\">\\n                If your company uses any of the HR Management Systems below, you can easily integrate your {{ brandingConfig.brandName }} account with it.\\n            </p>\\n\\n            <div class=\\"tw-flex\\">\\n                <div class=\\"landing--accounting-app tw-mr-20-px\\" (click)=\\"openInAppIntegration(InAppIntegration.BAMBOO_HR)\\">\\n                    <img src=\\"assets/logos/bamboo-hr-logo.svg\\" width=\\"160px\\" height=\\"60px\\" />\\n                    <span class=\\"landing--accounting-app-name\\">\\n                        BambooHR\\n                    </span>\\n                </div>\\n                <div *ngIf=\\"isGustoAllowed\\" class=\\"landing--accounting-app tw-mr-20-px\\" (click)=\\"openInAppIntegration(InAppIntegration.GUSTO)\\">\\n                    <img src=\\"assets/logos/gusto-logo.svg\\" width=\\"140px\\" height=\\"54px\\" />\\n                    <span class=\\"landing--accounting-app-name\\">\\n                        Gusto\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\"isTravelperkAllowed\\">\\n            <p *ngIf=\\"integrationTabs.ALL\\" class=\\"tw-mt-1-px landing--section-divider\\"></p>\\n            <p class=\\"landing--section-heading\\">\\n                Travel\\n            </p>\\n            <p class=\\"landing--section-caption\\">\\n                If your company uses any of the Travel Management Systems below, you can easily integrate your {{ brandingConfig.brandName }} account with it.\\n            </p>\\n\\n            <div class=\\"tw-flex\\">\\n                <div class=\\"landing--accounting-app tw-mr-20-px\\" (click)=\\"openInAppIntegration(InAppIntegration.TRAVELPERK)\\">\\n                    <img src=\\"assets/logos/travelperk-logo.svg\\" width=\\"160px\\" height=\\"60px\\" />\\n                    <span class=\\"landing--accounting-app-name\\">\\n                        TravelPerk\\n                    </span>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\"integrationTabs.ALL\\" class=\\"tw-pb-100-px\\">\\n            <p class=\\"tw-my-40-px landing--divider\\"></p>\\n\\n            <p class=\\"landing--section-heading\\">\\n                Looking for something else?\\n            </p>\\n            <p class=\\"landing--section-caption\\">\\n                We are looking forward to building integrations with a few other applications in the market, as listed below. \\n                If you have a use case to integrate with these, we would love to hear them at <span class=\\"tw-text-hyperlink-color\\">{{brandingConfig.supportEmail}}</span>\\n            </p>\\n\\n            <div class=\\"tw-rounded-4-px tw-border-1-px\\">\\n                <div class=\\"landing--other-integrations\\">\\n                    <div class=\\"landing--other-integration-app\\">\\n                        <img src=\\"assets/logos/sage-logo.png\\" width=\\"80px\\" height=\\"80px\\" />\\n                    </div>\\n                    <div class=\\"landing--other-integration-app\\">\\n                        <img src=\\"assets/logos/msdynamics-logo.png\\" width=\\"150px\\" height=\\"80px\\" />\\n                    </div>\\n                    <div class=\\"landing--other-integration-app\\">\\n                        <img src=\\"assets/logos/financial-force-logo.png\\" width=\\"150px\\" height=\\"80px\\" />\\n                    </div>\\n                </div>\\n                <div class=\\"landing--other-integrations tw-pb-30-px\\">\\n                    <div class=\\"landing--other-integration-app\\">\\n                        <img src=\\"assets/logos/oracle-logo.png\\" width=\\"120px\\" height=\\"70px\\" />\\n                    </div>\\n                    <div class=\\"landing--other-integration-app\\">\\n                        <img src=\\"assets/logos/bill-dot-com-logo.png\\" width=\\"120px\\" height=\\"70px\\" />\\n                    </div>\\n                    <div class=\\"landing--other-integration-app\\">\\n                        <img src=\\"assets/logos/myob-logo.png\\" width=\\"120px\\" height=\\"70px\\" />\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"LandingComponent","id":"component-LandingComponent-7cd43c908479cdbd56429f749dff5740ea3713aca550506800ffc6461c7b656ac529dd85efd1ff6937b8a898cc3d2b5c964159e7ab4b3ba77a479d36797c3adb-1","file":"src/app/integrations/qbd/onboarding/onboarding-landing/landing.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-landing","styleUrls":["./landing.component.scss"],"styles":[],"templateUrl":["./landing.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":19,"modifierKind":[148]},{"name":"brandingKbArticles","defaultValue":"brandingKbArticles","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":11},{"name":"isLoading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":17},{"name":"isQBDConnected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":15},{"name":"isQBDSetupInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-landing\',\\n  templateUrl: \'./landing.component.html\',\\n  styleUrls: [\'./landing.component.scss\']\\n})\\nexport class LandingComponent implements OnInit {\\n\\n  brandingKbArticles = brandingKbArticles;\\n\\n  isQBDSetupInProgress: boolean = false;\\n\\n  isQBDConnected: boolean = false;\\n\\n  isLoading: boolean = false;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".read-more:hover {\\n    @apply tw-underline tw-underline-offset-1 ;\\n}","styleUrl":"./landing.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":19},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"LandingComponent-1","templateData":"<div>\\n    <div>\\n        <app-landing-page-header [iconPath]=\\"\'assets/logos/quickbooks-desktop.svg\'\\" [appName]=\\"\'QuickBooks Desktop\'\\" [appDescription]=\\"\'Generate IIF file to export expenses from \' + brandingConfig.brandName + \' to QuickBooks Desktop\'\\" [isLoading]=\\"isLoading\\" [isIntegrationSetupInProgress]=\\"isQBDSetupInProgress\\" [isIntegrationConnected]=\\"isQBDConnected\\" [postConnectionRoute]=\\"\'qbd/onboarding/export_settings\'\\" [buttonText]=\\"\'Start\'\\"></app-landing-page-header>\\n    </div>\\n    <div>\\n        <app-landing-page-body [headerText]=\\"\'Configure the integration to generate custom IIF file to export expenses from \' + brandingConfig.brandName + \' to QuickBooks Desktop.\'\\" [svgPath]=\\"\'assets/flow-charts/qbd-flow-chart.svg\'\\" [redirectLink]=\\"brandingKbArticles.topLevelArticles.QBD\\"></app-landing-page-body>\\n    </div>\\n</div>"},{"name":"LoaderComponent","id":"component-LoaderComponent-05149ac8028d6b20a9ab846558eede5088759945f8da2f4ac175617634d6698d025714ce5b1a7c1cf97fdf9a7cbe537b4e4f44b53d2506ae2961ad3e93a1006f","file":"src/app/shared/components/core/loader/loader.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-loader","styleUrls":["./loader.component.scss"],"styles":[],"templateUrl":["./loader.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"styleClass","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-loader\',\\n  templateUrl: \'./loader.component.html\',\\n  styleUrls: [\'./loader.component.scss\']\\n})\\nexport class LoaderComponent implements OnInit {\\n\\n  @Input() styleClass: string;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./loader.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":10},"extends":[],"implements":["OnInit"],"templateData":"<p-progressSpinner [ngClass]=\\"styleClass ? \'\' : \'spinner-default\'\\" [styleClass]=\\"styleClass\\"></p-progressSpinner>\\n"},{"name":"LoginComponent","id":"component-LoginComponent-1d4dc18a95f1d7e3e742965c7944e9dbb8b9a03ac1c92797b4f8481087debd4c91f9757ad3d67b0e0a4a9a297a09934f6fd52e9b1ceab49527a785b622176432","file":"src/app/auth/login/login.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-login","styleUrls":["./login.component.scss"],"styles":[],"templateUrl":["./login.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"login","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":""},{"name":"redirect","args":[{"name":"redirectUri","type":"string | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"redirectUri","type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"saveUserProfileAndNavigate","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""},{"name":"redirectUri","type":"string | undefined","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":43,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"redirectUri","type":"string | undefined","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { MinimalUser } from \'src/app/core/models/db/user.model\';\\nimport { AuthService } from \'src/app/core/services/common/auth.service\';\\nimport { UserService } from \'src/app/core/services/misc/user.service\';\\nimport { QbdAuthService } from \'src/app/core/services/qbd/qbd-core/qbd-auth.service\';\\nimport { SiAuthService } from \'src/app/core/services/si/si-core/si-auth.service\';\\nimport { environment } from \'src/environments/environment\';\\nimport { Sage300AuthService } from \'src/app/core/services/sage300/sage300-core/sage300-auth.service\';\\nimport { BusinessCentralAuthService } from \'src/app/core/services/business-central/business-central-core/business-central-auth.service\';\\nimport { QboAuthService } from \'src/app/core/services/qbo/qbo-core/qbo-auth.service\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { AppUrl } from \'src/app/core/models/enum/enum.model\';\\n\\n@Component({\\n  selector: \'app-login\',\\n  templateUrl: \'./login.component.html\',\\n  styleUrls: [\'./login.component.scss\']\\n})\\nexport class LoginComponent implements OnInit {\\n\\n  constructor(\\n    private authService: AuthService,\\n    private helperService: HelperService,\\n    private route: ActivatedRoute,\\n    private router: Router,\\n    private userService: UserService,\\n    private qbdAuthService: QbdAuthService,\\n    private siAuthService : SiAuthService,\\n    private sage300AuthService: Sage300AuthService,\\n    private businessCentralAuthService: BusinessCentralAuthService,\\n    private qboAuthService: QboAuthService\\n  ) { }\\n\\n  private redirect(redirectUri: string | undefined): void {\\n    if (redirectUri) {\\n      this.router.navigate([redirectUri]);\\n    } else {\\n      this.router.navigate([\'/integrations\']);\\n    }\\n  }\\n\\n  private saveUserProfileAndNavigate(code: string, redirectUri: string | undefined): void {\\n    this.authService.login(code).subscribe(response => {\\n      const user: MinimalUser = {\\n        \'email\': response.user.email,\\n        \'access_token\': response.access_token,\\n        \'refresh_token\': response.refresh_token,\\n        \'full_name\': response.user.full_name,\\n        \'user_id\': response.user.user_id,\\n        \'org_id\': response.user.org_id,\\n        \'org_name\': response.user.org_name\\n      };\\n      this.userService.storeUserProfile(user);\\n\\n      this.helperService.setBaseApiURL(AppUrl.QBD);\\n      this.qbdAuthService.qbdLogin(user.refresh_token).subscribe();\\n\\n      this.helperService.setBaseApiURL(AppUrl.SAGE300);\\n      this.sage300AuthService.loginWithRefreshToken(user.refresh_token).subscribe();\\n\\n      this.helperService.setBaseApiURL(AppUrl.BUSINESS_CENTRAL);\\n      this.businessCentralAuthService.loginWithRefreshToken(user.refresh_token).subscribe();\\n\\n      // Only local dev needs this, login happens via postMessage for prod/staging through webapp\\n      if (!environment.production) {\\n        this.userService.storeUserProfile(user);\\n        this.helperService.setBaseApiURL(AppUrl.QBO);\\n        this.qboAuthService.loginWithRefreshToken(user.refresh_token).subscribe();\\n        this.helperService.setBaseApiURL(AppUrl.INTACCT);\\n        this.siAuthService.loginWithRefreshToken(user.refresh_token).subscribe();\\n        this.redirect(redirectUri);\\n      } else {\\n        this.redirect(redirectUri);\\n      }\\n    });\\n  }\\n\\n  private login(): void {\\n    this.route.queryParams.subscribe(params => {\\n      if (params.code) {\\n        this.saveUserProfileAndNavigate(params.code, params.redirect_uri);\\n      }\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.authService.checkLoginStatusAndLogout();\\n    this.login();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./login.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"qbdAuthService","type":"QbdAuthService","deprecated":false,"deprecationMessage":""},{"name":"siAuthService","type":"SiAuthService","deprecated":false,"deprecationMessage":""},{"name":"sage300AuthService","type":"Sage300AuthService","deprecated":false,"deprecationMessage":""},{"name":"businessCentralAuthService","type":"BusinessCentralAuthService","deprecated":false,"deprecationMessage":""},{"name":"qboAuthService","type":"QboAuthService","deprecated":false,"deprecationMessage":""}],"line":20,"jsdoctags":[{"name":"authService","type":"AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qbdAuthService","type":"QbdAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"siAuthService","type":"SiAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sage300AuthService","type":"Sage300AuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"businessCentralAuthService","type":"BusinessCentralAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qboAuthService","type":"QboAuthService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-h-[100%]\\">\\n    <app-loader></app-loader>\\n</div>\\n"},{"name":"MainComponent","id":"component-MainComponent-4d8aa19da5c03a7843a69aa782c05682f4ad430d5b6d2f196e7ec15446d7754835c3d86de3ef909ac74e729b55087416538913a0d95f4c87c662f88884857e90","file":"src/app/integrations/qbd/main/main.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-main","styleUrls":["./main.component.scss"],"styles":[],"templateUrl":["./main.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":23},{"name":"activeModules","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":21},{"name":"modules","defaultValue":"[\\n    {label: \'Dashboard\', routerLink: \'/integrations/qbd/main/dashboard\'},\\n    {label: \'Configuration\', routerLink: \'/integrations/qbd/main/configuration\'},\\n    {label: \'Mapping\', routerLink: \'/integrations/qbd/main/mapping\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":15}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api/menuitem\';\\nimport { QBDExportSettingGet } from \'src/app/core/models/qbd/qbd-configuration/export-setting.model\';\\nimport { QbdExportSettingService } from \'src/app/core/services/qbd/qbd-configuration/qbd-export-setting.service\';\\nimport { QbdMappingService } from \'src/app/core/services/qbd/qbd-mapping/qbd-mapping.service\';\\n\\n@Component({\\n  selector: \'app-main\',\\n  templateUrl: \'./main.component.html\',\\n  styleUrls: [\'./main.component.scss\']\\n})\\nexport class MainComponent implements OnInit {\\n\\n  modules: MenuItem[] = [\\n    {label: \'Dashboard\', routerLink: \'/integrations/qbd/main/dashboard\'},\\n    {label: \'Configuration\', routerLink: \'/integrations/qbd/main/configuration\'},\\n    {label: \'Mapping\', routerLink: \'/integrations/qbd/main/mapping\'}\\n  ];\\n\\n  activeModules: MenuItem[];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router,\\n    private mappingService: QbdMappingService,\\n    private qbdservice: QbdExportSettingService\\n  ) {\\n    this.mappingService.getMappingPagesForSideNavBar.subscribe((showMapping: Boolean) => {\\n      if (showMapping) {\\n        this.activeModules = this.modules;\\n      } else {\\n        const module = this.modules.filter(item => item.label !== \'Mapping\');\\n        this.activeModules = module;\\n      }\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.qbdservice.getQbdExportSettings().subscribe((exportSetting: QBDExportSettingGet) => {\\n      if (exportSetting.credit_card_expense_state) {\\n        this.mappingService.getMappingPagesForSideNavBar.emit(true);\\n      } else {\\n        this.mappingService.getMappingPagesForSideNavBar.emit(false);\\n      }\\n      this.activeModule = this.activeModules[0];\\n      this.router.navigateByUrl(this.activeModules[0].routerLink);\\n    });\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .main-tab .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover, :host ::ng-deep .main-tab .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover .p-menuitem-link{\\n    @apply tw-bg-disabled-bg-color tw-text-menu-inactive-text-color tw-font-500 tw-border-b-0 #{!important};\\n}\\n\\n:host ::ng-deep .main-tab .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight {\\n    @apply tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .main-tab .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link {\\n    @apply tw-text-slightly-normal-text-color tw-border-b-2 tw-border-b-slightly-normal-text-color tw-font-500 tw-bg-white #{!important};\\n}\\n","styleUrl":"./main.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"QbdMappingService","deprecated":false,"deprecationMessage":""},{"name":"qbdservice","type":"QbdExportSettingService","deprecated":false,"deprecationMessage":""}],"line":23,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"QbdMappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qbdservice","type":"QbdExportSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <div class=\\"main-tab\\">\\n        <p-tabMenu [model]=\\"activeModules\\" [activeItem]=\\"activeModule\\" ></p-tabMenu>\\n    </div>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n"},{"name":"MainComponent","id":"component-MainComponent-936167de9525a9918bfeb345b45bee8233534353eb49ae780ac6444b0cf72beedd9a15b1acfe5df3aaa2ac7463d65df6b293e36fe9a587b03fe67a81d0da02d7-1","file":"src/app/integrations/si/main/main.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-main","styleUrls":["./main.component.scss"],"styles":[],"templateUrl":["./main.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-main\',\\n  templateUrl: \'./main.component.html\',\\n  styleUrls: [\'./main.component.scss\']\\n})\\nexport class MainComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./main.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"MainComponent-1","templateData":"<div>\\n    <app-dashboard-menu></app-dashboard-menu>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n"},{"name":"MainMenuComponent","id":"component-MainMenuComponent-5f1633eaad85185436bb4e9a4ffe7e3f05c3aee30ecd20796787baec5f21ede14d7970b05662a77e77ab5214e7ccfdbf8c04a04697810466bdd8a358b2705f3b","file":"src/app/shared/components/menu/main-menu/main-menu.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-main-menu","styleUrls":["./main-menu.component.scss"],"styles":[],"templateUrl":["./main-menu.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"activeItem","deprecated":false,"deprecationMessage":"","line":15,"type":"MenuItem","decorators":[]},{"name":"appName","deprecated":false,"deprecationMessage":"","line":19,"type":"AppName","decorators":[]},{"name":"isDropdrownRequired","deprecated":false,"deprecationMessage":"","line":21,"type":"boolean","decorators":[]},{"name":"modules","deprecated":false,"deprecationMessage":"","line":13,"type":"MenuItem[]","decorators":[]},{"name":"moreDropdown","defaultValue":"null","deprecated":false,"deprecationMessage":"","line":17,"type":"any","decorators":[]}],"outputsClass":[{"name":"refreshDimensionClick","defaultValue":"new EventEmitter<boolean>()","deprecated":false,"deprecationMessage":"","line":23,"type":"EventEmitter"}],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":25,"modifierKind":[148]}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":33,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":29,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { MenuItem } from \'primeng/api\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { AppName } from \'src/app/core/models/enum/enum.model\';\\n\\n@Component({\\n  selector: \'app-main-menu\',\\n  templateUrl: \'./main-menu.component.html\',\\n  styleUrls: [\'./main-menu.component.scss\']\\n})\\nexport class MainMenuComponent implements OnInit {\\n\\n  @Input() modules: MenuItem[];\\n\\n  @Input() activeItem: MenuItem;\\n\\n  @Input() moreDropdown = null;\\n\\n  @Input() appName: AppName;\\n\\n  @Input() isDropdrownRequired: boolean;\\n\\n  @Output() refreshDimensionClick = new EventEmitter<boolean>();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor() { }\\n\\n  refreshDimensions() {\\n    this.refreshDimensionClick.emit(true);\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .main-tab .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover, :host ::ng-deep .main-tab .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover .p-menuitem-link{\\n    @apply tw-bg-disabled-bg-color tw-text-menu-inactive-text-color tw-font-500 tw-border-b-0 #{!important};\\n}\\n\\n:host ::ng-deep .main-tab .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight {\\n    @apply tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .main-tab .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link {\\n    @apply tw-text-slightly-normal-text-color tw-border-b-2 tw-border-b-slightly-normal-text-color tw-font-500 tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav {\\n    @apply tw-border-b-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\\n    @apply tw-border-white;\\n}\\n\\n:host ::ng-deep .p-dropdown {\\n    @apply tw-w-80-px tw-h-32-px #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown-label {\\n    @apply tw-flex tw-flex-none tw-w-auto #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n    @apply tw-w-28-px tw-text-sub-text-color #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-label.p-inputtext {\\n    @apply tw-pt-4-px tw-pl-12-px tw-pr-0 tw-pb-0 tw-text-slightly-normal-text-color #{!important};\\n}\\n","styleUrl":"./main-menu.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":25},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-border-gray-300 tw-rounded tw-flex tw-items-center tw-justify-between\\">\\n    <p-tabMenu [model]=\\"modules\\" [activeItem]=\\"modules[0]\\" ></p-tabMenu>\\n\\n    <div class=\\"tw-flex tw-items-center\\">\\n        <button [pTooltip]=\\"\'The integration will import all the newly updated \' + appName + \' dimensions and \' + brandingConfig.brandName + \' expenses in the configured state of export\'\\"\\n            (click)=\\"refreshDimensions()\\"\\n            class=\\"tw-h-32-px tw-w-80-px tw-mr-12-px tw-flex tw-items-center focus:tw-ring-0 tw-justify-center tw-rounded tw-bg-white tw-text-black tw-border tw-border-gray-300 focus:tw-outline-none focus:tw-ring-opacity-50 active:tw-scale-95 transition-transform\\">\\n            <img src=\\"assets/icons/stepper/sync.svg\\">\\n            <span class=\\"tw-text-14-px tw-pl-8-px\\">\\n                Sync\\n            </span>\\n        </button>\\n\\n    <p-dropdown *ngIf=\\"isDropdrownRequired\\" [(ngModel)]=\\"moreDropdown\\" (onChange)=\\"null\\" appendTo=\\"body\\" class=\\"tw-mr-26-px\\" [options]=\\"[\'Submit Feedback\']\\" placeholder=\\"More\\">\\n            <ng-template let-option pTemplate=\\"item\\">\\n                <div class=\\"tw-flex tw-justify-center\\">\\n                    <svg-icon-sprite src=\\"open-in-new-tab\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-pt-4-px tw-pr-8-px tw-text-mandatory-field-color\\"></svg-icon-sprite>\\n                    <span>{{option}}</span>\\n                </div>\\n            </ng-template>\\n        </p-dropdown> \\n    </div>\\n</div>\\n"},{"name":"MandatoryErrorMessageComponent","id":"component-MandatoryErrorMessageComponent-32f714121a26dc704488792494aa2b4f6ad15e8c3996200aea860b7cd4f841b0e847995383c998169afee41be3b0cdd77c6a402a9a1c016c877c2f3438772c6d","file":"src/app/shared/components/helper/mandatory-error-message/mandatory-error-message.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-mandatory-error-message","styleUrls":["./mandatory-error-message.component.scss"],"styles":[],"templateUrl":["./mandatory-error-message.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"customErrorMessage","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"listName","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-mandatory-error-message\',\\n  templateUrl: \'./mandatory-error-message.component.html\',\\n  styleUrls: [\'./mandatory-error-message.component.scss\']\\n})\\nexport class MandatoryErrorMessageComponent implements OnInit {\\n\\n  @Input() listName: string;\\n\\n  @Input() customErrorMessage: string;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n    if (this.listName) {\\n      const vowels = [\'a\', \'e\', \'i\', \'o\', \'u\'];\\n      if (this.listName.search(\'how\') !== -1) {\\n        this.listName = this.listName;\\n      } else if (vowels.indexOf(this.listName[0].toLowerCase()) === -1) {\\n        this.listName = `a ${this.listName}`;\\n      } else {\\n        this.listName = `an ${this.listName}`;\\n      }\\n    }\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./mandatory-error-message.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":12},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-text-alert-toast tw-text-12-px tw-font-400 tw-pt-4-px tw-max-w-300-px tw-flex tw-flex-wrap tw-break-words\\">\\n    <span *ngIf=\\"listName\\">Please select {{ listName }} from the list</span>\\n    <span *ngIf=\\"customErrorMessage\\">{{ customErrorMessage }}</span>\\n  </div>\\n  "},{"name":"MandatoryFieldComponent","id":"component-MandatoryFieldComponent-1cb8ab1d6fc65be79c0e74b8d031db622a1acf80fbb5b265d5d7709b47edf6894c292418746c2c99355430982389a96f1320b766de1f3ea2158cd7055c1a7b9d","file":"src/app/shared/components/helper/mandatory-field/mandatory-field.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-mandatory-field","styleUrls":["./mandatory-field.component.scss"],"styles":[],"templateUrl":["./mandatory-field.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"noSpacing","deprecated":false,"deprecationMessage":"","line":10,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-mandatory-field\',\\n  templateUrl: \'./mandatory-field.component.html\',\\n  styleUrls: [\'./mandatory-field.component.scss\']\\n})\\nexport class MandatoryFieldComponent implements OnInit {\\n\\n  @Input() noSpacing: boolean;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./mandatory-field.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":10},"extends":[],"implements":["OnInit"],"templateData":"<span [ngClass]=\\"{\'tw-pl-5-px\': !noSpacing}\\" class=\\"tw-text-mandatory-field-color !tw-text-16-px\\">*</span>\\n"},{"name":"MappingCardHeaderComponent","id":"component-MappingCardHeaderComponent-9a6a379f29ab8dc6230ea3d06855d7bcb4d9a00750c5be45b1c54ffe8b0f8478d683336a4afa43f447f848420c64c35ad0a478d355e38498afdf82db50fccda6","file":"src/app/shared/components/helper/mapping/mapping-card-header/mapping-card-header.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-card-mapping-header","styleUrls":["./mapping-card-header.component.scss"],"styles":[],"templateUrl":["./mapping-card-header.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"mappingStats","deprecated":false,"deprecationMessage":"","line":13,"type":"MappingStats","decorators":[]},{"name":"showAutoMapEmployee","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"sourceField","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]}],"outputsClass":[{"name":"triggerAutoMapEmployee","defaultValue":"new EventEmitter<boolean>()","deprecated":false,"deprecationMessage":"","line":17,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":25,"deprecated":false,"deprecationMessage":""},{"name":"triggerAutoMapEmployees","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { MappingStats } from \'src/app/core/models/db/mapping.model\';\\n\\n@Component({\\n  selector: \'app-card-mapping-header\',\\n  templateUrl: \'./mapping-card-header.component.html\',\\n  styleUrls: [\'./mapping-card-header.component.scss\']\\n})\\nexport class MappingCardHeaderComponent implements OnInit {\\n\\n  @Input() sourceField: string;\\n\\n  @Input() mappingStats: MappingStats;\\n\\n  @Input() showAutoMapEmployee: boolean;\\n\\n  @Output() triggerAutoMapEmployee = new EventEmitter<boolean>();\\n\\n  constructor() { }\\n\\n  triggerAutoMapEmployees() {\\n    this.triggerAutoMapEmployee.emit(true);\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./mapping-card-header.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":17},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-justify-between\\">\\n    <div class=\\"tw-flex\\">\\n        <div class=\\"tw-rounded-10-px tw-bg-white tw-border-1-px tw-border-separator tw-p-16-px tw-w-200-px tw-h-84-px\\">\\n            <div class=\\"tw-w-36-px tw-h-6-px tw-rounded-12-px tw-bg-cta-disabled\\">\\n            </div>\\n            <div class=\\"tw-pt-8-px tw-text-faded-text-color tw-text-12-px\\">\\n                <p>Total {{sourceField | snakeCaseToSpaceCase | titlecase}}</p>\\n            </div>\\n            <div class=\\"tw-text-20-px tw-text-500 tw-text-slightly-normal-text-color\\">\\n                <p>{{mappingStats?.all_attributes_count}}</p>\\n            </div>\\n        </div>\\n        <span class=\\"tw-pl-16-px\\"></span>\\n        <div class=\\"tw-rounded-10-px tw-bg-white tw-border-1-px tw-border-separator tw-p-16-px tw-w-200-px tw-h-84-px\\">\\n            <div class=\\"tw-w-36-px tw-h-6-px tw-rounded-12-px tw-bg-cta-disabled\\">\\n            </div>\\n            <div class=\\"tw-pt-8-px tw-text-faded-text-color tw-text-12-px\\">\\n                <p>Unmapped {{sourceField | snakeCaseToSpaceCase | titlecase}}</p>\\n            </div>\\n            <div class=\\"tw-text-20-px tw-text-500 tw-text-slightly-normal-text-color\\">\\n                <p>{{mappingStats?.unmapped_attributes_count}}</p>\\n            </div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\"showAutoMapEmployee && sourceField===\'employee\'\\" class=\\"tw-mt-24-px\\">\\n        <button type=\\"button\\" class=\\"tw-text-white tw-text-500 tw-px-24-px tw-py-12-px tw-bg-mandatory-field-color tw-rounded-4-px\\" (click)=\\"triggerAutoMapEmployees()\\">\\n        <p class=\\"tw-text-14-px tw-font-400 tw-pl-5px\\">Auto Map {{sourceField | titlecase}}</p>\\n        </button>\\n    </div>\\n</div>"},{"name":"MappingComponent","id":"component-MappingComponent-237a76bb75a67ce5bc10128091d5c4d20944a4353e2fdd9bc98af1129337c4046ebcde6e0634c2980530e69e3338a549d70427d638b6eca7dd6b5336aec63973","file":"src/app/integrations/qbd/main/mapping/mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-mapping","styleUrls":["./mapping.component.scss"],"styles":[],"templateUrl":["./mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":16},{"name":"mappingPages","defaultValue":"[\\n    {label: \'Corporate Card\', routerLink: \'/integrations/qbd/main/mapping/corporate_card\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":12}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\n\\n@Component({\\n  selector: \'app-mapping\',\\n  templateUrl: \'./mapping.component.html\',\\n  styleUrls: [\'./mapping.component.scss\']\\n})\\nexport class MappingComponent implements OnInit {\\n\\n  mappingPages: MenuItem[] = [\\n    {label: \'Corporate Card\', routerLink: \'/integrations/qbd/main/mapping/corporate_card\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n  ngOnInit(): void {\\n    this.activeModule = this.mappingPages[0];\\n    this.router.navigateByUrl(this.mappingPages[0].routerLink);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\\n    background-color: transparent;\\n    @apply tw-px-24-px tw-py-12-px tw-mx-10-px tw-mt-0 tw-border-x-box-color tw-border-t-box-color tw-border-t tw-border-x tw-rounded-t-lg #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link:not(.p-disabled):hover {\\n    @apply tw-text-slightly-normal-text-color tw-border-b-transparent tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover .p-menuitem-link{\\n    background-color: transparent !important;\\n    @apply tw-border-b-transparent tw-font-500 #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link:not(.p-highlight):hover{\\n    @apply tw-border-b-transparent tw-font-500 tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav {\\n    background-color: transparent;\\n    @apply tw-border-b tw-border-b-box-color #{!important};\\n}","styleUrl":"./mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":16,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-py-40-px\\">\\n    <div class=\\"tw-px-110-px\\">\\n        <p-tabMenu [model]=\\"mappingPages\\" [activeItem]=\\"activeModule\\"></p-tabMenu>\\n    </div>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>"},{"name":"MappingComponent","id":"component-MappingComponent-8fc2c16edba6862e3bf4c9b13e9b81102641a80e1449b13333ecb52839e13fa92aad33f12e0ea71995be38272a73b5d7ef3a5a93c012d3caa1b9efc57294d96d-1","file":"src/app/integrations/si/main/mapping/mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-mapping","styleUrls":["./mapping.component.scss"],"styles":[],"templateUrl":["./mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":23},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":16},{"name":"mappingPages","defaultValue":"[\\n    {label: \'Employee\', routerLink: \'/integrations/intacct/main/mapping/employee_mapping\'},\\n    {label: \'Category\', routerLink: \'/integrations/intacct/main/mapping/category_mapping\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":18}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"setupPages","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { TitleCasePipe } from \'@angular/common\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\nimport { FyleField } from \'src/app/core/models/enum/enum.model\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { SnakeCaseToSpaceCasePipe } from \'src/app/shared/pipes/snake-case-to-space-case.pipe\';\\n\\n@Component({\\n  selector: \'app-mapping\',\\n  templateUrl: \'./mapping.component.html\',\\n  styleUrls: [\'./mapping.component.scss\']\\n})\\nexport class MappingComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  mappingPages: MenuItem[] = [\\n    {label: \'Employee\', routerLink: \'/integrations/intacct/main/mapping/employee_mapping\'},\\n    {label: \'Category\', routerLink: \'/integrations/intacct/main/mapping/category_mapping\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router,\\n    private mappingService: SiMappingsService\\n  ) { }\\n\\n  private setupPages(): void {\\n    this.mappingService.getMappingSettings().subscribe((response) => {\\n      if (response.results && Array.isArray(response.results)) {\\n        response.results.forEach((item) => {\\n          if (item.source_field!==FyleField.EMPLOYEE && item.source_field!==\'CATEGORY\') {\\n          this.mappingPages.push({\\n            label: new TitleCasePipe().transform(new SnakeCaseToSpaceCasePipe().transform(item.source_field)),\\n            routerLink: `/integrations/intacct/main/mapping/${item.source_field.toLowerCase()}`\\n          });\\n}\\n        });\\n      }\\n      this.router.navigateByUrl(this.mappingPages[0].routerLink);\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.activeModule = this.mappingPages[0];\\n    this.setupPages();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\\n    background-color: transparent;\\n    @apply tw-px-24-px tw-py-12-px tw-mx-10-px tw-mt-0 tw-border-x-box-color tw-border-t-box-color tw-border-t tw-border-x tw-rounded-t-lg #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link:not(.p-disabled):hover {\\n    @apply tw-text-slightly-normal-text-color tw-border-b-transparent tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover .p-menuitem-link{\\n    background-color: transparent !important;\\n    @apply tw-border-b-transparent tw-font-500 #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link:not(.p-highlight):hover{\\n    @apply tw-border-b-transparent tw-font-500 tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav {\\n    background-color: transparent;\\n    @apply tw-border-b tw-border-b-box-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem {\\n    margin-right: -10px;\\n}","styleUrl":"./mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":""}],"line":23,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"SiMappingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"MappingComponent-1","templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-py-40-px\\">\\n    <div class=\\"tw-px-110-px\\" *ngIf=\\"!isLoading\\">\\n        <p-tabMenu [model]=\\"mappingPages\\" [activeItem]=\\"activeModule\\"></p-tabMenu>\\n    </div>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>"},{"name":"MappingFilterComponent","id":"component-MappingFilterComponent-8609810a938c0c5691e6d3d8be465f71085040dcd822468b1380c2a037d2434fa518e4a134305b1c15443e4ef8b3365aa261375b2c7e7fe33b0b7b5dedab4afa","file":"src/app/shared/components/helper/mapping/mapping-filter/mapping-filter.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-mapping-filter","styleUrls":["./mapping-filter.component.scss"],"styles":[],"templateUrl":["./mapping-filter.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"isAlphabetFilterHidden","deprecated":false,"deprecationMessage":"","line":23,"type":"boolean","decorators":[]},{"name":"mappingFilter","deprecated":false,"deprecationMessage":"","line":17,"type":"MappingState","decorators":[]},{"name":"page","deprecated":false,"deprecationMessage":"","line":25,"type":"string","decorators":[]},{"name":"selectedAlphabeticalFilter","deprecated":false,"deprecationMessage":"","line":39,"type":"string","decorators":[]}],"outputsClass":[{"name":"mappingFilterChangeEvent","defaultValue":"new EventEmitter<MappingState>()","deprecated":false,"deprecationMessage":"","line":19,"type":"EventEmitter"},{"name":"mappingFilterUpdateHandler","defaultValue":"new EventEmitter<string>()","deprecated":false,"deprecationMessage":"","line":43,"type":"EventEmitter"},{"name":"mappingSearchingEvent","defaultValue":"new EventEmitter<string>()","deprecated":false,"deprecationMessage":"","line":21,"type":"EventEmitter"}],"propertiesClass":[{"name":"filterOptions","defaultValue":"[\'A\', \'B\', \'C\', \'D\', \'E\', \'F\', \'G\', \'H\', \'I\', \'J\', \'K\', \'L\', \'M\', \'N\', \'O\', \'P\', \'Q\', \'R\', \'S\', \'T\', \'U\', \'V\', \'W\', \'X\', \'Y\', \'Z\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":27},{"name":"form","deprecated":false,"deprecationMessage":"","type":"UntypedFormGroup","optional":false,"description":"","line":37},{"name":"isSearchBoxActive","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":41},{"name":"mappingsFilter","defaultValue":"[{\\n    label: \'MAPPED\',\\n    value: MappingState.MAPPED\\n  }, {\\n    label: \'UNMAPPED\',\\n    value: MappingState.UNMAPPED\\n  }]","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":29}],"methodsClass":[{"name":"clearSearch","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""},{"name":"filterChanges","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":""},{"name":"filterOptionUpdateHandler","args":[{"name":"alphabet","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"alphabet","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSelectedFilter","args":[{"name":"item","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"item","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":""},{"name":"onFocusOut","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeFilter","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":76,"deprecated":false,"deprecationMessage":""},{"name":"searchingFilter","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":87,"deprecated":false,"deprecationMessage":""},{"name":"setupFilter","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupMappingFilterWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":""},{"name":"trackAlphabeticalFilter","args":[{"name":"allSelected","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false"}],"optional":false,"returnType":"void","typeParameters":[],"line":99,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"allSelected","type":"boolean","deprecated":false,"deprecationMessage":"","defaultValue":"false","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { FormControl, UntypedFormBuilder, UntypedFormGroup } from \'@angular/forms\';\\nimport { debounceTime } from \'rxjs\';\\nimport { SelectFormOption } from \'src/app/core/models/common/select-form-option.model\';\\nimport { MappingState } from \'src/app/core/models/enum/enum.model\';\\nimport { MappingAlphabeticalFilterAdditionalProperty } from \'src/app/core/models/misc/tracking.model\';\\nimport { Mapping } from \'src/app/core/models/qbd/db/mapping.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\n\\n@Component({\\n  selector: \'app-mapping-filter\',\\n  templateUrl: \'./mapping-filter.component.html\',\\n  styleUrls: [\'./mapping-filter.component.scss\']\\n})\\nexport class MappingFilterComponent implements OnInit {\\n\\n  @Input() mappingFilter: MappingState;\\n\\n  @Output() mappingFilterChangeEvent = new EventEmitter<MappingState>();\\n\\n  @Output() mappingSearchingEvent = new EventEmitter<string>();\\n\\n  @Input() isAlphabetFilterHidden: boolean;\\n\\n  @Input() page: string;\\n\\n  filterOptions: string[] = [\'A\', \'B\', \'C\', \'D\', \'E\', \'F\', \'G\', \'H\', \'I\', \'J\', \'K\', \'L\', \'M\', \'N\', \'O\', \'P\', \'Q\', \'R\', \'S\', \'T\', \'U\', \'V\', \'W\', \'X\', \'Y\', \'Z\'];\\n\\n  mappingsFilter: SelectFormOption[] = [{\\n    label: \'MAPPED\',\\n    value: MappingState.MAPPED\\n  }, {\\n    label: \'UNMAPPED\',\\n    value: MappingState.UNMAPPED\\n  }];\\n\\n  form: UntypedFormGroup;\\n\\n  @Input() selectedAlphabeticalFilter: string;\\n\\n  isSearchBoxActive: boolean = false;\\n\\n  @Output() mappingFilterUpdateHandler = new EventEmitter<string>();\\n\\n  constructor(\\n    private formBuilder: UntypedFormBuilder,\\n    private trackingService: TrackingService\\n  ) { }\\n\\n  clearSearch(): void {\\n    this.form.controls.searchOption.patchValue(null);\\n    const event = {\\n      target: {\\n        value: \'\'\\n      }\\n    };\\n    this.onFocusOut(event);\\n    this.mappingSearchingEvent.emit(\'\');\\n  }\\n\\n  onFocusOut(event: any): void {\\n    if (event.target.value === \'\') {\\n      this.isSearchBoxActive = false;\\n    } else {\\n      this.isSearchBoxActive = true;\\n    }\\n  }\\n\\n  getSelectedFilter(item: string): string {\\n    if (item === MappingState.MAPPED) {\\n      return \'mapped\';\\n    }\\n    return \'unmapped\';\\n  }\\n\\n  removeFilter(): void {\\n    this.form.controls.filterOption.patchValue(\'\');\\n    this.mappingFilterChangeEvent.emit(MappingState.ALL);\\n  }\\n\\n  filterChanges(): void {\\n    this.form.controls.filterOption.valueChanges.subscribe((isFilterOptions) => {\\n      this.mappingFilterChangeEvent.emit(isFilterOptions?.value);\\n    });\\n  }\\n\\n  searchingFilter(): void {\\n    this.form.controls.searchOption.valueChanges.subscribe((searchValue) => {\\n        this.mappingSearchingEvent.emit(searchValue);\\n    });\\n  }\\n\\n  setupMappingFilterWatcher(): void {\\n    this.filterChanges();\\n\\n    this.searchingFilter();\\n  }\\n\\n  private trackAlphabeticalFilter(allSelected: boolean = false): void {\\n    const properties: MappingAlphabeticalFilterAdditionalProperty = {\\n      alphabetList: allSelected ? [] : this.form.value.filterOption,\\n      allSelected: allSelected,\\n      page: this.page\\n    };\\n    this.trackingService.onMappingsAlphabeticalFilter(properties);\\n  }\\n\\n  filterOptionUpdateHandler(alphabet: string): void {\\n    this.selectedAlphabeticalFilter = alphabet;\\n    this.mappingFilterUpdateHandler.emit(alphabet);\\n    this.trackAlphabeticalFilter();\\n  }\\n\\n  private setupFilter(): void {\\n    this.form = this.formBuilder.group({\\n      searchOption: [],\\n      filterOption: []\\n    });\\n    if (this.mappingFilter !== MappingState.ALL) {\\n      const filter = this.mappingsFilter.filter((filter: SelectFormOption) => filter.value === this.mappingFilter);\\n      this.form.controls.filterOption.patchValue(filter[0]);\\n    } else {\\n      this.form.controls.filterOption.patchValue(null);\\n    }\\n    this.setupMappingFilterWatcher();\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupFilter();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".p-inputtext:enabled:focus-visible {\\n    @apply tw-shadow-none tw-border-check-box #{!important};\\n}\\n\\n.pi-search {\\n    @apply tw-text-faded-text-color #{!important}\\n}\\n","styleUrl":"./mapping-filter.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""}],"line":43,"jsdoctags":[{"name":"formBuilder","type":"UntypedFormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-justify-start tw-items-end\\" [formGroup]=\\"form\\">\\n    <div class=\\"tw-mr-16-px tw-flex tw-content-center\\">\\n        <div *ngIf=\\"!isSearchBoxActive\\" class=\\"tw-flex tw-justify-start tw-items-center tw-cursor-pointer tw-border tw-border-box-color tw-pt-8-px tw-pb-6-px tw-px-10-px tw-rounded-4-px drop-down\\" (click)=\\"isSearchBoxActive = true\\">\\n            <div>\\n                <i class=\\"pi pi-search tw-w-18-px tw-h-18-px\\"></i>\\n            </div>\\n        </div>\\n        <div *ngIf=\\"isSearchBoxActive\\">\\n            <div class=\\"p-inputgroup\\" (focusout)=\\"onFocusOut($event)\\">\\n                <span class=\\"p-inputgroup-addon !tw-bg-white !tw-border-r-0 !tw-px-0\\">\\n                  <i class=\\"pi pi-search\\"></i>\\n                </span>\\n                <input pInputText type=\\"text\\" formControlName=\\"searchOption\\" class=\\"!tw-py-5-px !tw-pl-0 !tw-border-l-0\\" [ngClass]=\\"{\'textbox\': form.controls.searchOption.value !== \'\'}\\">\\n                <span *ngIf=\\"form.controls.searchOption.value !== \'\'\\" class=\\"p-inputgroup-addon !tw-bg-white !tw-border-l-0 !tw-px-0\\">\\n                    <i class=\\"pi pi-times tw-cursor-pointer\\" (click)=\\"clearSearch()\\"></i>\\n                </span>\\n            </div>\\n        </div>\\n    </div>\\n    <div>\\n        <div class=\\"tw-pl-16-px\\">\\n            <p class=\\"tw-text-12-px tw-text-faded-text-color tw-text-500 tw-pb-8-px\\">Status</p>\\n        </div>\\n        <div class=\\"tw-border-l tw-border-l-separator tw-pl-16-px\\">\\n            <p-dropdown appendTo=\\"body\\"[options]=\\"mappingsFilter\\" class=\\"mappingFilterDropdown\\"  formControlName=\\"filterOption\\" optionLabel=\\"label\\"\\n                placeholder=\\"Select Status\\" [ngClass]=\\"{\'selectedItem\': form.controls.filterOption.value !== null, \'filterDropdown\': form.controls.filterOption.value === \'\'}\\">\\n                <ng-template let-item pTemplate=\\"item\\">\\n                    <div [ngClass]=\\"getSelectedFilter(item.value)\\">{{ item.label }}</div>\\n                </ng-template>\\n                <ng-template let-value pTemplate=\\"selectedItem\\">\\n                    <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                        <p [ngClass]=\\"getSelectedFilter(form.controls.filterOption.value.value)\\">{{ form.controls.filterOption.value.label }}</p>\\n                        <i class=\\"pi pi-times\\" (click)=\\"removeFilter()\\"></i>\\n                    </div>\\n                    <div></div>\\n                </ng-template>\\n            </p-dropdown>\\n        </div>\\n    </div>\\n    <div *ngIf=\\"!isAlphabetFilterHidden\\" class=\\"tw-pl-16-px tw-pb-6-px tw-text-14-px tw-items-center tw-justify-center\\">\\n        <div class=\\"tw-flex\\">\\n            <p class=\\"tw-pr-8-px tw-cursor-pointer\\" [ngClass]=\\"selectedAlphabeticalFilter === \'All\' ? \'tw-text-slightly-normal-text-color\': \'tw-text-placeholder\'\\" (click)=\\"filterOptionUpdateHandler(\'All\')\\">\\n                All\\n            </p>\\n            <p class=\\"tw-pr-8-px tw-cursor-pointer\\" *ngFor=\\"let option of filterOptions\\" [ngClass]=\\"selectedAlphabeticalFilter === option ? \'tw-text-slightly-normal-text-color\': \'tw-text-placeholder\'\\" (click)=\\"filterOptionUpdateHandler(option)\\">{{option}}</p>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"MappingHeaderSectionComponent","id":"component-MappingHeaderSectionComponent-ce136ceedc7bacb69c164b8ffd50e347d20b927fedb860c75a0523b6be95dc151ff241e7f21b72c619cdf471271633b9f0f84c24bbfb388a4448113a82624454","file":"src/app/shared/components/qbd/mapping/mapping-header-section/mapping-header-section.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-mapping-header-section","styleUrls":["./mapping-header-section.component.scss"],"styles":[],"templateUrl":["./mapping-header-section.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"mappingStats","deprecated":false,"deprecationMessage":"","line":13,"type":"MappingStats","decorators":[]},{"name":"sourceType","deprecated":false,"deprecationMessage":"","line":11,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { MappingStats } from \'src/app/core/models/qbd/db/mapping.model\';\\n\\n@Component({\\n  selector: \'app-mapping-header-section\',\\n  templateUrl: \'./mapping-header-section.component.html\',\\n  styleUrls: [\'./mapping-header-section.component.scss\']\\n})\\nexport class MappingHeaderSectionComponent implements OnInit {\\n\\n  @Input() sourceType: string;\\n\\n  @Input() mappingStats: MappingStats;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".tw-bg-mandatory-field-color {\\n    background-color: rgba(255, 51, 102, 0.16);\\n}","styleUrl":"./mapping-header-section.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":13},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-inline-flex tw-space-x-4\\">\\n    <div class=\\"tw-rounded-10-px tw-bg-white tw-border-1-px tw-border-separator tw-p-16-px tw-w-200-px tw-h-84-px\\">\\n        <div class=\\"tw-w-36-px tw-h-6-px tw-rounded-12-px tw-border tw-border-white tw-bg-pink-box-border\\">\\n        </div>\\n        <div class=\\"tw-pt-8-px tw-text-faded-text-color tw-text-12-px tw-text-400\\">\\n            <p>Total {{sourceType | titlecase | snakeCaseToSpaceCase}}</p>\\n        </div>\\n        <div class=\\"tw-text-20-px tw-text-500 tw-text-slightly-normal-text-color\\">\\n            <p>{{mappingStats.all_attributes_count}}</p>\\n        </div>\\n    </div>\\n\\n    <div class=\\"tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator tw-p-16-px tw-w-200-px tw-h-84-px\\">\\n        <div class=\\"tw-w-36-px tw-h-6-px tw-rounded-12-px tw-border tw-border-white tw-bg-pink-box-border\\">\\n        </div>\\n        <div class=\\"tw-pt-8-px tw-text-faded-text-color tw-text-12-px tw-text-400\\">\\n            <p>Unmapped {{sourceType | titlecase | snakeCaseToSpaceCase}}</p>\\n        </div>\\n        <div class=\\"tw-text-20-px tw-text-500 tw-text-slightly-normal-text-color\\">\\n            <p>{{mappingStats.unmapped_attributes_count}}</p>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"MappingTableComponent","id":"component-MappingTableComponent-37a0b0f907ae085435a7f2a641d117f4a99b9c5c439b644f04423f4249356164a658561b8cb50b27c307caeba140ed3198bb21189c976abeaa318439ff7de887","file":"src/app/shared/components/qbd/mapping/mapping-table/mapping-table.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-mapping-table","styleUrls":["./mapping-table.component.scss"],"styles":[],"templateUrl":["./mapping-table.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"destinationFieldType","deprecated":false,"deprecationMessage":"","line":17,"type":"FieldType","decorators":[]},{"name":"destinationHeaderName","deprecated":false,"deprecationMessage":"","line":21,"type":"string","decorators":[]},{"name":"fyleHeaderName","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]},{"name":"mappings","deprecated":false,"deprecationMessage":"","line":15,"type":"Mapping[] | EmployeeMapping[]","decorators":[]},{"name":"operatingSystem","deprecated":false,"deprecationMessage":"","line":23,"type":"string","decorators":[]}],"outputsClass":[{"name":"postMapping","defaultValue":"new EventEmitter<MappingPost>()","deprecated":false,"deprecationMessage":"","line":25,"type":"EventEmitter"}],"propertiesClass":[{"name":"allOS","defaultValue":"OperatingSystem","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27},{"name":"destinationValue","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":31},{"name":"fieldType","defaultValue":"FieldType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33},{"name":"focussedMappingId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":29}],"methodsClass":[{"name":"getToolTipText","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":""},{"name":"isTypingInBox","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""},{"name":"row","type":"Mapping","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"row","type":"Mapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":""},{"name":"onTextBoxChange","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"postTextFieldValue","args":[{"name":"data","type":"Mapping","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":51,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"Mapping","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output} from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { FieldType, OperatingSystem } from \'src/app/core/models/enum/enum.model\';\\nimport { Mapping, MappingModel, MappingPost } from \'src/app/core/models/qbd/db/mapping.model\';\\nimport { EmployeeMapping } from \'src/app/core/models/si/db/employee-mapping.model\';\\nimport { MappingIntacct, MappingResponse, MappingStats } from \'src/app/core/models/si/db/mapping.model\';\\n\\n@Component({\\n  selector: \'app-mapping-table\',\\n  templateUrl: \'./mapping-table.component.html\',\\n  styleUrls: [\'./mapping-table.component.scss\']\\n})\\nexport class MappingTableComponent implements OnInit {\\n\\n  @Input() mappings!: Mapping[] | EmployeeMapping[];\\n\\n  @Input() destinationFieldType: FieldType;\\n\\n  @Input() fyleHeaderName: string;\\n\\n  @Input() destinationHeaderName: string;\\n\\n  @Input() operatingSystem: string;\\n\\n  @Output() postMapping = new EventEmitter<MappingPost>();\\n\\n  allOS = OperatingSystem;\\n\\n  focussedMappingId: number;\\n\\n  destinationValue: string;\\n\\n  fieldType = FieldType;\\n\\n  constructor() { }\\n\\n  onTextBoxChange(event: any): void {\\n    const targetValue: string = event.target.value;\\n    this.destinationValue = targetValue;\\n  }\\n\\n  isTypingInBox(event: any, row: Mapping): void {\\n    if (event.keyCode === 13) {\\n      this.focussedMappingId = 0;\\n      this.postTextFieldValue(row);\\n    } else {\\n      this.focussedMappingId = row.id;\\n    }\\n  }\\n\\n  postTextFieldValue(data: Mapping): void {\\n    data.destination_value = this.destinationValue.length > 0 ? this.destinationValue : null;\\n    const mappingPayload = MappingModel.constructPayload(data);\\n    this.postMapping.emit(mappingPayload);\\n    this.focussedMappingId = 0;\\n  }\\n\\n  getToolTipText(): string {\\n    return `\\n            <div style=\\"padding:0px 6px 4px;text-align: center;>\\n              <p style=\\"font-size:12px;padding-top:0\\">Save</p>\\n              <p style=\\"margin-top:5px;padding:4px;background: #A9ACBC80;font-size:10px;border-radius: 4px;\\">${this.operatingSystem === OperatingSystem.MAC ? `return` : `⏎`}<p>\\n            </div>`;\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"th {\\n    @apply tw-text-12-px tw-text-normal-text-color tw-font-500 tw-py-12-px tw-px-24-px tw-bg-disabled-bg-color tw-border-r-1-px tw-border-box-color #{!important};\\n}\\n\\ntd {\\n    @apply tw-text-14-px tw-text-sub-text-color tw-px-24-px tw-font-400 #{!important};\\n}\\n\\n.pi-check:before {\\n    @apply tw-text-14-px tw-cursor-pointer tw-text-faded-text-color #{!important};\\n}\\n\\n.p-inputtext {\\n    @apply tw-w-220-px tw-h-40-px tw-py-10-px tw-text-slightly-normal-text-color #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-main {\\n    @apply tw-px-6 tw-pb-4 tw-text-center #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-save {\\n    @apply tw-text-12-px #{!important}\\n}\\n\\n:host ::ng-deep .tooltip-return {\\n    @apply tw-mt-6-px tw-px-4-px tw-py-4-px tw-text-9-px tw-rounded-md tw-bg-placeholder  #{!important}\\n}\\n","styleUrl":"./mapping-table.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":33},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-border-t-1-px tw-border-t-separator\\">\\n    <p-table [value]=\\"mappings\\" [tableStyle]=\\"{ \'min-width\': \'50rem\' }\\" [sortField]=\\"\'source_value\'\\" [sortOrder]=\\"1\\">\\n        <ng-template pTemplate=\\"header\\">\\n            <tr>\\n                <th class=\\"tw-flex tw-justify-start tw-items-center\\">{{ fyleHeaderName }} <i class=\\"tw-ml-6-px pi pi-sort-amount-down\\"></i></th>\\n                <th>{{ destinationHeaderName }}</th>\\n                <th>Status</th>\\n            </tr>\\n        </ng-template>\\n        <ng-template pTemplate=\\"body\\" let-mapping let-rowIndex=\\"rowIndex\\">\\n            <tr>\\n                <td>{{ mapping.source_value }}</td>\\n                <td>\\n                    <span class=\\"p-input-icon-right\\" (keydown)=\\"isTypingInBox($event, mapping)\\" *ngIf=\\"destinationFieldType === fieldType.TEXT\\">\\n                        <i *ngIf=\\"focussedMappingId === mapping.id\\" class=\\"pi pi-check tooltip\\" (click)=\\"postTextFieldValue(mapping)\\" [pTooltip]=\\"getToolTipText()\\" [escape]=\\"false\\"  tooltipPosition=\\"top\\"></i>\\n                        <input type=\\"text\\" pInputText placeholder=\\"Enter Credit card account\\" [value]=\\"mapping.destination_value\\" (input)=\\"onTextBoxChange($event)\\">        \\n                    </span>  \\n                </td>\\n                <td>\\n                    <p *ngIf=\\"mapping.destination_value\\" class=\\"mapped\\">MAPPED</p>\\n                    <p *ngIf=\\"!mapping.destination_value\\" class=\\"unmapped\\">UNMAPPED</p>\\n                </td>\\n            </tr>\\n        </ng-template>\\n    </p-table>\\n</div>\\n"},{"name":"MultiSelectComponent","id":"component-MultiSelectComponent-7b69b1d76c69506caa37df0ec1fa2671428ad34c920ecde9488adaec2e4c24324381b6abeeeb5c9258134c338f27119d484952d27174c2a38510893278ce8fde","file":"src/app/shared/components/input/multi-select/multi-select.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-multi-select","styleUrls":["./multi-select.component.scss"],"styles":[],"templateUrl":["./multi-select.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"disabledOption","deprecated":false,"deprecationMessage":"","line":15,"type":"string","decorators":[]},{"name":"form","deprecated":false,"deprecationMessage":"","line":11,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]},{"name":"options","deprecated":false,"deprecationMessage":"","line":19,"type":"any[]","decorators":[]},{"name":"placeholder","deprecated":false,"deprecationMessage":"","line":17,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\n\\n@Component({\\n  selector: \'app-multi-select\',\\n  templateUrl: \'./multi-select.component.html\',\\n  styleUrls: [\'./multi-select.component.scss\']\\n})\\nexport class MultiSelectComponent {\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() formControllerName: string;\\n\\n  @Input() disabledOption: string;\\n\\n  @Input() placeholder: string;\\n\\n  @Input() options: any[];\\n\\n  constructor() { }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-multiselect-label {\\n    @apply tw-z-1 tw-px-12-px tw-py-8-px tw-w-270-px #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-header,:host ::ng-deep .p-multiselect-panel .p-multiselect-items {\\n    @apply tw-p-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-items .p-multiselect-item {\\n    @apply tw-mb-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-checkbox {\\n    @apply tw-pt-2-px #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-items .p-multiselect-item {\\n    @apply tw-h-32-px tw-px-16-px tw-py-0 #{!important};\\n}\\n","styleUrl":"./multi-select.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":19},"extends":[],"templateData":"\\n<div [formGroup]=\\"form\\">\\n    <p-multiSelect [optionDisabled]=\\"disabledOption\\" [placeholder]=\\"placeholder\\" [options]=\\"options\\" styleClass=\\"tw-z-2\\" [formControlName]=\\"formControllerName\\">\\n    </p-multiSelect>\\n</div>\\n"},{"name":"OauthCallbackComponent","id":"component-OauthCallbackComponent-5cf2c51f427ab281dd1dccfbfcbb027f95a91a0190b4422547d59c86505b5c3c6e2aed53549c8c6a3db4728db9de5cec97482d16e260031bc7f07906fdf8ba7b","file":"src/app/integrations/oauth-callback/oauth-callback.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-oauth-callback","styleUrls":["./oauth-callback.component.scss"],"styles":[],"templateUrl":["./oauth-callback.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-oauth-callback\',\\n  templateUrl: \'./oauth-callback.component.html\',\\n  styleUrls: [\'./oauth-callback.component.scss\']\\n})\\nexport class OauthCallbackComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./oauth-callback.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-h-[100%]\\">\\n    <app-loader></app-loader>\\n</div>\\n"},{"name":"OauthComponent","id":"component-OauthComponent-6c9cd3ef7de05ee5f5fa2a80c515100d72b442fab1a5bc672ec3423b2e7de8058a6b8e5f5ea48b227ad57fbbdc2beb0c624e3f5f1df392f673d039808b3ad27b","file":"src/app/oauth/oauth.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-oauth","styleUrls":["./oauth.component.scss"],"styles":[],"templateUrl":["./oauth.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-oauth\',\\n  templateUrl: \'./oauth.component.html\',\\n  styleUrls: [\'./oauth.component.scss\']\\n})\\nexport class OauthComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./oauth.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>"},{"name":"OauthTravelperkComponent","id":"component-OauthTravelperkComponent-aefdafe02694f562deafd8eb3ebe8be5f45d6912b0f26d001f9a798128d8caedeff06ff449a3c99f437dacc841b079d52e00eb9f30fde8c35b7b64b131b6ef53","file":"src/app/oauth/oauth-travelperk/oauth-travelperk.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-oauth-travelperk","styleUrls":["./oauth-travelperk.component.scss"],"styles":[],"templateUrl":["./oauth-travelperk.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"connectTravelperk","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":17,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { TravelperkService } from \'src/app/core/services/travelperk/travelperk.service\';\\n\\n@Component({\\n  selector: \'app-oauth-travelperk\',\\n  templateUrl: \'./oauth-travelperk.component.html\',\\n  styleUrls: [\'./oauth-travelperk.component.scss\']\\n})\\nexport class OauthTravelperkComponent implements OnInit {\\n\\n  constructor(\\n    private route: ActivatedRoute,\\n    private travelPerkService: TravelperkService\\n  ) { }\\n\\n  private connectTravelperk(): void {\\n    this.route.queryParams.subscribe(params => {\\n      if (params.code && params.state) {\\n        this.travelPerkService.connect(params.code, params.state).subscribe(() => {\\n          window.close();\\n        });\\n      }\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.connectTravelperk();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./oauth-travelperk.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"travelPerkService","type":"TravelperkService","deprecated":false,"deprecationMessage":""}],"line":10,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"travelPerkService","type":"TravelperkService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-h-[100%]\\">\\n    <app-loader></app-loader>\\n</div>\\n"},{"name":"OnboardingAdvancedSettingComponent","id":"component-OnboardingAdvancedSettingComponent-e154f276b99b7265009bbb573479fc618d8409e479094083252089396a58e35edba0bcd1ee0df2ca5ad163742955337fd59cef8cb49398aa97b75187648711c6","file":"src/app/integrations/qbd/onboarding/onboarding-advanced-setting/onboarding-advanced-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-advanced-setting","styleUrls":["./onboarding-advanced-setting.component.scss"],"styles":[],"templateUrl":["./onboarding-advanced-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-onboarding-advanced-setting\',\\n  templateUrl: \'./onboarding-advanced-setting.component.html\',\\n  styleUrls: [\'./onboarding-advanced-setting.component.scss\']\\n})\\nexport class OnboardingAdvancedSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./onboarding-advanced-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<app-onboarding-stepper [currentStep]=\\"\'Advanced\'\\"></app-onboarding-stepper>\\n<app-advanced-setting></app-advanced-setting>"},{"name":"OnboardingAdvancedSettingComponent","id":"component-OnboardingAdvancedSettingComponent-e154f276b99b7265009bbb573479fc618d8409e479094083252089396a58e35edba0bcd1ee0df2ca5ad163742955337fd59cef8cb49398aa97b75187648711c6-1","file":"src/app/integrations/si/onboarding/onboarding-advanced-setting/onboarding-advanced-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-advanced-setting","styleUrls":["./onboarding-advanced-setting.component.scss"],"styles":[],"templateUrl":["./onboarding-advanced-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-onboarding-advanced-setting\',\\n  templateUrl: \'./onboarding-advanced-setting.component.html\',\\n  styleUrls: [\'./onboarding-advanced-setting.component.scss\']\\n})\\nexport class OnboardingAdvancedSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./onboarding-advanced-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"OnboardingAdvancedSettingComponent-1","templateData":"<app-intacct-stepper [currentStep] = \\"\'Advanced Settings\'\\"></app-intacct-stepper>\\n<app-configuration-advanced-settings></app-configuration-advanced-settings>"},{"name":"OnboardingComponent","id":"component-OnboardingComponent-0961f56e457aea8b790bfcbbb0302922ca545292da9c3e70db9f850ec628c20491205a79398d8d296ccae799cdda8db9d9c720dd78d0ace44adf0ed499f40a8a","file":"src/app/integrations/qbd/onboarding/onboarding.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding","styleUrls":["./onboarding.component.scss"],"styles":[],"templateUrl":["./onboarding.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-onboarding\',\\n  templateUrl: \'./onboarding.component.html\',\\n  styleUrls: [\'./onboarding.component.scss\']\\n})\\nexport class OnboardingComponent implements OnInit {\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./onboarding.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>"},{"name":"OnboardingComponent","id":"component-OnboardingComponent-49ab79508bcb31c4c88061b7ce8d48ff970ee822f450b8ade9d1d7dfad17a37cea4a451f9c7f4416a5b2cdab92f9a267cd3c71e1b543634f002e830777d3ac1c-1","file":"src/app/integrations/si/onboarding/onboarding.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding","styleUrls":["./onboarding.component.scss"],"styles":[],"templateUrl":["./onboarding.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-onboarding\',\\n  templateUrl: \'./onboarding.component.html\',\\n  styleUrls: [\'./onboarding.component.scss\']\\n})\\nexport class OnboardingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./onboarding.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"OnboardingComponent-1","templateData":"<router-outlet></router-outlet>"},{"name":"OnboardingDoneComponent","id":"component-OnboardingDoneComponent-182539453f9a2e3f6caa67943bce6d3a62f480692f194783e57284faf301703dbed2a6f230191a7a865543572467a4cd561cb1948d23252a62f3808c945dc83f","file":"src/app/integrations/qbd/onboarding/onboarding-done/onboarding-done.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-done","styleUrls":["./onboarding-done.component.scss"],"styles":[],"templateUrl":["./onboarding-done.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"navigateToDashboard","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-onboarding-done\',\\n  templateUrl: \'./onboarding-done.component.html\',\\n  styleUrls: [\'./onboarding-done.component.scss\']\\n})\\nexport class OnboardingDoneComponent implements OnInit {\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n  navigateToDashboard(): void {\\n    this.router.navigate([`/integrations/qbd/main`]);\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".onboarding-done {\\n  \\n    &--contents {\\n      @apply tw-bg-white tw-border-solid tw-border-disabled-bg-color tw-rounded-8-px tw-box-border tw-shadow-app-card tw-z-50 tw-pt-0 tw-px-100-px tw-pb-20-px ;\\n    }\\n  \\n    &--align-center {\\n      @apply tw-my-0 tw-mx-auto tw-block ; \\n    }\\n  \\n  }\\n  ","styleUrl":"./onboarding-done.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-flex tw-justify-center tw-pr-74-px tw-pl-74-px tw-pt-24 tw-pb-20\\">\\n  <div class=\\"onboarding-done--contents\\">\\n    <div class=\\"tw-pt-34-px\\">\\n      <img src=\\"assets/gifs/success-check.gif\\" class=\\"onboarding-done--align-center\\" alt=\\"Onboarding done\\" width=\\"120px\\"\\n        height=\\"120px\\">\\n    </div>\\n    <div class=\\"tw-text-center\\">\\n      <h2 class=\\"tw-text-normal-text-color !tw-font-bold !tw-text-18-px\\">Congratulations! Your integration setup is now complete.</h2>\\n    </div>\\n    <div class=\\"tw-flex tw-justify-center tw-py-24-px\\">\\n        <button type=\\"button\\" class=\\"tw-text-500 tw-text-white tw-px-24-px tw-py-12-px tw-bg-mandatory-field-color tw-rounded-4-px\\" (click)=\\"navigateToDashboard()\\">Launch Integration</button>\\n    </div>\\n    <div class=\\"tw-py-24-px\\">\\n      <h5 class=\\"tw-text-faded-text-color tw-text-center tw-text-14-px\\">\\n        You can still re-configure your export settings at any point of time from the <b class=\\"tw-font-bold\\">Configuration</b> section.\\n      </h5>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"OnboardingDoneComponent","id":"component-OnboardingDoneComponent-263282175b7ff8573abdd795d4709c1c444bc43b8f43c73940b4db3a1aa7e863976cba3093d5f4d840f9dbe9115163c05ff1787fe22862c56d48a846b59df009-1","file":"src/app/integrations/si/onboarding/onboarding-done/onboarding-done.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-done","styleUrls":["./onboarding-done.component.scss"],"styles":[],"templateUrl":["./onboarding-done.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"navigateToDashboard","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { AppName, RefinerSurveyType } from \'src/app/core/models/enum/enum.model\';\\nimport { RefinerService } from \'src/app/core/services/integration/refiner.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-onboarding-done\',\\n  templateUrl: \'./onboarding-done.component.html\',\\n  styleUrls: [\'./onboarding-done.component.scss\']\\n})\\nexport class OnboardingDoneComponent implements OnInit {\\n\\n  constructor(\\n    private refinerService: RefinerService,\\n    private router: Router\\n  ) { }\\n\\n  navigateToDashboard(): void {\\n    this.router.navigate([`/integrations/intacct/main`]);\\n    this.refinerService.triggerSurvey(\\n      AppName.INTACCT, environment.refiner_survey.intacct.onboarding_done_survery_id, RefinerSurveyType.ONBOARDING_DONE\\n    );\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".onboarding-done {\\n  \\n    &--contents {\\n      @apply tw-bg-white tw-border-solid tw-border-disabled-bg-color tw-rounded-8-px tw-box-border tw-shadow-app-card tw-z-50 tw-pt-0 tw-px-100-px tw-pb-20-px ;\\n    }\\n  \\n    &--align-center {\\n      @apply tw-my-0 tw-mx-auto tw-block ; \\n    }\\n  \\n  }\\n  ","styleUrl":"./onboarding-done.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"refinerService","type":"RefinerService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"refinerService","type":"RefinerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"OnboardingDoneComponent-1","templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-flex tw-justify-center tw-pr-74-px tw-pl-74-px tw-pt-24 tw-pb-20\\">\\n  <div class=\\"onboarding-done--contents\\">\\n    <div class=\\"tw-pt-34-px\\">\\n      <img src=\\"assets/gifs/success-check.gif\\" class=\\"onboarding-done--align-center\\" alt=\\"Onboarding done\\" width=\\"120px\\"\\n        height=\\"120px\\">\\n    </div>\\n    <div class=\\"tw-text-center\\">\\n      <h2 class=\\"tw-text-normal-text-color !tw-font-bold !tw-text-18-px\\">Congratulations! Your integration setup is now complete.</h2>\\n    </div>\\n    <div class=\\"tw-flex tw-justify-center tw-py-24-px\\">\\n        <button type=\\"button\\" class=\\"tw-text-500 tw-text-white tw-px-24-px tw-py-12-px tw-bg-mandatory-field-color tw-rounded-4-px\\" (click)=\\"navigateToDashboard()\\">Launch Integration</button>\\n    </div>\\n    <div class=\\"tw-py-24-px\\">\\n      <h5 class=\\"tw-text-faded-text-color tw-text-center tw-text-14-px\\">\\n        You can still re-configure your configuration settings at any point of time from the <b class=\\"tw-font-bold\\">Configuration</b> section.\\n      </h5>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"OnboardingDoneComponent","id":"component-OnboardingDoneComponent-9ad0b7de4c533a19fa627ce825186db3e0e31ede97fb34e0f85ec1df872ac0d692e72cfaf69fced7b72f311c840a404222d91aeef530237b931670abf3831af8-2","file":"src/app/shared/components/helper/onboarding-done/onboarding-done.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-done","styleUrls":["./onboarding-done.component.scss"],"styles":[],"templateUrl":["./onboarding-done.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[{"name":"launchIntegrationClick","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":10,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"navigateToDashboard","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":14,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, OnInit, Output } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-onboarding-done\',\\n  templateUrl: \'./onboarding-done.component.html\',\\n  styleUrls: [\'./onboarding-done.component.scss\']\\n})\\nexport class OnboardingDoneComponent implements OnInit {\\n\\n  @Output() launchIntegrationClick = new EventEmitter();\\n\\n  constructor() { }\\n\\n  navigateToDashboard(): void {\\n    this.launchIntegrationClick.emit();\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".onboarding-done {\\n  \\n    &--contents {\\n      @apply tw-bg-white tw-border-solid tw-border-disabled-bg-color tw-rounded-8-px tw-box-border tw-shadow-app-card tw-z-50 tw-pt-0 tw-px-100-px tw-pb-20-px ;\\n    }\\n  \\n    &--align-center {\\n      @apply tw-my-0 tw-mx-auto tw-block ; \\n    }\\n  \\n  }\\n  ","styleUrl":"./onboarding-done.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":10},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":2,"duplicateName":"OnboardingDoneComponent-2","templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-flex tw-justify-center tw-pr-74-px tw-pl-74-px tw-pt-24 tw-pb-20\\">\\n  <div class=\\"onboarding-done--contents\\">\\n    <div class=\\"tw-pt-34-px tw-mb-30-px\\">\\n      <img src=\\"assets/icons/onboarding-done.svg\\" class=\\"onboarding-done--align-center\\" alt=\\"Onboarding done\\" width=\\"74px\\">\\n    </div>\\n    <div class=\\"tw-text-center\\">\\n      <h2 class=\\"tw-text-normal-text-color !tw-font-400 !tw-text-18-px\\">Congratulations! Your integration setup is now complete.</h2>\\n    </div>\\n    <div class=\\"tw-flex tw-justify-center tw-py-20-px\\">\\n        <button type=\\"button\\" class=\\"tw-font-500 tw-text-white tw-px-24-px tw-py-12-px tw-bg-mandatory-field-color tw-rounded-4-px\\" (click)=\\"navigateToDashboard()\\">Launch Integration</button>\\n    </div>\\n    <div class=\\"tw-py-20-px\\">\\n      <h5 class=\\"tw-text-faded-text-color tw-text-center tw-text-14-px tw-font-400\\">\\n        After launching the integration, you can change your settings at any point of time under the <b class=\\"tw-font-bold\\">Configuration</b> section.\\n      </h5>\\n    </div>\\n  </div>\\n</div>\\n"},{"name":"OnboardingExportSettingComponent","id":"component-OnboardingExportSettingComponent-61b4414697092662a1acfef2e2ac63d4ec8dbf6164c15b2c87ab056060ee673a81b7740b880a0877b6210c1b81f33f598839ec31c97be5b66ac1de772727492a","file":"src/app/integrations/qbd/onboarding/onboarding-export-setting/onboarding-export-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-export-setting","styleUrls":["./onboarding-export-setting.component.scss"],"styles":[],"templateUrl":["./onboarding-export-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-onboarding-export-setting\',\\n  templateUrl: \'./onboarding-export-setting.component.html\',\\n  styleUrls: [\'./onboarding-export-setting.component.scss\']\\n})\\nexport class OnboardingExportSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./onboarding-export-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<app-onboarding-stepper [currentStep]=\\"\'Export Settings\'\\"></app-onboarding-stepper>\\n<app-export-setting></app-export-setting>\\n"},{"name":"OnboardingExportSettingComponent","id":"component-OnboardingExportSettingComponent-61b4414697092662a1acfef2e2ac63d4ec8dbf6164c15b2c87ab056060ee673a81b7740b880a0877b6210c1b81f33f598839ec31c97be5b66ac1de772727492a-1","file":"src/app/integrations/si/onboarding/onboarding-export-setting/onboarding-export-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-export-setting","styleUrls":["./onboarding-export-setting.component.scss"],"styles":[],"templateUrl":["./onboarding-export-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-onboarding-export-setting\',\\n  templateUrl: \'./onboarding-export-setting.component.html\',\\n  styleUrls: [\'./onboarding-export-setting.component.scss\']\\n})\\nexport class OnboardingExportSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./onboarding-export-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"isDuplicate":true,"duplicateId":1,"duplicateName":"OnboardingExportSettingComponent-1","templateData":"<app-intacct-stepper [currentStep] = \\"\'Export Settings\'\\"></app-intacct-stepper>\\n<app-configuration-export-settings></app-configuration-export-settings>"},{"name":"OnboardingFieldSettingComponent","id":"component-OnboardingFieldSettingComponent-a4aec4c67b9a1966362ad1e0485db4d0efc20c3cedf229ba5e89d3327825b86859cd96583050557779393a00bae78687f8845c9af93043fd25f001b2aa89e886","file":"src/app/integrations/qbd/onboarding/onboarding-field-setting/onboarding-field-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-field-setting","styleUrls":["./onboarding-field-setting.component.scss"],"styles":[],"templateUrl":["./onboarding-field-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-onboarding-field-setting\',\\n  templateUrl: \'./onboarding-field-setting.component.html\',\\n  styleUrls: [\'./onboarding-field-setting.component.scss\']\\n})\\nexport class OnboardingFieldSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./onboarding-field-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<app-onboarding-stepper [currentStep]=\\"\'Field Mapping\'\\"></app-onboarding-stepper>\\n<app-field-mapping></app-field-mapping>"},{"name":"OnboardingImportSettingComponent","id":"component-OnboardingImportSettingComponent-758a8a29186949d9197b77416b3a4272e73b4ba896273d289c10a59306af013200f36f264e93ff371c3dece06faaa67e8aade75f17db0c6f392350336b8b21be","file":"src/app/integrations/si/onboarding/onboarding-import-setting/onboarding-import-setting.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-import-setting","styleUrls":["./onboarding-import-setting.component.scss"],"styles":[],"templateUrl":["./onboarding-import-setting.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-onboarding-import-setting\',\\n  templateUrl: \'./onboarding-import-setting.component.html\',\\n  styleUrls: [\'./onboarding-import-setting.component.scss\']\\n})\\nexport class OnboardingImportSettingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./onboarding-import-setting.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<app-intacct-stepper [currentStep] = \\"\'Import Settings\'\\"></app-intacct-stepper>\\n<app-configuration-import-settings></app-configuration-import-settings>"},{"name":"OnboardingIntacctConnectorComponent","id":"component-OnboardingIntacctConnectorComponent-8003476414c9f983a6ca7104fd55fb9e32074006f5791ecf4a43e3aaeb9cec12238d5260863c1feb545b4ead4e9fe348303dd9aa4a55f0a130aacbd11b665f18","file":"src/app/integrations/si/onboarding/onboarding-intacct-connector/onboarding-intacct-connector.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-intacct-connector","styleUrls":["./onboarding-intacct-connector.component.scss"],"styles":[],"templateUrl":["./onboarding-intacct-connector.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"isIntacctConnected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":10}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""},{"name":"setupConnectionStatus","args":[{"name":"eventData","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"eventData","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-onboarding-intacct-connector\',\\n  templateUrl: \'./onboarding-intacct-connector.component.html\',\\n  styleUrls: [\'./onboarding-intacct-connector.component.scss\']\\n})\\nexport class OnboardingIntacctConnectorComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  isIntacctConnected: boolean = false;\\n\\n  constructor() { }\\n\\n  setupConnectionStatus(eventData: boolean) {\\n    this.isIntacctConnected = eventData;\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./onboarding-intacct-connector.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":12},"extends":[],"implements":["OnInit"],"templateData":"<app-intacct-stepper [currentStep]=\\"\'Connect to Sage Intacct\'\\"></app-intacct-stepper>\\n<app-intacct-connector (setupConnectionStatus)=\\"setupConnectionStatus($event)\\" *ngIf=\\"!isIntacctConnected\\"></app-intacct-connector>\\n<app-intacct-location-entity *ngIf=\\"isIntacctConnected\\"></app-intacct-location-entity>"},{"name":"OnboardingLandingComponent","id":"component-OnboardingLandingComponent-73410739b5270253c0472abef699f053f9cc7501b82654f0ebd573105c45945b4260c551fb6a09cc033e0bb5e97ec77b72682b51525c4f6a9107886e879c514a","file":"src/app/integrations/si/onboarding/onboarding-landing/onboarding-landing.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-landing","styleUrls":["./onboarding-landing.component.scss"],"styles":[],"templateUrl":["./onboarding-landing.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[148]},{"name":"embedVideoLink","defaultValue":"brandingDemoVideoLinks.onboarding.INTACCT","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.INTACCT.LANDING","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":11}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { brandingConfig, brandingDemoVideoLinks, brandingKbArticles } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-onboarding-landing\',\\n  templateUrl: \'./onboarding-landing.component.html\',\\n  styleUrls: [\'./onboarding-landing.component.scss\']\\n})\\nexport class OnboardingLandingComponent implements OnInit {\\n\\n  redirectLink = brandingKbArticles.onboardingArticles.INTACCT.LANDING;\\n\\n  embedVideoLink = brandingDemoVideoLinks.onboarding.INTACCT;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".read-more:hover {\\n    @apply tw-underline tw-underline-offset-1 ;\\n}","styleUrl":"./onboarding-landing.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":15},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <div>\\n        <app-landing-page-header [iconPath]=\\"\'assets/logos/sage-intacct-logo.svg\'\\" [appName]=\\"\'Sage Intacct\'\\" [appDescription]=\\"\'Import data from Sage Intacct to \' + brandingConfig.brandName + \' and Export expenses from \' + brandingConfig.brandName + \' to Sage Intacct. \'\\" [isLoading]=\\"false\\" [isIntegrationSetupInProgress]=\\"false\\" [isIntegrationConnected]=\\"false\\" [redirectLink]=\\"redirectLink\\" [buttonText]=\\"\'Connect\'\\" [postConnectionRoute]=\\"\'intacct/onboarding/connector\'\\"></app-landing-page-header>\\n    </div>\\n    <div>\\n        <app-landing-page-body [headlineText]=\\"\'Guide to setup your Integrations\'\\" [headerText]=\\"\'A quick guide to help you set up the integration quick and easy.\'\\" [embedVideo]=\\"embedVideoLink\\" [svgPath]=\\"\'assets/flow-charts/sage-flow-chart.svg\'\\"></app-landing-page-body>\\n    </div>\\n</div>\\n"},{"name":"OnboardingStepperComponent","id":"component-OnboardingStepperComponent-31f34f28ea3cf719875557f4f5d6cc414cf66480f1bc1f585cbfca1f0c29c798841680db133ba28e699446f964765be80bf381b4fb3de743568db7a99dde9754","file":"src/app/shared/components/qbd/helper/onboarding-stepper/onboarding-stepper.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-stepper","styleUrls":["./onboarding-stepper.component.scss"],"styles":[],"templateUrl":["./onboarding-stepper.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"currentStep","deprecated":false,"deprecationMessage":"","line":19,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"[\\n    {\\n      active: false,\\n      completed: false,\\n      number: 2,\\n      step: \'Export Settings\',\\n      icon: \'export-setting\',\\n      route: \'export_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      }\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 3,\\n      step: \'Field Mapping\',\\n      icon: \'field-mapping\',\\n      route: \'field_mappings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      }\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 4,\\n      step: \'Advanced\',\\n      icon: \'advanced-setting\',\\n      route: \'advanced_settings\',\\n      size: {\\n        height: \'20px\',\\n        width: \'20px\'\\n      }\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":21}],"methodsClass":[{"name":"navigate","args":[{"name":"canNavigate","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"route","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":79,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"canNavigate","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":""},{"name":"updateActiveAndCompletedSteps","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":60,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { QBDOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { QbdWorkspaceService } from \'src/app/core/services/qbd/qbd-core/qbd-workspace.service\';\\n\\n@Component({\\n  selector: \'app-onboarding-stepper\',\\n  templateUrl: \'./onboarding-stepper.component.html\',\\n  styleUrls: [\'./onboarding-stepper.component.scss\']\\n})\\nexport class OnboardingStepperComponent implements OnInit {\\n\\n  constructor(\\n    private router: Router,\\n    private workspaceService: QbdWorkspaceService\\n  ) { }\\n\\n  @Input() currentStep: string;\\n\\n  onboardingSteps: OnboardingStepper[] = [\\n    {\\n      active: false,\\n      completed: false,\\n      number: 2,\\n      step: \'Export Settings\',\\n      icon: \'export-setting\',\\n      route: \'export_settings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      }\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 3,\\n      step: \'Field Mapping\',\\n      icon: \'field-mapping\',\\n      route: \'field_mappings\',\\n      size: {\\n        height: \'18px\',\\n        width: \'15px\'\\n      }\\n    },\\n    {\\n      active: false,\\n      completed: false,\\n      number: 4,\\n      step: \'Advanced\',\\n      icon: \'advanced-setting\',\\n      route: \'advanced_settings\',\\n      size: {\\n        height: \'20px\',\\n        width: \'20px\'\\n      }\\n    }\\n  ];\\n\\n  private updateActiveAndCompletedSteps(): void {\\n    this.onboardingSteps.forEach(step => {\\n      if (step.step === this.currentStep) {\\n        step.active = true;\\n      }\\n    });\\n    const onboardingState: QBDOnboardingState = this.workspaceService.getOnboardingState();\\n    const onboardingStateStepMap = {\\n      [QBDOnboardingState.CONNECTION]: 1,\\n      [QBDOnboardingState.EXPORT_SETTINGS]: 2,\\n      [QBDOnboardingState.FIELD_MAPPINGS]: 3,\\n      [QBDOnboardingState.ADVANCED_SETTINGS]: 4,\\n      [QBDOnboardingState.COMPLETE]: 5\\n    };\\n    for (let index = onboardingStateStepMap[onboardingState] - 2; index > 0; index--) {\\n      this.onboardingSteps[index - 1].completed = true;\\n    }\\n  }\\n\\n  navigate(canNavigate: boolean, route: string): void {\\n    if (canNavigate) {\\n      this.router.navigate([`/integrations/qbd/onboarding/${route}`]);\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n    this.updateActiveAndCompletedSteps();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".step {\\n  @apply tw-w-48-px tw-h-48-px tw-rounded-full tw-box-border tw-flex tw-items-center ; \\n}\\n\\n.step-state {\\n  @apply tw-bg-white tw-border ;\\n}\\n\\n.icon {\\n  @apply tw-w-20-px tw-h-20-px ;\\n}\\n\\n.line-active {\\n  @apply tw-border-t-2-px tw-border-dashed tw-border-line-inactive tw-w-40 tw-h-2-px ;\\n}\\n\\n.line-inactive {\\n  @apply tw-border-t-2-px tw-border-solid tw-border-success-toast tw-w-40 tw-h-2-px ;\\n}\\n\\n.step-name-export {\\n  position: relative;\\n  left: -20px;\\n}\\n\\n.step-name-field {\\n  position: relative;\\n  left: -18px;\\n}\\n\\n.step-name-advanced {\\n  position: relative;\\n  left: -5px;\\n}\\n","styleUrl":"./onboarding-stepper.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-168-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-168-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div class=\\"tw-py-24-px tw-py-30-px tw-text-slightly-normal-text-color\\">\\n    <div>\\n        <div class=\\"tw-normal-text-color tw-text-center tw-pb-16-px \\">\\n            <p class=\\"!tw-font-400\\">Complete the following steps to generate the IIF file for QuickBooks Desktop.</p>\\n        </div>\\n        <div class=\\"tw-flex tw-justify-center\\">\\n            <div *ngFor=\\"let onboardingStep of onboardingSteps\\">\\n                <div class=\\"tw-grip tw-grid-cols-1\\">\\n                    <div class=\\"tw-flex tw-items-center\\">\\n                        <div class=\\"tw-flex tw-justify-center step\\" (click)=\\"navigate(onboardingStep.completed, onboardingStep.route)\\" [ngClass]=\\"[onboardingStep.active && !onboardingStep.completed ? \'step-state tw-border-success-toast tw-cursor-pointer\' : \'step-state tw-border-box-color tw-cursor-not-allowed\', onboardingStep.active && onboardingStep.completed ? \'step-state tw-border-success-toast !tw-cursor-pointer\' : \'\',onboardingStep.completed && !onboardingStep.active ? \'!tw-bg-success-toast tw-border-success-toast !tw-cursor-pointer\':\'\',]\\">\\n                            <img *ngIf=\\"onboardingStep.active\\" src=\'{{ \\"assets/icons/stepper/\\" + onboardingStep.icon + \\".svg\\" }}\' class=\\"icon\\" >\\n                            <img *ngIf=\\"!onboardingStep.active && onboardingStep.completed\\" src=\\"assets/icons/tick.svg\\" class=\\"icon\\">\\n                            <img *ngIf=\\"!onboardingStep.active && !onboardingStep.completed\\" src=\'{{ \\"assets/icons/stepper/\\" + onboardingStep.icon + \\"-inactive.svg\\" }}\' class=\\"icon\\">\\n                        </div>\\n                        <div *ngIf=\\"onboardingStep.number !== 4\\" >\\n                            <div *ngIf=\\"!onboardingStep.completed\\">\\n                                <hr class=\\"line-active\\">\\n                            </div>\\n                            <div *ngIf=\\"onboardingStep.completed\\" class=\\"\\">\\n                                <hr class=\\"line-inactive\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\"tw-text-14-px tw-pt-10-px tw-font-500\\" [ngClass]=\\"[onboardingStep.step === \'Export Settings\' ? \'step-name-export\' : \'\', onboardingStep.step === \'Field Mapping\' ? \'step-name-field\' : \'\', onboardingStep.step === \'Advanced\' ? \'step-name-advanced\' : \'\', !onboardingStep.active ? \'tw-text-faded-text-color\' : \'tw-text-normal-text-color\' ]\\">\\n                        {{ onboardingStep.step }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>"},{"name":"OnboardingSteppersComponent","id":"component-OnboardingSteppersComponent-4c4752f4ac2399923befffe06ba55ae763e06443c78f3e8e9d797312377edbb65b0085d7acd6de2d2f8c748b3b6663f4630f2de41edcb8f85374098c345adf94","file":"src/app/shared/components/helper/onboarding-stepper/onboarding-stepper.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-onboarding-steppers","styleUrls":["./onboarding-stepper.component.scss"],"styles":[],"templateUrl":["./onboarding-stepper.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"isCloneSettingView","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"onboardingSteps","deprecated":false,"deprecationMessage":"","line":13,"type":"OnboardingStepper[]","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"navigate","args":[{"name":"canNavigate","type":"boolean","deprecated":false,"deprecationMessage":""},{"name":"route","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"canNavigate","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { Route, Router } from \'@angular/router\';\\nimport { AppName, IntacctOnboardingState, QBDOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\n\\n@Component({\\n  selector: \'app-onboarding-steppers\',\\n  templateUrl: \'./onboarding-stepper.component.html\',\\n  styleUrls: [\'./onboarding-stepper.component.scss\']\\n})\\nexport class OnboardingSteppersComponent implements OnInit {\\n\\n  @Input() onboardingSteps: OnboardingStepper[];\\n\\n  @Input() isCloneSettingView: boolean;\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n  navigate(canNavigate: boolean, route: string): void {\\n    if (canNavigate) {\\n      this.router.navigate([route]);\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".step {\\n    @apply tw-w-48-px tw-h-48-px tw-rounded-full tw-box-border tw-flex tw-items-center ; \\n  }\\n  \\n  .step-state {\\n    @apply tw-bg-white tw-border ;\\n  }\\n  \\n  .tick-icon {\\n    @apply tw-h-14-px tw-w-20-px ;\\n  }\\n  \\n  .line-active {\\n    @apply tw-border-t-2-px tw-border-dashed tw-border-line-inactive tw-w-40 tw-h-2-px ;\\n  }\\n  \\n  .line-inactive {\\n    @apply tw-border-t-2-px tw-border-solid tw-border-success-toast tw-w-40 tw-h-2-px ;\\n  }\\n\\n  .step-name-connector {\\n    &--text {\\n      @apply tw-relative tw-left-[-50px] ;\\n    }\\n\\n    &--icon {\\n      @apply tw-w-24-px tw-h-24-px ;\\n    }\\n  }\\n  \\n  .step-name-export {\\n    &--text {\\n      @apply tw-relative tw-left-[-20px] ;\\n    }\\n\\n    &--icon {\\n      @apply tw-w-16-px tw-h-20-px ;\\n    }\\n  }\\n  \\n  .step-name-import {\\n    &--text {\\n      @apply tw-relative tw-left-[-18px] ;\\n    }\\n\\n    &--icon {\\n      @apply tw-w-24-px tw-h-24-px ;\\n    }\\n  }\\n\\n  .step-name-field {\\n    &--text {\\n      @apply tw-relative tw-left-[-18px] ;\\n    }\\n\\n    &--icon {\\n      @apply tw-w-20-px tw-h-20-px ;\\n    }\\n  }\\n  \\n  .step-name-advanced {\\n    &--text {\\n      @apply tw-relative tw-left-[-30px] ;\\n    }\\n\\n    &--icon {\\n      @apply tw-w-20-px tw-h-20-px ;\\n    }\\n  }\\n  ","styleUrl":"./onboarding-stepper.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":15,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-168-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-168-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div class=\\"tw-py-60-px tw-text-normal-text-color\\">\\n    <div>\\n        <div class=\\"tw-text-center tw-pb-38-px\\">\\n            <p class=\\"tw-font-500\\">\\n                <span *ngIf=\\"!isCloneSettingView\\">\\n                    Configure the following settings to set up your integration\\n                </span>\\n                <span *ngIf=\\"isCloneSettingView\\">\\n                    Fill in the below fields to complete your integration set up\\n                </span>\\n            </p>\\n        </div>\\n        <div class=\\"tw-flex tw-justify-center\\">\\n            <div *ngFor=\\"let onboardingStep of onboardingSteps\\">\\n                <div class=\\"tw-grip tw-grid-cols-1\\">\\n                    <div class=\\"tw-flex tw-items-center\\">\\n                        <div class=\\"tw-flex tw-justify-center step\\" (click)=\\"navigate(onboardingStep.completed, onboardingStep.route)\\" [ngClass]=\\"[onboardingStep.active && !onboardingStep.completed ? \'step-state tw-border-success-toast tw-text-success-toast tw-cursor-pointer\' : \'step-state tw-border-box-color tw-cursor-not-allowed\', onboardingStep.active && onboardingStep.completed ? \'step-state tw-border-success-toast !tw-cursor-pointer\' : \'\',onboardingStep.completed && !onboardingStep.active ? \'!tw-bg-success-toast tw-text-white tw-border-success-toast !tw-cursor-pointer\':\'\',]\\">\\n                            <svg-icon-sprite *ngIf=\\"onboardingStep.active\\" src=\'{{ onboardingStep.icon }}\' [ngClass]=\\"onboardingStep.styleClasses ? onboardingStep.styleClasses[1] : \'\'\\" ></svg-icon-sprite>\\n                            <svg-icon-sprite *ngIf=\\"!onboardingStep.active && onboardingStep.completed\\" src=\\"tick\\" class=\\"tick-icon\\"></svg-icon-sprite>\\n                            <svg-icon-sprite *ngIf=\\"!onboardingStep.active && !onboardingStep.completed\\" src=\'{{ onboardingStep.icon }}-inactive\' class=\\"tw-text-placeholder\\" [ngClass]=\\"onboardingStep.styleClasses ? onboardingStep.styleClasses[1] : \'\'\\"></svg-icon-sprite>\\n                        </div>\\n                        <div *ngIf=\\"onboardingStep.number < onboardingSteps.length\\" >\\n                            <div *ngIf=\\"!onboardingStep.completed\\">\\n                                <hr class=\\"line-active\\">\\n                            </div>\\n                            <div *ngIf=\\"onboardingStep.completed\\" class=\\"\\">\\n                                <hr class=\\"line-inactive\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\"tw-text-14-px tw-pt-10-px tw-font-500\\" [ngClass]=\\"onboardingStep.styleClasses ? onboardingStep.styleClasses[0] : \'\'\\">\\n                        {{ onboardingStep.step }}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"PaginatorComponent","id":"component-PaginatorComponent-b78d57f13e8fac95c19b5346de9beefc856464198c244c0ce98cf56fa5738f0aebd849281615f34a14aa71d0017c0d1b8c3994f80ea3240e89c99f29a38fc0b2","file":"src/app/shared/components/helper/paginator/paginator.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-paginator","styleUrls":["./paginator.component.scss"],"styles":[],"templateUrl":["./paginator.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"dropDownValue","defaultValue":"10","deprecated":false,"deprecationMessage":"","line":23,"type":"number","decorators":[]},{"name":"page","deprecated":false,"deprecationMessage":"","line":13,"type":"number","decorators":[]},{"name":"pageType","deprecated":false,"deprecationMessage":"","line":21,"type":"PaginatorPage","decorators":[]},{"name":"totalCount","deprecated":false,"deprecationMessage":"","line":19,"type":"number","decorators":[]}],"outputsClass":[{"name":"pageOffsetChangeEvent","defaultValue":"new EventEmitter<number>()","deprecated":false,"deprecationMessage":"","line":17,"type":"EventEmitter"},{"name":"pageSizeChangeEvent","defaultValue":"new EventEmitter<number>()","deprecated":false,"deprecationMessage":"","line":15,"type":"EventEmitter"}],"propertiesClass":[{"name":"pageNumbers","defaultValue":"[10, 50, 100, 200]","deprecated":false,"deprecationMessage":"","type":"number[]","optional":false,"description":"","line":11},{"name":"PaginatorPage","defaultValue":"PaginatorPage","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":27},{"name":"totalPages","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":25}],"methodsClass":[{"name":"navigateToPage","args":[{"name":"targetPage","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"targetPage","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"nextPageChange","args":[{"name":"currentPage","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"currentPage","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":""},{"name":"pageSizeChanges","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"previousPageChange","args":[{"name":"currentPage","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"currentPage","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { PaginatorPage } from \'src/app/core/models/enum/enum.model\';\\n\\n@Component({\\n  selector: \'app-paginator\',\\n  templateUrl: \'./paginator.component.html\',\\n  styleUrls: [\'./paginator.component.scss\']\\n})\\nexport class PaginatorComponent implements OnInit {\\n\\n  pageNumbers: number[] = [10, 50, 100, 200];\\n\\n  @Input() page: number;\\n\\n  @Output() pageSizeChangeEvent = new EventEmitter<number>();\\n\\n  @Output() pageOffsetChangeEvent = new EventEmitter<number>();\\n\\n  @Input() totalCount: number;\\n\\n  @Input() pageType:  PaginatorPage;\\n\\n  @Input() dropDownValue: number = 10;\\n\\n  totalPages: number;\\n\\n  PaginatorPage = PaginatorPage;\\n\\n  constructor() { }\\n\\n  navigateToPage(targetPage: number) {\\n    if (targetPage === 1) {\\n      this.page = 1;\\n      this.pageOffsetChangeEvent.emit(0);\\n    } else {\\n      this.page = targetPage;\\n      const offsetValue = (targetPage-1) * this.dropDownValue;\\n      this.pageOffsetChangeEvent.emit(offsetValue);\\n    }\\n  }\\n\\n  pageSizeChanges(event:any) {\\n    this.totalPages = Math.ceil(this.totalCount/this.dropDownValue);\\n    this.pageSizeChangeEvent.emit(event.value);\\n  }\\n\\n  previousPageChange(currentPage: number) {\\n    this.page = this.page - 1;\\n    const offsetValue = (currentPage - 2) * this.dropDownValue;\\n    this.pageOffsetChangeEvent.emit(offsetValue);\\n  }\\n\\n  nextPageChange(currentPage: number) {\\n    this.page = this.page + 1;\\n    const offsetValue = currentPage * this.dropDownValue;\\n    this.pageOffsetChangeEvent.emit(offsetValue);\\n  }\\n\\n  ngOnInit(): void {\\n    this.totalPages = Math.ceil(this.totalCount/this.dropDownValue);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-dropdown {\\n    @apply tw-w-fit tw-h-32-px tw-flex tw-items-center #{!important};\\n}\\n\\n:host ::ng-deep span {\\n    @apply tw-text-faded-text-color tw-text-12-px tw-font-500 #{!important};\\n}\\n\\n.prevBtn:disabled, .nextBtn:disabled {\\n    @apply tw-cursor-not-allowed #{!important};\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n    @apply tw-w-4 tw-pr-14-px #{!important}; \\n}\\n\\n.pi-chevron-left {\\n    margin-left: -10px;\\n}\\n.pi-chevron-right {\\n    margin-right: -10px;\\n}","styleUrl":"./paginator.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":27},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n    <div>\\n        <span *ngIf=\\"pageType === PaginatorPage.DASHBOARD\\">Page {{page}} of {{totalPages}}</span>\\n    </div>\\n    <div class=\\"tw-flex tw-items-center\\">\\n        <div class=\\"tw-flex tw-items-center tw-pr-30-px\\">\\n            <span *ngIf=\\"pageType === PaginatorPage.DASHBOARD\\" class=\\"tw-pr-10-px\\">Show</span>\\n            <span *ngIf=\\"pageType !== PaginatorPage.DASHBOARD\\" class=\\"tw-pr-10-px\\">Items per page:</span>\\n            <div>\\n                <p-dropdown appendTo=\\"body\\" [options]=\\"pageNumbers\\" (onChange)=\\"pageSizeChanges($event)\\" [(ngModel)]=\\"dropDownValue\\">\\n                    <ng-template let-value pTemplate=\\"selectedItem\\" >\\n                        <div *ngIf=\\"dropDownValue\\" class=\\"tw-flex\\">\\n                            <p class=\\"tw-text-normal-text-color tw-text-12-px !tw-font-500\\">{{ value }} <span *ngIf=\\"pageType === PaginatorPage.DASHBOARD\\">Items</span></p>\\n                        </div>\\n                        <div *ngIf=\\"!dropDownValue\\" class=\\"tw-text-placeholder\\">\\n                            Select size of page\\n                        </div>\\n                    </ng-template>\\n                    <ng-template let-day pTemplate=\\"item\\">\\n                        <div>\\n                            <p class=\\"tw-text-sub-text-color tw-text-14-px\\">{{ day }} <span *ngIf=\\"pageType === PaginatorPage.DASHBOARD\\">Items</span></p>\\n                        </div>\\n                    </ng-template> \\n                </p-dropdown>\\n            </div>\\n        </div>\\n        <div class=\\"tw-flex tw-items-center\\">\\n            <span *ngIf=\\"pageType === PaginatorPage.DASHBOARD\\" class=\\"tw-pr-10-px\\">Page</span>\\n            <div *ngIf=\\"pageType === PaginatorPage.DASHBOARD\\" class=\\"tw-border tw-border-separator tw-flex tw-items-center tw-rounded-4-px\\">\\n                <div class=\\"tw-border-r tw-border-r-separator\\">\\n                    <button type=\\"button\\" class=\\"tw-h-32-px tw-w-30-px prevBtn\\" (click)=\\"previousPageChange(page)\\" [disabled]=\\"page === 1\\" >\\n                        <i class=\\"pi pi-angle-left tw-w-6-px tw-h-12-px tw-pt-6-px\\"></i>\\n                    </button>\\n                </div>\\n                <div class=\\"tw-w-30-px tw-h-32-px tw-flex tw-items-center tw-justify-center\\">\\n                    {{page}}\\n                </div>\\n                <div class=\\"tw-border-l tw-border-l-separator\\">\\n                    <button type=\\"button\\" class=\\"tw-h-32-px tw-w-30-px nextBtn\\" (click)=\\"nextPageChange(page)\\" [disabled]=\\"page === totalPages\\">\\n                        <i class=\\"pi pi-angle-right tw-w-6-px tw-h-12-px tw-pt-6-px\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n            <div *ngIf=\\"pageType !== PaginatorPage.DASHBOARD\\" class=\\"tw-flex tw-justify-between\\">\\n                <div class=\\"\\">\\n                    <button type=\\"button\\" class=\\"tw-h-32-px tw-w-32-px prevBtn tw-flex tw-place-items-center tw-pt-2-px tw-mr-12-px\\" (click)=\\"navigateToPage(1)\\" [disabled]=\\"page === 1\\" >\\n                        <i class=\\"pi pi-minus tw-rotate-90\\"></i><i class=\\"pi pi-chevron-left\\"></i>\\n                    </button>\\n                </div>\\n                <div class=\\"\\">\\n                    <button type=\\"button\\" class=\\"tw-h-32-px tw-w-32-px prevBtn tw-mr-8-px\\" (click)=\\"previousPageChange(page)\\" [disabled]=\\"page === 1\\" >\\n                        <i class=\\"pi pi-chevron-left tw-w-6-px tw-h-12-px tw-pt-6-px\\"></i>\\n                    </button>\\n                </div>\\n                <div class=\\"tw-w-fix tw-h-32-px tw-flex tw-items-center tw-justify-center tw-border-2-px tw-border-separator tw-py-8-px tw-px-12-px tw-rounded-4-px tw-bg-white tw-mr-10-px\\">\\n                    {{page}} of {{totalPages}}\\n                </div>\\n                <div >\\n                    <button type=\\"button\\" class=\\"tw-h-32-px tw-w-32-px nextBtn tw-mr-12-px\\" (click)=\\"nextPageChange(page)\\" [disabled]=\\"page === totalPages\\">\\n                        <i class=\\"pi pi-chevron-right tw-w-6-px tw-h-12-px tw-pt-6-px\\"></i>\\n                    </button>\\n                </div>\\n                <div>\\n                    <button type=\\"button\\" class=\\"tw-h-32-px tw-w-32-px tw-ml-10-px nextBtn tw-flex tw-place-items-center tw-pt-2-px\\" (click)=\\"navigateToPage(totalPages)\\" [disabled]=\\"page === totalPages\\">\\n                        <i class=\\"pi pi-chevron-right\\"></i><i class=\\"pi pi-minus tw-rotate-90\\"></i>\\n                    </button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>"},{"name":"PreviewDialogComponent","id":"component-PreviewDialogComponent-bb19d87cd4241c607a1b3727b43fb6dea5bc91159091c48a6013c1ff1d1a44ce630987de4b0b7c4daa198feb900bb7b292403ec10041c67a5efce5977327edbf","file":"src/app/shared/components/configuration/preview-dialog/preview-dialog.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-preview-dialog","styleUrls":["./preview-dialog.component.scss"],"styles":[],"templateUrl":["./preview-dialog.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"header","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]},{"name":"iconPath","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"isPreviewDialogVisible","deprecated":false,"deprecationMessage":"","line":10,"type":"boolean","decorators":[]}],"outputsClass":[{"name":"closeDialog","defaultValue":"new EventEmitter()","deprecated":false,"deprecationMessage":"","line":16,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[{"name":"close","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-preview-dialog\',\\n  templateUrl: \'./preview-dialog.component.html\',\\n  styleUrls: [\'./preview-dialog.component.scss\']\\n})\\nexport class PreviewDialogComponent implements OnInit {\\n\\n  @Input() isPreviewDialogVisible: boolean;\\n\\n  @Input() iconPath: string;\\n\\n  @Input() header: string;\\n\\n  @Output() closeDialog = new EventEmitter();\\n\\n  constructor() { }\\n\\n  close() {\\n    this.closeDialog.emit();\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./preview-dialog.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":16},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <p-dialog [header]=\\"header\\" [dismissableMask]=\\"true\\" [showHeader]=\\"true\\" [modal]=\\"true\\" [(visible)]=\\"isPreviewDialogVisible\\" (onHide)=\\"close()\\" [breakpoints]=\\"{ \'960px\': \'75vw\' }\\" [draggable]=\\"false\\" [resizable]=\\"false\\">\\n        <div class=\\"tw-flex tw-items-center tw-justify-center tw-px-24-px tw-pb-24-px\\">\\n            <img height=\\"300px\\" width=\\"700px\\" [src]=\\"iconPath\\">\\n        </div>\\n    </p-dialog>\\n</div>\\n"},{"name":"QbdComponent","id":"component-QbdComponent-bb2f9deafdc27bed983d810346399366477242e28bfca299f8714e60f0967351fe7093f1bb61b84e5cc19c3fdc8b5d295795c7fc6af170b584dfc603fc999c22","file":"src/app/integrations/qbd/qbd.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbd","styleUrls":["./qbd.component.scss"],"styles":[],"templateUrl":["./qbd.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":21},{"name":"user","defaultValue":"this.userService.getUserProfile()","deprecated":false,"deprecationMessage":"","type":"MinimalUser","optional":false,"description":"","line":17},{"name":"windowReference","deprecated":false,"deprecationMessage":"","type":"Window","optional":false,"description":"","line":23},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"QBDWorkspace","optional":false,"description":"","line":19}],"methodsClass":[{"name":"navigate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":35,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":""},{"name":"setupWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"workspaceSetting","args":[{"name":"workspace","type":"QBDWorkspace","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"workspace","type":"QBDWorkspace","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MinimalUser } from \'src/app/core/models/db/user.model\';\\nimport { QBDOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { QBDWorkspace } from \'src/app/core/models/qbd/db/workspaces.model\';\\nimport { StorageService } from \'src/app/core/services/common/storage.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { IntegrationsUserService } from \'src/app/core/services/common/integrations-user.service\';\\nimport { QbdWorkspaceService } from \'src/app/core/services/qbd/qbd-core/qbd-workspace.service\';\\n\\n@Component({\\n  selector: \'app-qbd\',\\n  templateUrl: \'./qbd.component.html\',\\n  styleUrls: [\'./qbd.component.scss\']\\n})\\nexport class QbdComponent implements OnInit {\\n  user: MinimalUser = this.userService.getUserProfile();\\n\\n  workspace: QBDWorkspace;\\n\\n  isLoading: boolean = true;\\n\\n  windowReference: Window;\\n\\n  constructor(\\n    private storageService: StorageService,\\n    private router: Router,\\n    private userService: IntegrationsUserService,\\n    private workspaceService: QbdWorkspaceService,\\n    private windowService: WindowService\\n  ) {\\n    this.windowReference = this.windowService.nativeWindow;\\n  }\\n\\n  private navigate(): void {\\n    const pathName = this.windowReference.location.pathname;\\n    if (pathName === \'/integrations/qbd\') {\\n      const onboardingStateComponentMap = {\\n        [QBDOnboardingState.CONNECTION]: \'/integrations/qbd/onboarding/landing\',\\n        [QBDOnboardingState.EXPORT_SETTINGS]: \'/integrations/qbd/onboarding/landing\',\\n        [QBDOnboardingState.FIELD_MAPPINGS]: \'/integrations/qbd/onboarding/field_mappings\',\\n        [QBDOnboardingState.ADVANCED_SETTINGS]: \'/integrations/qbd/onboarding/advanced_settings\',\\n        [QBDOnboardingState.COMPLETE]: \'/integrations/qbd/main\'\\n      };\\n      this.router.navigateByUrl(onboardingStateComponentMap[this.workspace.onboarding_state]);\\n    }\\n  }\\n\\n  private setupWorkspace(): void {\\n    this.workspaceService.getQBDWorkspace(this.user.org_id).subscribe((workspaces) => {\\n      if (workspaces?.id) {\\n        this.workspaceSetting(workspaces);\\n      }\\n    }, (error) => {\\n      this.workspaceService.postQBDWorkspace().subscribe((workspaces: any) => {\\n        this.workspaceSetting(workspaces);\\n      });\\n    }\\n    );\\n  }\\n\\n  workspaceSetting(workspace:QBDWorkspace) {\\n    this.workspace = workspace;\\n    this.storageService.set(\'workspaceId\', this.workspace.id);\\n    this.storageService.set(\'QBDOnboardingState\', this.workspace.onboarding_state);\\n    this.workspaceService.syncFyleDimensions().subscribe();\\n    this.isLoading = false;\\n    this.navigate();\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupWorkspace();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbd.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"IntegrationsUserService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":23,"jsdoctags":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"IntegrationsUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"QbdWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>"},{"name":"QboAdvancedSettingsComponent","id":"component-QboAdvancedSettingsComponent-b3246724eea866007a353cb3200e5e4438e6f510c2563fd40d3160e7f40dc5a82a081e319d7abb580261217894bf0cb815df0a4a8ca3b5659f6d45ca3bd4ae68","file":"src/app/integrations/qbo/qbo-shared/qbo-advanced-settings/qbo-advanced-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-advanced-settings","styleUrls":["./qbo-advanced-settings.component.scss"],"styles":[],"templateUrl":["./qbo-advanced-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"adminEmails","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"EmailOption[]","optional":false,"description":"","line":64},{"name":"advancedSetting","deprecated":false,"deprecationMessage":"","type":"QBOAdvancedSettingGet","optional":false,"description":"","line":48},{"name":"advancedSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":54},{"name":"appName","defaultValue":"AppName.QBO","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":39},{"name":"billPaymentAccounts","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":60},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":62},{"name":"conditionFieldOptions","deprecated":false,"deprecationMessage":"","type":"ConditionField[]","optional":false,"description":"","line":52},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":74},{"name":"defaultMemoOptions","defaultValue":"AdvancedSettingsModel.getDefaultMemoOptions()","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":66},{"name":"expenseFilters","deprecated":false,"deprecationMessage":"","type":"ExpenseFilterResponse","optional":false,"description":"","line":50},{"name":"hours","defaultValue":"[...Array(24).keys()].map(day => {\\n    return {\\n      label: (day + 1).toString(),\\n      value: day + 1\\n    };\\n  })","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":41},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":29},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":37},{"name":"isSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":31},{"name":"memoPreviewText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":68},{"name":"memoStructure","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":58},{"name":"paymentSyncOptions","defaultValue":"QBOAdvancedSettingModel.getPaymentSyncOptions()","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":72},{"name":"skipExportForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":56},{"name":"skipExportRedirectLink","defaultValue":"brandingKbArticles.onboardingArticles.QBO.SKIP_EXPORT","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35},{"name":"supportArticleLink","defaultValue":"brandingKbArticles.onboardingArticles.QBO.ADVANCED_SETTING","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":33},{"name":"workspaceGeneralSettings","deprecated":false,"deprecationMessage":"","type":"QBOWorkspaceGeneralSetting","optional":false,"description":"","line":70}],"methodsClass":[{"name":"createMemoStructureWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":171,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"deleteExpenseFilter","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isAutoCreateMerchantsAsVendorsFieldVisible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":167,"deprecated":false,"deprecationMessage":""},{"name":"isAutoCreateVendorsFieldVisible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":155,"deprecated":false,"deprecationMessage":""},{"name":"isPaymentSyncFieldVisible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":""},{"name":"isSingleCreditLineJEFieldVisible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":163,"deprecated":false,"deprecationMessage":""},{"name":"navigateToPreviousStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":235,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":147,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":""},{"name":"saveSkipExport","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"saveSkipExportFields","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupFormWatchers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":195,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"skipExportWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":179,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { AdvancedSettingsModel, ConditionField, EmailOption, ExpenseFilterPayload, ExpenseFilterResponse, SkipExportModel, SkipExportValidatorRule, skipExportValidator } from \'src/app/core/models/common/advanced-settings.model\';\\nimport { SelectFormOption } from \'src/app/core/models/common/select-form-option.model\';\\nimport { DefaultDestinationAttribute, DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { AppName, AutoMapEmployeeOptions, ConfigurationCta, EmployeeFieldMapping, NameInJournalEntry, QBOCorporateCreditCardExpensesObject, QBOOnboardingState, QBOPaymentSyncDirection, QBOReimbursableExpensesObject, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { QBOWorkspaceGeneralSetting } from \'src/app/core/models/qbo/db/workspace-general-setting.model\';\\nimport { QBOAdvancedSettingGet, QBOAdvancedSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model\';\\nimport { QBOExportSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model\';\\nimport { ConfigurationService } from \'src/app/core/services/common/configuration.service\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { SkipExportService } from \'src/app/core/services/common/skip-export.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { QboAdvancedSettingsService } from \'src/app/core/services/qbo/qbo-configuration/qbo-advanced-settings.service\';\\nimport { QboHelperService } from \'src/app/core/services/qbo/qbo-core/qbo-helper.service\';\\n\\n@Component({\\n  selector: \'app-qbo-advanced-settings\',\\n  templateUrl: \'./qbo-advanced-settings.component.html\',\\n  styleUrls: [\'./qbo-advanced-settings.component.scss\']\\n})\\nexport class QboAdvancedSettingsComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  isSaveInProgress: boolean;\\n\\n  supportArticleLink: string = brandingKbArticles.onboardingArticles.QBO.ADVANCED_SETTING;\\n\\n  skipExportRedirectLink: string = brandingKbArticles.onboardingArticles.QBO.SKIP_EXPORT;\\n\\n  isOnboarding: boolean;\\n\\n  appName: string = AppName.QBO;\\n\\n  hours: SelectFormOption[] = [...Array(24).keys()].map(day => {\\n    return {\\n      label: (day + 1).toString(),\\n      value: day + 1\\n    };\\n  });\\n\\n  advancedSetting: QBOAdvancedSettingGet;\\n\\n  expenseFilters: ExpenseFilterResponse;\\n\\n  conditionFieldOptions: ConditionField[];\\n\\n  advancedSettingForm: FormGroup;\\n\\n  skipExportForm: FormGroup;\\n\\n  memoStructure: string[] = [];\\n\\n  billPaymentAccounts: DefaultDestinationAttribute[];\\n\\n  brandingConfig = brandingConfig;\\n\\n  adminEmails: EmailOption[] = [];\\n\\n  defaultMemoOptions: string[] = AdvancedSettingsModel.getDefaultMemoOptions();\\n\\n  memoPreviewText: string = \'\';\\n\\n  workspaceGeneralSettings: QBOWorkspaceGeneralSetting;\\n\\n  paymentSyncOptions: SelectFormOption[] = QBOAdvancedSettingModel.getPaymentSyncOptions();\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  constructor(\\n    private advancedSettingsService: QboAdvancedSettingsService,\\n    private configurationService: ConfigurationService,\\n    private helper: HelperService,\\n    private qboHelperService: QboHelperService,\\n    private mappingService: MappingService,\\n    private router: Router,\\n    private skipExportService: SkipExportService,\\n    private toastService: IntegrationsToastService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n\\n  navigateToPreviousStep(): void {\\n    this.router.navigate([`/integrations/qbo/onboarding/import_settings`]);\\n  }\\n\\n  private saveSkipExportFields(): void {\\n    if (!this.skipExportForm.valid) {\\n      return;\\n    }\\n    let valueField = this.skipExportForm.getRawValue();\\n    if (!valueField.condition1.field_name) {\\n      return;\\n    }\\n    valueField = SkipExportModel.constructSkipExportValue(valueField);\\n    valueField.rank = 1;\\n    const skipExportRank1: ExpenseFilterPayload = SkipExportModel.constructExportFilterPayload(valueField);\\n    const payload1 = SkipExportModel.constructSkipExportPayload(skipExportRank1, this.skipExportForm.value.value1);\\n    this.skipExportService.postExpenseFilter(payload1).subscribe(() => {\\n      if (valueField.condition2 && valueField.operator2) {\\n        valueField.rank = 2;\\n        const skipExportRank2: ExpenseFilterPayload = SkipExportModel.constructExportFilterPayload(valueField);\\n        const payload2 = SkipExportModel.constructSkipExportPayload(skipExportRank2, this.skipExportForm.value.value2);\\n        this.skipExportService.postExpenseFilter(payload2).subscribe(() => {});\\n      }\\n    });\\n  }\\n\\n  private saveSkipExport(): void {\\n    if (!this.advancedSettingForm.value.skipExport && this.expenseFilters.results.length > 0){\\n      this.expenseFilters.results.forEach((value) => {\\n        this.deleteExpenseFilter(value.rank);\\n      });\\n    }\\n    if (this.advancedSettingForm.value.skipExport) {\\n      this.saveSkipExportFields();\\n    }\\n  }\\n\\n  save(): void {\\n    this.saveSkipExport();\\n    const advancedSettingPayload = QBOAdvancedSettingModel.constructPayload(this.advancedSettingForm);\\n    this.isSaveInProgress = true;\\n\\n    this.advancedSettingsService.postAdvancedSettings(advancedSettingPayload).subscribe(() => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Advanced settings saved successfully\');\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(QBOOnboardingState.COMPLETE);\\n        this.router.navigate([`/integrations/qbo/onboarding/done`]);\\n      } else {\\n        this.router.navigate([\'/integrations/qbo/main/dashboard\']);\\n      }\\n    }, () => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving advanced settings, please try again later\');\\n    });\\n  }\\n\\n  refreshDimensions() {\\n    this.qboHelperService.refreshQBODimensions().subscribe();\\n  }\\n\\n  deleteExpenseFilter(rank: number) {\\n    this.skipExportService.deleteExpenseFilter(rank).subscribe();\\n  }\\n\\n  isAutoCreateVendorsFieldVisible(): boolean {\\n    return this.workspaceGeneralSettings.employee_field_mapping === EmployeeFieldMapping.VENDOR && this.workspaceGeneralSettings.auto_map_employees !== null && this.workspaceGeneralSettings.auto_map_employees !== AutoMapEmployeeOptions.EMPLOYEE_CODE;\\n  }\\n\\n  isPaymentSyncFieldVisible(): boolean {\\n    return this.workspaceGeneralSettings.reimbursable_expenses_object === QBOReimbursableExpensesObject.BILL;\\n  }\\n\\n  isSingleCreditLineJEFieldVisible(): boolean {\\n    return this.workspaceGeneralSettings.reimbursable_expenses_object === QBOReimbursableExpensesObject.JOURNAL_ENTRY || this.workspaceGeneralSettings.corporate_credit_card_expenses_object === QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY;\\n  }\\n\\n  isAutoCreateMerchantsAsVendorsFieldVisible(): boolean {\\n    return !this.workspaceGeneralSettings.import_vendors_as_merchants && (this.workspaceGeneralSettings.corporate_credit_card_expenses_object === QBOCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE || this.workspaceGeneralSettings.corporate_credit_card_expenses_object === QBOCorporateCreditCardExpensesObject.DEBIT_CARD_EXPENSE || this.workspaceGeneralSettings.name_in_journal_entry === NameInJournalEntry.MERCHANT);\\n  }\\n\\n  private createMemoStructureWatcher(): void {\\n    this.memoStructure = this.advancedSetting.workspace_general_settings.memo_structure;\\n    this.memoPreviewText = AdvancedSettingsModel.formatMemoPreview(this.memoStructure, this.defaultMemoOptions);\\n    this.advancedSettingForm.controls.memoStructure.valueChanges.subscribe((memoChanges) => {\\n       this.memoPreviewText = AdvancedSettingsModel.formatMemoPreview(memoChanges, this.defaultMemoOptions);\\n    });\\n  }\\n\\n  skipExportWatcher(): void {\\n    const skipExportFormWatcherFields: SkipExportValidatorRule = {\\n      condition1: [\'operator1\', \'value1\'],\\n      condition2: [\'operator2\', \'value2\'],\\n      operator1: [\'value1\'],\\n      operator2: [\'value2\']\\n    };\\n    this.helper.setConfigurationSettingValidatorsAndWatchers(skipExportFormWatcherFields, this.skipExportForm);\\n\\n    const formWatcher: skipExportValidator = {\\n      \'isChanged\': [\'condition1\', \'operator1\', \'value1\'],\\n      \'isNotChanged\': [\'condition1\', \'operator1\', \'value1\', \'condition2\', \'operator2\', \'value2\', \'join_by\']\\n    };\\n    this.helper.handleSkipExportFormInAdvancedSettingsUpdates(this.skipExportForm, formWatcher, this.advancedSettingForm);\\n  }\\n\\n  private setupFormWatchers() {\\n    this.createMemoStructureWatcher();\\n\\n    QBOAdvancedSettingModel.setConfigurationSettingValidatorsAndWatchers(this.advancedSettingForm);\\n    this.skipExportWatcher();\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    forkJoin([\\n      this.advancedSettingsService.getAdvancedSettings(),\\n      this.skipExportService.getExpenseFilter(),\\n      this.skipExportService.getExpenseFields(\'v1\'),\\n      this.mappingService.getGroupedDestinationAttributes([\'BANK_ACCOUNT\'], \'v1\', \'qbo\'),\\n      this.configurationService.getAdditionalEmails(),\\n      this.workspaceService.getWorkspaceGeneralSettings()\\n    ]).subscribe(([sage300AdvancedSettingResponse, expenseFiltersGet, expenseFilterCondition, billPaymentAccounts, adminEmails, workspaceGeneralSettings]) => {\\n      this.advancedSetting = sage300AdvancedSettingResponse;\\n      this.expenseFilters = expenseFiltersGet;\\n      this.conditionFieldOptions = expenseFilterCondition;\\n\\n      this.adminEmails = adminEmails;\\n      if (this.advancedSetting.workspace_schedules?.additional_email_options && this.advancedSetting.workspace_schedules?.additional_email_options.length > 0) {\\n        this.adminEmails = this.adminEmails.concat(this.advancedSetting.workspace_schedules?.additional_email_options);\\n      }\\n\\n      this.workspaceGeneralSettings = workspaceGeneralSettings;\\n\\n      this.billPaymentAccounts = billPaymentAccounts.BANK_ACCOUNT.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n\\n      const isSkipExportEnabled = expenseFiltersGet.count > 0;\\n\\n      this.advancedSettingForm = QBOAdvancedSettingModel.mapAPIResponseToFormGroup(this.advancedSetting, isSkipExportEnabled, this.adminEmails);\\n      this.skipExportForm = SkipExportModel.setupSkipExportForm(this.expenseFilters, [], this.conditionFieldOptions);\\n\\n      this.setupFormWatchers();\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSettingsAndSetupForm();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-advanced-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"advancedSettingsService","type":"QboAdvancedSettingsService","deprecated":false,"deprecationMessage":""},{"name":"configurationService","type":"ConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"qboHelperService","type":"QboHelperService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"skipExportService","type":"SkipExportService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":74,"jsdoctags":[{"name":"advancedSettingsService","type":"QboAdvancedSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"configurationService","type":"ConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qboHelperService","type":"QboHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"skipExportService","type":"SkipExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header\\n            [headerText]=\\"\'Advanced Settings\'\\"\\n            [contentText]=\\"\'In this section, you can customize the integration based on your accounting requirements. \'\\"\\n            [redirectLink]=\\"supportArticleLink\\"\\n            [showSyncButton]=\\"isOnboarding\\"\\n            [appName]=\\"appName\\"\\n            (refreshDimension)=\\"refreshDimensions()\\">\\n        </app-configuration-step-header>\\n    </div>\\n    <form [formGroup]=\\"advancedSettingForm\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-mb-16-px\\">\\n                <app-configuration-step-sub-header\\n                    [label]=\\"\'Automation\'\\"\\n                    [subLabel]=\\"\'You can automate the export and sync of your data in this section.\'\\">\\n                </app-configuration-step-sub-header>\\n            </div>\\n            <div class=\\"tw-mb-16-px\\">\\n                <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                    <app-configuration-toggle-field\\n                        [form]=\\"advancedSettingForm\\"\\n                        [label]=\\"\'Schedule automatic export\'\\" \\n                        [subLabel]=\\"\'Set up a schedule to frequently automate the export of expenses from \' + brandingConfig.brandName + \' to QuickBooks Online\'\\"\\n                        [formControllerName]=\\"\'exportSchedule\'\\"\\n                        [iconPath]=\\"\'calender\'\\">\\n                    </app-configuration-toggle-field>\\n\\n                    <div *ngIf=\\"advancedSettingForm.value.exportSchedule\\">\\n                        <app-configuration-schedule-export\\n                            [form]=\\"advancedSettingForm\\"\\n                            [isFieldMandatory]=\\"false\\"\\n                            [mandatoryErrorListName]=\\"\'automatic export method\'\\"\\n                            [label]=\\"\'Set up export frequency\'\\"\\n                            [subLabel]=\\"\'Set a frequency based on how often you want your expenses in \' + brandingConfig.brandName + \' to be exported to QuickBooks Online\'\\"\\n                            [options]=\\"hours\\"\\n                            [isEmailPresent]=\\"true\\"\\n                            [formControllerName]=\\"\'exportScheduleFrequency\'\\"\\n                            [adminEmails]=\\"adminEmails\\">\\n                        </app-configuration-schedule-export>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\"tw-mb-16-px\\">\\n                <app-configuration-step-sub-header\\n                    [label]=\\"\'Other Preferences\'\\"\\n                    [subLabel]=\\"\'Based on your preference, you can choose whether you want to create any new records in QuickBooks Online from \' + brandingConfig.brandName + \'. (when there is no employee record found, or when the accounting period is closed)\'\\">\\n                </app-configuration-step-sub-header>\\n            </div>\\n            <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                <app-configuration-toggle-field\\n                    [form]=\\"advancedSettingForm\\"\\n                    [iconPath]=\\"\'calender\'\\"\\n                    [label]=\\"\'Post entries in the next open accounting period\'\\"\\n                    [subLabel]=\\"\'If the accounting period in QuickBooks Online is closed, the expenses from \' + brandingConfig.brandName + \' will be exported with a date stamp of the first day next open accounting period.\'\\"\\n                    [formControllerName]=\\"\'changeAccountingPeriod\'\\">\\n                </app-configuration-toggle-field>\\n\\n                <app-configuration-toggle-field *ngIf=\\"isAutoCreateVendorsFieldVisible()\\"\\n                    [form]=\\"advancedSettingForm\\"\\n                    [iconPath]=\\"\'building\'\\"\\n                    [label]=\\"\'Auto-Create Vendors\'\\"\\n                    [subLabel]=\\"\'While exporting reimbursable expenses from \' + brandingConfig.brandName + \', the integration will automatically create a vendor if a match does not exist in QuickBooks Online already.\'\\"\\n                    [formControllerName]=\\"\'autoCreateVendors\'\\">\\n                </app-configuration-toggle-field>\\n\\n                <app-configuration-select-field *ngIf=\\"isPaymentSyncFieldVisible()\\"\\n                    [form]=\\"advancedSettingForm\\"\\n                    [options]=\\"paymentSyncOptions\\"\\n                    [iconPath]=\\"\'synced\'\\"\\n                    [label]=\\"\'Auto Sync payment status for reimbursable expenses\'\\"\\n                    [subLabel]=\\"\'When expense is marked paid in \' + brandingConfig.brandName + \' the transaction in QuickBooks Online will be automatically be updated to Paid and vice versa.\'\\"\\n                    [placeholder]=\\"\'Select how payments should be synced for reimbursable expenses\'\\"\\n                    [formControllerName]=\\"\'paymentSync\'\\">\\n                </app-configuration-select-field>\\n\\n                <app-configuration-select-field *ngIf=\\"advancedSettingForm.value.paymentSync && advancedSettingForm.value.paymentSync === \'fyle_to_qbo\'\\"\\n                    [form]=\\"advancedSettingForm\\"\\n                    [destinationAttributes]=\\"billPaymentAccounts\\"\\n                    [optionLabel]=\\"\'name\'\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [mandatoryErrorListName]=\\"\'payment account\'\\"\\n                    [label]=\\"\'To which Payment account should the payment entries be posted?\'\\"\\n                    [subLabel]=\\"\'Once the payment for the reimbursable expense is complete in \' + brandingConfig.brandName + \', the payment entries will be posted to the selected Payment account in QuickBooks Online.\'\\"\\n                    [placeholder]=\\"\'Select a Payment Account\'\\"\\n                    [formControllerName]=\\"\'billPaymentAccount\'\\">\\n                </app-configuration-select-field>\\n\\n                <app-configuration-toggle-field *ngIf=\\"isSingleCreditLineJEFieldVisible()\\"\\n                    [form]=\\"advancedSettingForm\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [label]=\\"\'Create a single itemized offset credit entry for Journal\'\\"\\n                    [subLabel]=\\"\'Merge all Credits in a Journal to create a single entry.\'\\"\\n                    [formControllerName]=\\"\'singleCreditLineJE\'\\">\\n                </app-configuration-toggle-field>\\n\\n                <app-configuration-toggle-field *ngIf=\\"isAutoCreateMerchantsAsVendorsFieldVisible()\\"\\n                    [form]=\\"advancedSettingForm\\"\\n                    [iconPath]=\\"\'building\'\\"\\n                    [label]=\\"\'Auto-create Merchants as Vendors\'\\"\\n                    [subLabel]=\\"brandingConfig.brandName + \' will auto-create a new vendor in QuickBooks Online if a merchant added by an employee does not have a corresponding match in QuickBooks Online\'\\"\\n                    [formControllerName]=\\"\'autoCreateMerchantsAsVendors\'\\">\\n                </app-configuration-toggle-field>\\n            </div>\\n\\n            <div class=\\"tw-mb-16-px\\">\\n                <app-configuration-step-sub-header\\n                    [label]=\\"\'Customization\'\\"\\n                    [subLabel]=\\"\'In this section, you can customize the data that you\\\\\'d like to export from \' + brandingConfig.brandName + \' to QuickBooks Online You can choose what data points need to be exported and what shouldn\\\\\'t be.\'\\">\\n                </app-configuration-step-sub-header>\\n            </div>\\n            <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                <app-configuration-multi-select\\n                    [form]=\\"advancedSettingForm\\"\\n                    [isFieldMandatory]=\\"false\\"\\n                    [mandatoryErrorListName]=\\"\'Item level description\'\\"\\n                    [label]=\\"\'Set the line item-level Description Field in QuickBooks Online\'\\"\\n                    [subLabel]=\\"\'You can choose from a list of available data points that you\\\\\'d like to export to the description field in QuickBooks Online and re-order them as per your requirement.\'\\"\\n                    [options]=\\"defaultMemoOptions\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [placeholder]=\\"\'Set description\'\\"\\n                    [formControllerName]=\\"\'memoStructure\'\\">\\n                </app-configuration-multi-select>\\n                <div class=\\"preview-text\\">\\n                    <h4 class=\\"tw-mb-12-px\\">Preview of the Description Field</h4>\\n                    <div class=\\"preview-box\\">\\n                        {{memoPreviewText}}\\n                    </div>\\n                </div>\\n            </div>\\n\\n            \x3c!-- TODO: Skip export test --\x3e\\n            <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                <app-configuration-toggle-field\\n                    [form]=\\"advancedSettingForm\\"\\n                    [label]=\\"\'Skip export of specific expenses from \' + brandingConfig.brandName + \' to QuickBooks Online\'\\" \\n                    [subLabel]=\\"\'You could choose to skip expenses from \' + brandingConfig.brandName + \' to QuickBooks Online by setting up a conditional rule.\'\\"\\n                    [formControllerName]=\\"\'skipExport\'\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [redirectLink]=\\"skipExportRedirectLink\\">\\n                </app-configuration-toggle-field>\\n                <div *ngIf=\\"advancedSettingForm.value.skipExport\\">\\n                    <app-configuration-skip-export\\n                    [enableSkipExport]=\\"advancedSettingForm.value.skipExport\\"\\n                    [skipExportForm]=\\"skipExportForm\\"\\n                    [expenseFilter]=\\"expenseFilters\\"\\n                    [conditionFieldOptions]=\\"conditionFieldOptions\\"\\n                    (deleteSkipExportForm)=\\"deleteExpenseFilter($event)\\">\\n                    </app-configuration-skip-export>\\n                </div>\\n            </div>\\n        </div>\\n        <div>\\n            <app-configuration-step-footer\\n                [ctaText] = \\"!isSaveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\"\\n                [isButtonDisabled]=\\"!advancedSettingForm.valid\\"\\n                [showBackButton]=\\"true\\"\\n                (save)=\\"save()\\"\\n                (navigateToPreviousStep)=\\"navigateToPreviousStep()\\"></app-configuration-step-footer>\\n        </div>\\n    </form>\\n</div>\\n"},{"name":"QboBaseMappingComponent","id":"component-QboBaseMappingComponent-6406aea5f3c4086eb11361466e03b1c2664173c0c60ac7f7450a2f53057169a838676b61b93b5c5b7f83685727bc82c96feccfdb341a34af06763db97d20f777","file":"src/app/integrations/qbo/qbo-main/qbo-mapping/qbo-base-mapping/qbo-base-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-base-mapping","styleUrls":["./qbo-base-mapping.component.scss"],"styles":[],"templateUrl":["./qbo-base-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"AppName","defaultValue":"AppName","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":35},{"name":"cccExpenseObject","deprecated":false,"deprecationMessage":"","type":"QBOCorporateCreditCardExpensesObject | null","optional":false,"description":"","line":33},{"name":"destinationField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"destinationOptions","deprecated":false,"deprecationMessage":"","type":"DestinationAttribute[]","optional":false,"description":"","line":21},{"name":"employeeFieldMapping","deprecated":false,"deprecationMessage":"","type":"FyleField","optional":false,"description":"","line":23},{"name":"FyleField","defaultValue":"FyleField","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":37},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":19},{"name":"reimbursableExpenseObject","deprecated":false,"deprecationMessage":"","type":"QBOReimbursableExpensesObject | null","optional":false,"description":"","line":31},{"name":"showAutoMapEmployee","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":29},{"name":"sourceField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25}],"methodsClass":[{"name":"getDestinationField","args":[{"name":"workspaceGeneralSetting","type":"QBOWorkspaceGeneralSetting","deprecated":false,"deprecationMessage":""},{"name":"mappingSettings","type":"MappingSetting[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":57,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"workspaceGeneralSetting","type":"QBOWorkspaceGeneralSetting","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingSettings","type":"MappingSetting[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":67,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"triggerAutoMapEmployees","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":46,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { MappingSetting } from \'src/app/core/models/db/mapping-setting.model\';\\nimport { AccountingDisplayName, AccountingField, AppName, FyleField, QBOCorporateCreditCardExpensesObject, QBOReimbursableExpensesObject, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { QBOWorkspaceGeneralSetting } from \'src/app/core/models/qbo/db/workspace-general-setting.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\n\\n@Component({\\n  selector: \'app-qbo-base-mapping\',\\n  templateUrl: \'./qbo-base-mapping.component.html\',\\n  styleUrls: [\'./qbo-base-mapping.component.scss\']\\n})\\nexport class QboBaseMappingComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  destinationOptions: DestinationAttribute[];\\n\\n  employeeFieldMapping: FyleField;\\n\\n  sourceField: string;\\n\\n  destinationField: string;\\n\\n  showAutoMapEmployee: boolean;\\n\\n  reimbursableExpenseObject: QBOReimbursableExpensesObject | null;\\n\\n  cccExpenseObject: QBOCorporateCreditCardExpensesObject | null;\\n\\n  AppName = AppName;\\n\\n  FyleField = FyleField;\\n\\n  constructor(\\n    private route: ActivatedRoute,\\n    private mappingService: MappingService,\\n    private toastService: IntegrationsToastService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  triggerAutoMapEmployees(): void {\\n    this.isLoading = true;\\n    this.mappingService.triggerAutoMapEmployees().subscribe(() => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Auto mapping of employees may take few minutes\');\\n    }, () => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Something went wrong, please try again\');\\n    });\\n  }\\n\\n  private getDestinationField(workspaceGeneralSetting: QBOWorkspaceGeneralSetting, mappingSettings: MappingSetting[]): string {\\n    if (this.sourceField === FyleField.EMPLOYEE) {\\n      return workspaceGeneralSetting.employee_field_mapping;\\n    } else if (this.sourceField === FyleField.CATEGORY) {\\n      return AccountingField.ACCOUNT;\\n    }\\n\\n    return mappingSettings.find((setting) => setting.source_field === this.sourceField)?.destination_field || \'\';\\n  }\\n\\n  private setupPage(): void {\\n    this.sourceField = this.route.snapshot.params.source_field.toUpperCase();\\n    forkJoin([\\n      this.workspaceService.getWorkspaceGeneralSettings(),\\n      this.mappingService.getMappingSettings()\\n    ]).subscribe((responses) => {\\n      this.reimbursableExpenseObject = responses[0].reimbursable_expenses_object;\\n      this.cccExpenseObject = responses[0].corporate_credit_card_expenses_object;\\n      this.employeeFieldMapping = (responses[0].employee_field_mapping as unknown as FyleField);\\n      this.showAutoMapEmployee = responses[0].auto_map_employees ? true : false;\\n\\n      this.destinationField = this.getDestinationField(responses[0], responses[1].results);\\n\\n      let displayName;\\n      if (this.destinationField === AccountingField.ACCOUNT) {\\n        displayName = responses[0].import_items ? `${AccountingDisplayName.ITEM},${AccountingDisplayName.ACCOUNT}` : AccountingDisplayName.ACCOUNT;\\n      }\\n\\n      this.mappingService.getDestinationAttributes(this.destinationField, \'v1\', \'qbo\', undefined, undefined, displayName).subscribe((response: any) => {\\n        this.destinationOptions = response;\\n        this.isLoading = false;\\n      });\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.route.params.subscribe(() => {\\n      this.isLoading = true;\\n      this.setupPage();\\n    });\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-base-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":37,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<app-generic-mapping-v2 *ngIf=\\"!isLoading\\"\\n    [isLoading]=\\"isLoading\\"\\n    [destinationOptions]=\\"destinationOptions\\"\\n    [employeeFieldMapping]=\\"employeeFieldMapping\\"\\n    [sourceField]=\\"sourceField\\"\\n    [destinationField]=\\"destinationField\\"\\n    [showAutoMapEmployee]=\\"showAutoMapEmployee\\"\\n    [appName]=\\"AppName.QBO\\"\\n    [isCategoryMappingGeneric]=\\"sourceField === FyleField.CATEGORY ? true : false\\"\\n    (triggerAutoMapEmployee)=\\"triggerAutoMapEmployees()\\">\\n</app-generic-mapping-v2>\\n"},{"name":"QboCloneSettingsComponent","id":"component-QboCloneSettingsComponent-a27435c26fb42c216a49dc95b97eb28338749a0daa026ef76e0f767a43998c7ad7bf5d700cb10aebf9d593bd30bc9606a7770d3e2ef3b3969bb35ee0815b0ca1","file":"src/app/integrations/qbo/qbo-onboarding/qbo-clone-settings/qbo-clone-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-clone-settings","styleUrls":["./qbo-clone-settings.component.scss"],"styles":[],"templateUrl":["./qbo-clone-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"accountsPayables","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":77},{"name":"adminEmails","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"EmailOption[]","optional":false,"description":"","line":131},{"name":"advancedSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":53},{"name":"appName","defaultValue":"AppName.QBO","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":119},{"name":"autoMapEmployeeOptions","defaultValue":"QBOEmployeeSettingModel.getAutoMapEmployeeOptions()","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":45},{"name":"bankAccounts","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":73},{"name":"billPaymentAccounts","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":85},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":41},{"name":"cccAccounts","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":75},{"name":"cccExpenseGroupingDateOptions","defaultValue":"this.reimbursableExpenseGroupingDateOptions.concat()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":105},{"name":"cccExpenseStateOptions","defaultValue":"QBOExportSettingModel.getCCCExpenseStateOptions()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":97},{"name":"chartOfAccountTypesList","defaultValue":"QBOImportSettingModel.getChartOfAccountTypesList()","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":109},{"name":"cloneSetting","deprecated":false,"deprecationMessage":"","type":"QBOCloneSetting","optional":false,"description":"","line":117},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":149},{"name":"creditCardExportTypes","defaultValue":"QBOExportSettingModel.getCreditCardExportTypes()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":95},{"name":"customField","deprecated":false,"deprecationMessage":"","type":"ExpenseField","optional":false,"description":"","line":67},{"name":"customFieldControl","deprecated":false,"deprecationMessage":"","type":"AbstractControl","optional":false,"description":"","line":65},{"name":"customFieldForm","defaultValue":"this.formBuilder.group({\\n    attribute_type: [\'\', Validators.required],\\n    display_name: [\'\'],\\n    source_placeholder: [\'\', Validators.required]\\n  })","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":57},{"name":"customFieldOption","defaultValue":"ImportSettingsModel.getCustomFieldOption()","deprecated":false,"deprecationMessage":"","type":"ExpenseField[]","optional":false,"description":"","line":69},{"name":"customFieldType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":63},{"name":"defaultMemoOptions","defaultValue":"AdvancedSettingsModel.getDefaultMemoOptions()","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":127},{"name":"EmployeeFieldMapping","defaultValue":"EmployeeFieldMapping","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":145},{"name":"employeeMappingOptions","defaultValue":"EmployeeSettingModel.getEmployeeFieldMappingOptions()","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":43},{"name":"employeeSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":47},{"name":"expenseAccounts","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":81},{"name":"expenseGroupByOptions","defaultValue":"QBOExportSettingModel.getExpenseGroupByOptions()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":101},{"name":"expenseStateOptions","defaultValue":"QBOExportSettingModel.getReimbursableExpenseStateOptions()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":99},{"name":"exportSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":49},{"name":"fyleFields","deprecated":false,"deprecationMessage":"","type":"FyleField[]","optional":false,"description":"","line":115},{"name":"helperService","deprecated":false,"deprecationMessage":"","type":"HelperService","optional":false,"description":"","line":165,"modifierKind":[125]},{"name":"importSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":51},{"name":"InputType","defaultValue":"InputType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":151},{"name":"isImportItemsEnabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":91},{"name":"isImportMerchantsAllowed","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":87},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":39},{"name":"isPreviewDialogVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":71},{"name":"isSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":125},{"name":"isTaxGroupSyncAllowed","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":89},{"name":"isWarningDialogVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":141},{"name":"memoPreviewText","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":123},{"name":"memoStructure","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":121},{"name":"nameInJournalOptions","defaultValue":"QBOExportSettingModel.getNameInJournalOptions()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":107},{"name":"onboardingSteps","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":37},{"name":"paymentSyncOptions","defaultValue":"QBOAdvancedSettingModel.getPaymentSyncOptions()","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":129},{"name":"primaryButtonText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":137},{"name":"QBOCorporateCreditCardExpensesObject","defaultValue":"QBOCorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":147},{"name":"qboFields","deprecated":false,"deprecationMessage":"","type":"IntegrationField[]","optional":false,"description":"","line":113},{"name":"QBOReimbursableExpensesObject","defaultValue":"QBOReimbursableExpensesObject","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":143},{"name":"reimbursableExpenseGroupingDateOptions","defaultValue":"QBOExportSettingModel.getReimbursableExpenseGroupingDateOptions()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":103},{"name":"reimbursableExportTypes","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":93},{"name":"scheduleIntervalHours","defaultValue":"[...Array(24).keys()].map(day => {\\n    return {\\n      label: (day + 1).toString(),\\n      value: day + 1\\n    };\\n  })","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":153},{"name":"showCustomFieldDialog","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":55},{"name":"showNameInJournalOption","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":111},{"name":"taxCodes","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":83},{"name":"vendors","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":79},{"name":"warningContextText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":135},{"name":"warningEvent","deprecated":false,"deprecationMessage":"","type":"ConfigurationWarningEvent","optional":false,"description":"","line":139},{"name":"warningHeaderText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":133}],"methodsClass":[{"name":"acceptWarning","args":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":182,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"closeDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":""},{"name":"closeModel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":193,"deprecated":false,"deprecationMessage":""},{"name":"createMemoStructureWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":342,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"createTaxCodeWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":310,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initializeCustomFieldForm","args":[{"name":"shouldShowDialog","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":305,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"shouldShowDialog","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isAutoCreateMerchantsAsVendorsFieldVisible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":259,"deprecated":false,"deprecationMessage":""},{"name":"isAutoCreateVendorsFieldVisible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":247,"deprecated":false,"deprecationMessage":""},{"name":"isPaymentSyncFieldVisible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":251,"deprecated":false,"deprecationMessage":""},{"name":"isSingleCreditLineJEFieldVisible","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":255,"deprecated":false,"deprecationMessage":""},{"name":"navigateToPreviousStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":189,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":436,"deprecated":false,"deprecationMessage":""},{"name":"resetCloneSetting","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":173,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":232,"deprecated":false,"deprecationMessage":""},{"name":"saveFyleExpenseField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":206,"deprecated":false,"deprecationMessage":""},{"name":"setupAdvancedSettingFormWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":350,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupCustomWatchers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":281,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupImportSettingFormWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":321,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupOnboardingSteps","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":263,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":356,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showPreviewDialog","args":[{"name":"visible","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"visible","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"updateCCCExpenseGroupingDateOptions","args":[{"name":"selectedValue","type":"QBOCorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":293,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"selectedValue","type":"QBOCorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { brandingConfig } from \'src/app/branding/branding-config\';\\nimport { AdvancedSettingsModel, EmailOption } from \'src/app/core/models/common/advanced-settings.model\';\\nimport { EmployeeSettingModel } from \'src/app/core/models/common/employee-settings.model\';\\nimport { ExpenseField, ImportSettingsModel } from \'src/app/core/models/common/import-settings.model\';\\nimport { SelectFormOption } from \'src/app/core/models/common/select-form-option.model\';\\nimport { DefaultDestinationAttribute, DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { FyleField, IntegrationField } from \'src/app/core/models/db/mapping.model\';\\nimport { AppName, AutoMapEmployeeOptions, ConfigurationCta, ConfigurationWarningEvent, EmployeeFieldMapping, ExpenseGroupingFieldOption, InputType, NameInJournalEntry, QBOCorporateCreditCardExpensesObject, QBOField, QBOReimbursableExpensesObject, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { ConfigurationWarningOut } from \'src/app/core/models/misc/configuration-warning.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { QBOAdvancedSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model\';\\nimport { QBOCloneSetting, QBOCloneSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-clone-setting.model\';\\nimport { QBOEmployeeSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model\';\\nimport { QBOExportSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model\';\\nimport { QBOImportSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model\';\\nimport { QBOOnboardingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model\';\\nimport { CloneSettingService } from \'src/app/core/services/common/clone-setting.service\';\\nimport { ConfigurationService } from \'src/app/core/services/common/configuration.service\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { QboConnectorService } from \'src/app/core/services/qbo/qbo-configuration/qbo-connector.service\';\\nimport { QboExportSettingsService } from \'src/app/core/services/qbo/qbo-configuration/qbo-export-settings.service\';\\n\\n@Component({\\n  selector: \'app-qbo-clone-settings\',\\n  templateUrl: \'./qbo-clone-settings.component.html\',\\n  styleUrls: [\'./qbo-clone-settings.component.scss\']\\n})\\nexport class QboCloneSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = [];\\n\\n  isLoading: boolean = true;\\n\\n  brandingConfig = brandingConfig;\\n\\n  employeeMappingOptions: SelectFormOption[] = EmployeeSettingModel.getEmployeeFieldMappingOptions();\\n\\n  autoMapEmployeeOptions: SelectFormOption[] = QBOEmployeeSettingModel.getAutoMapEmployeeOptions();\\n\\n  employeeSettingForm: FormGroup;\\n\\n  exportSettingForm: FormGroup;\\n\\n  importSettingForm: FormGroup;\\n\\n  advancedSettingForm: FormGroup;\\n\\n  showCustomFieldDialog: boolean;\\n\\n  customFieldForm: FormGroup = this.formBuilder.group({\\n    attribute_type: [\'\', Validators.required],\\n    display_name: [\'\'],\\n    source_placeholder: [\'\', Validators.required]\\n  });\\n\\n  customFieldType: string;\\n\\n  customFieldControl: AbstractControl;\\n\\n  customField: ExpenseField;\\n\\n  customFieldOption: ExpenseField[] = ImportSettingsModel.getCustomFieldOption();\\n\\n  isPreviewDialogVisible: boolean;\\n\\n  bankAccounts: DefaultDestinationAttribute[];\\n\\n  cccAccounts: DefaultDestinationAttribute[];\\n\\n  accountsPayables: DefaultDestinationAttribute[];\\n\\n  vendors: DefaultDestinationAttribute[];\\n\\n  expenseAccounts: DefaultDestinationAttribute[];\\n\\n  taxCodes: DefaultDestinationAttribute[];\\n\\n  billPaymentAccounts: DefaultDestinationAttribute[];\\n\\n  isImportMerchantsAllowed: boolean;\\n\\n  isTaxGroupSyncAllowed: boolean;\\n\\n  isImportItemsEnabled: boolean;\\n\\n  reimbursableExportTypes: SelectFormOption[];\\n\\n  creditCardExportTypes = QBOExportSettingModel.getCreditCardExportTypes();\\n\\n  cccExpenseStateOptions = QBOExportSettingModel.getCCCExpenseStateOptions();\\n\\n  expenseStateOptions = QBOExportSettingModel.getReimbursableExpenseStateOptions();\\n\\n  expenseGroupByOptions = QBOExportSettingModel.getExpenseGroupByOptions();\\n\\n  reimbursableExpenseGroupingDateOptions = QBOExportSettingModel.getReimbursableExpenseGroupingDateOptions();\\n\\n  cccExpenseGroupingDateOptions = this.reimbursableExpenseGroupingDateOptions.concat();\\n\\n  nameInJournalOptions = QBOExportSettingModel.getNameInJournalOptions();\\n\\n  chartOfAccountTypesList: string[] = QBOImportSettingModel.getChartOfAccountTypesList();\\n\\n  showNameInJournalOption: boolean;\\n\\n  qboFields: IntegrationField[];\\n\\n  fyleFields: FyleField[];\\n\\n  cloneSetting: QBOCloneSetting;\\n\\n  appName: AppName = AppName.QBO;\\n\\n  memoStructure: string[] = [];\\n\\n  memoPreviewText: string = \'\';\\n\\n  isSaveInProgress: boolean;\\n\\n  defaultMemoOptions: string[] = AdvancedSettingsModel.getDefaultMemoOptions();\\n\\n  paymentSyncOptions: SelectFormOption[] = QBOAdvancedSettingModel.getPaymentSyncOptions();\\n\\n  adminEmails: EmailOption[] = [];\\n\\n  warningHeaderText: string;\\n\\n  warningContextText: string;\\n\\n  primaryButtonText: string;\\n\\n  warningEvent: ConfigurationWarningEvent;\\n\\n  isWarningDialogVisible: boolean;\\n\\n  QBOReimbursableExpensesObject = QBOReimbursableExpensesObject;\\n\\n  EmployeeFieldMapping = EmployeeFieldMapping;\\n\\n  QBOCorporateCreditCardExpensesObject = QBOCorporateCreditCardExpensesObject;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  InputType = InputType;\\n\\n  scheduleIntervalHours: SelectFormOption[] = [...Array(24).keys()].map(day => {\\n    return {\\n      label: (day + 1).toString(),\\n      value: day + 1\\n    };\\n  });\\n\\n  constructor(\\n    private cloneSettingService: CloneSettingService,\\n    private configurationService: ConfigurationService,\\n    private formBuilder: FormBuilder,\\n    private exportSettingService: QboExportSettingsService,\\n    public helperService: HelperService,\\n    private mappingService: MappingService,\\n    private qboConnectorService: QboConnectorService,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  resetCloneSetting(): void {\\n    this.warningHeaderText = \'Are you sure?\';\\n    this.warningContextText = `By resetting the configuration, you will be configuring each setting individually from the beginning.<br><br>Would you like to continue?`;\\n    this.primaryButtonText = \'Yes\';\\n    this.warningEvent = ConfigurationWarningEvent.RESET_CONFIGURATION;\\n\\n    this.isWarningDialogVisible = true;\\n  }\\n\\n  acceptWarning(data: ConfigurationWarningOut): void {\\n    this.isWarningDialogVisible = false;\\n    if (data.hasAccepted) {\\n      this.router.navigate([`/integrations/qbo/onboarding/employee_settings`]);\\n    }\\n  }\\n\\n  navigateToPreviousStep(): void {\\n    this.router.navigate([`/integrations/qbo/onboarding/connector`]);\\n  }\\n\\n  closeModel() {\\n    this.customFieldForm.reset();\\n    this.showCustomFieldDialog = false;\\n  }\\n\\n  showPreviewDialog(visible: boolean) {\\n    this.isPreviewDialogVisible = visible;\\n  }\\n\\n  closeDialog() {\\n    this.isPreviewDialogVisible = false;\\n  }\\n\\n  saveFyleExpenseField(): void {\\n    this.customField = {\\n      attribute_type: this.customFieldForm.value.attribute_type.split(\' \').join(\'_\').toUpperCase(),\\n      display_name: this.customFieldForm.value.attribute_type,\\n      source_placeholder: this.customFieldForm.value.source_placeholder,\\n      is_dependent: false\\n    };\\n\\n    if (this.customFieldControl) {\\n      this.fyleFields.pop();\\n      this.fyleFields.push(this.customField);\\n      this.fyleFields.push(this.customFieldOption[0]);\\n      const expenseField = {\\n        source_field: this.customField.attribute_type,\\n        destination_field: this.customFieldControl.value.destination_field,\\n        import_to_fyle: true,\\n        is_custom: true,\\n        source_placeholder: this.customField.source_placeholder\\n      };\\n      (this.importSettingForm.get(\'expenseFields\') as FormArray).controls.filter(field => field.value.destination_field === this.customFieldControl.value.destination_field)[0].patchValue(expenseField);\\n      ((this.importSettingForm.get(\'expenseFields\') as FormArray).controls.filter(field => field.value.destination_field === this.customFieldControl.value.destination_field)[0] as FormGroup).controls.import_to_fyle.disable();\\n      this.customFieldForm.reset();\\n      this.showCustomFieldDialog = false;\\n    }\\n  }\\n\\n  save(): void {\\n    this.isSaveInProgress = true;\\n    const cloneSettingPayload = QBOCloneSettingModel.constructPayload(this.employeeSettingForm, this.exportSettingForm, this.importSettingForm, this.advancedSettingForm);\\n\\n    this.cloneSettingService.postCloneSettings(cloneSettingPayload).subscribe((response) => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Cloned settings successfully\');\\n      this.router.navigate([`/integrations/qbo/onboarding/done`]);\\n    }, () => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Failed to clone settings\');\\n    });\\n\\n  }\\n\\n  isAutoCreateVendorsFieldVisible(): boolean {\\n    return this.cloneSetting.employee_mappings.workspace_general_settings.employee_field_mapping === EmployeeFieldMapping.VENDOR && this.cloneSetting.employee_mappings.workspace_general_settings.auto_map_employees !== null && this.cloneSetting.employee_mappings.workspace_general_settings.auto_map_employees !== AutoMapEmployeeOptions.EMPLOYEE_CODE;\\n  }\\n\\n  isPaymentSyncFieldVisible(): boolean {\\n    return this.cloneSetting.export_settings.workspace_general_settings.reimbursable_expenses_object === QBOReimbursableExpensesObject.BILL;\\n  }\\n\\n  isSingleCreditLineJEFieldVisible(): boolean {\\n    return this.cloneSetting.export_settings.workspace_general_settings.reimbursable_expenses_object === QBOReimbursableExpensesObject.JOURNAL_ENTRY || this.cloneSetting.export_settings.workspace_general_settings.corporate_credit_card_expenses_object === QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY;\\n  }\\n\\n  isAutoCreateMerchantsAsVendorsFieldVisible(): boolean {\\n    return !this.cloneSetting.import_settings.workspace_general_settings.import_vendors_as_merchants && (this.cloneSetting.export_settings.workspace_general_settings.corporate_credit_card_expenses_object === QBOCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE || this.cloneSetting.export_settings.workspace_general_settings.corporate_credit_card_expenses_object === QBOCorporateCreditCardExpensesObject.DEBIT_CARD_EXPENSE || this.cloneSetting.export_settings.workspace_general_settings.name_in_journal_entry === NameInJournalEntry.MERCHANT);\\n  }\\n\\n  private setupOnboardingSteps(): void {\\n    const onboardingSteps = new QBOOnboardingModel().getOnboardingSteps(\'Clone Settings\', this.workspaceService.getOnboardingState());\\n    this.onboardingSteps.push(onboardingSteps[0]);\\n    this.onboardingSteps.push({\\n      active: false,\\n      completed: false,\\n      number: 6,\\n      step: \'Clone Settings\',\\n      icon: \'advanced-setting\',\\n      route: \'/integrations/qbo/onboarding/clone_settings\',\\n      size: {\\n        height: \'20px\',\\n        width: \'20px\'\\n      },\\n      styleClasses: [\'step-name-export--text\', \'step-name-advanced--icon\']\\n    });\\n  }\\n\\n  private setupCustomWatchers(): void {\\n    if (this.exportSettingForm.value.creditCardExportType) {\\n      this.updateCCCExpenseGroupingDateOptions(this.exportSettingForm.value.creditCardExportType);\\n    }\\n\\n    this.exportSettingService.creditCardExportTypeChange.subscribe((selectedValue: QBOCorporateCreditCardExpensesObject) => {\\n      this.showNameInJournalOption = selectedValue === QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY ? true : false;\\n\\n      this.updateCCCExpenseGroupingDateOptions(selectedValue);\\n    });\\n  }\\n\\n  private updateCCCExpenseGroupingDateOptions(selectedValue: QBOCorporateCreditCardExpensesObject): void {\\n    if ([QBOCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE, QBOCorporateCreditCardExpensesObject.DEBIT_CARD_EXPENSE].includes(selectedValue)) {\\n      this.cccExpenseGroupingDateOptions = QBOExportSettingModel.getAdditionalCreditCardExpenseGroupingDateOptions();\\n      this.exportSettingForm.controls.creditCardExportGroup.setValue(ExpenseGroupingFieldOption.EXPENSE_ID);\\n      this.exportSettingForm.controls.creditCardExportGroup.disable();\\n    } else {\\n      this.cccExpenseGroupingDateOptions = this.reimbursableExpenseGroupingDateOptions.concat();\\n      this.helperService.clearValidatorAndResetValue(this.exportSettingForm, \'creditCardExportGroup\');\\n      this.helperService.enableFormField(this.exportSettingForm, \'creditCardExportGroup\');\\n    }\\n  }\\n\\n  private initializeCustomFieldForm(shouldShowDialog: boolean) {\\n    this.customFieldForm.reset();\\n    this.showCustomFieldDialog = shouldShowDialog;\\n  }\\n\\n  private createTaxCodeWatcher(): void {\\n    this.importSettingForm.controls.taxCode.valueChanges.subscribe((isTaxCodeEnabled) => {\\n      if (isTaxCodeEnabled) {\\n        this.importSettingForm.controls.defaultTaxCode.setValidators(Validators.required);\\n      } else {\\n        this.importSettingForm.controls.defaultTaxCode.clearValidators();\\n        this.importSettingForm.controls.defaultTaxCode.setValue(null);\\n      }\\n    });\\n  }\\n\\n  private setupImportSettingFormWatcher(): void {\\n    this.createTaxCodeWatcher();\\n    const expenseFieldArray = this.importSettingForm.get(\'expenseFields\') as FormArray;\\n    expenseFieldArray.controls.forEach((control:any) => {\\n      control.valueChanges.subscribe((value: { source_field: string; destination_field: string; }) => {\\n        if (value.source_field === \'custom_field\') {\\n          this.initializeCustomFieldForm(true);\\n          this.customFieldType = \'\';\\n          this.customFieldControl = control;\\n          this.customFieldControl.patchValue({\\n            source_field: \'\',\\n            destination_field: control.value.destination_field,\\n            import_to_fyle: control.value.import_to_fyle,\\n            is_custom: control.value.is_custom,\\n            source_placeholder: null\\n          });\\n        }\\n      });\\n    });\\n  }\\n\\n  private createMemoStructureWatcher(): void {\\n    this.memoStructure = this.cloneSetting.advanced_configurations.workspace_general_settings.memo_structure;\\n    this.memoPreviewText = AdvancedSettingsModel.formatMemoPreview(this.memoStructure, this.defaultMemoOptions);\\n    this.advancedSettingForm.controls.memoStructure.valueChanges.subscribe((memoChanges) => {\\n       this.memoPreviewText = AdvancedSettingsModel.formatMemoPreview(memoChanges, this.defaultMemoOptions);\\n    });\\n  }\\n\\n  private setupAdvancedSettingFormWatcher() {\\n    this.createMemoStructureWatcher();\\n\\n    QBOAdvancedSettingModel.setConfigurationSettingValidatorsAndWatchers(this.advancedSettingForm);\\n  }\\n\\n  private setupPage(): void {\\n    this.setupOnboardingSteps();\\n    const destinationAttributes = [\\n      QBOField.BANK_ACCOUNT, QBOField.CREDIT_CARD_ACCOUNT, QBOField.ACCOUNTS_PAYABLE, QBOField.VENDOR, QBOField.TAX_CODE\\n    ];\\n\\n    forkJoin([\\n      this.cloneSettingService.getCloneSettings(),\\n      this.mappingService.getGroupedDestinationAttributes(destinationAttributes, \'v1\', \'qbo\'),\\n      this.mappingService.getFyleFields(\'v1\'),\\n      this.qboConnectorService.getQBOCredentials(),\\n      this.configurationService.getAdditionalEmails()\\n    ]).subscribe(([cloneSetting, destinationAttributes, fyleFieldsResponse, qboCredentials, adminEmails]) => {\\n      this.cloneSetting = cloneSetting;\\n\\n      // Employee Settings\\n      this.employeeSettingForm = QBOEmployeeSettingModel.parseAPIResponseToFormGroup(cloneSetting.employee_mappings);\\n\\n      // Export Settings\\n      this.bankAccounts = destinationAttributes.BANK_ACCOUNT.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.cccAccounts = destinationAttributes.CREDIT_CARD_ACCOUNT.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.accountsPayables = destinationAttributes.ACCOUNTS_PAYABLE.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.vendors = destinationAttributes.VENDOR.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.expenseAccounts = this.bankAccounts.concat(this.cccAccounts);\\n\\n      this.isImportItemsEnabled = cloneSetting.import_settings.workspace_general_settings.import_items;\\n\\n      this.reimbursableExportTypes = QBOExportSettingModel.getReimbursableExportTypeOptions(cloneSetting.employee_mappings.workspace_general_settings.employee_field_mapping);\\n      this.showNameInJournalOption = cloneSetting.export_settings.workspace_general_settings?.corporate_credit_card_expenses_object === QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY ? true : false;\\n      this.exportSettingForm = QBOExportSettingModel.mapAPIResponseToFormGroup(cloneSetting.export_settings, cloneSetting.employee_mappings.workspace_general_settings.employee_field_mapping);\\n\\n      this.helperService.addExportSettingFormValidator(this.exportSettingForm);\\n\\n      const [exportSettingValidatorRule, exportModuleRule] = QBOExportSettingModel.getValidators();\\n\\n      this.helperService.setConfigurationSettingValidatorsAndWatchers(exportSettingValidatorRule, this.exportSettingForm);\\n\\n      if (cloneSetting.export_settings.workspace_general_settings.reimbursable_expenses_object) {\\n        this.exportSettingService.setupDynamicValidators(this.exportSettingForm, exportModuleRule[0], cloneSetting.export_settings.workspace_general_settings.reimbursable_expenses_object);\\n      }\\n\\n      if (cloneSetting.export_settings.workspace_general_settings.corporate_credit_card_expenses_object) {\\n        this.exportSettingService.setupDynamicValidators(this.exportSettingForm, exportModuleRule[1], cloneSetting.export_settings.workspace_general_settings.corporate_credit_card_expenses_object);\\n      }\\n\\n      this.exportSettingService.setExportTypeValidatorsAndWatchers(exportModuleRule, this.exportSettingForm);\\n\\n      this.setupCustomWatchers();\\n\\n\\n      // Import Settings\\n      this.qboFields = QBOImportSettingModel.getQBOFields();\\n      this.taxCodes = destinationAttributes.TAX_CODE.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.isImportMerchantsAllowed = !cloneSetting.advanced_configurations.workspace_general_settings.auto_create_merchants_as_vendors;\\n\\n      if (qboCredentials && qboCredentials.country !== \'US\') {\\n        this.isTaxGroupSyncAllowed = true;\\n      }\\n\\n      this.importSettingForm = QBOImportSettingModel.mapAPIResponseToFormGroup(cloneSetting.import_settings);\\n      this.fyleFields = fyleFieldsResponse;\\n      this.fyleFields.push({ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', is_dependent: true });\\n      this.setupImportSettingFormWatcher();\\n      this.initializeCustomFieldForm(false);\\n\\n      // Advanced Settings\\n      this.adminEmails = adminEmails;\\n      if (this.cloneSetting.advanced_configurations.workspace_schedules?.additional_email_options && this.cloneSetting.advanced_configurations.workspace_schedules?.additional_email_options.length > 0) {\\n        this.adminEmails = this.adminEmails.concat(this.cloneSetting.advanced_configurations.workspace_schedules?.additional_email_options);\\n      }\\n\\n      this.billPaymentAccounts = destinationAttributes.BANK_ACCOUNT.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.advancedSettingForm = QBOAdvancedSettingModel.mapAPIResponseToFormGroup(this.cloneSetting.advanced_configurations, false, this.adminEmails);\\n\\n      this.setupAdvancedSettingFormWatcher();\\n\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".clone-setting {\\n    &--field-section {\\n        @apply tw-px-24-px;\\n    }\\n\\n    &--field {\\n        @apply tw-p-24-px;\\n    }\\n\\n    &--export-setting-header {\\n        @apply tw-flex tw-justify-between;\\n    }\\n\\n    &--dependent-field {\\n        @apply tw-pt-24-px;\\n    }\\n}\\n\\n:host ::ng-deep .p-inputswitch.p-inputswitch-checked .p-inputswitch-slider::after {\\n    content: \'Yes\';\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: absolute;\\n    left: 8px;\\n    bottom: 1px;\\n    font-size: 12px;\\n    color: white;\\n    font-weight: 500;\\n}\\n\\n:host ::ng-deep .p-inputswitch:not(.p-inputswitch-checked) .p-inputswitch-slider::after {\\n    content: \'No\';\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: absolute;\\n    left: 24px;\\n    bottom: 1px;\\n    font-size: 12px;\\n    color: white;\\n    font-weight: 500;\\n}\\n","styleUrl":"./qbo-clone-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"cloneSettingService","type":"CloneSettingService","deprecated":false,"deprecationMessage":""},{"name":"configurationService","type":"ConfigurationService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"exportSettingService","type":"QboExportSettingsService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"qboConnectorService","type":"QboConnectorService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":158,"jsdoctags":[{"name":"cloneSettingService","type":"CloneSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"configurationService","type":"ConfigurationService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportSettingService","type":"QboExportSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qboConnectorService","type":"QboConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<app-onboarding-steppers [isCloneSettingView]=\\"true\\" [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-pt-80-px\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"clone-setting configuration--contents tw-border-1-px tw-border-box-color tw-mt-24-px tw-pb-48-px\\">\\n    <app-clone-setting-header [headerText]=\\"\'Employee Mapping\'\\" [subHeaderText]=\\"\'Choose appropriate representation of your Employees in QuickBooks Online\'\\"></app-clone-setting-header>\\n\\n    <div class=\\"clone-setting--field-section\\">\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'user-two\'\\"\\n                [label]=\\"\'How are your Employees represented in QuickBooks Online?\'\\"\\n                [options]=\\"employeeMappingOptions\\"\\n                [placeholder]=\\"\'Select representation\'\\"\\n                [form]=\\"employeeSettingForm\\"\\n                [isFieldMandatory]=\\"true\\"\\n                [formControllerName]=\\"\'employeeMapping\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'Select how you represent your employees in QuickBooks Online. This would help to export the expenses from \' + brandingConfig.brandName + \' to the correct employee/vendor record in QuickBooks Online.\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'question-square-outline\'\\"\\n                [label]=\\"\'How should Employees in \' + brandingConfig.brandName + \' be matched to Employees/Vendors in QuickBooks Online?\'\\"\\n                [options]=\\"autoMapEmployeeOptions\\"\\n                [placeholder]=\\"\'Select representation\'\\"\\n                [form]=\\"employeeSettingForm\\"\\n                [isFieldMandatory]=\\"false\\"\\n                [formControllerName]=\\"\'autoMapEmployee\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'Automatically map the employees in \' + brandingConfig.brandName + \' to their corresponding records in QuickBooks Online based on a unique parameter.\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n    </div>\\n\\n    <app-clone-setting-header [headerText]=\\"\'Export Settings\'\\" [subHeaderText]=\\"\'In this section, you can configure how and when expenses from \' + brandingConfig.brandName + \' should be exported to QuickBooks Online.\'\\"></app-clone-setting-header>\\n    <div [formGroup]=\\"exportSettingForm\\" class=\\"clone-setting--field-section\\">\\n        <div class=\\"clone-setting--field\\">\\n            <div class=\\"clone-setting--export-setting-header\\">\\n                <div class=\\"tw-flex tw-items-center\\">\\n                    Export Reimbursable Expenses\\n                    <svg-icon-sprite width=\\"16px\\" height=\\"16px\\" src=\\"info-circle-fill\\" class=\\"tw-text-placeholder tw-ml-8-px\\" [pTooltip]=\\"\'Enable this to export the reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any out-of-pocket expenses will not be exported to QuickBooks Online\'\\" tooltipPosition=\\"top\\"></svg-icon-sprite>\\n                </div>\\n                <div>\\n                    <p-inputSwitch formControlName=\\"reimbursableExpense\\"></p-inputSwitch>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\"exportSettingForm.value?.reimbursableExpense\\" class=\\"clone-setting--field\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'list\'\\"\\n                [label]=\\"\'How should the expenses be exported?\'\\"\\n                [options]=\\"reimbursableExportTypes\\"\\n                [placeholder]=\\"\'Choose the type of transaction in QuickBooks Online to export your \' + brandingConfig.brandName +\' expenses\'\\"\\n                [form]=\\"exportSettingForm\\"\\n                [isFieldMandatory]=\\"false\\"\\n                [formControllerName]=\\"\'reimbursableExportType\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'Choose the type of transaction in QuickBooks Online to export your \' + brandingConfig.brandName +\' expenses\'\\">\\n            </app-clone-setting-field>\\n\\n            <div class=\\"clone-setting--dependent-field\\">\\n                <app-clone-setting-field *ngIf=\\"helperService.isFieldRequired(exportSettingForm, \'bankAccount\')\\"\\n                    [label]=\\"\'To which Bank Account should the \' + (exportSettingForm.value.reimbursableExportType | snakeCaseToSpaceCase | titlecase) + \' be posted to?\'\\"\\n                    [options]=\\"bankAccounts\\"\\n                    [placeholder]=\\"\'Select bank account\'\\"\\n                    [form]=\\"exportSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'bankAccount\'\\"\\n                    [dropdownDisplayKey]=\\"\'name\'\\"\\n                    [tooltipText]=\\"\'All the offset entry in the Journal will be posted to the selected Bank account\'\\">\\n                </app-clone-setting-field>\\n\\n                <app-clone-setting-field *ngIf=\\"helperService.isFieldRequired(exportSettingForm, \'qboExpenseAccount\')\\"\\n                    [label]=\\"\'To which Expense Account should the \' + (exportSettingForm.value.reimbursableExportType | snakeCaseToSpaceCase | titlecase) + \' be posted to?\'\\"\\n                    [options]=\\"expenseAccounts\\"\\n                    [placeholder]=\\"\'Select Expense account\'\\"\\n                    [form]=\\"exportSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'qboExpenseAccount\'\\"\\n                    [dropdownDisplayKey]=\\"\'name\'\\"\\n                    [tooltipText]=\\"\'The expenses exported will be added to the selected Expense Payment Account\'\\">\\n                </app-clone-setting-field>\\n\\n                <app-clone-setting-field *ngIf=\\"(exportSettingForm.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.BILL || (exportSettingForm.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.JOURNAL_ENTRY && exportSettingForm.value.employeeMapping === EmployeeFieldMapping.VENDOR))\\"\\n                    [label]=\\"\'To which Accounts Payable account should the \' + (exportSettingForm.value.reimbursableExportType | snakeCaseToSpaceCase | titlecase) + \' be posted to?\'\\"\\n                    [options]=\\"accountsPayables\\"\\n                    [placeholder]=\\"\'Select accounts payable\'\\"\\n                    [form]=\\"exportSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'accountsPayable\'\\"\\n                    [dropdownDisplayKey]=\\"\'name\'\\"\\n                    [tooltipText]=\\"\'The integration will post the offset credit entry in \' + (exportSettingForm.value.reimbursableExportType | snakeCaseToSpaceCase | titlecase) + \' to the selected Accounts Payable Account.\'\\">\\n                </app-clone-setting-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field *ngIf=\\"exportSettingForm.value.reimbursableExportType\\"\\n                [iconSource]=\\"\'question-square-outline\'\\"\\n                [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                [options]=\\"expenseStateOptions\\"\\n                [placeholder]=\\"\'Select export state\'\\"\\n                [form]=\\"exportSettingForm\\"\\n                [isFieldMandatory]=\\"true\\"\\n                [formControllerName]=\\"\'expenseState\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'You can export expenses either when they\\\\\'re awaiting payment after approval (Processing) or when the payment has been settled (Closed).\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field *ngIf=\\"exportSettingForm.value.reimbursableExportType\\"\\n                [iconSource]=\\"\'question-square-outline\'\\"\\n                [label]=\\"\'How should the expenses be grouped?\'\\"\\n                [options]=\\"expenseGroupByOptions\\"\\n                [placeholder]=\\"\'Select expense grouping\'\\"\\n                [form]=\\"exportSettingForm\\"\\n                [isFieldMandatory]=\\"true\\"\\n                [formControllerName]=\\"\'reimbursableExportGroup\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'Expense can either be exported as single line items (Expense) or as a grouped report with multiple line items (Expense Report)\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field *ngIf=\\"exportSettingForm.value.reimbursableExportType\\"\\n                [iconSource]=\\"\'calendar\'\\"\\n                [label]=\\"\'Set the \' + (exportSettingForm.value.reimbursableExportType | snakeCaseToSpaceCase | titlecase) + \' date as\'\\"\\n                [options]=\\"reimbursableExpenseGroupingDateOptions\\"\\n                [placeholder]=\\"\'Select export date\'\\"\\n                [form]=\\"exportSettingForm\\"\\n                [isFieldMandatory]=\\"true\\"\\n                [formControllerName]=\\"\'reimbursableExportDate\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'The selected type of date will reflect in the expenses exported from \' + brandingConfig.brandName + \' to QuickBooks Online.\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n    </div>\\n\\n    <div [formGroup]=\\"exportSettingForm\\" class=\\"clone-setting--field-section\\">\\n        <div class=\\"clone-setting--field\\">\\n            <div class=\\"clone-setting--export-setting-header\\">\\n                <div class=\\"tw-flex tw-items-center\\">\\n                    Export Corporate Credit Card Expenses\\n                    <svg-icon-sprite width=\\"16px\\" height=\\"16px\\" src=\\"info-circle-fill\\" class=\\"tw-text-placeholder tw-ml-8-px\\" [pTooltip]=\\"\'Enable this to export the Non-Reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any out-of-pocket expenses will not be exported to QuickBooks Online\'\\" tooltipPosition=\\"top\\"></svg-icon-sprite>\\n                </div>\\n                <div>\\n                    <p-inputSwitch formControlName=\\"creditCardExpense\\"></p-inputSwitch>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div *ngIf=\\"exportSettingForm.value?.creditCardExpense\\" class=\\"clone-setting--field\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'list\'\\"\\n                [label]=\\"\'How should the expenses be exported?\'\\"\\n                [options]=\\"creditCardExportTypes\\"\\n                [placeholder]=\\"\'Choose the type of transaction in QuickBooks Online to export your \' + brandingConfig.brandName +\' expenses\'\\"\\n                [form]=\\"exportSettingForm\\"\\n                [isFieldMandatory]=\\"false\\"\\n                [formControllerName]=\\"\'creditCardExportType\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'Select expense export type\'\\">\\n            </app-clone-setting-field>\\n\\n            <div class=\\"clone-setting--dependent-field\\">\\n                <app-clone-setting-field *ngIf=\\"showNameInJournalOption\\"\\n                    [label]=\\"\'Name in Journal Entry (CCC)\'\\"\\n                    [options]=\\"nameInJournalOptions\\"\\n                    [placeholder]=\\"\'Select a name\'\\"\\n                    [form]=\\"exportSettingForm\\"\\n                    [isFieldMandatory]=\\"false\\"\\n                    [formControllerName]=\\"\'nameInJournalEntry\'\\"\\n                    [dropdownDisplayKey]=\\"\'label\'\\"\\n                    [tooltipText]=\\"\'You can select either the \\\\\'Merchant Name\\\\\' or the \\\\\'Employee Name\\\\\' to appear in the \\\\\'Name\\\\\' field of your Journal Entries\'\\">\\n                </app-clone-setting-field>\\n\\n                <app-clone-setting-field *ngIf=\\"helperService.isFieldRequired(exportSettingForm, \'defaultCCCAccount\')\\"\\n                    [label]=\\"\'Set Default Credit Card Account as\'\\"\\n                    [options]=\\"expenseAccounts\\"\\n                    [placeholder]=\\"\'Select Default Credit Card Account\'\\"\\n                    [form]=\\"exportSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'defaultCCCAccount\'\\"\\n                    [dropdownDisplayKey]=\\"\'name\'\\"\\n                    [tooltipText]=\\"\'Post all your company corporate card transactions to a default credit card account.\'\\">\\n                </app-clone-setting-field>\\n\\n                <app-clone-setting-field *ngIf=\\"helperService.isFieldRequired(exportSettingForm, \'defaultDebitCardAccount\')\\"\\n                    [label]=\\"\'Set Default Debit Card Account as\'\\"\\n                    [options]=\\"accountsPayables\\"\\n                    [placeholder]=\\"\'Select Default Debit Card Account\'\\"\\n                    [form]=\\"exportSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'defaultDebitCardAccount\'\\"\\n                    [dropdownDisplayKey]=\\"\'name\'\\"\\n                    [tooltipText]=\\"\'Post all your company debit card transactions to a default debit card account.\'\\">\\n                </app-clone-setting-field>\\n\\n                <app-clone-setting-field *ngIf=\\"helperService.isFieldRequired(exportSettingForm, \'defaultCreditCardVendor\')\\"\\n                    [label]=\\"\'Set default corporate Card Vendor as\'\\"\\n                    [options]=\\"vendors\\"\\n                    [placeholder]=\\"\'Select default corporate card vendor\'\\"\\n                    [form]=\\"exportSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'defaultCreditCardVendor\'\\"\\n                    [dropdownDisplayKey]=\\"\'name\'\\"\\n                    [tooltipText]=\\"\'The default vendor will apply to all corporate card transactions upon export\'\\">\\n                </app-clone-setting-field>\\n\\n                <app-clone-setting-field *ngIf=\\"(exportSettingForm.value.creditCardExportType === QBOCorporateCreditCardExpensesObject.BILL) && !((exportSettingForm.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.BILL || (exportSettingForm.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.JOURNAL_ENTRY && exportSettingForm.value.employeeMapping === EmployeeFieldMapping.VENDOR)))\\"\\n                    [label]=\\"\'To which Accounts Payable account should the \' + (exportSettingForm.value.creditCardExportType | snakeCaseToSpaceCase | titlecase) + \' be posted to?\'\\"\\n                    [options]=\\"accountsPayables\\"\\n                    [placeholder]=\\"\'Select accounts payable\'\\"\\n                    [form]=\\"exportSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'accountsPayable\'\\"\\n                    [dropdownDisplayKey]=\\"\'name\'\\"\\n                    [tooltipText]=\\"\'The integration will post the offset credit entry in \' + (exportSettingForm.value.creditCardExportType | snakeCaseToSpaceCase | titlecase) + \' to the selected Accounts Payable Account.\'\\">\\n                </app-clone-setting-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field *ngIf=\\"exportSettingForm.value.creditCardExportType\\"\\n                [iconSource]=\\"\'question-square-outline\'\\"\\n                [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                [options]=\\"expenseStateOptions\\"\\n                [placeholder]=\\"\'Select CCC expense state\'\\"\\n                [form]=\\"exportSettingForm\\"\\n                [isFieldMandatory]=\\"true\\"\\n                [formControllerName]=\\"\'cccExpenseState\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'You could choose to export CCC expenses when they have been approved and are awaiting payment clearance, OR simply when they have been paid out\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field *ngIf=\\"exportSettingForm.value.creditCardExportType\\"\\n                [iconSource]=\\"\'question-square-outline\'\\"\\n                [label]=\\"\'How should the expenses be grouped?\'\\"\\n                [options]=\\"expenseGroupByOptions\\"\\n                [placeholder]=\\"\'Select expense grouping\'\\"\\n                [form]=\\"exportSettingForm\\"\\n                [isFieldMandatory]=\\"true\\"\\n                [formControllerName]=\\"\'creditCardExportGroup\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'Expense can either be exported as single line items (Expense) or as a grouped report with multiple line items (Expense Report)\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field *ngIf=\\"exportSettingForm.value.creditCardExportType\\"\\n                [iconSource]=\\"\'calendar\'\\"\\n                [label]=\\"\'Set the \' + (exportSettingForm.value.creditCardExportType | snakeCaseToSpaceCase | titlecase) + \' date as\'\\"\\n                [options]=\\"cccExpenseGroupingDateOptions\\"\\n                [placeholder]=\\"\'Select export date\'\\"\\n                [form]=\\"exportSettingForm\\"\\n                [isFieldMandatory]=\\"true\\"\\n                [formControllerName]=\\"\'creditCardExportDate\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'The selected date will reflect in the corporate card expenses exported to QuickBooks Online.\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n    </div>\\n\\n    <app-clone-setting-header [headerText]=\\"\'Import Settings\'\\" [subHeaderText]=\\"\'In this section, you can configure how the dimensions you import from QuickBooks Online should be mapped in \' + brandingConfig.brandName\\"></app-clone-setting-header>\\n\\n    <div class=\\"clone-setting--field-section\\">\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'arrow-tail-down\'\\"\\n                [label]=\\"\'Import Charts of Accounts from QuickBooks Online\'\\"\\n                [form]=\\"importSettingForm\\"\\n                [formControllerName]=\\"\'importCategories\'\\"\\n                [inputType]=\\"InputType.TOGGLE\\"\\n                [tooltipText]=\\"\'Imported account will be available as Categories in \' + brandingConfig.brandName\\">\\n            </app-clone-setting-field>\\n\\n            <div class=\\"clone-setting--dependent-field\\">\\n                <app-clone-setting-field *ngIf=\\"importSettingForm.value.importCategories\\"\\n                    [label]=\\"\'Select the accounts from QuickBooks Online to import as categories\'\\"\\n                    [options]=\\"chartOfAccountTypesList\\"\\n                    [placeholder]=\\"\'Select Chart of Accouts\'\\"\\n                    [form]=\\"importSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'chartOfAccountTypes\'\\"\\n                    [disabledOption]=\\"\'Expense\'\\"\\n                    [inputType]=\\"InputType.MULTI_SELECT\\"\\n                    [tooltipText]=\\"\'By default expense will be selected. Open the dropdown to select more as per your requirements\'\\">\\n                </app-clone-setting-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\" *ngIf=\\"cloneSetting.export_settings.workspace_general_settings.reimbursable_expenses_object !== QBOReimbursableExpensesObject.JOURNAL_ENTRY && cloneSetting.export_settings.workspace_general_settings.corporate_credit_card_expenses_object !== QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'arrow-tail-down\'\\"\\n                [label]=\\"\'Import Products/Services from QuickBooks Online\'\\"\\n                [form]=\\"importSettingForm\\"\\n                [formControllerName]=\\"\'importItems\'\\"\\n                [inputType]=\\"InputType.TOGGLE\\"\\n                [tooltipText]=\\"\'Products/services from QuickBooks Online will be imported as Categories in \' + brandingConfig.brandName\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\" *ngIf=\\"isTaxGroupSyncAllowed\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'arrow-tail-down\'\\"\\n                [label]=\\"\'Import Tax from QuickBooks Online\'\\"\\n                [form]=\\"importSettingForm\\"\\n                [formControllerName]=\\"\'taxCode\'\\"\\n                [inputType]=\\"InputType.TOGGLE\\"\\n                [tooltipText]=\\"\'The imported Tax codes from QuickBooks Online will be set as Tax group in \' + brandingConfig.brandName + \'. This will be a selectable field while creating an expense.\'\\">\\n            </app-clone-setting-field>\\n\\n            <div class=\\"clone-setting--dependent-field\\" *ngIf=\\"importSettingForm.value.taxCode\\">\\n                <app-clone-setting-field *ngIf=\\"importSettingForm.value.importCategories\\"\\n                    [label]=\\"\'Select Default Tax Code\'\\"\\n                    [options]=\\"taxCodes\\"\\n                    [placeholder]=\\"\'Select tax code\'\\"\\n                    [form]=\\"importSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'defaultTaxCode\'\\"\\n                    [dropdownDisplayKey]=\\"\'name\'\\"\\n                    [tooltipText]=\\"\'If an expense from \' + brandingConfig.brandName + \' does not contain any tax group information during export, the default tax code will be used.\'\\">\\n                </app-clone-setting-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\" *ngIf=\\"isImportMerchantsAllowed\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'arrow-tail-down\'\\"\\n                [label]=\\"\'Import Vendors from QuickBooks Online\'\\"\\n                [form]=\\"importSettingForm\\"\\n                [formControllerName]=\\"\'importVendorsAsMerchants\'\\"\\n                [inputType]=\\"InputType.TOGGLE\\"\\n                [tooltipText]=\\"\'Vendors from QuickBooks Online will be imported as merchants in \' + brandingConfig.brandName + \' and will be a selectable field while creating an expense.\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <app-configuration-import-field\\n            [form]=\\"importSettingForm\\"\\n            [appName]=\\"appName\\"\\n            [accountingFieldOptions]=\\"qboFields\\"\\n            [fyleFieldOptions]=\\"fyleFields\\"\\n            [isDestinationFixedImport]=\\"true\\"\\n            [isCloneSettingView]=\\"true\\">\\n        </app-configuration-import-field>\\n    </div>\\n\\n    <app-clone-setting-header [headerText]=\\"\'Advanced Settings\'\\" [subHeaderText]=\\"\'In this section,  you can configure settings to automate and customize your expense exports\'\\"></app-clone-setting-header>\\n    <div class=\\"clone-setting--field-section\\">\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'calendar\'\\"\\n                [label]=\\"\'Schedule automatic export\'\\"\\n                [form]=\\"advancedSettingForm\\"\\n                [formControllerName]=\\"\'exportSchedule\'\\"\\n                [inputType]=\\"InputType.TOGGLE\\"\\n                [tooltipText]=\\"\'Set up a schedule to frequently automate the export of expenses from \' + brandingConfig.brandName + \' to QuickBooks Online\'\\">\\n            </app-clone-setting-field>\\n\\n            <div class=\\"clone-setting--dependent-field tw-flex\\" *ngIf=\\"advancedSettingForm.value.exportSchedule\\">\\n                <app-clone-setting-field class=\\"tw-flex-auto\\"\\n                    [label]=\\"\'Set up export frequency\'\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [options]=\\"scheduleIntervalHours\\"\\n                    [form]=\\"advancedSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'exportScheduleFrequency\'\\"\\n                    [dropdownDisplayKey]=\\"\'label\'\\"\\n                    [additionalClasses]=\\"\'dropdown-size-schedule\'\\"\\n                    [tooltipText]=\\"\'Set a frequency based on how often you want your expenses in \' + brandingConfig.brandName + \' to be exported to QuickBooks Online\'\\">\\n                </app-clone-setting-field>\\n                <div class=\\"tw-ml-16-px\\">\\n                    <input type=\\"text\\" class=\\"tw-border-box-color !tw-w-100-px !tw-h-40-px !tw-bg-disabled-bg-color tw-text-slightly-normal-text-color\\" pInputText disabled [value]=\\"advancedSettingForm.value.exportScheduleFrequency > 1 ? \'Hours\' : \'Hour\'\\">\\n                </div>\\n            </div>\\n\\n            <div class=\\"clone-setting--dependent-field tw-flex tw-justify-between\\" *ngIf=\\"advancedSettingForm.value.exportSchedule\\">\\n                <p class=\\"tw-pl-40-px tw-py-2-px tw-text-slightly-normal-text-color tw-text-14-px tw-flex tw-items-center\\">\\n                    Send Error Notification to\\n                    <svg-icon-sprite width=\\"16px\\" height=\\"16px\\" src=\\"info-circle-fill\\" class=\\"tw-text-placeholder tw-ml-8-px\\" [pTooltip]=\\"\'Select or add an email address to notify upon import failure or integration error.\'\\" tooltipPosition=\\"top\\"></svg-icon-sprite>\\n                </p>\\n                <app-email-multi-select-field\\n                    [form]=\\"advancedSettingForm\\"\\n                    [label]=\\"\'Send Error Notification to\'\\"\\n                    [isFieldMandatory]=\\"false\\"\\n                    [mandatoryErrorListName]=\\"\'email for error notification\'\\"\\n                    [subLabel]=\\"\'Select or add an email address to notify upon import failure or integration error.\'\\"\\n                    [options]=\\"adminEmails\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [placeholder]=\\"\'Select email address\'\\"\\n                    [formControllerName]=\\"\'email\'\\"\\n                    [isCloneSettingView]=\\"true\\">\\n                </app-email-multi-select-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'calendar\'\\"\\n                [label]=\\"\'Post entries in the next open accounting period\'\\"\\n                [form]=\\"advancedSettingForm\\"\\n                [formControllerName]=\\"\'changeAccountingPeriod\'\\"\\n                [inputType]=\\"InputType.TOGGLE\\"\\n                [tooltipText]=\\"\'If the accounting period in QuickBooks Online is closed, the expenses from \' + brandingConfig.brandName + \' will be exported with a date stamp of the first day next open accounting period.\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\" *ngIf=\\"isAutoCreateVendorsFieldVisible()\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'user-plus\'\\"\\n                [label]=\\"\'Auto-Create Vendors\'\\"\\n                [form]=\\"advancedSettingForm\\"\\n                [formControllerName]=\\"\'autoCreateVendors\'\\"\\n                [inputType]=\\"InputType.TOGGLE\\"\\n                [tooltipText]=\\"\'While exporting reimbursable expenses from \' + brandingConfig.brandName + \', the integration will automatically create a vendor if a match does not exist in QuickBooks Online already.\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\" *ngIf=\\"isPaymentSyncFieldVisible()\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'arrow-rotate\'\\"\\n                [label]=\\"\'Auto Sync payment status for reimbursable expenses\'\\"\\n                [form]=\\"advancedSettingForm\\"\\n                [formControllerName]=\\"\'paymentSync\'\\"\\n                [options]=\\"paymentSyncOptions\\"\\n                [placeholder]=\\"\'Select how payments should be synced for reimbursable expenses\'\\"\\n                [dropdownDisplayKey]=\\"\'label\'\\"\\n                [tooltipText]=\\"\'When expense is marked paid in \' + brandingConfig.brandName + \' the transaction in QuickBooks Online will be automatically be updated to Paid and vice versa.\'\\">\\n            </app-clone-setting-field>\\n\\n            <div class=\\"clone-setting--dependent-field\\" *ngIf=\\"advancedSettingForm.value.paymentSync && advancedSettingForm.value.paymentSync === \'fyle_to_qbo\'\\">\\n                <app-clone-setting-field\\n                    [label]=\\"\'To which Payment account should the payment entries be posted?\'\\"\\n                    [options]=\\"billPaymentAccounts\\"\\n                    [placeholder]=\\"\'Select a Payment Account\'\\"\\n                    [form]=\\"advancedSettingForm\\"\\n                    [isFieldMandatory]=\\"true\\"\\n                    [formControllerName]=\\"\'billPaymentAccount\'\\"\\n                    [dropdownDisplayKey]=\\"\'name\'\\"\\n                    [tooltipText]=\\"\'Once the payment for the reimbursable expense is complete in \' + brandingConfig.brandName + \', the payment entries will be posted to the selected Payment account in QuickBooks Online.\'\\">\\n                </app-clone-setting-field>\\n            </div>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\" *ngIf=\\"isSingleCreditLineJEFieldVisible()\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'list\'\\"\\n                [label]=\\"\'Create a single itemized offset credit entry for Journal\'\\"\\n                [form]=\\"advancedSettingForm\\"\\n                [formControllerName]=\\"\'singleCreditLineJE\'\\"\\n                [inputType]=\\"InputType.TOGGLE\\"\\n                [tooltipText]=\\"\'Merge all Credits in a Journal to create a single entry.\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\" *ngIf=\\"isAutoCreateMerchantsAsVendorsFieldVisible()\\">\\n            <app-clone-setting-field\\n                [iconSource]=\\"\'user-plus\'\\"\\n                [label]=\\"\'Auto-create Merchants as Vendors\'\\"\\n                [form]=\\"advancedSettingForm\\"\\n                [formControllerName]=\\"\'autoCreateMerchantsAsVendors\'\\"\\n                [inputType]=\\"InputType.TOGGLE\\"\\n                [tooltipText]=\\"brandingConfig.brandName + \' will auto-create a new vendor in QuickBooks Online if a merchant added by an employee does not have a corresponding match in QuickBooks Online\'\\">\\n            </app-clone-setting-field>\\n        </div>\\n\\n        <div class=\\"clone-setting--field\\">\\n            <div class=\\"tw-flex tw-justify-between\\">\\n                <div class=\\"tw-flex\\">\\n                    <svg-icon-sprite width=\\"24px\\" height=\\"24px\\" src=\\"list\\" class=\\"tw-text-menu-inactive-text-color\\"></svg-icon-sprite>\\n                    <p class=\\"tw-flex tw-items-center tw-pl-16-px tw-py-2-px tw-text-slightly-normal-text-color tw-text-14-px\\">\\n                        Set the Description Field in QuickBooks Online\\n                        <svg-icon-sprite width=\\"16px\\" height=\\"16px\\" src=\\"info-circle-fill\\" class=\\"tw-text-placeholder tw-ml-8-px\\" [pTooltip]=\\"\'You can choose from a list of available data points that you\\\\\'d like to export to the description field in QuickBooks Online and re-order them as per your requirement.\'\\" tooltipPosition=\\"top\\"></svg-icon-sprite>\\n                    </p>\\n                </div>\\n                <app-configuration-multi-select\\n                    [form]=\\"advancedSettingForm\\"\\n                    [isFieldMandatory]=\\"false\\"\\n                    [mandatoryErrorListName]=\\"\'Item level description\'\\"\\n                    [label]=\\"\'Set the line item-level Description Field in QuickBooks Online\'\\"\\n                    [subLabel]=\\"\'You can choose from a list of available data points that you\\\\\'d like to export to the description field in QuickBooks Online and re-order them as per your requirement.\'\\"\\n                    [options]=\\"defaultMemoOptions\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [placeholder]=\\"\'Set description\'\\"\\n                    [formControllerName]=\\"\'memoStructure\'\\"\\n                    [isCloneSettingView]=\\"true\\">\\n                </app-configuration-multi-select>\\n            </div>\\n            <div class=\\"clone-setting--dependent-field tw-text-14-px tw-font-400 tw-text-faded-text-color !tw-pl-40-px\\">\\n                <h4 class=\\"tw-mb-12-px\\">Preview of the Description Field</h4>\\n                <div class=\\"preview-box\\">\\n                    {{memoPreviewText}}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <app-configuration-step-footer [showResetButton]=\\"true\\" [showBackButton]=\\"true\\" [ctaText] = \\"!isSaveInProgress ? (ConfigurationCtaText.SAVE_AND_CONTINUE) : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" (resetCloneSetting)=\\"resetCloneSetting()\\" (navigateToPreviousStep)=\\"navigateToPreviousStep()\\" [isButtonDisabled]=\\"!employeeSettingForm.valid || !exportSettingForm.valid || !importSettingForm.valid || !advancedSettingForm.valid\\"></app-configuration-step-footer>\\n</div>\\n\\n<app-configuration-confirmation-dialog\\n    (warningAccepted)=\\"acceptWarning($event)\\"\\n    [isWarningVisible]=\\"isWarningDialogVisible\\"\\n    [event]=\\"warningEvent\\"\\n    [headerText]=\\"warningHeaderText\\"\\n    [contextText]=\\"warningContextText\\"\\n    [iconPath]=\\"\'assets/icons/alert_dialog.svg\'\\"\\n    [confirmBtnText]=\\"primaryButtonText\\"\\n    [showSecondaryCTA]=\\"true\\">\\n</app-configuration-confirmation-dialog>\\n\\n<app-configuration-custom-field-creation-dialog\\n    [customFieldForm]=\\"customFieldForm\\"\\n    [showCustomFieldCreationDialog]=\\"showCustomFieldDialog\\"\\n    (saveCustomFieldFn)=\\"saveFyleExpenseField()\\"\\n    (closeModelFn)=\\"closeModel()\\">\\n</app-configuration-custom-field-creation-dialog>\\n\\n<app-preview-dialog *ngIf=\\"isPreviewDialogVisible\\"\\n    [isPreviewDialogVisible]=\\"true\\"\\n    [iconPath]=\\"\'assets/illustrations/sageIntacct/IntacctImportSettings.png\'\\" (closeDialog)=\\"closeDialog()\\"\\n    [header]=\\"\'Preview\'\\">\\n</app-preview-dialog>\\n"},{"name":"QboCompleteExportLogComponent","id":"component-QboCompleteExportLogComponent-bb618ad31f81ffbafb752170645ba7d8fb79f9b7e4ac8dfa07a10f13dd756f92dc3e59589e6dc5b76a663e2a4f82809df6dc28ae1c96dfebf9aaebfd8d029747","file":"src/app/integrations/qbo/qbo-main/qbo-export-log/qbo-complete-export-log/qbo-complete-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-complete-export-log","styleUrls":["./qbo-complete-export-log.component.scss"],"styles":[],"templateUrl":["./qbo-complete-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"accountingExports","deprecated":false,"deprecationMessage":"","type":"AccountingExportList[]","optional":false,"description":"","line":41},{"name":"appName","defaultValue":"AppName.QBO","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":23},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":31},{"name":"dateOptions","defaultValue":"AccountingExportModel.getDateOptions()","deprecated":false,"deprecationMessage":"","type":"DateFilter[]","optional":false,"description":"","line":33},{"name":"expenses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":45},{"name":"exportLogForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":37},{"name":"filteredAccountingExports","deprecated":false,"deprecationMessage":"","type":"AccountingExportList[]","optional":false,"description":"","line":43},{"name":"isCalendarVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":39},{"name":"isDateSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":47},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":21},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":27},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":29},{"name":"org_id","defaultValue":"this.userService.getUserProfile().org_id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":49,"modifierKind":[123]},{"name":"selectedDateFilter","deprecated":false,"deprecationMessage":"","type":"SelectedDateFilter | null","optional":false,"description":"","line":35},{"name":"totalCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":25}],"methodsClass":[{"name":"getAccountingExports","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":85,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAccountingExportsAndSetupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleSimpleSearch","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":63,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":""},{"name":"openExpenseinFyle","args":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup } from \'@angular/forms\';\\nimport { AccountingExportList, AccountingExportModel } from \'src/app/core/models/db/accounting-export.model\';\\nimport { ExpenseGroup, ExpenseGroupResponse } from \'src/app/core/models/db/expense-group.model\';\\nimport { AppName, PaginatorPage, TaskLogState } from \'src/app/core/models/enum/enum.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { DateFilter, SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\nimport { ExportLogService } from \'src/app/core/services/common/export-log.service\';\\nimport { PaginatorService } from \'src/app/core/services/common/paginator.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { UserService } from \'src/app/core/services/misc/user.service\';\\n\\n@Component({\\n  selector: \'app-qbo-complete-export-log\',\\n  templateUrl: \'./qbo-complete-export-log.component.html\',\\n  styleUrls: [\'./qbo-complete-export-log.component.scss\']\\n})\\nexport class QboCompleteExportLogComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  appName: AppName = AppName.QBO;\\n\\n  totalCount: number = 0;\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  currentPage: number = 1;\\n\\n  dateOptions: DateFilter[] = AccountingExportModel.getDateOptions();\\n\\n  selectedDateFilter: SelectedDateFilter | null;\\n\\n  exportLogForm: FormGroup;\\n\\n  isCalendarVisible: boolean;\\n\\n  accountingExports: AccountingExportList [];\\n\\n  filteredAccountingExports: AccountingExportList [];\\n\\n  expenses: Expense[] = [];\\n\\n  isDateSelected: boolean = false;\\n\\n  private org_id: string = this.userService.getUserProfile().org_id;\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private exportLogService: ExportLogService,\\n    private windowService: WindowService,\\n    private paginatorService: PaginatorService,\\n    private userService: UserService\\n  ) { }\\n\\n  openExpenseinFyle(expense_id: string) {\\n    this.windowService.openInNewTab(AccountingExportModel.getFyleExpenseUrl(expense_id));\\n  }\\n\\n  public handleSimpleSearch(event: any) {\\n    const query = event.target.value.toLowerCase();\\n\\n    this.filteredAccountingExports = this.accountingExports.filter((group: AccountingExportList) => {\\n      return AccountingExportModel.getfilteredAccountingExports(query, group);\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    this.limit = limit;\\n    this.currentPage = 1;\\n    this.getAccountingExports(limit, this.offset);\\n  }\\n\\n  pageChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.offset = offset;\\n    this.currentPage = Math.ceil(offset / this.limit) + 1;\\n    this.getAccountingExports(this.limit, offset);\\n  }\\n\\n  private getAccountingExports(limit: number, offset:number) {\\n    this.isLoading = true;\\n\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.EXPORT_LOG, limit);\\n    }\\n\\n    this.exportLogService.getExpenseGroups(TaskLogState.COMPLETE, limit, offset, this.selectedDateFilter).subscribe((accountingExportResponse: ExpenseGroupResponse) => {\\n      if (!this.isDateSelected) {\\n        this.totalCount = accountingExportResponse.count;\\n      }\\n      const accountingExports: AccountingExportList[] = accountingExportResponse.results.map((accountingExport: ExpenseGroup) =>\\n        AccountingExportModel.parseExpenseGroupAPIResponseToExportLog(accountingExport, this.org_id)\\n      );\\n      this.filteredAccountingExports = accountingExports;\\n      this.accountingExports = [...this.filteredAccountingExports];\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  private setupForm(): void {\\n    this.exportLogForm = this.formBuilder.group({\\n      searchOption: [\'\'],\\n      dateRange: [null],\\n      start: [\'\'],\\n      end: [\'\']\\n    });\\n\\n    this.exportLogForm.controls.dateRange.valueChanges.subscribe((dateRange) => {\\n      const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n      if (dateRange) {\\n        this.selectedDateFilter = {\\n          startDate: dateRange.startDate,\\n          endDate: dateRange.endDate\\n        };\\n\\n        this.getAccountingExports(paginator.limit, paginator.offset);\\n      } else {\\n        this.selectedDateFilter = null;\\n        this.getAccountingExports(paginator.limit, paginator.offset);\\n      }\\n    });\\n  }\\n\\n  private getAccountingExportsAndSetupPage(): void {\\n    this.setupForm();\\n\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n\\n    this.getAccountingExports(paginator.limit, paginator.offset);\\n  }\\n\\n  ngOnInit(): void {\\n    this.getAccountingExportsAndSetupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-complete-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""}],"line":49,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-shadow-app-card tw-bg-white tw-border-1-px tw-border-separator\\">\\n    <div>\\n        <app-export-log-filter *ngIf=\\"totalCount > 0 || selectedDateFilter\\"\\n            [exportLogForm]=\\"exportLogForm\\"\\n            [dateOptions]=\\"dateOptions\\"\\n            (handleSimpleSearch)=\\"handleSimpleSearch($event)\\">\\n        </app-export-log-filter>\\n\\n        <app-export-log-table\\n            [filteredExpenseGroups]=\\"filteredAccountingExports\\"\\n            [appName]=\\"appName\\"\\n            [isExportLogTable]=\\"true\\"\\n            [isDashboardFailed]=\\"false\\">\\n        </app-export-log-table>\\n\\n        <div *ngIf=\\"filteredAccountingExports.length > 0\\" class=\\"tw-p-24-px tw-border-t-1-px\\">\\n            <app-paginator\\n                [dropDownValue]=\\"limit\\"\\n                [page]=\\"currentPage\\"\\n                [totalCount]=\\"totalCount\\"\\n                (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\"\\n                (pageOffsetChangeEvent)=\\"pageChanges($event)\\">\\n            </app-paginator>\\n        </div>\\n\\n        <app-zero-state-with-illustration *ngIf=\\"!filteredAccountingExports.length && !selectedDateFilter && totalCount > 0\\"\\n            [mainText]=\\"\'Sorry, no results found!\'\\"\\n            [subText]=\\"\'We could not find what you were looking for. Kindly check the keywords again.\'\\">\\n        </app-zero-state-with-illustration>\\n    </div>\\n\\n    <app-zero-state-with-illustration *ngIf=\\"totalCount === 0\\"\\n        [mainText]=\\"\'No records to show yet!\'\\"\\n        [subText]=\\"\'All your successful exports and their details will be stored here.\'\\">\\n    </app-zero-state-with-illustration>\\n</div>\\n"},{"name":"QboComponent","id":"component-QboComponent-cd5559dbf79bdbe6b8ea56f8ea184c46685bfd7669aa7153ae5db399498f3b60a3b792b7aae98741b7f411637ecd0931b24cf1492d33ef1df05444a8da2c6b5d","file":"src/app/integrations/qbo/qbo.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo","styleUrls":["./qbo.component.scss"],"styles":[],"templateUrl":["./qbo.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"user","defaultValue":"this.userService.getUserProfile()","deprecated":false,"deprecationMessage":"","type":"MinimalUser","optional":false,"description":"","line":20},{"name":"windowReference","deprecated":false,"deprecationMessage":"","type":"Window","optional":false,"description":"","line":26},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"QBOWorkspace","optional":false,"description":"","line":22}],"methodsClass":[{"name":"navigate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":80,"deprecated":false,"deprecationMessage":""},{"name":"setupWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"storeWorkspaceAndNavigate","args":[{"name":"workspace","type":"QBOWorkspace","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"workspace","type":"QBOWorkspace","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MinimalUser } from \'src/app/core/models/db/user.model\';\\nimport { AppUrl, QBOOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { QBOWorkspace } from \'src/app/core/models/qbo/db/qbo-workspace.model\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsUserService } from \'src/app/core/services/common/integrations-user.service\';\\nimport { StorageService } from \'src/app/core/services/common/storage.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { QboHelperService } from \'src/app/core/services/qbo/qbo-core/qbo-helper.service\';\\n\\n@Component({\\n  selector: \'app-qbo\',\\n  templateUrl: \'./qbo.component.html\',\\n  styleUrls: [\'./qbo.component.scss\']\\n})\\nexport class QboComponent implements OnInit {\\n\\n  user: MinimalUser = this.userService.getUserProfile();\\n\\n  workspace: QBOWorkspace;\\n\\n  isLoading: boolean = true;\\n\\n  windowReference: Window;\\n\\n  constructor(\\n    private helperService: HelperService,\\n    private qboHelperService: QboHelperService,\\n    private router: Router,\\n    private storageService: StorageService,\\n    private userService: IntegrationsUserService,\\n    private workspaceService: WorkspaceService,\\n    private windowService: WindowService\\n  ) {\\n    this.windowReference = this.windowService.nativeWindow;\\n  }\\n\\n  private navigate(): void {\\n    const pathName = this.windowReference.location.pathname;\\n    if (pathName === \'/integrations/qbo\') {\\n      const onboardingStateComponentMap = {\\n        [QBOOnboardingState.CONNECTION]: \'/integrations/qbo/onboarding/landing\',\\n        [QBOOnboardingState.MAP_EMPLOYEES]: \'/integrations/qbo/onboarding/employee_settings\',\\n        [QBOOnboardingState.EXPORT_SETTINGS]: \'/integrations/qbo/onboarding/export_settings\',\\n        [QBOOnboardingState.IMPORT_SETTINGS]: \'/integrations/qbo/onboarding/import_settings\',\\n        [QBOOnboardingState.ADVANCED_CONFIGURATION]: \'/integrations/qbo/onboarding/advanced_settings\',\\n        [QBOOnboardingState.CLONE_SETTINGS]: \'/integrations/qbo/onboarding/clone_settings\',\\n        [QBOOnboardingState.COMPLETE]: \'/integrations/qbo/main\'\\n      };\\n      this.router.navigateByUrl(onboardingStateComponentMap[this.workspace.onboarding_state]);\\n    }\\n  }\\n\\n  private storeWorkspaceAndNavigate(workspace: QBOWorkspace): void {\\n    this.workspace = workspace;\\n    this.storageService.set(\'workspaceId\', this.workspace.id);\\n    this.storageService.set(\'onboarding-state\', this.workspace.onboarding_state);\\n    this.qboHelperService.syncFyleDimensions().subscribe();\\n    this.qboHelperService.syncQBODimensions().subscribe();\\n    this.isLoading = false;\\n    this.navigate();\\n  }\\n\\n  private setupWorkspace(): void {\\n    this.helperService.setBaseApiURL(AppUrl.QBO);\\n    this.workspaceService.getWorkspace(this.user.org_id).subscribe((workspaces: QBOWorkspace[]) => {\\n      if (workspaces.length) {\\n        this.storeWorkspaceAndNavigate(workspaces[0]);\\n      } else {\\n        this.workspaceService.postWorkspace().subscribe((workspace: QBOWorkspace) => {\\n          this.storeWorkspaceAndNavigate(workspace);\\n        });\\n      }\\n    }\\n    );\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupWorkspace();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"qboHelperService","type":"QboHelperService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"IntegrationsUserService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":26,"jsdoctags":[{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qboHelperService","type":"QboHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"IntegrationsUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet *ngIf=\\"!isLoading\\"></router-outlet>"},{"name":"QboConfigurationComponent","id":"component-QboConfigurationComponent-fcb4c2275f89ebef07401ac99468b0ca181a2adaf7f7ec40b016fe1efa6e42f759b40c9da536677168b9fbf1fd1346ae5edc6294a41c34ec65af712fc2bd4e16","file":"src/app/integrations/qbo/qbo-main/qbo-configuration/qbo-configuration.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-configuration","styleUrls":["./qbo-configuration.component.scss"],"styles":[],"templateUrl":["./qbo-configuration.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","defaultValue":"this.modules[0]","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":18},{"name":"modules","defaultValue":"[\\n    {label: \'Map Employees\', routerLink: \'/integrations/qbo/main/configuration/employee_settings\'},\\n    {label: \'Export Settings\', routerLink: \'/integrations/qbo/main/configuration/export_settings\'},\\n    {label: \'Import Settings\', routerLink: \'/integrations/qbo/main/configuration/import_settings\'},\\n    {label: \'Advanced Settings\', routerLink: \'/integrations/qbo/main/configuration/advanced_settings\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":11}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":22,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { MenuItem } from \'primeng/api\';\\n\\n@Component({\\n  selector: \'app-qbo-configuration\',\\n  templateUrl: \'./qbo-configuration.component.html\',\\n  styleUrls: [\'./qbo-configuration.component.scss\']\\n})\\nexport class QboConfigurationComponent implements OnInit {\\n\\n  modules: MenuItem[] = [\\n    {label: \'Map Employees\', routerLink: \'/integrations/qbo/main/configuration/employee_settings\'},\\n    {label: \'Export Settings\', routerLink: \'/integrations/qbo/main/configuration/export_settings\'},\\n    {label: \'Import Settings\', routerLink: \'/integrations/qbo/main/configuration/import_settings\'},\\n    {label: \'Advanced Settings\', routerLink: \'/integrations/qbo/main/configuration/advanced_settings\'}\\n  ];\\n\\n  activeModule: MenuItem = this.modules[0];\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-configuration.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":18},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-py-40-px\\">\\n    <div class=\\"tw-px-110-px\\">\\n        <app-sub-menu [activeModule]=\\"activeModule\\" [modules]=\\"modules\\" ></app-sub-menu>\\n    </div>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n"},{"name":"QboDashboardComponent","id":"component-QboDashboardComponent-8fd88d62a468c75c6d987947569b0c42223f3b6a3af2e5d1d2ec48c8c1adbd90dc0e0da0e49ec9f55d57bb4f4df26946c29424813816467cf2625b49a1188444","file":"src/app/integrations/qbo/qbo-main/qbo-dashboard/qbo-dashboard.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-dashboard","styleUrls":["./qbo-dashboard.component.scss"],"styles":[],"templateUrl":["./qbo-dashboard.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"accountingExportSummary","deprecated":false,"deprecationMessage":"","type":"AccountingExportSummary | null","optional":false,"description":"","line":33},{"name":"accountingExportType","defaultValue":"[QBOTaskLogType.FETCHING_EXPENSE, QBOTaskLogType.CREATING_BILL, QBOTaskLogType.CREATING_EXPENSE, QBOTaskLogType.CREATING_CHECK, QBOTaskLogType.CREATING_CREDIT_CARD_PURCHASE, QBOTaskLogType.CREATING_JOURNAL_ENTRY, QBOTaskLogType.CREATING_CREDIT_CARD_CREDIT, QBOTaskLogType.CREATING_DEBIT_CARD_EXPENSE]","deprecated":false,"deprecationMessage":"","type":"QBOTaskLogType[]","optional":false,"description":"","line":50},{"name":"appName","defaultValue":"AppName.QBO","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":21},{"name":"AppUrl","defaultValue":"AppUrl","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54},{"name":"destinationFieldMap","deprecated":false,"deprecationMessage":"","type":"DestinationFieldMap","optional":false,"description":"","line":39},{"name":"errors","deprecated":false,"deprecationMessage":"","type":"AccountingGroupedErrors","optional":false,"description":"","line":37},{"name":"exportableAccountingExportIds","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"number[]","optional":false,"description":"","line":27},{"name":"exportProgressPercentage","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":31},{"name":"failedExpenseGroupCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":29},{"name":"getAccountingExportSummary$","defaultValue":"this.accountingExportService.getAccountingExportSummary(\'v1\')","deprecated":false,"deprecationMessage":"","type":"Observable<AccountingExportSummary>","optional":false,"description":"","line":48},{"name":"getExportErrors$","defaultValue":"this.dashboardService.getExportErrors(\'v1\')","deprecated":false,"deprecationMessage":"","type":"Observable<Error[]>","optional":false,"description":"","line":46},{"name":"groupedErrorStat","defaultValue":"{\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: null,\\n    [AccountingErrorType.CATEGORY_MAPPING]: null\\n  }","deprecated":false,"deprecationMessage":"","type":"AccountingGroupedErrorStat","optional":false,"description":"","line":41},{"name":"isExportInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":25},{"name":"isImportInProgress","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":23},{"name":"isImportItemsEnabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":52},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":19},{"name":"processedCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":35}],"methodsClass":[{"name":"export","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":139,"deprecated":false,"deprecationMessage":""},{"name":"pollExportStatus","args":[{"name":"exportableAccountingExportIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"exportableAccountingExportIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":102,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Observable, catchError, forkJoin, from, interval, of, switchMap, takeWhile } from \'rxjs\';\\nimport { AccountingExportSummary, AccountingExportSummaryModel } from \'src/app/core/models/db/accounting-export-summary.model\';\\nimport { DashboardModel, DestinationFieldMap } from \'src/app/core/models/db/dashboard.model\';\\nimport { AccountingGroupedErrorStat, AccountingGroupedErrors, Error, ErrorResponse } from \'src/app/core/models/db/error.model\';\\nimport { AccountingErrorType, AppName, AppUrl, QBOTaskLogType, TaskLogState } from \'src/app/core/models/enum/enum.model\';\\nimport { QBOTaskLog, QBOTaskResponse } from \'src/app/core/models/qbo/db/qbo-task-log.model\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\nimport { DashboardService } from \'src/app/core/services/common/dashboard.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\n\\n@Component({\\n  selector: \'app-qbo-dashboard\',\\n  templateUrl: \'./qbo-dashboard.component.html\',\\n  styleUrls: [\'./qbo-dashboard.component.scss\']\\n})\\nexport class QboDashboardComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  appName: AppName = AppName.QBO;\\n\\n  isImportInProgress: boolean = true;\\n\\n  isExportInProgress: boolean = false;\\n\\n  exportableAccountingExportIds: number[] = [];\\n\\n  failedExpenseGroupCount: number = 0;\\n\\n  exportProgressPercentage: number = 0;\\n\\n  accountingExportSummary: AccountingExportSummary | null;\\n\\n  processedCount: number = 0;\\n\\n  errors: AccountingGroupedErrors;\\n\\n  destinationFieldMap : DestinationFieldMap;\\n\\n  groupedErrorStat: AccountingGroupedErrorStat = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: null,\\n    [AccountingErrorType.CATEGORY_MAPPING]: null\\n  };\\n\\n  getExportErrors$: Observable<Error[]> = this.dashboardService.getExportErrors(\'v1\');\\n\\n  getAccountingExportSummary$: Observable<AccountingExportSummary> = this.accountingExportService.getAccountingExportSummary(\'v1\');\\n\\n  accountingExportType: QBOTaskLogType[] = [QBOTaskLogType.FETCHING_EXPENSE, QBOTaskLogType.CREATING_BILL, QBOTaskLogType.CREATING_EXPENSE, QBOTaskLogType.CREATING_CHECK, QBOTaskLogType.CREATING_CREDIT_CARD_PURCHASE, QBOTaskLogType.CREATING_JOURNAL_ENTRY, QBOTaskLogType.CREATING_CREDIT_CARD_CREDIT, QBOTaskLogType.CREATING_DEBIT_CARD_EXPENSE];\\n\\n  isImportItemsEnabled: boolean;\\n\\n  AppUrl = AppUrl;\\n\\n  constructor(\\n    private accountingExportService: AccountingExportService,\\n    private dashboardService: DashboardService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  export() {\\n    this.isExportInProgress = true;\\n    this.dashboardService.triggerAccountingExport().subscribe(() => {\\n      this.pollExportStatus(this.exportableAccountingExportIds);\\n    });\\n  }\\n\\n  private pollExportStatus(exportableAccountingExportIds: number[] = []): void {\\n    interval(3000).pipe(\\n      switchMap(() => from(this.dashboardService.getAllTasks([TaskLogState.ENQUEUED, TaskLogState.IN_PROGRESS, TaskLogState.FAILED], exportableAccountingExportIds, this.accountingExportType))),\\n      takeWhile((response: QBOTaskResponse) =>\\n        response.results.filter(task =>\\n          (task.status === TaskLogState.IN_PROGRESS || task.status === TaskLogState.ENQUEUED)\\n        ).length > 0, true\\n      )\\n    ).subscribe((res: QBOTaskResponse) => {\\n      this.processedCount = res.results.filter(task => (task.status !== TaskLogState.IN_PROGRESS && task.status !== TaskLogState.ENQUEUED)).length;\\n      this.exportProgressPercentage = Math.round((this.processedCount / this.exportableAccountingExportIds.length) * 100);\\n\\n      if (res.results.filter(task => (task.status === TaskLogState.IN_PROGRESS || task.status === TaskLogState.ENQUEUED)).length === 0) {\\n        forkJoin([\\n          this.getExportErrors$,\\n          this.getAccountingExportSummary$\\n        ]).subscribe(responses => {\\n          this.errors = DashboardModel.parseAPIResponseToGroupedError(responses[0]);\\n          this.groupedErrorStat = {\\n            EMPLOYEE_MAPPING: null,\\n            CATEGORY_MAPPING: null\\n          };\\n          this.accountingExportSummary = AccountingExportSummaryModel.parseAPIResponseToAccountingSummary(responses[1]);\\n        });\\n\\n        this.failedExpenseGroupCount = res.results.filter(task => task.status === TaskLogState.FAILED || task.status === TaskLogState.FATAL).length;\\n        this.isExportInProgress = false;\\n        this.exportProgressPercentage = 0;\\n        this.processedCount = 0;\\n      }\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    forkJoin([\\n      this.getExportErrors$,\\n      this.getAccountingExportSummary$.pipe(catchError(() => of(null))),\\n      this.dashboardService.getAllTasks([TaskLogState.ENQUEUED, TaskLogState.IN_PROGRESS, TaskLogState.FAILED], undefined, this.accountingExportType),\\n      this.workspaceService.getWorkspaceGeneralSettings()\\n    ]).subscribe((responses) => {\\n      this.errors = DashboardModel.parseAPIResponseToGroupedError(responses[0]);\\n      this.isImportItemsEnabled = responses[3].import_items;\\n      if (responses[1]) {\\n        this.accountingExportSummary = AccountingExportSummaryModel.parseAPIResponseToAccountingSummary(responses[1]);\\n      }\\n      this.destinationFieldMap = {\\n        EMPLOYEE: responses[3].employee_field_mapping,\\n        CATEGORY: \'ACCOUNT\'\\n      };\\n\\n      this.isLoading = false;\\n\\n      const queuedTasks: QBOTaskLog[] = responses[2].results.filter((task: QBOTaskLog) => task.status === TaskLogState.ENQUEUED || task.status === TaskLogState.IN_PROGRESS);\\n      this.failedExpenseGroupCount = responses[2].results.filter((task: QBOTaskLog) => task.status === TaskLogState.FAILED || task.status === TaskLogState.FATAL).length;\\n\\n      if (queuedTasks.length) {\\n        this.isImportInProgress = false;\\n        this.isExportInProgress = true;\\n        this.pollExportStatus();\\n      } else {\\n        this.accountingExportService.importExpensesFromFyle(\'v1\').subscribe(() => {\\n          this.dashboardService.getExportableAccountingExportIds(\'v1\').subscribe((exportableAccountingExportIds) => {\\n            this.exportableAccountingExportIds = exportableAccountingExportIds.exportable_expense_group_ids;\\n            this.isImportInProgress = false;\\n          });\\n        });\\n      }\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-dashboard.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""},{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":54,"jsdoctags":[{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\">\\n    <app-dashboard-export-section\\n        (export)=\\"export()\\"\\n        [appName]=\\"appName\\"\\n        [isImportInProgress]=\\"isImportInProgress\\"\\n        [isExportInProgress]=\\"isExportInProgress\\"\\n        [exportableAccountingExportIds]=\\"exportableAccountingExportIds\\"\\n        [failedExpenseGroupCount]=\\"failedExpenseGroupCount\\"\\n        [exportProgressPercentage]=\\"exportProgressPercentage\\"\\n        [accountingExportSummary]=\\"accountingExportSummary\\"\\n        [processedCount]=\\"processedCount\\">\\n    </app-dashboard-export-section>\\n\\n    <app-zero-state *ngIf=\\"!accountingExportSummary && !exportableAccountingExportIds.length\\"\\n        [zeroStateImageURL]=\\"\'assets/icons/dashboard-illustration.svg\'\\"\\n        [zeroStateCaption]=\\"\'There are no expenses to export at the moment!\'\\">\\n    </app-zero-state>\\n\\n    <app-dashboard-export-summary-section *ngIf=\\"exportableAccountingExportIds.length || accountingExportSummary\\"\\n        [appName]=\\"appName\\"\\n        [exportLogVersion]=\\"\'v1\'\\"\\n        [accountingExportType]=\\"accountingExportType\\"\\n        [accountingExportSummary]=\\"accountingExportSummary\\">\\n    </app-dashboard-export-summary-section>\\n\\n    <app-dashboard-error-section *ngIf=\\"errors.EMPLOYEE_MAPPING.length || errors.CATEGORY_MAPPING.length || errors.ACCOUNTING_ERROR.length\\"\\n        [appName]=\\"appName\\"\\n        [apiModuleUrl]=\\"AppUrl.QBO\\"\\n        [errors]=\\"errors\\"\\n        [groupedErrorStat]=\\"groupedErrorStat\\"\\n        [destinationFieldMap]=\\"destinationFieldMap\\"\\n        [isCategoryMappingGeneric]=\\"true\\"\\n        [isImportItemsEnabled]=\\"isImportItemsEnabled\\"\\n        [destinationOptionsVersion]=\\"\'v1\'\\"\\n        [errorsVersion]=\\"\'v1\'\\">\\n    </app-dashboard-error-section>\\n</div>\\n"},{"name":"QboEmployeeSettingsComponent","id":"component-QboEmployeeSettingsComponent-7a892e71c750794432a01937bcf34dcbad5fd2f0b46b99f9e94e3ff0c09d8abdd5fa91600aa9e3c33a2210b0c5d8ed89816e07e5e2dad38deef9ac1cbea747b3","file":"src/app/integrations/qbo/qbo-shared/qbo-employee-settings/qbo-employee-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-employee-settings","styleUrls":["./qbo-employee-settings.component.scss"],"styles":[],"templateUrl":["./qbo-employee-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"autoMapEmployeeOptions","defaultValue":"QBOEmployeeSettingModel.getAutoMapEmployeeOptions()","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":33},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":55,"modifierKind":[148]},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53},{"name":"employeeMappingOptions","defaultValue":"EmployeeSettingModel.getEmployeeFieldMappingOptions()","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":31},{"name":"employeeSetting","deprecated":false,"deprecationMessage":"","type":"QBOEmployeeSettingGet","optional":false,"description":"","line":39},{"name":"employeeSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":29},{"name":"existingEmployeeFieldMapping","deprecated":false,"deprecationMessage":"","type":"EmployeeFieldMapping","optional":false,"description":"","line":41},{"name":"isConfirmationDialogVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":49},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":25},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":35},{"name":"isSaveInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":47},{"name":"liveEntityExample","deprecated":false,"deprecationMessage":"","type":"literal type","optional":false,"description":"","line":43},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.QBO.EMPLOYEE_SETTING","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"reimbursableExportType","deprecated":false,"deprecationMessage":"","type":"QBOReimbursableExpensesObject | null","optional":false,"description":"","line":45},{"name":"warningDialogText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":51},{"name":"windowReference","deprecated":false,"deprecationMessage":"","type":"Window","optional":false,"description":"","line":37}],"methodsClass":[{"name":"acceptWarning","args":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"exportSettingAffected","args":[],"optional":false,"returnType":"boolean | undefined","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigateToPreviousStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":150,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":73,"deprecated":false,"deprecationMessage":""},{"name":"setLiveEntityExample","args":[{"name":"destinationAttributes","type":"DestinationAttribute[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"destinationAttributes","type":"DestinationAttribute[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { EmployeeSettingModel } from \'src/app/core/models/common/employee-settings.model\';\\nimport { SelectFormOption } from \'src/app/core/models/common/select-form-option.model\';\\nimport { DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { ConfigurationCta, EmployeeFieldMapping, FyleField, QBOOnboardingState, QBOReimbursableExpensesObject, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { ConfigurationWarningOut } from \'src/app/core/models/misc/configuration-warning.model\';\\nimport { QBOEmployeeSettingGet, QBOEmployeeSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { QboEmployeeSettingsService } from \'src/app/core/services/qbo/qbo-configuration/qbo-employee-settings.service\';\\nimport { QboExportSettingsService } from \'src/app/core/services/qbo/qbo-configuration/qbo-export-settings.service\';\\n\\n@Component({\\n  selector: \'app-qbo-employee-settings\',\\n  templateUrl: \'./qbo-employee-settings.component.html\',\\n  styleUrls: [\'./qbo-employee-settings.component.scss\']\\n})\\nexport class QboEmployeeSettingsComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  redirectLink: string = brandingKbArticles.onboardingArticles.QBO.EMPLOYEE_SETTING;\\n\\n  employeeSettingForm: FormGroup;\\n\\n  employeeMappingOptions: SelectFormOption[] = EmployeeSettingModel.getEmployeeFieldMappingOptions();\\n\\n  autoMapEmployeeOptions: SelectFormOption[] = QBOEmployeeSettingModel.getAutoMapEmployeeOptions();\\n\\n  isOnboarding: boolean;\\n\\n  windowReference: Window;\\n\\n  employeeSetting: QBOEmployeeSettingGet;\\n\\n  existingEmployeeFieldMapping: EmployeeFieldMapping;\\n\\n  liveEntityExample: {[FyleField.EMPLOYEE]: string | undefined, [FyleField.VENDOR]: string | undefined};\\n\\n  reimbursableExportType: QBOReimbursableExpensesObject | null;\\n\\n  isSaveInProgress: boolean = false;\\n\\n  isConfirmationDialogVisible: boolean = false;\\n\\n  warningDialogText: string;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private employeeSettingService: QboEmployeeSettingsService,\\n    private formBuilder: FormBuilder,\\n    private exportSettingService: QboExportSettingsService,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private windowService: WindowService,\\n    private workspaceService: WorkspaceService\\n  ) {\\n    this.windowReference = this.windowService.nativeWindow;\\n  }\\n\\n  navigateToPreviousStep(): void {\\n    this.router.navigate([`/integrations/qbo/onboarding/connector`]);\\n  }\\n\\n  save(): void {\\n    if (this.employeeSettingForm.valid && !this.isSaveInProgress) {\\n      if (this.exportSettingAffected()) {\\n        // Show warning dialog\\n        const existingEmployeeFieldMapping = this.existingEmployeeFieldMapping?.toLowerCase().replace(/^\\\\w/, (c) => c.toUpperCase());\\n        const updatedEmployeeFieldMapping = this.employeeSettingForm.value.employeeMapping?.toLowerCase().replace(/^\\\\w/, (c: string) => c.toUpperCase());\\n\\n        this.warningDialogText = `You are changing your employee representation from <b>${existingEmployeeFieldMapping}</b> to <b>${updatedEmployeeFieldMapping}</b>\\n         <br><br>This will impact the configuration in the <b>Export settings</b> on How the export of expenses\\n         can be exported from ${brandingConfig.brandName} to QuickBooks Online.<br><br>\\n         Would you like to continue? If yes, you will be redirected to <b>Export settings</b> to revisit the configuration and complete it.`;\\n        this.isConfirmationDialogVisible = true;\\n        return;\\n      }\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  acceptWarning(data: ConfigurationWarningOut): void {\\n    if (data.hasAccepted) {\\n      this.isConfirmationDialogVisible = false;\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  private constructPayloadAndSave(): void {\\n    const employeeSettingPayload = QBOEmployeeSettingModel.constructPayload(this.employeeSettingForm);\\n    this.isSaveInProgress = true;\\n\\n    this.employeeSettingService.postEmployeeSettings(employeeSettingPayload).subscribe(() => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Employee settings saved successfully\');\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(QBOOnboardingState.EXPORT_SETTINGS);\\n        this.router.navigate([\'/integrations/qbo/onboarding/export_settings\']);\\n      } else if (this.exportSettingAffected()) {\\n        this.router.navigate([\'/integrations/qbo/main/configuration/export_settings\']);\\n      } else {\\n        this.router.navigate([\'/integrations/qbo/main/dashboard\']);\\n      }\\n    }, () => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving employee settings, please try again later\');\\n    });\\n  }\\n\\n  private exportSettingAffected(): boolean | undefined {\\n    return this.existingEmployeeFieldMapping && this.existingEmployeeFieldMapping !== this.employeeSettingForm.value.employeeMapping;\\n  }\\n\\n  private setLiveEntityExample(destinationAttributes: DestinationAttribute[]): void {\\n    this.liveEntityExample = {\\n      [FyleField.EMPLOYEE]: destinationAttributes.find((attribute: DestinationAttribute) => attribute.attribute_type === FyleField.EMPLOYEE)?.value,\\n      [FyleField.VENDOR]: destinationAttributes.find((attribute: DestinationAttribute) => attribute.attribute_type === FyleField.VENDOR)?.value\\n    };\\n  }\\n\\n  private setupForm(): void {\\n    this.isOnboarding = this.windowReference.location.pathname.includes(\'onboarding\');\\n\\n    forkJoin([\\n      this.employeeSettingService.getEmployeeSettings(),\\n      this.employeeSettingService.getDistinctQBODestinationAttributes([FyleField.EMPLOYEE, FyleField.VENDOR]),\\n      this.exportSettingService.getExportSettings()\\n    ]).subscribe((responses) => {\\n      this.employeeSetting = responses[0];\\n      this.existingEmployeeFieldMapping = responses[0].workspace_general_settings?.employee_field_mapping;\\n      this.setLiveEntityExample(responses[1]);\\n      this.employeeSettingForm = this.formBuilder.group({\\n        employeeMapping: [this.existingEmployeeFieldMapping, Validators.required],\\n        autoMapEmployee: [responses[0].workspace_general_settings?.auto_map_employees]\\n      });\\n      this.reimbursableExportType = responses[2].workspace_general_settings?.reimbursable_expenses_object;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupForm();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-employee-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"employeeSettingService","type":"QboEmployeeSettingsService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"exportSettingService","type":"QboExportSettingsService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":55,"jsdoctags":[{"name":"employeeSettingService","type":"QboEmployeeSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportSettingService","type":"QboExportSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-pt-80-px\\">\\n        <app-loader></app-loader>\\n    </div>\\n    <div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n        <div>\\n            <app-configuration-step-header\\n                [headerText]=\\"\'Map Employees\'\\"\\n                [contentText]=\\"\'Choose appropriate representation of your Employees in QuickBooks Online\'\\"\\n                [redirectLink]=\\"redirectLink\\">\\n            </app-configuration-step-header>\\n        </div>\\n        <form [formGroup]=\\"employeeSettingForm\\">\\n            <div class=\\"tw-p-24-px\\">\\n                <div class=\\"tw-mb-16-px\\">\\n                    <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"employeeSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'option\'\\"\\n                            [label]=\\"\'How are your Employees represented in QuickBooks Online?\'\\"\\n                            [subLabel]=\\"\'Select how you represent your employees in QuickBooks Online. This would help to export the expenses from \' + brandingConfig.brandName + \' to the correct employee/vendor record in QuickBooks Online.\'\\"\\n                            [options]=\\"employeeMappingOptions\\"\\n                            [iconPath]=\\"\'employee\'\\"\\n                            [placeholder]=\\"\'Select representation\'\\"\\n                            [formControllerName]=\\"\'employeeMapping\'\\">\\n                        </app-configuration-select-field>\\n                        <app-configuration-select-field\\n                            [form]=\\"employeeSettingForm\\"\\n                            [isFieldMandatory]=\\"false\\"\\n                            [mandatoryErrorListName]=\\"\'option\'\\"\\n                            [label]=\\"\'How should Employees in \' + brandingConfig.brandName + \' be matched to Employees/Vendors in QuickBooks Online?\'\\"\\n                            [subLabel]=\\"\'Automatically map the employees in \' + brandingConfig.brandName + \' to their corresponding records in QuickBooks Online based on a unique parameter.\'\\"\\n                            [options]=\\"autoMapEmployeeOptions\\"\\n                            [iconPath]=\\"\'employee\'\\"\\n                            [placeholder]=\\"\'Select representation\'\\"\\n                            [formControllerName]=\\"\'autoMapEmployee\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                </div>\\n            </div>\\n            <div>\\n                <app-configuration-step-footer\\n                    [ctaText]=\\"!isSaveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\"\\n                    [isButtonDisabled]=\\"!employeeSettingForm.valid\\"\\n                    [showBackButton]=\\"true\\"\\n                    (save)=\\"save()\\"\\n                    (navigateToPreviousStep)=\\"navigateToPreviousStep()\\">\\n                </app-configuration-step-footer>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n<app-configuration-confirmation-dialog\\n    (warningAccepted)=\\"acceptWarning($event)\\"\\n    [isWarningVisible]=\\"isConfirmationDialogVisible\\"\\n    [headerText]=\\"\'Change in Configuration\'\\"\\n    [contextText]=\\"warningDialogText\\"\\n    [iconPath]=\\"\'assets/icons/alert_dialog.svg\'\\"\\n    [confirmBtnText]=\\"\'Continue\'\\"\\n    [showSecondaryCTA]=\\"false\\">\\n</app-configuration-confirmation-dialog>\\n"},{"name":"QboExportLogComponent","id":"component-QboExportLogComponent-6b798c36afabd53a2b921e0da5fd737a7174ea482632cc8a12fc2f74b669d29c703620bdced2d7d4dbcc907f355f8880e62678ab6e8e044e9a4de3ea0ee3ab22","file":"src/app/integrations/qbo/qbo-main/qbo-export-log/qbo-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-export-log","styleUrls":["./qbo-export-log.component.scss"],"styles":[],"templateUrl":["./qbo-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":17},{"name":"modules","defaultValue":"[\\n    {label: \'Completed\', routerLink: \'/integrations/qbo/main/export_log/complete\'},\\n    {label: \'Skipped\', routerLink: \'/integrations/qbo/main/export_log/skipped\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":12}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":24,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\n\\n@Component({\\n  selector: \'app-qbo-export-log\',\\n  templateUrl: \'./qbo-export-log.component.html\',\\n  styleUrls: [\'./qbo-export-log.component.scss\']\\n})\\nexport class QboExportLogComponent implements OnInit {\\n\\n  modules: MenuItem[] = [\\n    {label: \'Completed\', routerLink: \'/integrations/qbo/main/export_log/complete\'},\\n    {label: \'Skipped\', routerLink: \'/integrations/qbo/main/export_log/skipped\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n\\n  ngOnInit(): void {\\n    this.activeModule = this.modules[0];\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":17,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div class=\\"tw-py-40-px tw-px-120-px\\">\\n    <app-sub-menu [modules]=\\"modules\\" [activeModule]=\\"activeModule\\"></app-sub-menu>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n"},{"name":"QboExportSettingsComponent","id":"component-QboExportSettingsComponent-1519de4eaebc5894a7c0b0e8ed9f35d4f74ef0ee46b77a87cd22ac5adb481d093a74a76d5fd0bc4f8e449b38028b10ce321070fe65c4474e76e6cd82623f111d","file":"src/app/integrations/qbo/qbo-shared/qbo-export-settings/qbo-export-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-export-settings","styleUrls":["./qbo-export-settings.component.scss"],"styles":[],"templateUrl":["./qbo-export-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"accountsPayables","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":43},{"name":"appName","defaultValue":"AppName.QBO","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":77},{"name":"bankAccounts","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":39},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":29},{"name":"cccAccounts","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":41},{"name":"cccExpenseGroupingDateOptions","defaultValue":"this.reimbursableExpenseGroupingDateOptions.concat()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63},{"name":"cccExpenseStateOptions","defaultValue":"QBOExportSettingModel.getCCCExpenseStateOptions()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":55},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":100},{"name":"creditCardExportTypes","defaultValue":"QBOExportSettingModel.getCreditCardExportTypes()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53},{"name":"employeeFieldMapping","deprecated":false,"deprecationMessage":"","type":"EmployeeFieldMapping","optional":false,"description":"","line":37},{"name":"EmployeeFieldMapping","defaultValue":"EmployeeFieldMapping","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":83},{"name":"expenseAccounts","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":47},{"name":"expenseGroupByOptions","defaultValue":"QBOExportSettingModel.getExpenseGroupByOptions()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":59},{"name":"expenseStateOptions","defaultValue":"QBOExportSettingModel.getReimbursableExpenseStateOptions()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":57},{"name":"exportSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":69},{"name":"exportSettings","deprecated":false,"deprecationMessage":"","type":"QBOExportSettingGet","optional":false,"description":"","line":35},{"name":"helperService","deprecated":false,"deprecationMessage":"","type":"HelperService","optional":false,"description":"","line":104,"modifierKind":[125]},{"name":"isConfirmationDialogVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":73},{"name":"isImportItemsEnabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":49},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":25},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":31},{"name":"isSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":71},{"name":"nameInJournalOptions","defaultValue":"QBOExportSettingModel.getNameInJournalOptions()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":65},{"name":"previewImagePaths","defaultValue":"[\\n    {\\n      [QBOReimbursableExpensesObject.EXPENSE]: \'assets/pngs/preview-screens/qbo-reimburse-expense.png\',\\n      [QBOReimbursableExpensesObject.BILL]: \'assets/pngs/preview-screens/qbo-reimburse-bill.png\',\\n      [QBOReimbursableExpensesObject.JOURNAL_ENTRY]: \'assets/pngs/preview-screens/qbo-reimburse-journal-entry.png\',\\n      [QBOReimbursableExpensesObject.CHECK]: \'assets/pngs/preview-screens/qbo-reimburse-check.png\'\\n    },\\n    {\\n      [QBOCorporateCreditCardExpensesObject.BILL]: \'assets/pngs/preview-screens/qbo-ccc-bill.png\',\\n      [QBOCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE]: \'assets/pngs/preview-screens/qbo-ccc-expense.png\',\\n      [QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY]: \'assets/pngs/preview-screens/qbo-ccc-journal-entry.png\',\\n      [QBOCorporateCreditCardExpensesObject.DEBIT_CARD_EXPENSE]: \'assets/pngs/preview-screens/qbo-ccc-debit-card.png\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":85},{"name":"QBOCorporateCreditCardExpensesObject","defaultValue":"QBOCorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":79},{"name":"QBOReimbursableExpensesObject","defaultValue":"QBOReimbursableExpensesObject","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":81},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.QBO.EXPORT_SETTING","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"reimbursableExpenseGroupingDateOptions","defaultValue":"QBOExportSettingModel.getReimbursableExpenseGroupingDateOptions()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":61},{"name":"reimbursableExportTypes","deprecated":false,"deprecationMessage":"","type":"SelectFormOption[]","optional":false,"description":"","line":51},{"name":"showNameInJournalOption","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":67},{"name":"vendors","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":45},{"name":"warningDialogText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":75},{"name":"windowReference","deprecated":false,"deprecationMessage":"","type":"Window","optional":false,"description":"","line":33}],"methodsClass":[{"name":"constructPayloadAndSave","args":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":114,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructWarningMessage","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":176,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":242,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isAdvancedSettingAffected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":210,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isExportSettingsUpdated","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isPaymentsSyncAffected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":206,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"isSingleItemizedJournalEntryAffected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":202,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigateToPreviousStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":289,"deprecated":false,"deprecationMessage":""},{"name":"replaceContentBasedOnConfiguration","args":[{"name":"updatedConfiguration","type":"string","deprecated":false,"deprecationMessage":""},{"name":"existingConfiguration","type":"string","deprecated":false,"deprecationMessage":""},{"name":"exportType","type":"\\"reimbursable\\" | \\"credit card\\"","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":151,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"updatedConfiguration","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"existingConfiguration","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportType","type":"\\"reimbursable\\" | \\"credit card\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":""},{"name":"setupCustomWatchers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":230,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"updateCCCExpenseGroupingDateOptions","args":[{"name":"selectedValue","type":"QBOCorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":218,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"selectedValue","type":"QBOCorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { SelectFormOption } from \'src/app/core/models/common/select-form-option.model\';\\nimport { DefaultDestinationAttribute, DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { AppName, AutoMapEmployeeOptions, ConfigurationCta, ConfigurationWarningEvent, EmployeeFieldMapping, ExpenseGroupingFieldOption, QBOCorporateCreditCardExpensesObject, QBOOnboardingState, QBOReimbursableExpensesObject, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { ConfigurationWarningOut } from \'src/app/core/models/misc/configuration-warning.model\';\\nimport { QBOExportSettingGet, QBOExportSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { QboExportSettingsService } from \'src/app/core/services/qbo/qbo-configuration/qbo-export-settings.service\';\\n\\n@Component({\\n  selector: \'app-qbo-export-settings\',\\n  templateUrl: \'./qbo-export-settings.component.html\',\\n  styleUrls: [\'./qbo-export-settings.component.scss\']\\n})\\nexport class QboExportSettingsComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  redirectLink: string = brandingKbArticles.onboardingArticles.QBO.EXPORT_SETTING;\\n\\n  brandingConfig = brandingConfig;\\n\\n  isOnboarding: boolean;\\n\\n  windowReference: Window;\\n\\n  exportSettings: QBOExportSettingGet;\\n\\n  employeeFieldMapping: EmployeeFieldMapping;\\n\\n  bankAccounts: DefaultDestinationAttribute[];\\n\\n  cccAccounts: DefaultDestinationAttribute[];\\n\\n  accountsPayables: DefaultDestinationAttribute[];\\n\\n  vendors: DefaultDestinationAttribute[];\\n\\n  expenseAccounts: DefaultDestinationAttribute[];\\n\\n  isImportItemsEnabled: boolean;\\n\\n  reimbursableExportTypes: SelectFormOption[];\\n\\n  creditCardExportTypes = QBOExportSettingModel.getCreditCardExportTypes();\\n\\n  cccExpenseStateOptions = QBOExportSettingModel.getCCCExpenseStateOptions();\\n\\n  expenseStateOptions = QBOExportSettingModel.getReimbursableExpenseStateOptions();\\n\\n  expenseGroupByOptions = QBOExportSettingModel.getExpenseGroupByOptions();\\n\\n  reimbursableExpenseGroupingDateOptions = QBOExportSettingModel.getReimbursableExpenseGroupingDateOptions();\\n\\n  cccExpenseGroupingDateOptions = this.reimbursableExpenseGroupingDateOptions.concat();\\n\\n  nameInJournalOptions = QBOExportSettingModel.getNameInJournalOptions();\\n\\n  showNameInJournalOption: boolean;\\n\\n  exportSettingForm: FormGroup;\\n\\n  isSaveInProgress: boolean;\\n\\n  isConfirmationDialogVisible: boolean;\\n\\n  warningDialogText: string;\\n\\n  appName: AppName = AppName.QBO;\\n\\n  QBOCorporateCreditCardExpensesObject = QBOCorporateCreditCardExpensesObject;\\n\\n  QBOReimbursableExpensesObject = QBOReimbursableExpensesObject;\\n\\n  EmployeeFieldMapping = EmployeeFieldMapping;\\n\\n  previewImagePaths =[\\n    {\\n      [QBOReimbursableExpensesObject.EXPENSE]: \'assets/pngs/preview-screens/qbo-reimburse-expense.png\',\\n      [QBOReimbursableExpensesObject.BILL]: \'assets/pngs/preview-screens/qbo-reimburse-bill.png\',\\n      [QBOReimbursableExpensesObject.JOURNAL_ENTRY]: \'assets/pngs/preview-screens/qbo-reimburse-journal-entry.png\',\\n      [QBOReimbursableExpensesObject.CHECK]: \'assets/pngs/preview-screens/qbo-reimburse-check.png\'\\n    },\\n    {\\n      [QBOCorporateCreditCardExpensesObject.BILL]: \'assets/pngs/preview-screens/qbo-ccc-bill.png\',\\n      [QBOCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE]: \'assets/pngs/preview-screens/qbo-ccc-expense.png\',\\n      [QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY]: \'assets/pngs/preview-screens/qbo-ccc-journal-entry.png\',\\n      [QBOCorporateCreditCardExpensesObject.DEBIT_CARD_EXPENSE]: \'assets/pngs/preview-screens/qbo-ccc-debit-card.png\'\\n    }\\n  ];\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  constructor(\\n    private exportSettingService: QboExportSettingsService,\\n    public helperService: HelperService,\\n    private mappingService: MappingService,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private windowService: WindowService,\\n    private workspaceService: WorkspaceService\\n  ) {\\n    this.windowReference = this.windowService.nativeWindow;\\n  }\\n\\n  constructPayloadAndSave(data: ConfigurationWarningOut): void {\\n    if (data.hasAccepted) {\\n      this.isSaveInProgress = true;\\n      const exportSettingPayload = QBOExportSettingModel.constructPayload(this.exportSettingForm);\\n      this.exportSettingService.postExportSettings(exportSettingPayload).subscribe((response: QBOExportSettingGet) => {\\n        this.isSaveInProgress = false;\\n        this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Export settings saved successfully\');\\n\\n        if (this.isOnboarding) {\\n          this.workspaceService.setOnboardingState(QBOOnboardingState.IMPORT_SETTINGS);\\n          this.router.navigate([`/integrations/qbo/onboarding/import_settings`]);\\n        } else if (this.isAdvancedSettingAffected()) {\\n          this.router.navigate([\'/integrations/qbo/main/configuration/advanced_settings\']);\\n        } else {\\n          this.router.navigate([\'/integrations/qbo/main/dashboard\']);\\n        }\\n      }, () => {\\n        this.isSaveInProgress = false;\\n        this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving export settings, please try again later\');\\n      });\\n    }\\n  }\\n\\n  navigateToPreviousStep(): void {\\n    this.router.navigate([`/integrations/qbo/onboarding/employee_settings`]);\\n  }\\n\\n  save(): void {\\n    if (this.isAdvancedSettingAffected()) {\\n      this.warningDialogText = this.constructWarningMessage();\\n      this.isConfirmationDialogVisible = true;\\n      return;\\n    }\\n\\n    this.constructPayloadAndSave({hasAccepted: true, event: ConfigurationWarningEvent.QBO_EXPORT_SETTINGS});\\n  }\\n\\n  private replaceContentBasedOnConfiguration(updatedConfiguration: string, existingConfiguration: string, exportType: \'reimbursable\' | \'credit card\'): string {\\n    const configurationUpdate = `You have changed the export type of $exportType expense from <b>$existingExportType</b> to <b>$updatedExportType</b>,\\n    which would impact a few configurations in the <b>Advanced settings</b>. <br><br>Please revisit the <b>Advanced settings</b> to check and enable the\\n    features that could help customize and automate your integration workflows.`;\\n\\n    const newConfiguration = `You have <b>selected a new export type</b> for the $exportType expense, which would impact a few configurations\\n      in the <b>Advanced settings</b>. <br><br>Please revisit the <b>Advanced settings</b> to check and enable the features that could help customize and\\n      automate your integration workflows.`;\\n\\n    let content = \'\';\\n    // If both are not none and it is an update case else for the new addition case\\n    if (updatedConfiguration !== \'None\' && existingConfiguration !== \'None\') {\\n      content = configurationUpdate.replace(\'$exportType\', exportType).replace(\'$existingExportType\', existingConfiguration.toLowerCase().replace(/^\\\\w/, (c: string) => c.toUpperCase())).replace(\'$updatedExportType\', updatedConfiguration.toLowerCase().replace(/^\\\\w/, (c: string) => c.toUpperCase()));\\n    } else {\\n      content = newConfiguration.replace(\'$exportType\', exportType);\\n    }\\n\\n    // If any export-type has been changed to journal entry and has import_items set to true, then add the below content and return\\n    if ((updatedConfiguration === QBOReimbursableExpensesObject.JOURNAL_ENTRY) && this.isImportItemsEnabled) {\\n      return `${content} <br><br>Also, Products/services previously imported as categories in ${brandingConfig.brandName} will be disabled.`;\\n    }\\n    // If any export-type is not journal entry or import_items is set to false, simply return the normal constructed content\\n    return content;\\n  }\\n\\n  private constructWarningMessage(): string {\\n    let content: string = \'\';\\n    const existingReimbursableExportType = this.exportSettings.workspace_general_settings?.reimbursable_expenses_object ? this.exportSettings.workspace_general_settings.reimbursable_expenses_object : \'None\';\\n    const existingCorporateCardExportType = this.exportSettings.workspace_general_settings?.corporate_credit_card_expenses_object ? this.exportSettings.workspace_general_settings.corporate_credit_card_expenses_object : \'None\';\\n    const updatedReimbursableExportType = this.exportSettingForm.value.reimbursableExportType ? this.exportSettingForm.value.reimbursableExportType : \'None\';\\n    const updatedCorporateCardExportType = this.exportSettingForm.value.creditCardExportType ? this.exportSettingForm.value.creditCardExportType : \'None\';\\n\\n    if (this.isSingleItemizedJournalEntryAffected()) {\\n      if (updatedReimbursableExportType !== existingReimbursableExportType) {\\n        content = this.replaceContentBasedOnConfiguration(updatedReimbursableExportType, existingReimbursableExportType, \'reimbursable\');\\n      } else if (existingCorporateCardExportType !== updatedCorporateCardExportType) {\\n        content = this.replaceContentBasedOnConfiguration(updatedCorporateCardExportType, existingCorporateCardExportType, \'credit card\');\\n      }\\n    }\\n\\n    if (!this.isSingleItemizedJournalEntryAffected() && this.isPaymentsSyncAffected()) {\\n      content = this.replaceContentBasedOnConfiguration(updatedReimbursableExportType, existingReimbursableExportType, \'reimbursable\');\\n    }\\n\\n    return content;\\n  }\\n\\n  private isExportSettingsUpdated(): boolean {\\n    return this.exportSettings.workspace_general_settings.reimbursable_expenses_object !== null || this.exportSettings.workspace_general_settings.corporate_credit_card_expenses_object !== null;\\n  }\\n\\n  private isSingleItemizedJournalEntryAffected(): boolean {\\n    return (this.exportSettings?.workspace_general_settings?.reimbursable_expenses_object !== QBOReimbursableExpensesObject.JOURNAL_ENTRY && this.exportSettingForm.value.reimbursableExportType === QBOReimbursableExpensesObject.JOURNAL_ENTRY) || (this.exportSettings?.workspace_general_settings?.corporate_credit_card_expenses_object !== QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY && this.exportSettingForm.value.creditCardExportType === QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY);\\n  }\\n\\n  private isPaymentsSyncAffected(): boolean {\\n    return this.exportSettings?.workspace_general_settings?.reimbursable_expenses_object !== QBOReimbursableExpensesObject.BILL && this.exportSettingForm.value.reimbursableExportType  === QBOReimbursableExpensesObject.BILL;\\n  }\\n\\n  private isAdvancedSettingAffected(): boolean {\\n    if (this.isExportSettingsUpdated() && (this.isSingleItemizedJournalEntryAffected() || this.isPaymentsSyncAffected())) {\\n      return true;\\n    }\\n\\n    return false;\\n  }\\n\\n  private updateCCCExpenseGroupingDateOptions(selectedValue: QBOCorporateCreditCardExpensesObject): void {\\n    if ([QBOCorporateCreditCardExpensesObject.CREDIT_CARD_PURCHASE, QBOCorporateCreditCardExpensesObject.DEBIT_CARD_EXPENSE].includes(selectedValue)) {\\n      this.cccExpenseGroupingDateOptions = QBOExportSettingModel.getAdditionalCreditCardExpenseGroupingDateOptions();\\n      this.exportSettingForm.controls.creditCardExportGroup.setValue(ExpenseGroupingFieldOption.EXPENSE_ID);\\n      this.exportSettingForm.controls.creditCardExportGroup.disable();\\n    } else {\\n      this.cccExpenseGroupingDateOptions = this.reimbursableExpenseGroupingDateOptions.concat();\\n      this.helperService.clearValidatorAndResetValue(this.exportSettingForm, \'creditCardExportGroup\');\\n      this.helperService.enableFormField(this.exportSettingForm, \'creditCardExportGroup\');\\n    }\\n  }\\n\\n  private setupCustomWatchers(): void {\\n    if (this.exportSettingForm.value.creditCardExportType) {\\n      this.updateCCCExpenseGroupingDateOptions(this.exportSettingForm.value.creditCardExportType);\\n    }\\n\\n    this.exportSettingService.creditCardExportTypeChange.subscribe((selectedValue: QBOCorporateCreditCardExpensesObject) => {\\n      this.showNameInJournalOption = selectedValue === QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY ? true : false;\\n\\n      this.updateCCCExpenseGroupingDateOptions(selectedValue);\\n    });\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    this.isOnboarding = this.windowReference.location.pathname.includes(\'onboarding\');\\n    const destinationAttributes = [\'BANK_ACCOUNT\', \'CREDIT_CARD_ACCOUNT\', \'ACCOUNTS_PAYABLE\', \'VENDOR\'];\\n\\n    forkJoin({\\n      exportSetting: this.exportSettingService.getExportSettings(),\\n      destinationAttributes: this.mappingService.getGroupedDestinationAttributes(destinationAttributes, \'v1\', \'qbo\'),\\n      workspaceGeneralSettings: this.workspaceService.getWorkspaceGeneralSettings()\\n    }).subscribe(({exportSetting, destinationAttributes, workspaceGeneralSettings}) => {\\n      this.exportSettings = exportSetting;\\n      this.employeeFieldMapping = workspaceGeneralSettings.employee_field_mapping;\\n\\n      this.bankAccounts = destinationAttributes.BANK_ACCOUNT.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.cccAccounts = destinationAttributes.CREDIT_CARD_ACCOUNT.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.accountsPayables = destinationAttributes.ACCOUNTS_PAYABLE.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.vendors = destinationAttributes.VENDOR.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.expenseAccounts = this.bankAccounts.concat(this.cccAccounts);\\n\\n      this.isImportItemsEnabled = workspaceGeneralSettings.import_items;\\n\\n      this.reimbursableExportTypes = QBOExportSettingModel.getReimbursableExportTypeOptions(this.employeeFieldMapping);\\n      this.showNameInJournalOption = this.exportSettings.workspace_general_settings?.corporate_credit_card_expenses_object === QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY ? true : false;\\n\\n      this.exportSettingForm = QBOExportSettingModel.mapAPIResponseToFormGroup(this.exportSettings, this.employeeFieldMapping);\\n      this.helperService.addExportSettingFormValidator(this.exportSettingForm);\\n\\n      const [exportSettingValidatorRule, exportModuleRule] = QBOExportSettingModel.getValidators();\\n\\n      this.helperService.setConfigurationSettingValidatorsAndWatchers(exportSettingValidatorRule, this.exportSettingForm);\\n\\n      if (this.exportSettings.workspace_general_settings.reimbursable_expenses_object) {\\n        this.exportSettingService.setupDynamicValidators(this.exportSettingForm, exportModuleRule[0], this.exportSettings.workspace_general_settings.reimbursable_expenses_object);\\n        this.helperService.setOrClearValidators(this.exportSettings.workspace_general_settings.reimbursable_expenses_object, exportSettingValidatorRule.reimbursableExpense, this.exportSettingForm);\\n      }\\n\\n      if (this.exportSettings.workspace_general_settings.corporate_credit_card_expenses_object) {\\n        this.exportSettingService.setupDynamicValidators(this.exportSettingForm, exportModuleRule[1], this.exportSettings.workspace_general_settings.corporate_credit_card_expenses_object);\\n        this.helperService.setOrClearValidators(this.exportSettings.workspace_general_settings.corporate_credit_card_expenses_object, exportSettingValidatorRule.creditCardExpense, this.exportSettingForm);\\n      }\\n\\n      this.exportSettingService.setExportTypeValidatorsAndWatchers(exportModuleRule, this.exportSettingForm);\\n\\n      this.setupCustomWatchers();\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSettingsAndSetupForm();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-export-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"exportSettingService","type":"QboExportSettingsService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":100,"jsdoctags":[{"name":"exportSettingService","type":"QboExportSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-pt-80-px\\">\\n        <app-loader></app-loader>\\n    </div>\\n    <div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n        <div>\\n            <app-configuration-step-header\\n                [headerText]=\\"\'Export Settings\'\\"\\n                [contentText]=\\"\'In this section, you will configure how and when expenses from \' + brandingConfig.brandName + \' can be exported to QuickBooks Online\'\\"\\n                [redirectLink]=\\"redirectLink\\">\\n            </app-configuration-step-header>\\n        </div>\\n        <form [formGroup]=\\"exportSettingForm\\">\\n            <div class=\\"tw-p-24-px\\">\\n                <div class=\\"tw-mb-16-px\\">\\n                    <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg\\">\\n                        <app-configuration-toggle-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [label]=\\"\'Export Reimbursable Expenses\'\\"\\n                            [subLabel]=\\"\'Enable this to export the reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any <b>out-of-pocket</b> expenses will not be exported to QuickBooks Online\'\\"\\n                            [formControllerName]=\\"\'reimbursableExpense\'\\" [isSectionHeader]=\\"true\\">\\n                        </app-configuration-toggle-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value?.reimbursableExpense\\">\\n                        <div\\n                            class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'export module\'\\"\\n                                [label]=\\"\'How should the expenses be exported?\'\\"\\n                                [options]=\\"reimbursableExportTypes\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Choose the type of transaction in QuickBooks Online to export your \' + brandingConfig.brandName +\' expenses\'\\"\\n                                [formControllerName]=\\"\'reimbursableExportType\'\\"\\n                                [appName]=\\"appName\\"\\n                                [exportTypeIconPathArray]=\\"previewImagePaths\\">\\n                            </app-configuration-select-field>\\n\\n                            <div *ngIf=\\"helperService.isFieldRequired(exportSettingForm, \'bankAccount\')\\">\\n                                <app-configuration-select-field\\n                                    [form]=\\"exportSettingForm\\"\\n                                    [isFieldMandatory]=\\"true\\"\\n                                    [mandatoryErrorListName]=\\"\'bank account\'\\"\\n                                    [label]=\\"\'To which Bank Account should the \' + (exportSettingForm.value.reimbursableExportType | snakeCaseToSpaceCase | titlecase) + \' be posted to?\'\\"\\n                                    [subLabel]=\\"\'All the offset entry in the Journal will be posted to the selected Bank account\'\\"\\n                                    [destinationAttributes]=\\"bankAccounts\\"\\n                                    [optionLabel]=\\"\'name\'\\"\\n                                    [iconPath]=\\"\'expense\'\\"\\n                                    [placeholder]=\\"\'Select bank account\'\\"\\n                                    [formControllerName]=\\"\'bankAccount\'\\">\\n                                </app-configuration-select-field>\\n                            </div>\\n\\n                            <div *ngIf=\\"helperService.isFieldRequired(exportSettingForm, \'qboExpenseAccount\')\\">\\n                                <app-configuration-select-field\\n                                    [form]=\\"exportSettingForm\\"\\n                                    [isFieldMandatory]=\\"true\\"\\n                                    [mandatoryErrorListName]=\\"\'expense account\'\\"\\n                                    [label]=\\"\'To which Expense Account should the \' + (exportSettingForm.value.reimbursableExportType | snakeCaseToSpaceCase | titlecase) + \' be posted to?\'\\"\\n                                    [subLabel]=\\"\'The expenses exported will be added to the selected Expense Payment Account\'\\"\\n                                    [destinationAttributes]=\\"expenseAccounts\\"\\n                                    [optionLabel]=\\"\'name\'\\"\\n                                    [iconPath]=\\"\'expense\'\\"\\n                                    [placeholder]=\\"\'Select Expense Account\'\\"\\n                                    [formControllerName]=\\"\'qboExpenseAccount\'\\">\\n                                </app-configuration-select-field>\\n                            </div>\\n\\n                            <div *ngIf=\\"(exportSettingForm.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.BILL || (exportSettingForm.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.JOURNAL_ENTRY && exportSettingForm.value.employeeMapping === EmployeeFieldMapping.VENDOR))\\">\\n                                <app-configuration-select-field\\n                                    [form]=\\"exportSettingForm\\"\\n                                    [destinationAttributes]=\\"accountsPayables\\"\\n                                    [optionLabel]=\\"\'name\'\\"\\n                                    [isFieldMandatory]=\\"true\\"\\n                                    [mandatoryErrorListName]=\\"\'accounts payable\'\\"\\n                                    [label]=\\"\'To which Accounts Payable account should the \' + (exportSettingForm.value.reimbursableExportType | snakeCaseToSpaceCase | titlecase) + \' be posted to?\'\\"\\n                                    [subLabel]=\\"\'The integration will post the offset credit entry in \' + (exportSettingForm.value.reimbursableExportType | snakeCaseToSpaceCase | titlecase) + \' to the selected Accounts Payable Account.\'\\"\\n                                    [iconPath]=\\"\'expense\'\\"\\n                                    [placeholder]=\\"\'Select accounts payable\'\\"\\n                                    [formControllerName]=\\"\'accountsPayable\'\\">\\n                                </app-configuration-select-field>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\"exportSettingForm.value.reimbursableExportType\\"\\n                            class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'expense state\'\\"\\n                                [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                                [subLabel]=\\"\'You can export expenses either when they\\\\\'re awaiting payment after approval (Processing) or when the payment has been settled (Closed).\'\\"\\n                                [options]=\\"expenseStateOptions\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Select export state\'\\"\\n                                [formControllerName]=\\"\'expenseState\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n\\n                        <div *ngIf=\\"exportSettingForm.value.reimbursableExportType\\"\\n                            class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'how expenses to be grouped\'\\"\\n                                [label]=\\"\'How should the expenses be grouped?\'\\"\\n                                [subLabel]=\\"\'Expense can either be exported as single line items (Expense) or as a grouped report with multiple line items (Expense Report)\'\\"\\n                                [options]=\\"expenseGroupByOptions\\"\\n                                [iconPath]=\\"\'questionmark\'\\"\\n                                [placeholder]=\\"\'Select expense grouping\'\\"\\n                                [formControllerName]=\\"\'reimbursableExportGroup\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n\\n                        <div *ngIf=\\"exportSettingForm.value.reimbursableExportType\\"\\n                            class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'export date\'\\"\\n                                [label]=\\"\'Set the \' + (exportSettingForm.value.reimbursableExportType | snakeCaseToSpaceCase | titlecase) + \' date as\'\\"\\n                                [subLabel]=\\"\'The selected type of date will reflect in the expenses exported from \' + brandingConfig.brandName + \' to QuickBooks Online.\'\\"\\n                                [options]=\\"reimbursableExpenseGroupingDateOptions\\"\\n                                [iconPath]=\\"\'calender\'\\"\\n                                [formControllerName]=\\"\'reimbursableExportDate\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg\\">\\n                    <app-configuration-toggle-field\\n                        [form]=\\"exportSettingForm\\"\\n                        [label]=\\"\'Export Corporate Card Expenses\'\\"\\n                        [subLabel]=\\"\'Enable this to export the Non-Reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any <b>out-of-pocket</b> expenses will not be exported to QuickBooks Online\'\\"\\n                        [formControllerName]=\\"\'creditCardExpense\'\\" [isSectionHeader]=\\"true\\">\\n                    </app-configuration-toggle-field>\\n                </div>\\n\\n                <div *ngIf=\\"exportSettingForm.value?.creditCardExpense\\">\\n                    <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export module\'\\"\\n                            [label]=\\"\'How should the expenses be exported?\'\\"\\n                            [options]=\\"creditCardExportTypes\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select expense export type\'\\"\\n                            [formControllerName]=\\"\'creditCardExportType\'\\"\\n                            [appName]=\\"appName\\"\\n                            [exportTypeIconPathArray]=\\"previewImagePaths\\">\\n                        </app-configuration-select-field>\\n\\n                        <div *ngIf=\\"showNameInJournalOption\\">\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"false\\"\\n                                [mandatoryErrorListName]=\\"\'Name in which Journal Entry should export\'\\"\\n                                [label]=\\"\'Name in Journal Entry (CCC)\'\\"\\n                                [subLabel]=\\"\'You can select either the \\\\\'Merchant Name\\\\\' or the \\\\\'Employee Name\\\\\' to appear in the \\\\\'Name\\\\\' field of your Journal Entries\'\\"\\n                                [options]=\\"nameInJournalOptions\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Select a name\'\\"\\n                                [formControllerName]=\\"\'nameInJournalEntry\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n\\n                        <div *ngIf=\\"helperService.isFieldRequired(exportSettingForm, \'defaultCCCAccount\')\\">\\n                            <app-configuration-select-field\\n                              [form]=\\"exportSettingForm\\"\\n                              [destinationAttributes]=\\"cccAccounts\\"\\n                              [optionLabel]=\\"\'name\'\\"\\n                              [iconPath]=\\"\'expense\'\\"\\n                              [isFieldMandatory]=\\"true\\"\\n                              [mandatoryErrorListName]=\\"\'credit card account\'\\"\\n                              [label]=\\"\'Set Default Credit Card Account as\'\\"\\n                              [subLabel]=\\"\'Post all your company corporate card transactions to a default credit card account.\'\\"\\n                              [placeholder]=\\"\'Select Default Credit Card Account\'\\"\\n                              [formControllerName]=\\"\'defaultCCCAccount\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n\\n                        <div *ngIf=\\"helperService.isFieldRequired(exportSettingForm, \'defaultDebitCardAccount\')\\">\\n                            <app-configuration-select-field\\n                              [form]=\\"exportSettingForm\\"\\n                              [destinationAttributes]=\\"bankAccounts\\"\\n                              [optionLabel]=\\"\'name\'\\"\\n                              [iconPath]=\\"\'expense\'\\"\\n                              [isFieldMandatory]=\\"true\\"\\n                              [mandatoryErrorListName]=\\"\'debit card account\'\\"\\n                              [label]=\\"\'Set Default Debit Card Account as\'\\"\\n                              [subLabel]=\\"\'Post all your company debit card transactions to a default debit card account.\'\\"\\n                              [placeholder]=\\"\'Select Default Debit Card Account\'\\"\\n                              [formControllerName]=\\"\'defaultDebitCardAccount\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n\\n                        <div *ngIf=\\"helperService.isFieldRequired(exportSettingForm, \'defaultCreditCardVendor\')\\">\\n                            <app-configuration-select-field\\n                              [form]=\\"exportSettingForm\\"\\n                              [destinationAttributes]=\\"vendors\\"\\n                              [optionLabel]=\\"\'name\'\\"\\n                              [iconPath]=\\"\'expense\'\\"\\n                              [isFieldMandatory]=\\"true\\"\\n                              [mandatoryErrorListName]=\\"\'corporate card vendor\'\\"\\n                              [label]=\\"\'Set default corporate Card Vendor as\'\\"\\n                              [subLabel]=\\"\'The default vendor will apply to all corporate card transactions upon export\'\\"\\n                              [placeholder]=\\"\'Select default corporate card vendor\'\\"\\n                              [formControllerName]=\\"\'defaultCreditCardVendor\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n\\n                        <div *ngIf=\\"(exportSettingForm.value.creditCardExportType === QBOCorporateCreditCardExpensesObject.BILL) && !((exportSettingForm.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.BILL || (exportSettingForm.controls.reimbursableExportType.value === QBOReimbursableExpensesObject.JOURNAL_ENTRY && exportSettingForm.value.employeeMapping === EmployeeFieldMapping.VENDOR)))\\">\\n                            <app-configuration-select-field\\n                              [form]=\\"exportSettingForm\\"\\n                              [destinationAttributes]=\\"accountsPayables\\"\\n                              [optionLabel]=\\"\'name\'\\"\\n                              [iconPath]=\\"\'expense\'\\"\\n                              [isFieldMandatory]=\\"true\\"\\n                              [mandatoryErrorListName]=\\"\'accounts payable\'\\"\\n                              [label]=\\"\'To which Accounts Payable account should the \' + (exportSettingForm.value.creditCardExportType | snakeCaseToSpaceCase | titlecase) + \' be posted to?\'\\"\\n                              [subLabel]=\\"\'The integration will post the offset credit entry in \' + (exportSettingForm.value.creditCardExportType | snakeCaseToSpaceCase | titlecase) + \' to the selected Accounts Payable Account.\'\\"\\n                              [placeholder]=\\"\'Select accounts payable\'\\"\\n                              [formControllerName]=\\"\'accountsPayable\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n                    </div>\\n\\n                    <div *ngIf=\\"exportSettingForm.value.creditCardExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'expense state\'\\"\\n                            [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                            [subLabel]=\\"\'You could choose to export CCC expenses when they have been approved and are awaiting payment clearance, OR simply when they have been paid out\'\\"\\n                            [options]=\\"cccExpenseStateOptions\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select CCC expense state\'\\"\\n                            [formControllerName]=\\"\'cccExpenseState\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n\\n                    <div *ngIf=\\"exportSettingForm.value.creditCardExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'how expenses to be grouped\'\\"\\n                            [label]=\\"\'How should the expenses be grouped?\'\\"\\n                            [subLabel]=\\"\'Expense can either be exported as single line items (Expense) or as a grouped report with multiple line items (Expense Report)\'\\"\\n                            [options]=\\"expenseGroupByOptions\\"\\n                            [iconPath]=\\"\'questionmark\'\\"\\n                            [placeholder]=\\"\'Select expense grouping\'\\"\\n                            [formControllerName]=\\"\'creditCardExportGroup\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n\\n                    <div *ngIf=\\"exportSettingForm.value.creditCardExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export date\'\\"\\n                            [label]=\\"\'Set the \' + (exportSettingForm.value.creditCardExportType | snakeCaseToSpaceCase | titlecase) + \' date as\'\\"\\n                            [subLabel]=\\"\'The selected date will reflect in the corporate card expenses exported to QuickBooks Online.\'\\"\\n                            [options]=\\"cccExpenseGroupingDateOptions\\"\\n                            [iconPath]=\\"\'calender\'\\"\\n                            [placeholder]=\\"\'Select the date of the \' + (exportSettingForm.value.creditCardExportType | snakeCaseToSpaceCase | titlecase)\\"\\n                            [formControllerName]=\\"\'creditCardExportDate\'\\">\\n                        </app-configuration-select-field>\\n                    </div>\\n                </div>\\n                <app-configuration-step-footer\\n                    [ctaText]=\\"!isSaveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\"\\n                    [isButtonDisabled]=\\"!exportSettingForm.valid\\"\\n                    [showBackButton]=\\"true\\"\\n                    (save)=\\"save()\\"\\n                    (navigateToPreviousStep)=\\"navigateToPreviousStep()\\">\\n                </app-configuration-step-footer>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n\\n<app-configuration-confirmation-dialog\\n    (warningAccepted)=\\"constructPayloadAndSave($event)\\"\\n    [isWarningVisible]=\\"isConfirmationDialogVisible\\"\\n    [headerText]=\\"\'Change in Configuration\'\\"\\n    [contextText]=\\"warningDialogText\\"\\n    [iconPath]=\\"\'assets/icons/alert_dialog.svg\'\\"\\n    [confirmBtnText]=\\"\'Continue\'\\"\\n    [showSecondaryCTA]=\\"false\\">\\n</app-configuration-confirmation-dialog>\\n"},{"name":"QboImportSettingsComponent","id":"component-QboImportSettingsComponent-f3ece55c46c6dcc1290f3415310ca1848f4d659653c2183c9153cdf95c233a8c21f0f46cc464c902ae76aca2d74c89827253a3ae1b2f911e60109181baccab0e","file":"src/app/integrations/qbo/qbo-shared/qbo-import-settings/qbo-import-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-import-settings","styleUrls":["./qbo-import-settings.component.scss"],"styles":[],"templateUrl":["./qbo-import-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"appName","defaultValue":"AppName.QBO","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":35},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33},{"name":"chartOfAccountTypesList","defaultValue":"QBOImportSettingModel.getChartOfAccountTypesList()","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":67},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":45},{"name":"customField","deprecated":false,"deprecationMessage":"","type":"ExpenseField","optional":false,"description":"","line":63},{"name":"customFieldControl","deprecated":false,"deprecationMessage":"","type":"AbstractControl","optional":false,"description":"","line":61},{"name":"customFieldForm","defaultValue":"this.formBuilder.group({\\n    attribute_type: [\'\', Validators.required],\\n    display_name: [\'\'],\\n    source_placeholder: [\'\', Validators.required]\\n  })","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":47},{"name":"customFieldOption","defaultValue":"ImportSettingsModel.getCustomFieldOption()","deprecated":false,"deprecationMessage":"","type":"ExpenseField[]","optional":false,"description":"","line":65},{"name":"customFieldType","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":59},{"name":"fyleFields","deprecated":false,"deprecationMessage":"","type":"FyleField[]","optional":false,"description":"","line":41},{"name":"importSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":37},{"name":"importSettings","deprecated":false,"deprecationMessage":"","type":"QBOImportSettingGet","optional":false,"description":"","line":57},{"name":"isImportMerchantsAllowed","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":79},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":31},{"name":"isPreviewDialogVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":55},{"name":"isSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":43},{"name":"isTaxGroupSyncAllowed","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":75},{"name":"QBOCorporateCreditCardExpensesObject","defaultValue":"QBOCorporateCreditCardExpensesObject","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":73},{"name":"qboFields","deprecated":false,"deprecationMessage":"","type":"IntegrationField[]","optional":false,"description":"","line":39},{"name":"QBOReimbursableExpensesObject","defaultValue":"QBOReimbursableExpensesObject","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":71},{"name":"showCustomFieldDialog","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":53},{"name":"supportArticleLink","defaultValue":"brandingKbArticles.onboardingArticles.QBO.IMPORT_SETTING","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29},{"name":"taxCodes","deprecated":false,"deprecationMessage":"","type":"DefaultDestinationAttribute[]","optional":false,"description":"","line":77},{"name":"workspaceGeneralSettings","deprecated":false,"deprecationMessage":"","type":"QBOWorkspaceGeneralSetting","optional":false,"description":"","line":69}],"methodsClass":[{"name":"closeDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":101,"deprecated":false,"deprecationMessage":""},{"name":"closeModel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":92,"deprecated":false,"deprecationMessage":""},{"name":"createTaxCodeWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initializeCustomFieldForm","args":[{"name":"shouldShowDialog","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":156,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"shouldShowDialog","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"navigateToPreviousStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":109,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":222,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":105,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":""},{"name":"saveFyleExpenseField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":130,"deprecated":false,"deprecationMessage":""},{"name":"setupFormWatchers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":172,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":193,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showPreviewDialog","args":[{"name":"visible","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"visible","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { forkJoin } from \'rxjs\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { ExpenseField, ImportSettingsModel } from \'src/app/core/models/common/import-settings.model\';\\nimport { DefaultDestinationAttribute, DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { FyleField, IntegrationField } from \'src/app/core/models/db/mapping.model\';\\nimport { AppName, ConfigurationCta, QBOCorporateCreditCardExpensesObject, QBOField, QBOOnboardingState, QBOReimbursableExpensesObject, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { QBOWorkspaceGeneralSetting } from \'src/app/core/models/qbo/db/workspace-general-setting.model\';\\nimport { QBOExportSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model\';\\nimport { QBOImportSettingGet, QBOImportSettingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { QboConnectorService } from \'src/app/core/services/qbo/qbo-configuration/qbo-connector.service\';\\nimport { QboImportSettingsService } from \'src/app/core/services/qbo/qbo-configuration/qbo-import-settings.service\';\\nimport { QboHelperService } from \'src/app/core/services/qbo/qbo-core/qbo-helper.service\';\\n\\n@Component({\\n  selector: \'app-qbo-import-settings\',\\n  templateUrl: \'./qbo-import-settings.component.html\',\\n  styleUrls: [\'./qbo-import-settings.component.scss\']\\n})\\nexport class QboImportSettingsComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  supportArticleLink: string = brandingKbArticles.onboardingArticles.QBO.IMPORT_SETTING;\\n\\n  isOnboarding: boolean;\\n\\n  brandingConfig = brandingConfig;\\n\\n  appName: AppName = AppName.QBO;\\n\\n  importSettingForm: FormGroup;\\n\\n  qboFields: IntegrationField[];\\n\\n  fyleFields: FyleField[];\\n\\n  isSaveInProgress: boolean;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  customFieldForm: FormGroup = this.formBuilder.group({\\n    attribute_type: [\'\', Validators.required],\\n    display_name: [\'\'],\\n    source_placeholder: [\'\', Validators.required]\\n  });\\n\\n  showCustomFieldDialog: boolean;\\n\\n  isPreviewDialogVisible: boolean;\\n\\n  importSettings: QBOImportSettingGet;\\n\\n  customFieldType: string;\\n\\n  customFieldControl: AbstractControl;\\n\\n  customField: ExpenseField;\\n\\n  customFieldOption: ExpenseField[] = ImportSettingsModel.getCustomFieldOption();\\n\\n  chartOfAccountTypesList: string[] = QBOImportSettingModel.getChartOfAccountTypesList();\\n\\n  workspaceGeneralSettings: QBOWorkspaceGeneralSetting;\\n\\n  QBOReimbursableExpensesObject = QBOReimbursableExpensesObject;\\n\\n  QBOCorporateCreditCardExpensesObject = QBOCorporateCreditCardExpensesObject;\\n\\n  isTaxGroupSyncAllowed: boolean;\\n\\n  taxCodes: DefaultDestinationAttribute[];\\n\\n  isImportMerchantsAllowed: boolean;\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private helperService: QboHelperService,\\n    private importSettingService: QboImportSettingsService,\\n    private qboConnectorService: QboConnectorService,\\n    private mappingService: MappingService,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  closeModel() {\\n    this.customFieldForm.reset();\\n    this.showCustomFieldDialog = false;\\n  }\\n\\n  showPreviewDialog(visible: boolean) {\\n    this.isPreviewDialogVisible = visible;\\n  }\\n\\n  closeDialog() {\\n    this.isPreviewDialogVisible = false;\\n  }\\n\\n  refreshDimensions() {\\n    this.helperService.refreshQBODimensions().subscribe();\\n  }\\n\\n  navigateToPreviousStep(): void {\\n    this.router.navigate([`/integrations/qbo/onboarding/export_settings`]);\\n  }\\n\\n  save(): void {\\n    this.isSaveInProgress = true;\\n    const importSettingPayload = QBOImportSettingModel.constructPayload(this.importSettingForm);\\n    this.importSettingService.postImportSettings(importSettingPayload).subscribe(() => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Import settings saved successfully\');\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(QBOOnboardingState.ADVANCED_CONFIGURATION);\\n        this.router.navigate([`/integrations/qbo/onboarding/advanced_settings`]);\\n      }\\n    }, () => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving import settings, please try again later\');\\n    });\\n  }\\n\\n  saveFyleExpenseField(): void {\\n    this.customField = {\\n      attribute_type: this.customFieldForm.value.attribute_type.split(\' \').join(\'_\').toUpperCase(),\\n      display_name: this.customFieldForm.value.attribute_type,\\n      source_placeholder: this.customFieldForm.value.source_placeholder,\\n      is_dependent: false\\n    };\\n\\n    if (this.customFieldControl) {\\n      this.fyleFields.pop();\\n      this.fyleFields.push(this.customField);\\n      this.fyleFields.push(this.customFieldOption[0]);\\n      const expenseField = {\\n        source_field: this.customField.attribute_type,\\n        destination_field: this.customFieldControl.value.destination_field,\\n        import_to_fyle: true,\\n        is_custom: true,\\n        source_placeholder: this.customField.source_placeholder\\n      };\\n      (this.importSettingForm.get(\'expenseFields\') as FormArray).controls.filter(field => field.value.destination_field === this.customFieldControl.value.destination_field)[0].patchValue(expenseField);\\n      ((this.importSettingForm.get(\'expenseFields\') as FormArray).controls.filter(field => field.value.destination_field === this.customFieldControl.value.destination_field)[0] as FormGroup).controls.import_to_fyle.disable();\\n      this.customFieldForm.reset();\\n      this.showCustomFieldDialog = false;\\n    }\\n  }\\n\\n  private initializeCustomFieldForm(shouldShowDialog: boolean) {\\n    this.customFieldForm.reset();\\n    this.showCustomFieldDialog = shouldShowDialog;\\n  }\\n\\n  private createTaxCodeWatcher(): void {\\n    this.importSettingForm.controls.taxCode.valueChanges.subscribe((isTaxCodeEnabled) => {\\n      if (isTaxCodeEnabled) {\\n        this.importSettingForm.controls.defaultTaxCode.setValidators(Validators.required);\\n      } else {\\n        this.importSettingForm.controls.defaultTaxCode.clearValidators();\\n        this.importSettingForm.controls.defaultTaxCode.setValue(null);\\n      }\\n    });\\n  }\\n\\n  private setupFormWatchers(): void {\\n    this.createTaxCodeWatcher();\\n    const expenseFieldArray = this.importSettingForm.get(\'expenseFields\') as FormArray;\\n    expenseFieldArray.controls.forEach((control:any) => {\\n      control.valueChanges.subscribe((value: { source_field: string; destination_field: string; }) => {\\n        if (value.source_field === \'custom_field\') {\\n          this.initializeCustomFieldForm(true);\\n          this.customFieldType = \'\';\\n          this.customFieldControl = control;\\n          this.customFieldControl.patchValue({\\n            source_field: \'\',\\n            destination_field: control.value.destination_field,\\n            import_to_fyle: control.value.import_to_fyle,\\n            is_custom: control.value.is_custom,\\n            source_placeholder: null\\n          });\\n        }\\n      });\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    forkJoin([\\n      this.importSettingService.getImportSettings(),\\n      this.mappingService.getFyleFields(\'v1\'),\\n      this.workspaceService.getWorkspaceGeneralSettings(),\\n      this.qboConnectorService.getQBOCredentials(),\\n      this.mappingService.getDestinationAttributes(QBOField.TAX_CODE, \'v1\', \'qbo\')\\n    ]).subscribe(([importSettingsResponse, fyleFieldsResponse, workspaceGeneralSettings, qboCredentials, taxCodes]) => {\\n      this.qboFields = QBOImportSettingModel.getQBOFields();\\n      this.importSettings = importSettingsResponse;\\n      this.workspaceGeneralSettings = workspaceGeneralSettings;\\n      this.taxCodes = taxCodes.map((option: DestinationAttribute) => QBOExportSettingModel.formatGeneralMappingPayload(option));\\n      this.isImportMerchantsAllowed = !workspaceGeneralSettings.auto_create_merchants_as_vendors;\\n\\n      if (qboCredentials && qboCredentials.country !== \'US\') {\\n        this.isTaxGroupSyncAllowed = true;\\n      }\\n\\n      this.importSettingForm = QBOImportSettingModel.mapAPIResponseToFormGroup(this.importSettings);\\n      this.fyleFields = fyleFieldsResponse;\\n      this.fyleFields.push({ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', is_dependent: true });\\n      this.setupFormWatchers();\\n      this.initializeCustomFieldForm(false);\\n      this.isLoading = false;\\n    });\\n  }\\n\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-multiselect-label {\\n    @apply tw-z-1 tw-px-12-px tw-py-8-px tw-w-270-px #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-header,:host ::ng-deep .p-multiselect-panel .p-multiselect-items {\\n    @apply tw-p-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-items .p-multiselect-item {\\n    @apply tw-mb-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-checkbox {\\n    @apply tw-pt-2-px #{!important};\\n}\\n\\n:host ::ng-deep .p-multiselect-panel .p-multiselect-items .p-multiselect-item {\\n    @apply tw-h-32-px tw-px-16-px tw-py-0 #{!important};\\n}\\n","styleUrl":"./qbo-import-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"QboHelperService","deprecated":false,"deprecationMessage":""},{"name":"importSettingService","type":"QboImportSettingsService","deprecated":false,"deprecationMessage":""},{"name":"qboConnectorService","type":"QboConnectorService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":79,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"QboHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"importSettingService","type":"QboImportSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qboConnectorService","type":"QboConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header [headerText]=\\"\'Import Settings\'\\"\\n            [contentText]=\\"\'In this section, you can choose the fields required to be imported from QuickBooks Online to \' + brandingConfig.brandName + \'. \'\\"\\n            [redirectLink]=\\"supportArticleLink\\" [showSyncButton]=\\"isOnboarding\\" [appName]=\\"appName\\"\\n            (refreshDimension)=\\"refreshDimensions()\\">\\n        </app-configuration-step-header>\\n    </div>\\n    <div>\\n        <form [formGroup]=\\"importSettingForm\\">\\n            <div class=\\"tw-p-24-px\\">\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border\\">\\n                    <app-configuration-toggle-field\\n                        [form]=\\"importSettingForm\\"\\n                        [label]=\\"\'Import the Chart of Accounts as Categories in \' + brandingConfig.brandName\\"\\n                        [subLabel]=\\"\'Imported account will be available as Categories in \' + brandingConfig.brandName\\"\\n                        [formControllerName]=\\"\'importCategories\'\\"\\n                        [isSectionHeader]=\\"false\\"\\n                        [iconPath]=\\"\'arrow-tail-up-down\'\\">\\n                    </app-configuration-toggle-field>\\n\\n                    <div class=\\"tw-p-24-px tw-pl-60-px tw-pt-0\\" *ngIf=\\"importSettingForm.value.importCategories\\">\\n                        <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                            <h5 class=\\"lg:tw-w-3/5 md:tw-w-1/2 tw-text-slightly-normal-text-color tw-text-14-px !tw-font-500\\">\\n                                Select the accounts from QuickBooks to import as categories in Fyle\\n                                <p class=\\"tw-pt-8-px tw-text-faded-text-color\\">\\n                                    By default expense will be selected. Open the dropdown to select more as per your requirements\\n                                </p>\\n                            </h5>\\n                            <div class=\\"p-field-checkbox tw-pl-34-px\\">\\n                                <p-multiSelect [optionDisabled]=\\"\'Expense\'\\" [placeholder]=\\"\'Select Chart of Accouts\'\\" [options]=\\"chartOfAccountTypesList\\" styleClass=\\"tw-z-2\\" [formControlName]=\\"\'chartOfAccountTypes\'\\">\\n                                </p-multiSelect>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-mt-24-px\\" *ngIf=\\"workspaceGeneralSettings.reimbursable_expenses_object !== QBOReimbursableExpensesObject.JOURNAL_ENTRY && workspaceGeneralSettings.corporate_credit_card_expenses_object !== QBOCorporateCreditCardExpensesObject.JOURNAL_ENTRY\\">\\n                    <app-configuration-toggle-field\\n                      [form]=\\"importSettingForm\\"\\n                      [label]=\\"\'Import Products/Services from QuickBooks Online\'\\"\\n                      [subLabel]=\\"\'Products/services from QuickBooks Online will be imported as Categories in \' + brandingConfig.brandName\\"\\n                      [formControllerName]=\\"\'importItems\'\\"\\n                      [iconPath]=\\"\'arrow-tail-up-down\'\\">\\n                    </app-configuration-toggle-field>\\n                </div>\\n\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-mt-24-px\\" *ngIf=\\"isTaxGroupSyncAllowed\\">\\n                    <app-configuration-toggle-field\\n                      [form]=\\"importSettingForm\\"\\n                      [label]=\\"\'Import Tax from QuickBooks Online\'\\"\\n                      [subLabel]=\\"\'The imported Tax codes from QuickBooks Online will be set as Tax group in \' + brandingConfig.brandName + \'. This will be a selectable field while creating an expense.\'\\"\\n                      [formControllerName]=\\"\'taxCode\'\\"\\n                      [iconPath]=\\"\'arrow-tail-up-down\'\\"\\n                      [hasDependentFields]=\\"true\\">\\n                    </app-configuration-toggle-field>\\n\\n                    <app-configuration-select-field *ngIf=\\"importSettingForm.value.taxCode\\"\\n                        [form]=\\"importSettingForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'tax code\'\\"\\n                        [label]=\\"\'Select Default Tax Code\'\\"\\n                        [subLabel]=\\"\'If an expense from \' + brandingConfig.brandName + \' does not contain any tax group information during export, the default tax code will be used.\'\\"\\n                        [destinationAttributes]=\\"taxCodes\\"\\n                        [optionLabel]=\\"\'name\'\\"\\n                        [placeholder]=\\"\'Select tax code\'\\"\\n                        [formControllerName]=\\"\'defaultTaxCode\'\\">\\n                    </app-configuration-select-field>\\n                  </div>\\n\\n                  <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-mt-24-px\\" *ngIf=\\"isImportMerchantsAllowed\\">\\n                    <app-configuration-toggle-field\\n                        [form]=\\"importSettingForm\\"\\n                        [label]=\\"\'Import Vendors from QuickBooks Online\'\\"\\n                        [subLabel]=\\"\'Vendors from QuickBooks Online will be imported as merchants in \' + brandingConfig.brandName + \' and will be a selectable field while creating an expense.\'\\"\\n                        [formControllerName]=\\"\'importVendorsAsMerchants\'\\"\\n                        [iconPath]=\\"\'arrow-tail-up-down\'\\">\\n                    </app-configuration-toggle-field>\\n                  </div>\\n\\n                <div>\\n                    <app-configuration-import-field\\n                        [form]=\\"importSettingForm\\"\\n                        [appName]=\\"appName\\"\\n                        [accountingFieldOptions]=\\"qboFields\\"\\n                        [fyleFieldOptions]=\\"fyleFields\\"\\n                        [isDestinationFixedImport]=\\"true\\">\\n                    </app-configuration-import-field>\\n                </div>\\n            </div>\\n            <div>\\n                <app-configuration-step-footer\\n                    [ctaText] = \\"!isSaveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\"\\n                    [isButtonDisabled]=\\"!importSettingForm.valid\\"\\n                    [showBackButton]=\\"true\\"\\n                    (save)=\\"save()\\"\\n                    (navigateToPreviousStep)=\\"navigateToPreviousStep()\\"></app-configuration-step-footer>\\n            </div>\\n        </form>\\n    </div>\\n</div>\\n<div>\\n    <app-configuration-custom-field-creation-dialog\\n        [customFieldForm]=\\"customFieldForm\\"\\n        [showCustomFieldCreationDialog]=\\"showCustomFieldDialog\\"\\n        (saveCustomFieldFn)=\\"saveFyleExpenseField()\\"\\n        (closeModelFn)=\\"closeModel()\\">\\n    </app-configuration-custom-field-creation-dialog>\\n</div>\\n<div *ngIf=\\"isPreviewDialogVisible\\">\\n    <app-preview-dialog\\n        [isPreviewDialogVisible]=\\"true\\"\\n        [iconPath]=\\"\'assets/illustrations/sageIntacct/IntacctImportSettings.png\'\\" (closeDialog)=\\"closeDialog()\\"\\n        [header]=\\"\'Preview\'\\">\\n    </app-preview-dialog>\\n</div>\\n"},{"name":"QboMainComponent","id":"component-QboMainComponent-b5901dd88a6869dba1ef7f6db2dbd906edc71560d41363daefa06e0d8f78cc3db21a806fdb19f0a3761b10778e0c72f659ad7dc4221d6015399f54594581a5a6","file":"src/app/integrations/qbo/qbo-main/qbo-main.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-main","styleUrls":["./qbo-main.component.scss"],"styles":[],"templateUrl":["./qbo-main.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":24},{"name":"appName","defaultValue":"AppName.QBO","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":15},{"name":"modules","defaultValue":"[\\n    {label: \'Dashboard\', routerLink: \'/integrations/qbo/main/dashboard\'},\\n    {label: \'Export Log\', routerLink: \'/integrations/qbo/main/export_log\'},\\n    {label: \'Mapping\', routerLink: \'/integrations/qbo/main/mapping\'},\\n    {label: \'Configuration\', routerLink: \'/integrations/qbo/main/configuration\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":17}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\nimport { AppName } from \'src/app/core/models/enum/enum.model\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\nimport { QboHelperService } from \'src/app/core/services/qbo/qbo-core/qbo-helper.service\';\\n\\n@Component({\\n  selector: \'app-qbo-main\',\\n  templateUrl: \'./qbo-main.component.html\',\\n  styleUrls: [\'./qbo-main.component.scss\']\\n})\\nexport class QboMainComponent implements OnInit {\\n\\n  appName: AppName = AppName.QBO;\\n\\n  modules: MenuItem[] = [\\n    {label: \'Dashboard\', routerLink: \'/integrations/qbo/main/dashboard\'},\\n    {label: \'Export Log\', routerLink: \'/integrations/qbo/main/export_log\'},\\n    {label: \'Mapping\', routerLink: \'/integrations/qbo/main/mapping\'},\\n    {label: \'Configuration\', routerLink: \'/integrations/qbo/main/configuration\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private accountingExportService: AccountingExportService,\\n    private qboHelperService: QboHelperService,\\n    private router: Router\\n  ) { }\\n\\n  refreshDimensions() {\\n    this.qboHelperService.refreshFyleDimensions().subscribe();\\n    this.accountingExportService.importExpensesFromFyle(\'v1\').subscribe();\\n  }\\n\\n  private setupPage() {\\n    this.activeModule = this.modules[0];\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-main.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""},{"name":"qboHelperService","type":"QboHelperService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":24,"jsdoctags":[{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qboHelperService","type":"QboHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <app-main-menu [modules]=\\"modules\\" [activeItem]=\\"modules[0]\\" [appName]=\\"appName\\" [isDropdrownRequired]=\\"false\\" (refreshDimensionClick)=\\"refreshDimensions()\\"></app-main-menu>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n"},{"name":"QboMappingComponent","id":"component-QboMappingComponent-6f2d2628142280c402add9a5151f804d6891977b58c160ba20dd3f071b38c1d9f13a742de4965c3c7ddcc752fd7397c5ab1dff91acd69a512c74961886a7105d","file":"src/app/integrations/qbo/qbo-main/qbo-mapping/qbo-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-mapping","styleUrls":["./qbo-mapping.component.scss"],"styles":[],"templateUrl":["./qbo-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":23},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":16},{"name":"mappingPages","defaultValue":"[\\n    {label: \'Employee\', routerLink: \'/integrations/qbo/main/mapping/employee\'},\\n    {label: \'Category\', routerLink: \'/integrations/qbo/main/mapping/category\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":18}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":30,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { TitleCasePipe } from \'@angular/common\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\nimport { FyleField } from \'src/app/core/models/enum/enum.model\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { SnakeCaseToSpaceCasePipe } from \'src/app/shared/pipes/snake-case-to-space-case.pipe\';\\n\\n@Component({\\n  selector: \'app-qbo-mapping\',\\n  templateUrl: \'./qbo-mapping.component.html\',\\n  styleUrls: [\'./qbo-mapping.component.scss\']\\n})\\nexport class QboMappingComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  mappingPages: MenuItem[] = [\\n    {label: \'Employee\', routerLink: \'/integrations/qbo/main/mapping/employee\'},\\n    {label: \'Category\', routerLink: \'/integrations/qbo/main/mapping/category\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private mappingService: MappingService,\\n    private router: Router\\n  ) { }\\n\\n  private setupPage(): void {\\n    this.mappingService.getMappingSettings().subscribe((response) => {\\n      if (response.results && Array.isArray(response.results)) {\\n        response.results.forEach((item) => {\\n          if (item.source_field !== FyleField.EMPLOYEE && item.source_field !== FyleField.CATEGORY) {\\n            this.mappingPages.push({\\n              label: new TitleCasePipe().transform(new SnakeCaseToSpaceCasePipe().transform(item.source_field)),\\n              routerLink: `/integrations/qbo/main/mapping/${item.source_field.toLowerCase()}`\\n            });\\n          }\\n        });\\n      }\\n      this.router.navigateByUrl(this.mappingPages[0].routerLink);\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":23,"jsdoctags":[{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-40-px tw-px-120-px\\">\\n    <app-sub-menu [modules]=\\"mappingPages\\" [activeModule]=\\"mappingPages[0]\\"></app-sub-menu>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n"},{"name":"QboOnboardingAdvancedSettingsComponent","id":"component-QboOnboardingAdvancedSettingsComponent-cb4419bff29170de895c8f8f6d795d1cbbd01e46905fd7a95e9bc0a6b243124bf153ed040adff98dd853cdc717c0f4f2b1cee1a57f42597f9035e0a614ff5d85","file":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-advanced-settings/qbo-onboarding-advanced-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-onboarding-advanced-settings","styleUrls":["./qbo-onboarding-advanced-settings.component.scss"],"styles":[],"templateUrl":["./qbo-onboarding-advanced-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"new QBOOnboardingModel().getOnboardingSteps(\'Advanced Settings\', this.workspaceService.getOnboardingState())","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { QBOOnboardingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\n\\n@Component({\\n  selector: \'app-qbo-onboarding-advanced-settings\',\\n  templateUrl: \'./qbo-onboarding-advanced-settings.component.html\',\\n  styleUrls: [\'./qbo-onboarding-advanced-settings.component.scss\']\\n})\\nexport class QboOnboardingAdvancedSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = new QBOOnboardingModel().getOnboardingSteps(\'Advanced Settings\', this.workspaceService.getOnboardingState());\\n\\n  constructor(\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-onboarding-advanced-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    <app-qbo-advanced-settings></app-qbo-advanced-settings>\\n</div>\\n"},{"name":"QboOnboardingComponent","id":"component-QboOnboardingComponent-82ebaa3f6f8c3ee3e899903d59603a8f0294fdc165276808bb569b415f92f81fa6ea55ab418a5932a15c13931f2c73926d94cb275eb1393b855d601a5fa92b07","file":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-onboarding","styleUrls":["./qbo-onboarding.component.scss"],"styles":[],"templateUrl":["./qbo-onboarding.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-qbo-onboarding\',\\n  templateUrl: \'./qbo-onboarding.component.html\',\\n  styleUrls: [\'./qbo-onboarding.component.scss\']\\n})\\nexport class QboOnboardingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-onboarding.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>\\n"},{"name":"QboOnboardingConnectorComponent","id":"component-QboOnboardingConnectorComponent-054b783868246af3f825105d6f503f004b96d9b783c94610da0de5597a9ef7c0f8cb4c55ca74fb0c13959c3afc8d7468ca0e18727c6f35d7e6298e4bbd8bc0e7","file":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-connector/qbo-onboarding-connector.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-onboarding-connector","styleUrls":["./qbo-onboarding-connector.component.scss"],"styles":[],"templateUrl":["./qbo-onboarding-connector.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"BrandingConfiguration","optional":false,"description":"","line":37},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":39},{"name":"fyleOrgName","defaultValue":"this.userService.getUserProfile().org_name","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":59,"modifierKind":[148]},{"name":"isCloneSettingsDisabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":61,"modifierKind":[123]},{"name":"isContinueDisabled","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":47},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33},{"name":"isQboConnected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":55},{"name":"isWarningDialogVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":51},{"name":"oauthCallbackSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":57,"modifierKind":[123]},{"name":"onboardingSteps","defaultValue":"new QBOOnboardingModel().getOnboardingSteps(\'Connect to QuickBooks Online\', this.workspaceService.getOnboardingState())","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":31},{"name":"primaryButtonText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":67},{"name":"qboCompanyName","deprecated":false,"deprecationMessage":"","type":"string | null","optional":false,"description":"","line":45},{"name":"qboConnectionInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":43},{"name":"qboTokenExpired","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":53},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.QBO.CONNECTOR","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":35},{"name":"saveInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":41},{"name":"showDisconnectQBO","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":49},{"name":"warningContextText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":65},{"name":"warningEvent","deprecated":false,"deprecationMessage":"","type":"ConfigurationWarningEvent","optional":false,"description":"","line":69},{"name":"warningHeaderText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":63}],"methodsClass":[{"name":"acceptWarning","args":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":108,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"checkCloneSettingsAvailablity","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":128,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"connectQbo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":""},{"name":"continueToNextStep","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":""},{"name":"disconnectQbo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":""},{"name":"getSettings","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":188,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":225,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":221,"deprecated":false,"deprecationMessage":""},{"name":"postQboCredentials","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""},{"name":"realmId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":161,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"realmId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":209,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showOrHideDisconnectQBO","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":145,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute, Router } from \'@angular/router\';\\nimport { ConfirmEventType } from \'primeng/api\';\\nimport { Subscription } from \'rxjs\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { BrandingConfiguration } from \'src/app/core/models/branding/branding-configuration.model\';\\nimport { CloneSettingExist } from \'src/app/core/models/common/clone-setting.model\';\\nimport { ConfigurationCta, ConfigurationWarningEvent, QBOOnboardingState, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { ConfigurationWarningOut } from \'src/app/core/models/misc/configuration-warning.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { QBOCredential } from \'src/app/core/models/qbo/db/qbo-credential.model\';\\nimport { QBOConnectorModel, QBOConnectorPost } from \'src/app/core/models/qbo/qbo-configuration/qbo-connector.model\';\\nimport { QBOOnboardingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model\';\\nimport { CloneSettingService } from \'src/app/core/services/common/clone-setting.service\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { UserService } from \'src/app/core/services/misc/user.service\';\\nimport { QboConnectorService } from \'src/app/core/services/qbo/qbo-configuration/qbo-connector.service\';\\nimport { QboExportSettingsService } from \'src/app/core/services/qbo/qbo-configuration/qbo-export-settings.service\';\\nimport { QboHelperService } from \'src/app/core/services/qbo/qbo-core/qbo-helper.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-qbo-onboarding-connector\',\\n  templateUrl: \'./qbo-onboarding-connector.component.html\',\\n  styleUrls: [\'./qbo-onboarding-connector.component.scss\']\\n})\\nexport class QboOnboardingConnectorComponent implements OnInit, OnDestroy {\\n\\n  onboardingSteps: OnboardingStepper[] = new QBOOnboardingModel().getOnboardingSteps(\'Connect to QuickBooks Online\', this.workspaceService.getOnboardingState());\\n\\n  isLoading: boolean = true;\\n\\n  redirectLink: string = brandingKbArticles.onboardingArticles.QBO.CONNECTOR;\\n\\n  brandingConfig: BrandingConfiguration = brandingConfig;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  saveInProgress: boolean = false;\\n\\n  qboConnectionInProgress: boolean = false;\\n\\n  qboCompanyName: string | null;\\n\\n  isContinueDisabled: boolean = true;\\n\\n  showDisconnectQBO: boolean = false;\\n\\n  isWarningDialogVisible: boolean = false;\\n\\n  qboTokenExpired: boolean = false;\\n\\n  isQboConnected: boolean = false;\\n\\n  private oauthCallbackSubscription: Subscription;\\n\\n  readonly fyleOrgName: string = this.userService.getUserProfile().org_name;\\n\\n  private isCloneSettingsDisabled: boolean;\\n\\n  warningHeaderText: string;\\n\\n  warningContextText: string;\\n\\n  primaryButtonText: string;\\n\\n  warningEvent: ConfigurationWarningEvent;\\n\\n  constructor(\\n    private cloneSettingService: CloneSettingService,\\n    private helperService: HelperService,\\n    private qboConnectorService: QboConnectorService,\\n    private qboHelperService: QboHelperService,\\n    private qboExportSettingsService: QboExportSettingsService,\\n    private route: ActivatedRoute,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private userService: UserService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  connectQbo(): void {\\n    this.qboConnectionInProgress = true;\\n    const url = `${environment.qbo_authorize_uri}?client_id=${environment.qbo_oauth_client_id}&scope=com.intuit.quickbooks.accounting&response_type=code&redirect_uri=${environment.qbo_oauth_redirect_uri}&state=qbo_local_redirect`;\\n\\n    this.oauthCallbackSubscription = this.helperService.oauthCallbackUrl.subscribe((callbackURL: string) => {\\n      const code = callbackURL.split(\'code=\')[1].split(\'&\')[0];\\n      const realmId = callbackURL.split(\'realmId=\')[1].split(\'&\')[0];\\n      this.postQboCredentials(code, realmId);\\n    });\\n\\n    this.helperService.oauthHandler(url);\\n  }\\n\\n  continueToNextStep(): void {\\n    if (this.isContinueDisabled) {\\n      return;\\n    } else if (this.isCloneSettingsDisabled) {\\n      this.router.navigate([\'/integrations/qbo/onboarding/employee_settings\']);\\n      return;\\n    }\\n\\n    this.checkCloneSettingsAvailablity();\\n  }\\n\\n  acceptWarning(data: ConfigurationWarningOut): void {\\n    this.isWarningDialogVisible = false;\\n    if (data.hasAccepted) {\\n      if (data.event === ConfigurationWarningEvent.INCORRECT_QBO_ACCOUNT_CONNECTED) {\\n        this.router.navigate([`/integrations/qbo/onboarding/landing`]);\\n      } else if (data.event === ConfigurationWarningEvent.CLONE_SETTINGS) {\\n        this.router.navigate([\'/integrations/qbo/onboarding/clone_settings\']);\\n      }\\n    }\\n  }\\n\\n  disconnectQbo(): void {\\n    this.isLoading = true;\\n    this.qboConnectorService.disconnectQBOConnection().subscribe(() => {\\n      this.showDisconnectQBO = false;\\n      this.qboCompanyName = null;\\n      this.getSettings();\\n    });\\n  }\\n\\n  private checkCloneSettingsAvailablity(): void {\\n    this.cloneSettingService.checkCloneSettingsExists().subscribe((response: CloneSettingExist) => {\\n      if (response.is_available) {\\n        this.warningHeaderText = \'Your settings are pre-filled\';\\n        this.warningContextText = `Your previous organization\'s settings <b>(${response.workspace_name})</b> have been copied over to the current organization\\n        <br><br>You can change the settings or reset the configuration to restart the process from the beginning<br>`;\\n        this.primaryButtonText = \'Continue\';\\n        this.warningEvent = ConfigurationWarningEvent.CLONE_SETTINGS;\\n        this.isWarningDialogVisible = true;\\n        this.isContinueDisabled = false;\\n        this.isCloneSettingsDisabled = true;\\n      } else {\\n        this.router.navigate([\'/integrations/qbo/onboarding/employee_settings\']);\\n      }\\n    });\\n  }\\n\\n  private showOrHideDisconnectQBO(): void {\\n    this.qboExportSettingsService.getExportSettings().subscribe(exportSettings => {\\n      // Do nothing\\n      this.isContinueDisabled = false;\\n      this.isLoading = false;\\n\\n      if (!(exportSettings.workspace_general_settings?.reimbursable_expenses_object || exportSettings.workspace_general_settings?.corporate_credit_card_expenses_object)) {\\n        this.showDisconnectQBO = true;\\n      }\\n    }, () => {\\n      // Showing Disconnect QBO button since the customer didn\'t set up the next step\\n      this.showDisconnectQBO = true;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  private postQboCredentials(code: string, realmId: string): void {\\n    const payload: QBOConnectorPost = QBOConnectorModel.constructPayload(code, realmId);\\n\\n    this.qboConnectorService.connectQBO(payload).subscribe((qboCredential: QBOCredential) => {\\n      this.qboHelperService.refreshQBODimensions().subscribe(() => {\\n        this.workspaceService.setOnboardingState(QBOOnboardingState.MAP_EMPLOYEES);\\n        this.qboConnectionInProgress = false;\\n        this.qboCompanyName = qboCredential.company_name;\\n        this.isQboConnected = true;\\n        this.qboTokenExpired = false;\\n        this.showOrHideDisconnectQBO();\\n      });\\n    }, (error) => {\\n      const errorMessage = \'message\' in error.error ? error.error.message : \'Failed to connect to QuickBooks Online. Please try again\';\\n      if (errorMessage === \'Please choose the correct QuickBooks Online account\') {\\n        this.warningHeaderText = \'Incorrect account selected\';\\n        this.warningContextText = \'You had previously set up the integration with a different QuickBooks Online account. Please choose the same to restore the settings\';\\n        this.primaryButtonText = \'Re connect\';\\n        this.warningEvent = ConfigurationWarningEvent.INCORRECT_QBO_ACCOUNT_CONNECTED;\\n        this.isWarningDialogVisible = true;\\n      } else {\\n        this.toastService.displayToastMessage(ToastSeverity.ERROR, errorMessage);\\n        this.router.navigate([`/integrations/qbo/onboarding/landing`]);\\n      }\\n    });\\n  }\\n\\n  private getSettings(): void {\\n    this.qboConnectorService.getQBOCredentials().subscribe((qboCredential: QBOCredential) => {\\n      this.qboCompanyName = qboCredential.company_name;\\n      this.showOrHideDisconnectQBO();\\n      this.isQboConnected = true;\\n    }, (error) => {\\n      // Token expired\\n      if (\'id\' in error.error) {\\n        // We have a QBO row present in DB\\n        this.qboTokenExpired = error.error.is_expired;\\n        if (this.qboTokenExpired) {\\n          this.qboCompanyName = error.error.company_name;\\n        }\\n      }\\n\\n      this.isQboConnected = false;\\n      this.isContinueDisabled = true;\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    const code = this.route.snapshot.queryParams.code;\\n    const realmId = this.route.snapshot.queryParams.realmId;\\n    if (code && realmId) {\\n      this.isLoading = false;\\n      this.qboConnectionInProgress = true;\\n      this.postQboCredentials(code, realmId);\\n    } else {\\n      this.getSettings();\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n  ngOnDestroy(): void {\\n    if (this.oauthCallbackSubscription) {\\n      this.oauthCallbackSubscription.unsubscribe();\\n    }\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-onboarding-connector.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"cloneSettingService","type":"CloneSettingService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"qboConnectorService","type":"QboConnectorService","deprecated":false,"deprecationMessage":""},{"name":"qboHelperService","type":"QboHelperService","deprecated":false,"deprecationMessage":""},{"name":"qboExportSettingsService","type":"QboExportSettingsService","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":69,"jsdoctags":[{"name":"cloneSettingService","type":"CloneSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qboConnectorService","type":"QboConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qboHelperService","type":"QboHelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qboExportSettingsService","type":"QboExportSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit","OnDestroy"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    <div>\\n        <div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-pt-80-px\\">\\n            <app-loader></app-loader>\\n        </div>\\n        <div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-24-px\\">\\n            <div>\\n                <app-configuration-step-header\\n                    [headerText]=\\"\'Connect to QuickBooks Online\'\\"\\n                    [contentText]=\\"\'Connect to the QuickBooks Online Company from which you would like to import and export data. The \' + brandingConfig.brandName + \' org and QuickBooks Online company cannot be changed once the configuration steps are complete\'\\"\\n                    [redirectLink]=\\"redirectLink\\">\\n                </app-configuration-step-header>\\n            </div>\\n            <app-configuration-connector\\n                [accountingAppTitle]=\\"\'QuickBooks Online Company\'\\"\\n                [accountingCompanyName]=\\"qboCompanyName\\"\\n                [fyleOrgName]=\\"fyleOrgName\\"\\n                [accountingCompanyTokenExpired]=\\"qboTokenExpired\\"\\n                [isAccountingCompanyConnected]=\\"isQboConnected\\"\\n                [showDisconnect]=\\"showDisconnectQBO\\"\\n                [accountingCompanyConnectionInProgress]=\\"qboConnectionInProgress\\"\\n                [switchLinkText]=\\"\'Disconnect\'\\"\\n                (switchCompany)=\\"disconnectQbo()\\"\\n                (connectCompany)=\\"connectQbo()\\">\\n            </app-configuration-connector>\\n\\n            <app-configuration-confirmation-dialog\\n                (warningAccepted)=\\"acceptWarning($event)\\"\\n                [isWarningVisible]=\\"isWarningDialogVisible\\"\\n                [event]=\\"warningEvent\\"\\n                [headerText]=\\"warningHeaderText\\"\\n                [contextText]=\\"warningContextText\\"\\n                [iconPath]=\\"\'assets/icons/alert_dialog.svg\'\\"\\n                [confirmBtnText]=\\"primaryButtonText\\"\\n                [showSecondaryCTA]=\\"false\\">\\n            </app-configuration-confirmation-dialog>\\n\\n            <div>\\n                <app-configuration-step-footer [ctaText]=\\"!saveInProgress ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVING\\" [isButtonDisabled]=\\"isContinueDisabled\\" (save)=\\"continueToNextStep()\\"></app-configuration-step-footer>\\n             </div>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"QboOnboardingDoneComponent","id":"component-QboOnboardingDoneComponent-468f5c3f28d595f8da9faacc89539ad4c68c1c391f0af389e0b69063bf7bc5761b03df657c2f69832c1866db8ef49082c24e807ae0b179a6870a873fa2f4d74a","file":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-done/qbo-onboarding-done.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-onboarding-done","styleUrls":["./qbo-onboarding-done.component.scss"],"styles":[],"templateUrl":["./qbo-onboarding-done.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"navigateToDashboard","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-qbo-onboarding-done\',\\n  templateUrl: \'./qbo-onboarding-done.component.html\',\\n  styleUrls: [\'./qbo-onboarding-done.component.scss\']\\n})\\nexport class QboOnboardingDoneComponent implements OnInit {\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n  navigateToDashboard(): void {\\n    this.router.navigate([`/integrations/qbo/main/dashboard`]);\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-onboarding-done.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<app-onboarding-done (launchIntegrationClick)=\\"navigateToDashboard()\\"></app-onboarding-done>\\n"},{"name":"QboOnboardingEmployeeSettingsComponent","id":"component-QboOnboardingEmployeeSettingsComponent-2fef70a5930db88802b7899342b0cd6de62e8a09a363d370f6f09f4080e93c26cc97d1584ef13b4fed80e9c63ac60931072993fc0d96470de6a76dcfa92561d4","file":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-employee-settings/qbo-onboarding-employee-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-onboarding-employee-settings","styleUrls":["./qbo-onboarding-employee-settings.component.scss"],"styles":[],"templateUrl":["./qbo-onboarding-employee-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"new QBOOnboardingModel().getOnboardingSteps(\'Map Employees\', this.workspaceService.getOnboardingState())","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { QBOOnboardingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\n\\n@Component({\\n  selector: \'app-qbo-onboarding-employee-settings\',\\n  templateUrl: \'./qbo-onboarding-employee-settings.component.html\',\\n  styleUrls: [\'./qbo-onboarding-employee-settings.component.scss\']\\n})\\nexport class QboOnboardingEmployeeSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = new QBOOnboardingModel().getOnboardingSteps(\'Map Employees\', this.workspaceService.getOnboardingState());\\n\\n  constructor(\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-onboarding-employee-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    <app-qbo-employee-settings></app-qbo-employee-settings>\\n</div>\\n"},{"name":"QboOnboardingExportSettingsComponent","id":"component-QboOnboardingExportSettingsComponent-7d67529e727ccd0d6fe3328a41f78e5aae4d7bd8f983c704a07439e0d4e8bfe053a65bd086cbe21e42170ad73e52a81539c9046b307f0e1d1e9edfffcd23451a","file":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-export-settings/qbo-onboarding-export-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-onboarding-export-settings","styleUrls":["./qbo-onboarding-export-settings.component.scss"],"styles":[],"templateUrl":["./qbo-onboarding-export-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"new QBOOnboardingModel().getOnboardingSteps(\'Export Settings\', this.workspaceService.getOnboardingState())","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { QBOOnboardingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\n\\n@Component({\\n  selector: \'app-qbo-onboarding-export-settings\',\\n  templateUrl: \'./qbo-onboarding-export-settings.component.html\',\\n  styleUrls: [\'./qbo-onboarding-export-settings.component.scss\']\\n})\\nexport class QboOnboardingExportSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = new QBOOnboardingModel().getOnboardingSteps(\'Export Settings\', this.workspaceService.getOnboardingState());\\n\\n  constructor(\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-onboarding-export-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    <app-qbo-export-settings></app-qbo-export-settings>\\n</div>\\n"},{"name":"QboOnboardingImportSettingsComponent","id":"component-QboOnboardingImportSettingsComponent-0819f1d39ea160ade9f862c0509d0e6c7408cc3c19bf069d3365e9031f452d2b618dee3db9b801ac494075ab6673b5e9e9152f7ace7e68e29170cc13607fb11e","file":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-import-settings/qbo-onboarding-import-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-onboarding-import-settings","styleUrls":["./qbo-onboarding-import-settings.component.scss"],"styles":[],"templateUrl":["./qbo-onboarding-import-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"new QBOOnboardingModel().getOnboardingSteps(\'Import Settings\', this.workspaceService.getOnboardingState())","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { QBOOnboardingModel } from \'src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\n\\n@Component({\\n  selector: \'app-qbo-onboarding-import-settings\',\\n  templateUrl: \'./qbo-onboarding-import-settings.component.html\',\\n  styleUrls: [\'./qbo-onboarding-import-settings.component.scss\']\\n})\\nexport class QboOnboardingImportSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = new QBOOnboardingModel().getOnboardingSteps(\'Import Settings\', this.workspaceService.getOnboardingState());\\n\\n  constructor(\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-onboarding-import-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <div>\\n        <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    </div>\\n    <div>\\n        <app-qbo-import-settings></app-qbo-import-settings>\\n    </div>\\n</div>\\n"},{"name":"QboOnboardingLandingComponent","id":"component-QboOnboardingLandingComponent-d09571e870d7251d9f93c7f6ddf540c8e82c7182160233a1a529fc4ea5a18da367882b8d769281e47e69ef11049fa468ff9d49875b554d8231ed0e779c9b48dd","file":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-landing/qbo-onboarding-landing.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-onboarding-landing","styleUrls":["./qbo-onboarding-landing.component.scss"],"styles":[],"templateUrl":["./qbo-onboarding-landing.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22},{"name":"embedVideoLink","defaultValue":"brandingDemoVideoLinks.onboarding.QBO","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":26},{"name":"isIncorrectQBOConnectedDialogVisible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28},{"name":"oauthCallbackSubscription","deprecated":false,"deprecationMessage":"","type":"Subscription","optional":false,"description":"","line":30,"modifierKind":[123]},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.QBO.CONNECTOR","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24}],"methodsClass":[{"name":"acceptWarning","args":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"checkProgressAndRedirect","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""},{"name":"realmId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":75,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"realmId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"connectQbo","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":47,"deprecated":false,"deprecationMessage":""},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":94,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":""},{"name":"postQboCredentials","args":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":""},{"name":"realmId","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":59,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"code","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"realmId","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnDestroy, OnInit } from \'@angular/core\';\\nimport { NavigationExtras, Router } from \'@angular/router\';\\nimport { Subscription } from \'rxjs\';\\nimport { brandingConfig, brandingDemoVideoLinks, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { QBOOnboardingState, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { ConfigurationWarningOut } from \'src/app/core/models/misc/configuration-warning.model\';\\nimport { QBOCredential } from \'src/app/core/models/qbo/db/qbo-credential.model\';\\nimport { QBOConnectorModel, QBOConnectorPost } from \'src/app/core/models/qbo/qbo-configuration/qbo-connector.model\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { QboConnectorService } from \'src/app/core/services/qbo/qbo-configuration/qbo-connector.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-qbo-onboarding-landing\',\\n  templateUrl: \'./qbo-onboarding-landing.component.html\',\\n  styleUrls: [\'./qbo-onboarding-landing.component.scss\']\\n})\\nexport class QboOnboardingLandingComponent implements OnInit, OnDestroy {\\n\\n  brandingConfig = brandingConfig;\\n\\n  redirectLink = brandingKbArticles.onboardingArticles.QBO.CONNECTOR;\\n\\n  embedVideoLink = brandingDemoVideoLinks.onboarding.QBO;\\n\\n  isIncorrectQBOConnectedDialogVisible: boolean = false;\\n\\n  private oauthCallbackSubscription: Subscription;\\n\\n  constructor(\\n    private helperService: HelperService,\\n    private qboConnectorService: QboConnectorService,\\n    private router: Router,\\n    private toastService: IntegrationsToastService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  acceptWarning(data: ConfigurationWarningOut): void {\\n    this.isIncorrectQBOConnectedDialogVisible = false;\\n    if (data.hasAccepted) {\\n      this.router.navigate([`/integrations/qbo/onboarding/landing`]);\\n    }\\n  }\\n\\n  connectQbo(): void {\\n    const url = `${environment.qbo_authorize_uri}?client_id=${environment.qbo_oauth_client_id}&scope=com.intuit.quickbooks.accounting&response_type=code&redirect_uri=${environment.qbo_oauth_redirect_uri}&state=qbo_local_redirect`;\\n\\n    this.helperService.oauthCallbackUrl.subscribe((callbackURL: string) => {\\n      const code = callbackURL.split(\'code=\')[1].split(\'&\')[0];\\n      const realmId = callbackURL.split(\'realmId=\')[1].split(\'&\')[0];\\n      this.checkProgressAndRedirect(code, realmId);\\n    });\\n\\n    this.helperService.oauthHandler(url);\\n  }\\n\\n  private postQboCredentials(code: string, realmId: string): void {\\n    const payload: QBOConnectorPost = QBOConnectorModel.constructPayload(code, realmId);\\n\\n    this.qboConnectorService.connectQBO(payload).subscribe((qboCredential: QBOCredential) => {\\n      this.router.navigate([`/integrations/qbo/main/dashboard`]);\\n    }, (error) => {\\n      const errorMessage = \'message\' in error.error ? error.error.message : \'Failed to connect to QuickBooks Online. Please try again\';\\n      if (errorMessage === \'Please choose the correct QuickBooks Online account\') {\\n        this.isIncorrectQBOConnectedDialogVisible = true;\\n      } else {\\n        this.toastService.displayToastMessage(ToastSeverity.ERROR, errorMessage);\\n        this.router.navigate([`/integrations/qbo/onboarding/landing`]);\\n      }\\n    });\\n  }\\n\\n  private checkProgressAndRedirect(code: string, realmId: string): void {\\n    const onboardingState: QBOOnboardingState = this.workspaceService.getOnboardingState();\\n    const navigationExtras: NavigationExtras = {\\n      queryParams: {\\n        code,\\n        realmId\\n      }\\n    };\\n\\n    if (onboardingState !== QBOOnboardingState.COMPLETE) {\\n      this.router.navigate([\'integrations/qbo/onboarding/connector\'], navigationExtras);\\n    } else {\\n      this.postQboCredentials(code, realmId);\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n  ngOnDestroy(): void {\\n    if (this.oauthCallbackSubscription) {\\n      this.oauthCallbackSubscription.unsubscribe();\\n    }\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-onboarding-landing.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"qboConnectorService","type":"QboConnectorService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":30,"jsdoctags":[{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"qboConnectorService","type":"QboConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit","OnDestroy"],"templateData":"<div *ngIf=\\"!isIncorrectQBOConnectedDialogVisible\\">\\n    <div>\\n        <app-landing-page-header [showQBOButton]=\\"true\\" [iconPath]=\\"\'assets/logos/qbo.svg\'\\" [appName]=\\"\'QuickBooks Online\'\\" [appDescription]=\\"\'Import data from QuickBooks Online to \' + brandingConfig.brandName + \' and Export expenses from \' + brandingConfig.brandName + \' to QuickBooks Online. \'\\" [isLoading]=\\"false\\" [isIntegrationSetupInProgress]=\\"false\\" [isIntegrationConnected]=\\"false\\" [redirectLink]=\\"redirectLink\\" (connectIntegration)=\\"connectQbo()\\"></app-landing-page-header>\\n    </div>\\n    <div>\\n        <app-landing-page-body [headlineText]=\\"\'Guide to setup your Integrations\'\\" [headerText]=\\"\'A quick guide to help you set up the integration quick and easy.\'\\" [embedVideo]=\\"embedVideoLink\\" [svgPath]=\\"\'assets/flow-charts/fyle-qbo-data-flow.svg\'\\"></app-landing-page-body>\\n    </div>\\n</div>\\n<app-configuration-confirmation-dialog *ngIf=\\"isIncorrectQBOConnectedDialogVisible\\"\\n    (warningAccepted)=\\"acceptWarning($event)\\"\\n    [isWarningVisible]=\\"isIncorrectQBOConnectedDialogVisible\\"\\n    [headerText]=\\"\'Incorrect account selected\'\\"\\n    [contextText]=\\"\'You had previously set up the integration with a different QuickBooks Online account. Please choose the same to restore the settings\'\\"\\n    [iconPath]=\\"\'assets/icons/alert_dialog.svg\'\\"\\n    [confirmBtnText]=\\"\'Re connect\'\\"\\n    [showSecondaryCTA]=\\"false\\">\\n</app-configuration-confirmation-dialog>\\n"},{"name":"QboSkippedExportLogComponent","id":"component-QboSkippedExportLogComponent-9a32f9e7b14789c6516d2c4114de5c3aea03dd2af4a743f1934dfa1269394ac96160e170817df72717854625a1c23f7fe4513d30ff22eeec6336baa700773c99","file":"src/app/integrations/qbo/qbo-main/qbo-export-log/qbo-skipped-export-log/qbo-skipped-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-qbo-skipped-export-log","styleUrls":["./qbo-skipped-export-log.component.scss"],"styles":[],"templateUrl":["./qbo-skipped-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":36},{"name":"dateOptions","defaultValue":"AccountingExportModel.getDateOptions()","deprecated":false,"deprecationMessage":"","type":"DateFilter[]","optional":false,"description":"","line":26},{"name":"expenses","deprecated":false,"deprecationMessage":"","type":"SkipExportList[]","optional":false,"description":"","line":28},{"name":"filteredExpenses","deprecated":false,"deprecationMessage":"","type":"SkipExportList[]","optional":false,"description":"","line":30},{"name":"isDateSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":38},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":32},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":34},{"name":"selectedDateFilter","deprecated":false,"deprecationMessage":"","type":"SelectedDateFilter | null","optional":false,"description":"","line":40},{"name":"skipExportLogForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":24},{"name":"totalCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":22}],"methodsClass":[{"name":"getSkippedExpenses","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":58,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSkippedExpensesAndSetupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleSimpleSearch","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":129,"deprecated":false,"deprecationMessage":""},{"name":"pageChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":81,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":95,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup } from \'@angular/forms\';\\nimport { AccountingExportModel, SkippedAccountingExportModel } from \'src/app/core/models/db/accounting-export.model\';\\nimport { PaginatorPage } from \'src/app/core/models/enum/enum.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { DateFilter, SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { SkipExportList, SkipExportLog, SkipExportLogResponse } from \'src/app/core/models/si/db/expense-group.model\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\nimport { ExportLogService } from \'src/app/core/services/common/export-log.service\';\\nimport { PaginatorService } from \'src/app/core/services/common/paginator.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\n\\n@Component({\\n  selector: \'app-qbo-skipped-export-log\',\\n  templateUrl: \'./qbo-skipped-export-log.component.html\',\\n  styleUrls: [\'./qbo-skipped-export-log.component.scss\']\\n})\\nexport class QboSkippedExportLogComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  totalCount: number = 0;\\n\\n  skipExportLogForm: FormGroup;\\n\\n  dateOptions: DateFilter[] = AccountingExportModel.getDateOptions();\\n\\n  expenses: SkipExportList[];\\n\\n  filteredExpenses: SkipExportList[];\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  currentPage: number = 1;\\n\\n  isDateSelected: boolean = false;\\n\\n  selectedDateFilter: SelectedDateFilter | null;\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private exportLogService: ExportLogService,\\n    private accountingExportService: AccountingExportService,\\n    private windowService: WindowService,\\n    private paginatorService: PaginatorService\\n  ) { }\\n\\n  public handleSimpleSearch(event: any) {\\n    const query = event.target.value.toLowerCase();\\n\\n    this.filteredExpenses = this.expenses.filter((group: SkipExportList) => {\\n      return SkippedAccountingExportModel.getfilteredSkippedAccountingExports(query, group);\\n    });\\n  }\\n\\n  getSkippedExpenses(limit: number, offset: number) {\\n    this.isLoading = true;\\n    const skippedExpenseGroup: SkipExportList[] = [];\\n\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.EXPORT_LOG, limit);\\n    }\\n\\n    return this.exportLogService.getSkippedExpenses(limit, offset).subscribe((skippedExpenses: SkipExportLogResponse) => {\\n      if (!this.isDateSelected) {\\n        this.totalCount = skippedExpenses.count;\\n      }\\n\\n      skippedExpenses.results.forEach((skippedExpense: SkipExportLog) => {\\n        skippedExpenseGroup.push(SkippedAccountingExportModel.parseAPIResponseToSkipExportList(skippedExpense));\\n      });\\n\\n      this.filteredExpenses = skippedExpenseGroup;\\n      this.expenses = [...this.filteredExpenses];\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    this.limit = limit;\\n    this.currentPage = 1;\\n    this.getSkippedExpenses(limit, this.offset);\\n  }\\n\\n  pageChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.offset = offset;\\n    this.currentPage = Math.ceil(offset / this.limit) + 1;\\n    this.getSkippedExpenses(this.limit, offset);\\n  }\\n\\n  private setupForm(): void {\\n    this.skipExportLogForm = this.formBuilder.group({\\n      searchOption: [\'\'],\\n      dateRange: [null],\\n      start: [\'\'],\\n      end: [\'\']\\n    });\\n\\n    this.skipExportLogForm.controls.dateRange.valueChanges.subscribe((dateRange) => {\\n      const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n      if (dateRange) {\\n        this.selectedDateFilter = {\\n          startDate: dateRange.startDate,\\n          endDate: dateRange.endDate\\n        };\\n\\n        this.getSkippedExpenses(paginator.limit, paginator.offset);\\n      } else {\\n        this.selectedDateFilter = null;\\n        this.getSkippedExpenses(paginator.limit, paginator.offset);\\n      }\\n    });\\n  }\\n\\n  private getSkippedExpensesAndSetupPage(): void {\\n    this.setupForm();\\n\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n\\n    this.getSkippedExpenses(paginator.limit, paginator.offset);\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSkippedExpensesAndSetupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./qbo-skipped-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":""},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-shadow-app-card tw-bg-white tw-border-1-px tw-border-separator\\">\\n    <div>\\n        <app-export-log-filter *ngIf=\\"totalCount > 0 || selectedDateFilter\\"\\n            [exportLogForm]=\\"skipExportLogForm\\"\\n            [dateOptions]=\\"dateOptions\\"\\n            (handleSimpleSearch)=\\"handleSimpleSearch($event)\\">\\n        </app-export-log-filter>\\n\\n        <app-skipped-export-log-table [filteredExpense]=\\"filteredExpenses\\">\\n        </app-skipped-export-log-table>\\n\\n        <div *ngIf=\\"filteredExpenses.length > 0\\" class=\\"tw-p-24-px tw-border-t-1-px\\">\\n            <app-paginator\\n                [dropDownValue]=\\"limit\\"\\n                [page]=\\"currentPage\\"\\n                [totalCount]=\\"totalCount\\"\\n                (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\"\\n                (pageOffsetChangeEvent)=\\"pageChanges($event)\\">\\n            </app-paginator>\\n        </div>\\n\\n        <app-zero-state-with-illustration *ngIf=\\"!filteredExpenses.length && !selectedDateFilter && totalCount > 0\\"\\n            [mainText]=\\"\'Sorry, no results found!\'\\"\\n            [subText]=\\"\'We could not find what you were looking for. Kindly check the keywords again.\'\\">\\n        </app-zero-state-with-illustration>\\n\\n    </div>\\n\\n    <app-zero-state-with-illustration *ngIf=\\"totalCount === 0\\"\\n    [mainText]=\\"\'No records to show yet!\'\\"\\n    [subText]=\\"\'All your expenses that were skipped from exporting will be stored here.\'\\">\\n    </app-zero-state-with-illustration>\\n</div>\\n"},{"name":"RedirectComponent","id":"component-RedirectComponent-1d4594a8cf097f5d98b83727c58f53a6373091b0c72f7c7625db1125ae81e9e08be5321e2d278c8bec6db637fe9c29f864c8bdc94d6ce19785a97814cade661b","file":"src/app/auth/redirect/redirect.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-redirect","styleUrls":["./redirect.component.scss"],"styles":[],"templateUrl":["./redirect.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":""},{"name":"redirectToFyleOAuth","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupNavigation","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-redirect\',\\n  templateUrl: \'./redirect.component.html\',\\n  styleUrls: [\'./redirect.component.scss\']\\n})\\nexport class RedirectComponent implements OnInit {\\n\\n  constructor(\\n    private route: ActivatedRoute,\\n    private windowService: WindowService\\n  ) { }\\n\\n  private redirectToFyleOAuth(): void {\\n    const url = `${environment.fyle_app_url}/app/developers/#/oauth/authorize?client_id=${environment.fyle_client_id}&redirect_uri=${environment.callback_uri}&response_type=code`;\\n    this.windowService.redirect(url);\\n  }\\n\\n  private setupNavigation(): void {\\n    if (this.route.snapshot.queryParams?.state) {\\n      if (this.route.snapshot.queryParams?.state.includes(\'travelperk_local_redirect\')) {\\n        const orgId = this.route.snapshot.queryParams.state.split(\'_\')[0];\\n        const url = `http://localhost:4200/oauth/travelperk?code=${this.route.snapshot.queryParams.code}&state=${orgId}`;\\n        this.windowService.redirect(url);\\n      } else if (this.route.snapshot.queryParams?.state === \'qbo_local_redirect\' || this.route.snapshot.queryParams?.state === \'business_central_local_redirect\') {\\n        const url = `http://localhost:4200/integrations/oauth_callback?code=${this.route.snapshot.queryParams.code}&realmId=${this.route.snapshot.queryParams.realmId}`;\\n        this.windowService.redirect(url);\\n      }\\n    } else {\\n      this.redirectToFyleOAuth();\\n    }\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupNavigation();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./redirect.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":11,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":""},{"name":"Sage300AdvancedSettingsComponent","id":"component-Sage300AdvancedSettingsComponent-59628d703766a80326709524bf8a7995938bfdf76ab6c51625327b6b363a46a37203af01304fe3364e16ca1e6ff795a0cd40bfbdbcb952c0aeb65d4e334d9fcb","file":"src/app/integrations/sage300/sage300-shared/sage300-advanced-settings/sage300-advanced-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-advanced-settings","styleUrls":["./sage300-advanced-settings.component.scss"],"styles":[],"templateUrl":["./sage300-advanced-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"adminEmails","deprecated":false,"deprecationMessage":"","type":"EmailOption[]","optional":false,"description":"","line":39},{"name":"advancedSetting","deprecated":false,"deprecationMessage":"","type":"Sage300AdvancedSettingGet | null","optional":false,"description":"","line":37},{"name":"advancedSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":29},{"name":"appName","defaultValue":"AppName.SAGE300","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":47},{"name":"conditionFieldOptions","deprecated":false,"deprecationMessage":"","type":"ConditionField[]","optional":false,"description":"","line":35},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":53},{"name":"defaultMemoOptions","defaultValue":"[\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\']","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":55},{"name":"expenseFilters","deprecated":false,"deprecationMessage":"","type":"ExpenseFilterResponse","optional":false,"description":"","line":33},{"name":"hours","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"HourOption[]","optional":false,"description":"","line":49},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":45},{"name":"isReimbursableExpense","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":51},{"name":"isSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":41},{"name":"memoPreviewText","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":57},{"name":"memoStructure","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"string[]","optional":false,"description":"","line":59},{"name":"sageIntacctJobs","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":65},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":63},{"name":"skipExportForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":31},{"name":"skipExportRedirectLink","defaultValue":"brandingKbArticles.onboardingArticles.SAGE300.SKIP_EXPORT","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":61},{"name":"supportArticleLink","defaultValue":"brandingKbArticles.onboardingArticles.SAGE300.ADVANCED_SETTING","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":43}],"methodsClass":[{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":171,"deprecated":false,"deprecationMessage":""},{"name":"createMemoStructureWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":127,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"deleteExpenseFilter","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"formatMemoPreview","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"formWatchers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":137,"deprecated":false,"deprecationMessage":""},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":218,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":239,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":107,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":212,"deprecated":false,"deprecationMessage":""},{"name":"saveSkipExportFields","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":149,"deprecated":false,"deprecationMessage":""},{"name":"skipExportWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { catchError, forkJoin, of } from \'rxjs\';\\nimport { ConditionField, EmailOption, ExpenseFilterResponse, ExpenseFilter, HourOption, SkipExportModel, ExpenseFilterPayload, SkipExportValidatorRule } from \'src/app/core/models/common/advanced-settings.model\';\\nimport { AppName, ConfigurationCta, Page, Sage300OnboardingState, Sage300UpdateEvent, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { Sage300AdvancedSettingGet, Sage300AdvancedSettingModel } from \'src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { Sage300AdvancedSettingsService } from \'src/app/core/services/sage300/sage300-configuration/sage300-advanced-settings.service\';\\nimport { Sage300HelperService } from \'src/app/core/services/sage300/sage300-helper/sage300-helper.service\';\\nimport { expenseFilterCondition, adminEmails, expenseFiltersGet, sage300AdvancedSettingResponse, destinationAttributes } from \'../fixture\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { Router } from \'@angular/router\';\\nimport { Sage300DestinationAttributes } from \'src/app/core/models/sage300/db/sage300-destination-attribuite.model\';\\nimport { brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { environment } from \'src/environments/environment\';\\nimport { SkipExportService } from \'src/app/core/services/common/skip-export.service\';\\n\\n@Component({\\n  selector: \'app-sage300-advanced-settings\',\\n  templateUrl: \'./sage300-advanced-settings.component.html\',\\n  styleUrls: [\'./sage300-advanced-settings.component.scss\']\\n})\\nexport class Sage300AdvancedSettingsComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  advancedSettingForm: FormGroup;\\n\\n  skipExportForm: FormGroup;\\n\\n  expenseFilters: ExpenseFilterResponse;\\n\\n  conditionFieldOptions: ConditionField[];\\n\\n  advancedSetting: Sage300AdvancedSettingGet | null;\\n\\n  adminEmails: EmailOption[];\\n\\n  isSaveInProgress: boolean;\\n\\n  supportArticleLink: string = brandingKbArticles.onboardingArticles.SAGE300.ADVANCED_SETTING;\\n\\n  isOnboarding: boolean;\\n\\n  appName: string = AppName.SAGE300;\\n\\n  hours: HourOption[] = [];\\n\\n  isReimbursableExpense: boolean = false;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  defaultMemoOptions: string[] = [\'employee_email\', \'purpose\', \'category\', \'spent_on\', \'report_number\', \'expense_link\'];\\n\\n  memoPreviewText: string;\\n\\n  memoStructure: string[] = [];\\n\\n  skipExportRedirectLink: string = brandingKbArticles.onboardingArticles.SAGE300.SKIP_EXPORT;\\n\\n  sessionStartTime: Date = new Date();\\n\\n  sageIntacctJobs: Sage300DestinationAttributes[];\\n\\n  constructor(\\n    private advancedSettingsService: Sage300AdvancedSettingsService,\\n    private helper: HelperService,\\n    private helperService: Sage300HelperService,\\n    private skipExportService: SkipExportService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService,\\n    private workspaceService: WorkspaceService,\\n    private router: Router\\n  ) { }\\n\\n  private formatMemoPreview(): void {\\n    const time = Date.now();\\n    const today = new Date(time);\\n\\n    const previewValues: { [key: string]: string } = {\\n      employee_email: \'john.doe@acme.com\',\\n      category: \'Meals and Entertainment\',\\n      purpose: \'Client Meeting\',\\n      merchant: \'Pizza Hut\',\\n      report_number: \'C/2021/12/R/1\',\\n      spent_on: today.toLocaleDateString(),\\n      expense_link: `${environment.fyle_app_url}/app/main/#/enterprise/view_expense/`\\n    };\\n    this.memoPreviewText = \'\';\\n    const memo: string[] = [];\\n    this.memoStructure.forEach((field, index) => {\\n      if (field in previewValues) {\\n        const defaultIndex = this.defaultMemoOptions.indexOf(this.memoStructure[index]);\\n        memo[defaultIndex] = previewValues[field];\\n      }\\n    });\\n    memo.forEach((field, index) => {\\n      this.memoPreviewText += field;\\n      if (index + 1 !== memo.length) {\\n        this.memoPreviewText = this.memoPreviewText + \' - \';\\n      }\\n    });\\n  }\\n\\n  refreshDimensions(isRefresh: boolean) {\\n    this.helperService.importAttributes(isRefresh);\\n  }\\n\\n  deleteExpenseFilter(rank: number) {\\n    this.skipExportService.deleteExpenseFilter(rank).subscribe();\\n  }\\n\\n  skipExportWatcher(): void {\\n    this.advancedSettingForm.controls.skipExport.valueChanges.subscribe((isSelected) => {\\n      if (isSelected) {\\n        const fields = [\'condition1\', \'operator1\', \'value1\'];\\n        this.helper.handleSkipExportFormUpdates(this.skipExportForm, fields, true);\\n      } else {\\n        const fields = [\'condition1\', \'operator1\', \'value1\', \'condition2\', \'operator2\', \'value2\', \'join_by\'];\\n        this.helper.handleSkipExportFormUpdates(this.skipExportForm, fields, false);\\n      }\\n    });\\n  }\\n\\n  private createMemoStructureWatcher(): void {\\n    this.memoStructure = this.advancedSettingForm.value.memoStructure;\\n    this.formatMemoPreview();\\n    this.advancedSettingForm.controls.memoStructure.valueChanges.subscribe((memoChanges) => {\\n      this.memoStructure = memoChanges;\\n      this.formatMemoPreview();\\n    });\\n  }\\n\\n\\n  formWatchers() {\\n    this.skipExportWatcher();\\n    this.createMemoStructureWatcher();\\n    const skipExportFormWatcherFields: SkipExportValidatorRule = {\\n      condition1: [\'operator1\', \'value1\'],\\n      condition2: [\'operator2\', \'value2\'],\\n      operator1: [\'value1\'],\\n      operator2: [\'value2\']\\n    };\\n    this.helper.setConfigurationSettingValidatorsAndWatchers(skipExportFormWatcherFields, this.skipExportForm);\\n  }\\n\\n  saveSkipExportFields(): void {\\n    if (!this.skipExportForm.valid) {\\n      return;\\n    }\\n    let valueField = this.skipExportForm.getRawValue();\\n    if (!valueField.condition1.field_name) {\\n      return;\\n    }\\n    valueField = SkipExportModel.constructSkipExportValue(valueField);\\n    valueField.rank = 1;\\n    const skipExportRank1: ExpenseFilterPayload = SkipExportModel.constructExportFilterPayload(valueField);\\n    const payload1 = SkipExportModel.constructSkipExportPayload(skipExportRank1, this.skipExportForm.value.value1);\\n    this.skipExportService.postExpenseFilter(payload1).subscribe((skipExport1: ExpenseFilter) => {\\n      if (valueField.condition2 && valueField.operator2) {\\n        valueField.rank = 2;\\n        const skipExportRank2: ExpenseFilterPayload = SkipExportModel.constructExportFilterPayload(valueField);\\n        const payload2 = SkipExportModel.constructSkipExportPayload(skipExportRank2, this.skipExportForm.value.value2);\\n        this.skipExportService.postExpenseFilter(payload2).subscribe((skipExport2: ExpenseFilter) => {});\\n      }\\n    });\\n  }\\n\\n  constructPayloadAndSave(){\\n    this.isSaveInProgress = true;\\n    if (!this.advancedSettingForm.value.skipExport && this.expenseFilters.results.length > 0){\\n      this.expenseFilters.results.forEach((value) => {\\n        this.deleteExpenseFilter(value.rank);\\n      });\\n    }\\n    if (this.advancedSettingForm.value.skipExport) {\\n      this.saveSkipExportFields();\\n    }\\n    this.isSaveInProgress = true;\\n    const advancedSettingPayload = Sage300AdvancedSettingModel.createAdvancedSettingPayload(this.advancedSettingForm);\\n    this.advancedSettingsService.postAdvancedSettings(advancedSettingPayload).subscribe((advancedSettingsResponse: Sage300AdvancedSettingGet) => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Advanced settings saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.ADVANCED_SETTINGS_SAGE300, this.sessionStartTime);\\n      if (this.workspaceService.getOnboardingState() === Sage300OnboardingState.ADVANCED_SETTINGS) {\\n        this.trackingService.onOnboardingStepCompletion(Sage300OnboardingState.ADVANCED_SETTINGS, 3, advancedSettingPayload);\\n      } else {\\n        this.trackingService.onUpdateEvent(\\n          Sage300UpdateEvent.ADVANCED_SETTINGS_SAGE300,\\n          {\\n            phase: this.helper.getPhase(this.isOnboarding),\\n            oldState: this.advancedSetting,\\n            newState: advancedSettingsResponse\\n          }\\n        );\\n      }\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(Sage300OnboardingState.COMPLETE);\\n        this.router.navigate([`/integrations/sage300/onboarding/done`]);\\n      }\\n\\n\\n    }, () => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving advanced settings, please try again later\');\\n      });\\n  }\\n\\n  save(): void {\\n    if (this.advancedSettingForm.valid && this.skipExportForm.valid) {\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    for (let i = 1; i <= 24; i++) {\\n      this.hours.push({ label: `${i}`, value: i });\\n    }\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    forkJoin([\\n      this.advancedSettingsService.getAdvancedSettings().pipe(catchError(() => of(null))),\\n      this.skipExportService.getExpenseFilter(),\\n      this.skipExportService.getExpenseFields()\\n    ]).subscribe(([sage300AdvancedSettingResponse, expenseFiltersGet, expenseFilterCondition]) => {\\n      this.advancedSetting = sage300AdvancedSettingResponse;\\n      this.expenseFilters = expenseFiltersGet;\\n      this.conditionFieldOptions = expenseFilterCondition;\\n      const isSkipExportEnabled = expenseFiltersGet.count > 0;\\n      this.advancedSettingForm = Sage300AdvancedSettingModel.mapAPIResponseToFormGroup(this.advancedSetting, isSkipExportEnabled);\\n      this.skipExportForm = SkipExportModel.setupSkipExportForm(this.expenseFilters, [], this.conditionFieldOptions);\\n      this.formWatchers();\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSettingsAndSetupForm();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".preview-text {\\n    @apply tw-text-14-px tw-font-400 tw-text-faded-text-color tw-pb-24-px tw-pl-62-px tw-pr-24-px #{!important} ;\\n}\\n\\n.preview-box {\\n    @apply tw-p-10-px tw-bg-disabled-bg-color tw-rounded-8-px #{!important} ;\\n}","styleUrl":"./sage300-advanced-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"advancedSettingsService","type":"Sage300AdvancedSettingsService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"Sage300HelperService","deprecated":false,"deprecationMessage":""},{"name":"skipExportService","type":"SkipExportService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":65,"jsdoctags":[{"name":"advancedSettingsService","type":"Sage300AdvancedSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"Sage300HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"skipExportService","type":"SkipExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header \\n            [headerText]=\\"\'Advanced Settings\'\\"\\n            [contentText]=\\"\'In this section, you can customize the integration based on your accounting requirements. \'\\"\\n            [redirectLink]=\\"supportArticleLink\\"\\n            [showSyncButton]=\\"isOnboarding\\"\\n            [appName]=\\"appName\\"\\n            (refreshDimension)=\\"refreshDimensions($event)\\">\\n        </app-configuration-step-header>\\n    </div>\\n    <form [formGroup]=\\"advancedSettingForm\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-mb-16-px\\">\\n                <app-configuration-step-sub-header\\n                    [label]=\\"\'Automation\'\\"\\n                    [subLabel]=\\"\'You can automate the export and sync of your data in this section.\'\\">\\n                </app-configuration-step-sub-header>\\n            </div>\\n            <div class=\\"tw-mb-16-px\\">\\n                <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                    <app-configuration-toggle-field \\n                        [form]=\\"advancedSettingForm\\"\\n                        [label]=\\"\'Schedule automatic export\'\\" \\n                        [subLabel]=\\"\'Set up a schedule to frequently automate the export of expenses from Fyle to Sage 300 CRE.\'\\" \\n                        [formControllerName]=\\"\'scheduleEnabled\'\\"\\n                        [iconPath]=\\"\'calender\'\\">\\n                    </app-configuration-toggle-field>\\n                    <div *ngIf=\\"advancedSettingForm.value.scheduleEnabled\\">\\n                        <app-configuration-schedule-export\\n                            [form]=\\"advancedSettingForm\\"\\n                            [isFieldMandatory]=\\"false\\"\\n                            [mandatoryErrorListName]=\\"\'automatic export method\'\\"\\n                            [label]=\\"\'Set up export frequency\'\\"\\n                            [subLabel]=\\"\'Set a frequency based on how often you want your expenses in Fyle to be exported to Sage 300 CRE\'\\"\\n                            [options]=\\"hours\\"\\n                            [placeholder]=\\"\'Set Schedule\'\\"\\n                            [formControllerName]=\\"\'scheduleAutoExportFrequency\'\\">\\n                        </app-configuration-schedule-export>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\"tw-mb-16-px\\">\\n                <app-configuration-step-sub-header\\n                    [label]=\\"\'Customization\'\\"\\n                    [subLabel]=\\"\'In this section, you can customize the data that you\\\\\'d like to export from Fyle to Sage 300 CRE. You can choose what data points need to be exported and what shouldn\\\\\'t be.\'\\">\\n                </app-configuration-step-sub-header>\\n            </div>\\n            <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                <app-configuration-multi-select\\n                    [form]=\\"advancedSettingForm\\"\\n                    [isFieldMandatory]=\\"false\\"\\n                    [mandatoryErrorListName]=\\"\'Item level description\'\\"\\n                    [label]=\\"\'Set the line item-level Description Field in Sage 300 CRE\'\\"\\n                    [subLabel]=\\"\'You can choose from a list of available data points that you\\\\\'d like to export to the description field in Sage 300 CRE and re-order them as per your requirement.\'\\"\\n                    [options]=\\"defaultMemoOptions\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [placeholder]=\\"\'Set description\'\\"\\n                    [formControllerName]=\\"\'memoStructure\'\\">\\n                </app-configuration-multi-select>\\n                <div class=\\"preview-text\\">\\n                    <h4 class=\\"tw-mb-12-px\\">Preview of the Description Field</h4>\\n                    <div class=\\"preview-box\\">\\n                        {{memoPreviewText}}\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                <app-configuration-toggle-field \\n                    [form]=\\"advancedSettingForm\\"\\n                    [label]=\\"\'Skip export of specific expenses from Fyle to Sage 300 CRE\'\\" \\n                    [subLabel]=\\"\'You could choose to skip expenses from Fyle to Sage 300 CRE by setting up a conditional rule.\'\\" \\n                    [formControllerName]=\\"\'skipExport\'\\"\\n                    [iconPath]=\\"\'expense\'\\"\\n                    [redirectLink]=\\"skipExportRedirectLink\\">\\n                </app-configuration-toggle-field>\\n                <div *ngIf=\\"advancedSettingForm.value.skipExport\\">\\n                    <app-configuration-skip-export\\n                    [enableSkipExport]=\\"advancedSettingForm.value.skipExport\\"\\n                    [skipExportForm]=\\"skipExportForm\\"\\n                    [expenseFilter]=\\"expenseFilters\\"\\n                    [conditionFieldOptions]=\\"conditionFieldOptions\\"\\n                    (deleteSkipExportForm)=\\"deleteExpenseFilter($event)\\">\\n                    </app-configuration-skip-export>\\n                </div>\\n            </div>\\n            \x3c!-- <div class=\\"tw-mb-16-px\\">\\n                <app-configuration-step-sub-header\\n                    [label]=\\"\'Other Preferences\'\\"\\n                    [subLabel]=\\"\'Based on your preference, you can choose whether you want to create any new records in Sage 300 CRE from Fyle. (when there is no employee record found, or when the accounting period is closed)\'\\">\\n                </app-configuration-step-sub-header>\\n            </div>\\n            <div class=\\"tw-rounded-12-px tw-border-separator tw-border tw-bg-white tw-mb-16-px\\">\\n                <app-configuration-toggle-field \\n                    [form]=\\"advancedSettingForm\\"\\n                    [label]=\\"\'Auto-Create Vendor\'\\" \\n                    [subLabel]=\\"\'When matching Vendor record is not found for an employee in Fyle, the integration will auto-create a new record in Sage 300 CRE.\'\\" \\n                    [formControllerName]=\\"\'autoCreateVendor\'\\"\\n                    [iconPath]=\\"\'people\'\\">\\n                </app-configuration-toggle-field>\\n            </div> --\x3e\\n        </div>\\n        <div>\\n            <app-configuration-step-footer [ctaText] = \\"!isSaveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!advancedSettingForm.valid\\"></app-configuration-step-footer>\\n        </div>\\n    </form>\\n</div>\\n"},{"name":"Sage300BaseMappingComponent","id":"component-Sage300BaseMappingComponent-908cb70f61782e4a9e6a5e37ed964609e16784a521fa6834d0947d0c7d8ce4232a334ecf299803c66d08c96afc8d48891ef27ebab4f2fd6c2d159694ae4c3176","file":"src/app/integrations/sage300/sage300-main/sage300-mapping/sage300-base-mapping/sage300-base-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-base-mapping","styleUrls":["./sage300-base-mapping.component.scss"],"styles":[],"templateUrl":["./sage300-base-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"AppName","defaultValue":"AppName","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31},{"name":"cccExpenseObject","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":25},{"name":"destinationField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":17},{"name":"destinationOptions","deprecated":false,"deprecationMessage":"","type":"DestinationAttribute[]","optional":false,"description":"","line":29},{"name":"employeeFieldMapping","defaultValue":"FyleField.VENDOR","deprecated":false,"deprecationMessage":"","type":"FyleField","optional":false,"description":"","line":27},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":19},{"name":"reimbursableExpenseObject","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":23},{"name":"showAutoMapEmployee","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":21},{"name":"sourceField","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":15}],"methodsClass":[{"name":"getSourceType","args":[],"optional":false,"returnType":"\\"\\" | \\"VENDOR\\" | \\"ACCOUNT\\"","typeParameters":[],"line":50,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":88,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""},{"name":"triggerAutoMapEmployees","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":39,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { ActivatedRoute } from \'@angular/router\';\\nimport { DestinationAttribute } from \'src/app/core/models/db/destination-attribute.model\';\\nimport { AppName, FyleField, IntegrationName, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\n\\n@Component({\\n  selector: \'app-sage300-base-mapping\',\\n  templateUrl: \'./sage300-base-mapping.component.html\',\\n  styleUrls: [\'./sage300-base-mapping.component.scss\']\\n})\\nexport class Sage300BaseMappingComponent implements OnInit {\\n\\n  sourceField: string;\\n\\n  destinationField: string;\\n\\n  isLoading: boolean = true;\\n\\n  showAutoMapEmployee: boolean = false;\\n\\n  reimbursableExpenseObject: string;\\n\\n  cccExpenseObject: string;\\n\\n  employeeFieldMapping: FyleField = FyleField.VENDOR;\\n\\n  destinationOptions: DestinationAttribute[];\\n\\n  AppName = AppName;\\n\\n  constructor(\\n    private route: ActivatedRoute,\\n    private mappingService: MappingService,\\n    private toastService: IntegrationsToastService\\n  ) { }\\n\\n  triggerAutoMapEmployees() {\\n    this.isLoading = true;\\n    this.mappingService.triggerAutoMapEmployees().subscribe(() => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Auto mapping of employees may take few minutes\');\\n    }, () => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Something went wrong, please try again\');\\n    });\\n  }\\n\\n  getSourceType() {\\n    if (this.sourceField===\'EMPLOYEE\') {\\n      return \'VENDOR\';\\n    }\\n\\n    if (this.sourceField===\'CATEGORY\') {\\n      return \'ACCOUNT\';\\n    }\\n\\n    return \'\';\\n  }\\n\\n  setupPage(): void {\\n    this.sourceField = this.route.snapshot.params.source_field.toUpperCase();\\n    this.mappingService.getExportSettings().subscribe((response) => {\\n      this.reimbursableExpenseObject = response.reimbursable_expenses_object;\\n      this.cccExpenseObject = response.corporate_credit_card_expenses_object;\\n\\n      this.showAutoMapEmployee = response.auto_map_employees ? true : false;\\n\\n      this.destinationField = this.getSourceType();\\n      this.mappingService.getGroupedDestinationAttributes([this.destinationField], \'v2\').subscribe((response: any) => {\\n        if (this.sourceField===FyleField.EMPLOYEE) {\\n          this.destinationOptions = this.destinationField===FyleField.EMPLOYEE ? response.EMPLOYEE : response.VENDOR;\\n        }\\n        if (this.sourceField===\'CATEGORY\') {\\n          if (this.destinationField === \'EXPENSE_TYPE\') {\\n            this.destinationOptions = response.EXPENSE_TYPE;\\n          } else {\\n            this.destinationOptions = response.ACCOUNT;\\n          }\\n        }\\n\\n        this.isLoading = false;\\n      });\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.route.params.subscribe(() => {\\n      this.isLoading = true;\\n      this.setupPage();\\n    });\\n  }\\n}","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-base-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""}],"line":31,"jsdoctags":[{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<app-generic-mapping-v2 *ngIf=\\"!isLoading\\"\\n    [isLoading]=\\"isLoading\\"\\n    [destinationOptions]=\\"destinationOptions\\"\\n    [employeeFieldMapping]=\\"employeeFieldMapping\\"\\n    [sourceField]=\\"sourceField\\"\\n    [destinationField]=\\"destinationField\\"\\n    [showAutoMapEmployee]=\\"showAutoMapEmployee\\"\\n    [appName]=\\"AppName.SAGE300\\"\\n    (triggerAutoMapEmployee)=\\"triggerAutoMapEmployees()\\"\\n></app-generic-mapping-v2>"},{"name":"Sage300CompleteExportLogComponent","id":"component-Sage300CompleteExportLogComponent-6a6bd7ec18ab601e8511e64549dc5d279e37ad2f42f7ecf9ad42329353509c5d11dfbc1bbd95e9bae721cf043ae0886f616e009dc8210d0e690406f6e7c5f2de","file":"src/app/integrations/sage300/sage300-main/sage300-export-log/sage300-complete-export-log/sage300-complete-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-complete-export-log","styleUrls":["./sage300-complete-export-log.component.scss"],"styles":[],"templateUrl":["./sage300-complete-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"accountingExports","deprecated":false,"deprecationMessage":"","type":"AccountingExportList[]","optional":false,"description":"","line":46},{"name":"appName","defaultValue":"AppName.SAGE300","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":28},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":36},{"name":"dateOptions","defaultValue":"AccountingExportModel.getDateOptions()","deprecated":false,"deprecationMessage":"","type":"DateFilter[]","optional":false,"description":"","line":38},{"name":"expenses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":50},{"name":"exportLogForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":42},{"name":"filteredAccountingExports","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"AccountingExportList[]","optional":false,"description":"","line":48},{"name":"isCalendarVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":44},{"name":"isDateSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":52},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":32},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":34},{"name":"org_id","defaultValue":"this.userService.getUserProfile().org_id","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":54,"modifierKind":[123]},{"name":"selectedDateFilter","deprecated":false,"deprecationMessage":"","type":"SelectedDateFilter | null","optional":false,"description":"","line":40},{"name":"totalCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30}],"methodsClass":[{"name":"getAccountingExports","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getAccountingExportsAndSetupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":136,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleSimpleSearch","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":69,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":""},{"name":"openExpenseinFyle","args":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":65,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expense_id","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":111,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"trackDateFilter","args":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":""},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormBuilder, FormGroup } from \'@angular/forms\';\\nimport { AccountingExportStatus, AccountingExportType, AppName, FundSource, FyleReferenceType, PaginatorPage } from \'src/app/core/models/enum/enum.model\';\\nimport { DateFilter, SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { PaginatorService } from \'src/app/core/services/si/si-core/paginator.service\';\\nimport { environment } from \'src/environments/environment\';\\nimport { AccountingExport, AccountingExportList, AccountingExportModel } from \'src/app/core/models/db/accounting-export.model\';\\nimport { Sage300AccountingExport } from \'src/app/core/models/sage300/db/sage300-accounting-export.model\';\\nimport { ExportLogService } from \'src/app/core/services/common/export-log.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\nimport { SnakeCaseToSpaceCasePipe } from \'src/app/shared/pipes/snake-case-to-space-case.pipe\';\\nimport { TitleCasePipe } from \'@angular/common\';\\nimport { UserService } from \'src/app/core/services/misc/user.service\';\\n\\n@Component({\\n  selector: \'app-sage300-complete-export-log\',\\n  templateUrl: \'./sage300-complete-export-log.component.html\',\\n  styleUrls: [\'./sage300-complete-export-log.component.scss\']\\n})\\nexport class Sage300CompleteExportLogComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  appName: AppName = AppName.SAGE300;\\n\\n  totalCount: number = 0;\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  currentPage: number = 1;\\n\\n  dateOptions: DateFilter[] = AccountingExportModel.getDateOptions();\\n\\n  selectedDateFilter: SelectedDateFilter | null;\\n\\n  exportLogForm: FormGroup;\\n\\n  isCalendarVisible: boolean;\\n\\n  accountingExports: AccountingExportList [];\\n\\n  filteredAccountingExports: AccountingExportList [] = [];\\n\\n  expenses: Expense [] = [];\\n\\n  isDateSelected: boolean = false;\\n\\n  private org_id: string = this.userService.getUserProfile().org_id;\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private trackingService: TrackingService,\\n    private accountingExportService: AccountingExportService,\\n    private windowService: WindowService,\\n    private paginatorService: PaginatorService,\\n    private userService: UserService\\n  ) { }\\n\\n  openExpenseinFyle(expense_id: string) {\\n    this.windowService.openInNewTab(AccountingExportModel.getFyleExpenseUrl(expense_id));\\n  }\\n\\n  public handleSimpleSearch(event: any) {\\n    const query = event.target.value.toLowerCase();\\n\\n    this.filteredAccountingExports = this.accountingExports.filter((group: AccountingExportList) => {\\n      return AccountingExportModel.getfilteredAccountingExports(query, group);\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    this.limit = limit;\\n    this.currentPage = 1;\\n    this.getAccountingExports(limit, this.offset);\\n  }\\n\\n  pageChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.offset = offset;\\n    this.currentPage = Math.ceil(offset / this.limit) + 1;\\n    this.getAccountingExports(this.limit, offset);\\n  }\\n\\n  private getAccountingExports(limit: number, offset:number) {\\n    this.isLoading = true;\\n\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.EXPORT_LOG, limit);\\n    }\\n\\n    this.accountingExportService.getAccountingExports([AccountingExportType.DIRECT_COSTS, AccountingExportType.PURCHASE_INVOICE], [AccountingExportStatus.COMPLETE], null, limit, offset, this.selectedDateFilter).subscribe(accountingExportResponse => {\\n        if (!this.isDateSelected) {\\n          this.totalCount = accountingExportResponse.count;\\n        }\\n        const accountingExports: AccountingExportList[] = accountingExportResponse.results.map((accountingExport: AccountingExport) =>\\n          AccountingExportModel.parseAPIResponseToExportLog(accountingExport, this.org_id)\\n        );\\n        this.filteredAccountingExports = accountingExports;\\n        this.accountingExports = [...this.filteredAccountingExports];\\n        this.isLoading = false;\\n      });\\n  }\\n\\n  private setupForm(): void {\\n    this.exportLogForm = this.formBuilder.group({\\n      searchOption: [\'\'],\\n      dateRange: [null],\\n      start: [\'\'],\\n      end: [\'\']\\n    });\\n\\n    this.exportLogForm.controls.dateRange.valueChanges.subscribe((dateRange) => {\\n      const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n      if (dateRange) {\\n        this.selectedDateFilter = {\\n          startDate: dateRange.startDate,\\n          endDate: dateRange.endDate\\n        };\\n\\n        this.trackDateFilter(\'existing\', this.selectedDateFilter);\\n        this.getAccountingExports(paginator.limit, paginator.offset);\\n      } else {\\n        this.selectedDateFilter = null;\\n        this.getAccountingExports(paginator.limit, paginator.offset);\\n      }\\n    });\\n  }\\n\\n  private getAccountingExportsAndSetupPage(): void {\\n    this.setupForm();\\n\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n\\n    this.getAccountingExports(paginator.limit, paginator.offset);\\n  }\\n\\n  private trackDateFilter(filterType: \'existing\' | \'custom\', selectedDateFilter: SelectedDateFilter): void {\\n    const trackingProperty = {\\n      filterType,\\n      ...selectedDateFilter\\n    };\\n    this.trackingService.onDateFilter(trackingProperty);\\n  }\\n\\n  ngOnInit(): void {\\n    this.getAccountingExportsAndSetupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-complete-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""}],"line":54,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-shadow-app-card tw-bg-white tw-border-1-px tw-border-separator\\">\\n    <div>\\n        <app-export-log-filter *ngIf=\\"totalCount > 0 || selectedDateFilter\\"\\n            [exportLogForm]=\\"exportLogForm\\"\\n            [dateOptions]=\\"dateOptions\\"\\n            (handleSimpleSearch)=\\"handleSimpleSearch($event)\\">\\n        </app-export-log-filter>\\n\\n        <app-export-log-table \\n            [filteredExpenseGroups]=\\"filteredAccountingExports\\"\\n            [appName]=\\"appName\\"\\n            [isExportLogTable]=\\"true\\"\\n            [isDashboardFailed]=\\"false\\">\\n        </app-export-log-table>\\n\\n        <div *ngIf=\\"filteredAccountingExports.length > 0\\" class=\\"tw-p-24-px tw-border-t-1-px\\">\\n            <app-paginator \\n                [dropDownValue]=\\"limit\\" \\n                [page]=\\"currentPage\\" \\n                [totalCount]=\\"totalCount\\" \\n                (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" \\n                (pageOffsetChangeEvent)=\\"pageChanges($event)\\">\\n            </app-paginator>\\n        </div>\\n\\n        <app-zero-state-with-illustration *ngIf=\\"!filteredAccountingExports.length && !selectedDateFilter && totalCount > 0\\"\\n            [mainText]=\\"\'Sorry, no results found!\'\\"\\n            [subText]=\\"\'We could not find what you were looking for. Kindly check the keywords again.\'\\">\\n        </app-zero-state-with-illustration>\\n\\n    </div>\\n\\n    <app-zero-state-with-illustration *ngIf=\\"totalCount === 0\\"\\n    [mainText]=\\"\'No records to show yet!\'\\"\\n    [subText]=\\"\'All your successful exports and their details will be stored here.\'\\">\\n    </app-zero-state-with-illustration>\\n\\n</div>"},{"name":"Sage300Component","id":"component-Sage300Component-e3935f8751a0bc3912d99d55d04b6d0f4107ccaed5ebf2c79b48382d6c441ae13d524a0a46dbceb3b550c6f3c352090603d4288caefa98f92d2357a8f949e354","file":"src/app/integrations/sage300/sage300.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300","styleUrls":["./sage300.component.scss"],"styles":[],"templateUrl":["./sage300.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"user","defaultValue":"this.userService.getUserProfile()","deprecated":false,"deprecationMessage":"","type":"MinimalUser","optional":false,"description":"","line":20},{"name":"windowReference","deprecated":false,"deprecationMessage":"","type":"Window","optional":false,"description":"","line":26},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"Sage300Workspace","optional":false,"description":"","line":22}],"methodsClass":[{"name":"navigate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":40,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":78,"deprecated":false,"deprecationMessage":""},{"name":"setupWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":54,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"storeWorkspaceAndNavigate","args":[{"name":"workspace","type":"Sage300Workspace","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"workspace","type":"Sage300Workspace","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MinimalUser } from \'src/app/core/models/db/user.model\';\\nimport { AppUrl, Sage300OnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { Sage300Workspace } from \'src/app/core/models/sage300/db/sage300-workspace.model\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsUserService } from \'src/app/core/services/common/integrations-user.service\';\\nimport { StorageService } from \'src/app/core/services/common/storage.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { Sage300MappingService } from \'src/app/core/services/sage300/sage300-mapping/sage300-mapping.service\';\\n\\n@Component({\\n  selector: \'app-sage300\',\\n  templateUrl: \'./sage300.component.html\',\\n  styleUrls: [\'./sage300.component.scss\']\\n})\\nexport class Sage300Component implements OnInit {\\n\\n  user: MinimalUser = this.userService.getUserProfile();\\n\\n  workspace: Sage300Workspace;\\n\\n  isLoading: boolean = true;\\n\\n  windowReference: Window;\\n\\n  constructor(\\n    private storageService: StorageService,\\n    private router: Router,\\n    private userService: IntegrationsUserService,\\n    private workspaceService: WorkspaceService,\\n    private windowService: WindowService,\\n    private mapping: Sage300MappingService,\\n    private helperService: HelperService\\n  ) {\\n    this.windowReference = this.windowService.nativeWindow;\\n  }\\n\\n  private navigate(): void {\\n    const pathName = this.windowReference.location.pathname;\\n    if (pathName === \'/integrations/sage300\') {\\n      const onboardingStateComponentMap = {\\n        [Sage300OnboardingState.CONNECTION]: \'/integrations/sage300/onboarding/landing\',\\n        [Sage300OnboardingState.EXPORT_SETTINGS]: \'/integrations/sage300/onboarding/export_settings\',\\n        [Sage300OnboardingState.IMPORT_SETTINGS]: \'/integrations/sage300/onboarding/import_settings\',\\n        [Sage300OnboardingState.ADVANCED_SETTINGS]: \'/integrations/sage300/onboarding/advanced_settings\',\\n        [Sage300OnboardingState.COMPLETE]: \'/integrations/sage300/main/dashboard\'\\n      };\\n      this.router.navigateByUrl(onboardingStateComponentMap[this.workspace.onboarding_state]);\\n    }\\n  }\\n\\n  private setupWorkspace(): void {\\n    this.helperService.setBaseApiURL(AppUrl.SAGE300);\\n    this.workspaceService.getWorkspace(this.user.org_id).subscribe((workspace: Sage300Workspace) => {\\n      if (workspace) {\\n        this.storeWorkspaceAndNavigate(workspace);\\n      }\\n    }, () => {\\n      this.workspaceService.postWorkspace().subscribe((workspaces: any) => {\\n        this.storeWorkspaceAndNavigate(workspaces);\\n      });\\n    }\\n    );\\n  }\\n\\n  storeWorkspaceAndNavigate(workspace:Sage300Workspace) {\\n    this.workspace = workspace;\\n    this.storageService.set(\'workspaceId\', this.workspace.id);\\n    this.storageService.set(\'onboarding-state\', this.workspace.onboarding_state);\\n    this.workspaceService.importFyleAttributes(false).subscribe();\\n    this.mapping.importSage300Attributes(false).subscribe();\\n    this.isLoading = false;\\n    this.navigate();\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupWorkspace();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"IntegrationsUserService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""},{"name":"mapping","type":"Sage300MappingService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""}],"line":26,"jsdoctags":[{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"IntegrationsUserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mapping","type":"Sage300MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>"},{"name":"Sage300ConfigurationComponent","id":"component-Sage300ConfigurationComponent-180fc1758758192bc59be54615d150dce98b1a2ad88c345e4b0301dd827ea84695e546ebb1478123aa87a563c041fd36c63dba52d31e6c6e39d0136f80e3aecc","file":"src/app/integrations/sage300/sage300-main/sage300-configuration/sage300-configuration.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-configuration","styleUrls":["./sage300-configuration.component.scss"],"styles":[],"templateUrl":["./sage300-configuration.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","defaultValue":"this.modules[0]","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":17},{"name":"modules","defaultValue":"[\\n    {label: \'Export Settings\', routerLink: \'/integrations/sage300/main/configuration/export_settings\'},\\n    {label: \'Import Settings\', routerLink: \'/integrations/sage300/main/configuration/import_settings\'},\\n    {label: \'Advanced Settings\', routerLink: \'/integrations/sage300/main/configuration/advanced_settings\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":11}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":21,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { MenuItem } from \'primeng/api/menuitem\';\\n\\n@Component({\\n  selector: \'app-sage300-configuration\',\\n  templateUrl: \'./sage300-configuration.component.html\',\\n  styleUrls: [\'./sage300-configuration.component.scss\']\\n})\\nexport class Sage300ConfigurationComponent implements OnInit {\\n\\n  modules: MenuItem[] = [\\n    {label: \'Export Settings\', routerLink: \'/integrations/sage300/main/configuration/export_settings\'},\\n    {label: \'Import Settings\', routerLink: \'/integrations/sage300/main/configuration/import_settings\'},\\n    {label: \'Advanced Settings\', routerLink: \'/integrations/sage300/main/configuration/advanced_settings\'}\\n  ];\\n\\n  activeModule: MenuItem = this.modules[0];\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-configuration.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":17},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-py-40-px\\">\\n    <div class=\\"tw-px-110-px\\">\\n        <app-sub-menu [activeModule]=\\"activeModule\\" [modules]=\\"modules\\" ></app-sub-menu>\\n    </div>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n"},{"name":"Sage300DashboardComponent","id":"component-Sage300DashboardComponent-afde9b627c877631e3a1b9983ae3233c7cbc7324b50080ea32ef1eac57c4727248e2006e9821bd70622b98ac05c3a780b5fcaf6bb3e8fac8f7b39502a965c8f6","file":"src/app/integrations/sage300/sage300-main/sage300-dashboard/sage300-dashboard.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-dashboard","styleUrls":["./sage300-dashboard.component.scss"],"styles":[],"templateUrl":["./sage300-dashboard.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"accountingExportSummary","deprecated":false,"deprecationMessage":"","type":"AccountingExportSummary | null","optional":false,"description":"","line":34},{"name":"accountingExportType","defaultValue":"[AccountingExportType.DIRECT_COSTS, AccountingExportType.PURCHASE_INVOICE]","deprecated":false,"deprecationMessage":"","type":"AccountingExportType[]","optional":false,"description":"","line":45,"modifierKind":[148]},{"name":"appName","defaultValue":"AppName.SAGE300","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":22},{"name":"destinationFieldMap","defaultValue":"{\\n    \'EMPLOYEE\': \'VENDOR\',\\n    \'CATEGORY\': \'ACCOUNT\'\\n  }","deprecated":false,"deprecationMessage":"","type":"DestinationFieldMap","optional":false,"description":"","line":40,"modifierKind":[148]},{"name":"errors","deprecated":false,"deprecationMessage":"","type":"AccountingGroupedErrors","optional":false,"description":"","line":38},{"name":"exportableAccountingExportIds","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"number[]","optional":false,"description":"","line":28},{"name":"exportProgressPercentage","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":32},{"name":"failedExpenseGroupCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30},{"name":"getAccountingExportSummary$","defaultValue":"this.accountingExportService.getAccountingExportSummary()","deprecated":false,"deprecationMessage":"","type":"Observable<AccountingExportSummary>","optional":false,"description":"","line":54},{"name":"getExportErrors$","defaultValue":"this.dashboardService.getExportErrors()","deprecated":false,"deprecationMessage":"","type":"Observable<ErrorResponse>","optional":false,"description":"","line":52},{"name":"groupedErrorStat","defaultValue":"{\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: null,\\n    [AccountingErrorType.CATEGORY_MAPPING]: null\\n  }","deprecated":false,"deprecationMessage":"","type":"AccountingGroupedErrorStat","optional":false,"description":"","line":47},{"name":"isExportInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"isImportInProgress","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"LoaderType","defaultValue":"LoaderType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":56},{"name":"processedCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":36}],"methodsClass":[{"name":"export","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":103,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":135,"deprecated":false,"deprecationMessage":""},{"name":"pollExportStatus","args":[{"name":"exportableAccountingExportIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]"}],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"exportableAccountingExportIds","type":"number[]","deprecated":false,"deprecationMessage":"","defaultValue":"[]","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":110,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Observable, catchError, forkJoin, from, interval, map, of, switchMap, takeWhile } from \'rxjs\';\\nimport { Error, AccountingGroupedErrorStat, AccountingGroupedErrors, ErrorResponse } from \'src/app/core/models/db/error.model\';\\nimport { AccountingErrorType, AccountingExportStatus, AccountingExportType, AppName, FyleField, LoaderType, RefinerSurveyType } from \'src/app/core/models/enum/enum.model\';\\nimport { DashboardService } from \'src/app/core/services/common/dashboard.service\';\\nimport { RefinerService } from \'src/app/core/services/integration/refiner.service\';\\nimport { environment } from \'src/environments/environment\';\\nimport { AccountingExportSummary } from \'src/app/core/models/db/accounting-export-summary.model\';\\nimport { DashboardModel, DestinationFieldMap } from \'src/app/core/models/db/dashboard.model\';\\nimport { Sage300AccountingExportResponse, Sage300AccountingExport } from \'src/app/core/models/sage300/db/sage300-accounting-export.model\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\n\\n@Component({\\n  selector: \'app-sage300-dashboard\',\\n  templateUrl: \'./sage300-dashboard.component.html\',\\n  styleUrls: [\'./sage300-dashboard.component.scss\']\\n})\\nexport class Sage300DashboardComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  appName: AppName = AppName.SAGE300;\\n\\n  isImportInProgress: boolean = true;\\n\\n  isExportInProgress: boolean = false;\\n\\n  exportableAccountingExportIds: number[] = [];\\n\\n  failedExpenseGroupCount: number = 0;\\n\\n  exportProgressPercentage: number = 0;\\n\\n  accountingExportSummary: AccountingExportSummary | null;\\n\\n  processedCount: number = 0;\\n\\n  errors: AccountingGroupedErrors;\\n\\n  readonly destinationFieldMap : DestinationFieldMap = {\\n    \'EMPLOYEE\': \'VENDOR\',\\n    \'CATEGORY\': \'ACCOUNT\'\\n  };\\n\\n  readonly accountingExportType: AccountingExportType[] = [AccountingExportType.DIRECT_COSTS, AccountingExportType.PURCHASE_INVOICE];\\n\\n  groupedErrorStat: AccountingGroupedErrorStat = {\\n    [AccountingErrorType.EMPLOYEE_MAPPING]: null,\\n    [AccountingErrorType.CATEGORY_MAPPING]: null\\n  };\\n\\n  getExportErrors$: Observable<ErrorResponse> = this.dashboardService.getExportErrors();\\n\\n  getAccountingExportSummary$: Observable<AccountingExportSummary> = this.accountingExportService.getAccountingExportSummary();\\n\\n  LoaderType = LoaderType;\\n\\n  constructor(\\n    private refinerService: RefinerService,\\n    private dashboardService: DashboardService,\\n    private accountingExportService: AccountingExportService\\n  ) { }\\n\\n  private pollExportStatus(exportableAccountingExportIds: number[] = []): void {\\n    interval(20000).pipe(\\n      switchMap(() => from(this.accountingExportService.getAccountingExports(this.accountingExportType, [], exportableAccountingExportIds, 500, 0))),\\n      takeWhile((response: Sage300AccountingExportResponse) =>\\n        response.results.filter(task =>\\n          (task.status === AccountingExportStatus.IN_PROGRESS || task.status === AccountingExportStatus.ENQUEUED || task.status === AccountingExportStatus.EXPORT_QUEUED)\\n        ).length > 0, true\\n      )\\n    ).subscribe((res: Sage300AccountingExportResponse) => {\\n      this.processedCount = res.results.filter(task => (task.status !== AccountingExportStatus.IN_PROGRESS && task.status !== AccountingExportStatus.ENQUEUED && task.status !== AccountingExportStatus.EXPORT_QUEUED)).length;\\n      this.exportProgressPercentage = Math.round((this.processedCount / this.exportableAccountingExportIds.length) * 100);\\n      this.exportableAccountingExportIds = res.results.map(accountingExport => accountingExport.id);\\n      if (res.results.filter(task => (task.status === AccountingExportStatus.IN_PROGRESS || task.status === AccountingExportStatus.ENQUEUED || task.status === AccountingExportStatus.EXPORT_QUEUED)).length === 0) {\\n        forkJoin([\\n          this.getExportErrors$,\\n          this.getAccountingExportSummary$\\n        ]).subscribe(responses => {\\n          this.errors = DashboardModel.parseAPIResponseToGroupedError(responses[0].results);\\n          this.groupedErrorStat = {\\n            EMPLOYEE_MAPPING: null,\\n            CATEGORY_MAPPING: null\\n          };\\n          this.accountingExportSummary = responses[1];\\n        });\\n\\n        this.failedExpenseGroupCount = res.results.filter(task => task.status === AccountingExportStatus.FAILED || task.status === AccountingExportStatus.FATAL).length;\\n        this.isExportInProgress = false;\\n        this.exportProgressPercentage = 0;\\n        this.processedCount = 0;\\n\\n        if (this.failedExpenseGroupCount === 0) {\\n          this.refinerService.triggerSurvey(\\n            AppName.SAGE300, environment.refiner_survey.intacct.export_done_survery_id, RefinerSurveyType.EXPORT_DONE\\n          );\\n        }\\n      }\\n    });\\n  }\\n\\n  export() {\\n    this.isExportInProgress = true;\\n    this.dashboardService.triggerAccountingExport().subscribe(() => {\\n      this.pollExportStatus(this.exportableAccountingExportIds);\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    forkJoin([\\n      this.getExportErrors$,\\n      this.getAccountingExportSummary$.pipe(catchError(() => of(null))),\\n      this.accountingExportService.getAccountingExports(this.accountingExportType, [AccountingExportStatus.ENQUEUED, AccountingExportStatus.IN_PROGRESS, AccountingExportStatus.EXPORT_QUEUED, AccountingExportStatus.FAILED, AccountingExportStatus.FATAL], [], 500, 0),\\n      this.dashboardService.getExportableAccountingExportIds()\\n    ]).subscribe((responses) => {\\n      this.errors = DashboardModel.parseAPIResponseToGroupedError(responses[0].results);\\n      this.accountingExportSummary = responses[1];\\n      this.exportableAccountingExportIds = responses[3].exportable_accounting_export_ids;\\n      this.isLoading = false;\\n      const queuedTasks: Sage300AccountingExport[] = responses[2].results.filter((accountingExport: Sage300AccountingExport) => accountingExport.status === AccountingExportStatus.ENQUEUED || accountingExport.status === AccountingExportStatus.IN_PROGRESS || accountingExport.status === AccountingExportStatus.EXPORT_QUEUED);\\n      this.failedExpenseGroupCount = responses[2].results.filter((accountingExport: Sage300AccountingExport) => accountingExport.status === AccountingExportStatus.FAILED || accountingExport.status === AccountingExportStatus.FATAL).length;\\n      if (queuedTasks.length) {\\n        this.isImportInProgress = false;\\n        this.isExportInProgress = true;\\n        this.pollExportStatus();\\n      } else {\\n        this.accountingExportService.importExpensesFromFyle().subscribe(() => {\\n          this.isImportInProgress = false;\\n        });\\n      }\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-dashboard.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"refinerService","type":"RefinerService","deprecated":false,"deprecationMessage":""},{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":""},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""}],"line":56,"jsdoctags":[{"name":"refinerService","type":"RefinerService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"dashboardService","type":"DashboardService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-110-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\">\\n    <app-dashboard-export-section\\n        (export)=\\"export()\\"\\n        [loaderType]=\\"LoaderType.INDETERMINATE\\"\\n        [appName]=\\"appName\\"\\n        [isImportInProgress]=\\"isImportInProgress\\" \\n        [isExportInProgress]=\\"isExportInProgress\\"\\n        [exportableAccountingExportIds]=\\"exportableAccountingExportIds\\"\\n        [failedExpenseGroupCount]=\\"failedExpenseGroupCount\\" \\n        [exportProgressPercentage]=\\"exportProgressPercentage\\" \\n        [accountingExportSummary]=\\"accountingExportSummary\\" \\n        [processedCount]=\\"processedCount\\">\\n    </app-dashboard-export-section>\\n    \\n    <app-zero-state \\n        *ngIf=\\"!accountingExportSummary && !exportableAccountingExportIds.length\\" \\n        [zeroStateImageURL]=\\"\'assets/icons/dashboard-illustration.svg\'\\"\\n        [zeroStateCaption]=\\"\'There are no expenses to export at the moment!\'\\"\\n        >\\n    </app-zero-state>\\n    \\n    <app-dashboard-export-summary-section *ngIf=\\"exportableAccountingExportIds.length || accountingExportSummary\\"\\n        [appName]=\\"appName\\"\\n        [accountingExportType]=\\"accountingExportType\\"\\n        [accountingExportSummary]=\\"accountingExportSummary\\">\\n    </app-dashboard-export-summary-section>\\n    \\n    <app-dashboard-error-section *ngIf=\\"errors.EMPLOYEE_MAPPING.length || errors.CATEGORY_MAPPING.length || errors.ACCOUNTING_ERROR.length\\"\\n        [appName]=\\"appName\\" \\n        [errors]=\\"errors\\" \\n        [groupedErrorStat]=\\"groupedErrorStat\\"\\n        [destinationFieldMap]=\\"destinationFieldMap\\">\\n    </app-dashboard-error-section>\\n</div>"},{"name":"Sage300ExportLogComponent","id":"component-Sage300ExportLogComponent-260948377ce4eb8d5c513e252b738e5158ecc7baca31505b9808366305a35cad5eb0f27658b0a97a2344701ff19d87b6734cc77643d87ddb511d20e24e1f6536","file":"src/app/integrations/sage300/sage300-main/sage300-export-log/sage300-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-export-log","styleUrls":["./sage300-export-log.component.scss"],"styles":[],"templateUrl":["./sage300-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":19},{"name":"isLoading","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":12},{"name":"modules","defaultValue":"[\\n    {label: \'Completed\', routerLink: \'/integrations/sage300/main/export_log/complete_export_log\'},\\n    {label: \'Skipped\', routerLink: \'/integrations/sage300/main/export_log/skip_export_log\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":14}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":26,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\n\\n@Component({\\n  selector: \'app-sage300-export-log\',\\n  templateUrl: \'./sage300-export-log.component.html\',\\n  styleUrls: [\'./sage300-export-log.component.scss\']\\n})\\nexport class Sage300ExportLogComponent implements OnInit {\\n\\n  isLoading: boolean = false;\\n\\n  modules: MenuItem[] = [\\n    {label: \'Completed\', routerLink: \'/integrations/sage300/main/export_log/complete_export_log\'},\\n    {label: \'Skipped\', routerLink: \'/integrations/sage300/main/export_log/skip_export_log\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n\\n  ngOnInit(): void {\\n    this.activeModule = this.modules[0];\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":19,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-40-px tw-px-120-px\\">\\n    <app-sub-menu [modules]=\\"modules\\" [activeModule]=\\"activeModule\\"></app-sub-menu>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n"},{"name":"Sage300ExportSettingsComponent","id":"component-Sage300ExportSettingsComponent-5f02e3ed2563ef62fe3765983cff0938f0fe0dc9139f33f7b09b07ba0cce7efffc5e0cbc60ca3304a03e147503e8be806d355f40aa7819ebe43276ba33375b17","file":"src/app/integrations/sage300/sage300-shared/sage300-export-settings/sage300-export-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-export-settings","styleUrls":["./sage300-export-settings.component.scss"],"styles":[],"templateUrl":["./sage300-export-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"appName","defaultValue":"AppName.SAGE300","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":36},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":75,"modifierKind":[148]},{"name":"cccExpenseGroupingDateOptions","defaultValue":"this.exportSettingService.getCCCExpenseGroupingDateOptions()","deprecated":false,"deprecationMessage":"","type":"Sage300ExportSettingFormOption[]","optional":false,"description":"","line":46},{"name":"cccExpenseState","defaultValue":"this.exportSettingService.getCCCExpenseState()","deprecated":false,"deprecationMessage":"","type":"Sage300ExportSettingFormOption[]","optional":false,"description":"","line":52},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40},{"name":"creditCardAccountOptions","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":58},{"name":"debitCardAccountOptions","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":60},{"name":"expenseGroupByOptions","defaultValue":"this.exportSettingService.getExpenseGroupByOptions()","deprecated":false,"deprecationMessage":"","type":"Sage300ExportSettingFormOption[]","optional":false,"description":"","line":42},{"name":"expensesExportTypeOptions","defaultValue":"this.exportSettingService.getExpensesExportTypeOptions()","deprecated":false,"deprecationMessage":"","type":"Sage300ExportSettingFormOption[]","optional":false,"description":"","line":48},{"name":"exportSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":32},{"name":"exportSettings","deprecated":false,"deprecationMessage":"","type":"Sage300ExportSettingGet | null","optional":false,"description":"","line":30},{"name":"helper","deprecated":false,"deprecationMessage":"","type":"HelperService","optional":false,"description":"","line":85,"modifierKind":[125]},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"isSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28},{"name":"previewImagePaths","defaultValue":"[\\n    {\\n      \'PURCHASE_INVOICE\': \'assets/illustrations/sageIntacct/Reimbursable - Expense Report.jpg\',\\n      \'DIRECT_COST\': \'assets/illustrations/sageIntacct/Reimbursable Bill.jpg\'\\n    },\\n    {\\n      \'PURCHASE_INVOICE\': \'assets/illustrations/sageIntacct/CCC Expense Report.jpg\',\\n      \'DIRECT_COST\': \'assets/illustrations/sageIntacct/CCC Bill.jpg\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":64},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.SAGE300.EXPORT_SETTING","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":34},{"name":"reimbursableExpenseGroupingDateOptions","defaultValue":"this.exportSettingService.getReimbursableExpenseGroupingDateOptions()","deprecated":false,"deprecationMessage":"","type":"Sage300ExportSettingFormOption[]","optional":false,"description":"","line":44},{"name":"reimbursableExpenseState","defaultValue":"this.exportSettingService.getReimbursableExpenseState()","deprecated":false,"deprecationMessage":"","type":"Sage300ExportSettingFormOption[]","optional":false,"description":"","line":50},{"name":"Sage300ExportType","defaultValue":"Sage300ExportType","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":38},{"name":"sage300Jobs","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":62},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":54},{"name":"vendorOptions","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","optional":false,"description":"","line":56}],"methodsClass":[{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":93,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":170,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":89,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":125,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":131,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { catchError, forkJoin, of } from \'rxjs\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { AppName, ConfigurationCta, FyleField, Page, Sage300ExportType, Sage300Field, Sage300OnboardingState, Sage300UpdateEvent, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { Sage300DestinationAttributes } from \'src/app/core/models/sage300/db/sage300-destination-attribuite.model\';\\nimport { ExportSettingModel, ExportModuleRule, Sage300ExportSettingFormOption, Sage300ExportSettingGet, ExportSettingValidatorRule } from \'src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { Sage300ExportSettingService } from \'src/app/core/services/sage300/sage300-configuration/sage300-export-setting.service\';\\nimport { Sage300HelperService } from \'src/app/core/services/sage300/sage300-helper/sage300-helper.service\';\\n\\n@Component({\\n  selector: \'app-sage300-export-settings\',\\n  templateUrl: \'./sage300-export-settings.component.html\',\\n  styleUrls: [\'./sage300-export-settings.component.scss\']\\n})\\nexport class Sage300ExportSettingsComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  isOnboarding: boolean;\\n\\n  isSaveInProgress: boolean;\\n\\n  exportSettings: Sage300ExportSettingGet | null;\\n\\n  exportSettingForm: FormGroup;\\n\\n  redirectLink: string = brandingKbArticles.onboardingArticles.SAGE300.EXPORT_SETTING;\\n\\n  appName: string = AppName.SAGE300;\\n\\n  Sage300ExportType = Sage300ExportType;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  expenseGroupByOptions: Sage300ExportSettingFormOption[] = this.exportSettingService.getExpenseGroupByOptions();\\n\\n  reimbursableExpenseGroupingDateOptions: Sage300ExportSettingFormOption[] = this.exportSettingService.getReimbursableExpenseGroupingDateOptions();\\n\\n  cccExpenseGroupingDateOptions: Sage300ExportSettingFormOption[] = this.exportSettingService.getCCCExpenseGroupingDateOptions();\\n\\n  expensesExportTypeOptions: Sage300ExportSettingFormOption[] = this.exportSettingService.getExpensesExportTypeOptions();\\n\\n  reimbursableExpenseState: Sage300ExportSettingFormOption[] = this.exportSettingService.getReimbursableExpenseState();\\n\\n  cccExpenseState: Sage300ExportSettingFormOption[] = this.exportSettingService.getCCCExpenseState();\\n\\n  sessionStartTime = new Date();\\n\\n  vendorOptions: Sage300DestinationAttributes[];\\n\\n  creditCardAccountOptions: Sage300DestinationAttributes[];\\n\\n  debitCardAccountOptions: Sage300DestinationAttributes[];\\n\\n  sage300Jobs: Sage300DestinationAttributes[];\\n\\n  previewImagePaths =[\\n    {\\n      \'PURCHASE_INVOICE\': \'assets/illustrations/sageIntacct/Reimbursable - Expense Report.jpg\',\\n      \'DIRECT_COST\': \'assets/illustrations/sageIntacct/Reimbursable Bill.jpg\'\\n    },\\n    {\\n      \'PURCHASE_INVOICE\': \'assets/illustrations/sageIntacct/CCC Expense Report.jpg\',\\n      \'DIRECT_COST\': \'assets/illustrations/sageIntacct/CCC Bill.jpg\'\\n    }\\n  ];\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private exportSettingService: Sage300ExportSettingService,\\n    private router: Router,\\n    private helperService: HelperService,\\n    private sage300HelperService: Sage300HelperService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService,\\n    private workspaceService: WorkspaceService,\\n    public helper: HelperService,\\n    private mappingService: MappingService\\n  ) { }\\n\\n  refreshDimensions(isRefresh: boolean) {\\n    this.sage300HelperService.importAttributes(isRefresh);\\n  }\\n\\n  private constructPayloadAndSave(): void {\\n    this.isSaveInProgress = true;\\n    const exportSettingPayload = ExportSettingModel.createExportSettingPayload(this.exportSettingForm);\\n    this.exportSettingService.postExportSettings(exportSettingPayload).subscribe((exportSettingResponse: Sage300ExportSettingGet) => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Export settings saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.EXPORT_SETTING_SAGE300, this.sessionStartTime);\\n      if (this.workspaceService.getOnboardingState() === Sage300OnboardingState.EXPORT_SETTINGS) {\\n        this.trackingService.onOnboardingStepCompletion(Sage300OnboardingState.EXPORT_SETTINGS, 2, exportSettingPayload);\\n      } else {\\n        this.trackingService.onUpdateEvent(\\n          Sage300UpdateEvent.ADVANCED_SETTINGS_SAGE300,\\n          {\\n            phase: this.helper.getPhase(this.isOnboarding),\\n            oldState: this.exportSettings,\\n            newState: exportSettingResponse\\n          }\\n        );\\n      }\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(Sage300OnboardingState.IMPORT_SETTINGS);\\n        this.router.navigate([`/integrations/sage300/onboarding/import_settings`]);\\n      }\\n\\n\\n    }, () => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving export settings, please try again later\');\\n      });\\n  }\\n\\n  save(): void {\\n    if (this.exportSettingForm.valid) {\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  private setupPage(): void {\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    const exportSettingValidatorRule: ExportSettingValidatorRule = {\\n      \'reimbursableExpense\': [\'reimbursableExportType\', \'reimbursableExportGroup\', \'reimbursableExportDate\', \'reimbursableExpenseState\'],\\n      \'creditCardExpense\': [\'cccExportType\', \'cccExportGroup\', \'cccExportDate\', \'cccExpenseState\']\\n    };\\n\\n    const exportModuleRule: ExportModuleRule[] = [\\n      {\\n        \'formController\': \'reimbursableExportType\',\\n        \'requiredValue\': {\\n          \'DIRECT_COST\': [\'defaultReimbursableCCCAccountName\', \'defaultDebitCardAccountName\', \'defaultJobName\'],\\n          \'PURCHASE_INVOICE\': [\'defaultVendorName\']\\n        }\\n      },\\n      {\\n        \'formController\': \'cccExportType\',\\n        \'requiredValue\': {\\n          \'DIRECT_COST\': [\'defaultCreditCardCCCAccountName\', \'defaultDebitCardAccountName\', \'defaultJobName\'],\\n          \'PURCHASE_INVOICE\': [\'defaultVendorName\']\\n        }\\n      }\\n    ];\\n    forkJoin([\\n      this.exportSettingService.getSage300ExportSettings().pipe(catchError(() => of(null))),\\n      this.mappingService.getGroupedDestinationAttributes([FyleField.VENDOR, Sage300Field.ACCOUNT, Sage300Field.JOB], \'v2\')\\n    ]).subscribe(([exportSettingsResponse, destinationAttributes]) => {\\n      this.exportSettings = exportSettingsResponse;\\n      this.vendorOptions = destinationAttributes.VENDOR;\\n      this.creditCardAccountOptions = this.debitCardAccountOptions = destinationAttributes.ACCOUNT;\\n      this.sage300Jobs = destinationAttributes.JOB;\\n      this.exportSettingForm = ExportSettingModel.mapAPIResponseToFormGroup(this.exportSettings, destinationAttributes );\\n      this.helperService.addExportSettingFormValidator(this.exportSettingForm);\\n      this.helper.setConfigurationSettingValidatorsAndWatchers(exportSettingValidatorRule, this.exportSettingForm);\\n      this.helper.setExportTypeValidatorsAndWatchers(exportModuleRule, this.exportSettingForm);\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-export-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"exportSettingService","type":"Sage300ExportSettingService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"sage300HelperService","type":"Sage300HelperService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""}],"line":75,"jsdoctags":[{"name":"exportSettingService","type":"Sage300ExportSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"sage300HelperService","type":"Sage300HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header \\n            [headerText]=\\"\'Export Settings\'\\"\\n            [contentText]=\\"\'In this section, you can configure how and when expenses from \' + brandingConfig.brandName + \' should be exported to Sage 300 CRE. \'\\"\\n            [redirectLink]=\\"redirectLink\\"\\n            [showSyncButton]=\\"isOnboarding\\"\\n            [appName]=\\"appName\\"\\n            (refreshDimension)=\\"refreshDimensions($event)\\">\\n        </app-configuration-step-header>\\n    </div>\\n    <form [formGroup]=\\"exportSettingForm\\">\\n        <div class=\\"tw-p-24-px\\">\\n            <div class=\\"tw-mb-16-px\\">\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg\\">\\n                    <app-configuration-toggle-field \\n                        [form]=\\"exportSettingForm\\"\\n                        [label]=\\"\'Export Reimbursable Expenses\'\\" \\n                        [subLabel]=\\"\'Enable this to export the reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any <b>out-of-pocket</b> expenses will not be exported to Sage 300 CRE.\'\\" \\n                        [formControllerName]=\\"\'reimbursableExpense\'\\"\\n                        [isSectionHeader]=\\"true\\">\\n                    </app-configuration-toggle-field>\\n                </div>\\n                <div *ngIf=\\"exportSettingForm.value?.reimbursableExpense\\">\\n                    <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export module\'\\"\\n                            [label]=\\"\'How should the expenses be exported?\'\\"\\n                            [options]=\\"expensesExportTypeOptions\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select expense export module\'\\"\\n                            [formControllerName]=\\"\'reimbursableExportType\'\\"\\n                            [appName]=\\"appName\\"\\n                            [exportConfigurationIconPath]=\\"\'assets/flow-charts/intacct-export-module.svg\'\\"\\n                            [exportTypeIconPathArray]=\\"previewImagePaths\\"\\n                            [appName]=\\"appName\\"\\n                            [isDisabled]=\\"true\\">\\n                        </app-configuration-select-field>\\n                        <div *ngIf=\\"exportSettingForm.value.reimbursableExportType===Sage300ExportType.PURCHASE_INVOICE\\">\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'Default Vendor Name\'\\"\\n                                [label]=\\"\'Set the Default Vendor as?\'\\"\\n                                [subLabel]=\\"\'The integration will assign the Corporate Card Expenses that is exported as Purchase invoice to the vendor selected here.\'\\"\\n                                [destinationAttributes]=\\"vendorOptions\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Select default vendor\'\\"\\n                                [appName]=\\"appName\\"\\n                                [formControllerName]=\\"\'defaultVendorName\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n                        <div *ngIf=\\"exportSettingForm?.value.reimbursableExportType===Sage300ExportType.DIRECT_COST\\">\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'Default Reimbursable Credit Card Account Name\'\\"\\n                                [label]=\\"\'Set the Default Reimbursable Credit Card Account as?\'\\"\\n                                [subLabel]=\\"\'The integration will credit the account selected here for Reimbursable Expenses exported as Direct Cost.\'\\"\\n                                [destinationAttributes]=\\"creditCardAccountOptions\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Select default reimbursable credit card account\'\\"\\n                                [appName]=\\"appName\\"\\n                                [formControllerName]=\\"\'defaultReimbursableCCCAccountName\'\\">\\n                            </app-configuration-select-field>\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'Default Debit Card Account Name\'\\"\\n                                [label]=\\"\'Set the Default Debit Card Account as?\'\\"\\n                                [subLabel]=\\"\'The integration will debit the account selected here for All Expenses exported as Direct Cost.\'\\"\\n                                [destinationAttributes]=\\"debitCardAccountOptions\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Select default debit card account\'\\"\\n                                [appName]=\\"appName\\"\\n                                [formControllerName]=\\"\'defaultDebitCardAccountName\'\\">\\n                            </app-configuration-select-field>\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'Default Job Name\'\\"\\n                                [label]=\\"\'Set the Default Job as\'\\"\\n                                [destinationAttributes]=\\"sage300Jobs\\"\\n                                [subLabel]=\\"\'The integration will assign the account to the selected Default Job.\'\\"\\n                                [showClearIcon]=\\"true\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Select default Job\'\\"\\n                                [appName]=\\"appName\\"\\n                                [formControllerName]=\\"\'defaultJobName\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm?.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'expense state\'\\"\\n                        [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                        [subLabel]=\\"\'You can export expenses either when they\\\\\'re awaiting payment after approval (Payment processing) or when the payment has been settled (Paid).\'\\"\\n                        [options]=\\"reimbursableExpenseState\\"\\n                        [iconPath]=\\"\'expense\'\\"\\n                        [placeholder]=\\"\'Select export state\'\\"\\n                        [appName]=\\"appName\\"\\n                        [formControllerName]=\\"\'reimbursableExpenseState\'\\"></app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'export date\'\\"\\n                        [label]=\\"\'Set the \' + helper.getExportType(exportSettingForm.value.reimbursableExportType) + \' date as\'\\"\\n                        [subLabel]=\\"\'The selected type of date will reflect in the expenses exported from \' + brandingConfig.brandName + \' to Sage 300 CRE. Click here for more details.\'\\"\\n                        [options]=\\"reimbursableExpenseGroupingDateOptions\\"\\n                        [iconPath]=\\"\'calender\'\\"\\n                        [placeholder]=\\"\'Select \' + helper.getExportType(exportSettingForm.value.reimbursableExportType) + \' date\'\\"\\n                        [appName]=\\"appName\\"\\n                        [formControllerName]=\\"\'reimbursableExportDate\'\\"></app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm?.value.reimbursableExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'how expenses to be grouped\'\\"\\n                        [label]=\\"\'How should the expenses be grouped?\'\\"\\n                        [subLabel]=\\"\'Expense can either be exported as single line items (Expense) or as a grouped report with multiple line items (Expense Report)\'\\"\\n                        [options]=\\"expenseGroupByOptions\\"\\n                        [iconPath]=\\"\'questionmark\'\\"\\n                        [placeholder]=\\"\'Select expense grouping\'\\"\\n                        [appName]=\\"appName\\"\\n                        [formControllerName]=\\"\'reimbursableExportGroup\'\\"></app-configuration-select-field>\\n                    </div>\\n                </div>\\n            </div>\\n            <div>\\n                <div class=\\"tw-rounded-lg tw-border-separator tw-border tw-bg-configuration-bg\\">\\n                    <app-configuration-toggle-field \\n                    [form]=\\"exportSettingForm\\"\\n                    [label]=\\"\'Export Corporate Card Expenses\'\\" \\n                    [subLabel]=\\"\'Enable this to export Non-Reimbursable expenses from \' + brandingConfig.brandName + \'. If not enabled, any <b>Corporate Credit Card</b> expenses will not be exported to Sage 300 CRE.\'\\" \\n                    [formControllerName]=\\"\'creditCardExpense\'\\"\\n                    [isSectionHeader]=\\"true\\"></app-configuration-toggle-field>\\n                </div>\\n                <div *ngIf=\\"exportSettingForm.value?.creditCardExpense\\">\\n                    <div class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                            [form]=\\"exportSettingForm\\"\\n                            [isFieldMandatory]=\\"true\\"\\n                            [mandatoryErrorListName]=\\"\'export module\'\\"\\n                            [label]=\\"\'How should the expenses be exported?\'\\"\\n                            [options]=\\"expensesExportTypeOptions\\"\\n                            [iconPath]=\\"\'expense\'\\"\\n                            [placeholder]=\\"\'Select expense export module\'\\"\\n                            [formControllerName]=\\"\'cccExportType\'\\"\\n                            [appName]=\\"appName\\"\\n                            [exportConfigurationIconPath]=\\"\'assets/flow-charts/intacct-export-module.svg\'\\"\\n                            [exportTypeIconPathArray]=\\"previewImagePaths\\"\\n                            [appName]=\\"appName\\"\\n                            [isDisabled]=\\"true\\">\\n                        </app-configuration-select-field>\\n                        <div *ngIf=\\"exportSettingForm.value.cccExportType===Sage300ExportType.DIRECT_COST\\">\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'Default Credit Account Name\'\\"\\n                                [label]=\\"\'Set the Default Credit Account as?\'\\"\\n                                [subLabel]=\\"\'The integration will credit the account selected here for Corporate Card Expenses exported as Direct Cost.\'\\"\\n                                [destinationAttributes]=\\"creditCardAccountOptions\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Select default credit account\'\\"\\n                                [appName]=\\"appName\\"\\n                                [formControllerName]=\\"\'defaultCreditCardCCCAccountName\'\\">\\n                            </app-configuration-select-field>\\n                            <div *ngIf=\\"exportSettingForm?.value.reimbursableExportType!==Sage300ExportType.DIRECT_COST\\">\\n                                <app-configuration-select-field\\n                                    [form]=\\"exportSettingForm\\"\\n                                    [isFieldMandatory]=\\"true\\"\\n                                    [mandatoryErrorListName]=\\"\'Default Debit Card Account Name\'\\"\\n                                    [label]=\\"\'Set the Default Debit Card Account as?\'\\"\\n                                    [subLabel]=\\"\'The integration will debit the account selected here for All Expenses exported as Direct Cost.\'\\"\\n                                    [destinationAttributes]=\\"debitCardAccountOptions\\"\\n                                    [iconPath]=\\"\'expense\'\\"\\n                                    [placeholder]=\\"\'Select default debit card account\'\\"\\n                                    [appName]=\\"appName\\"\\n                                    [formControllerName]=\\"\'defaultDebitCardAccountName\'\\">\\n                                </app-configuration-select-field>\\n                                <app-configuration-select-field\\n                                    [form]=\\"exportSettingForm\\"\\n                                    [isFieldMandatory]=\\"true\\"\\n                                    [mandatoryErrorListName]=\\"\'Default Job Name\'\\"\\n                                    [label]=\\"\'Set the Default Job as\'\\"\\n                                    [destinationAttributes]=\\"sage300Jobs\\"\\n                                    [subLabel]=\\"\'The integration will assign the account to the selected Job.\'\\"\\n                                    [showClearIcon]=\\"true\\"\\n                                    [iconPath]=\\"\'expense\'\\"\\n                                    [placeholder]=\\"\'Select Default Job\'\\"\\n                                    [appName]=\\"appName\\"\\n                                    [formControllerName]=\\"\'defaultJobName\'\\">\\n                                </app-configuration-select-field>\\n                            </div>\\n                        </div>\\n                        <div *ngIf=\\"exportSettingForm.value.cccExportType===Sage300ExportType.PURCHASE_INVOICE && exportSettingForm.value.reimbursableExportType!==Sage300ExportType.PURCHASE_INVOICE\\">\\n                            <app-configuration-select-field\\n                                [form]=\\"exportSettingForm\\"\\n                                [isFieldMandatory]=\\"true\\"\\n                                [mandatoryErrorListName]=\\"\'Default Vendor Name\'\\"\\n                                [label]=\\"\'Set the Default Vendor as?\'\\"\\n                                [subLabel]=\\"\'The integration will assign the Corporate Card Expenses that is exported as Purchase invoice to the vendor selected here.\'\\"\\n                                [destinationAttributes]=\\"vendorOptions\\"\\n                                [iconPath]=\\"\'expense\'\\"\\n                                [placeholder]=\\"\'Select default vendor\'\\"\\n                                [appName]=\\"appName\\"\\n                                [formControllerName]=\\"\'defaultVendorName\'\\">\\n                            </app-configuration-select-field>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'expense state\'\\"\\n                        [label]=\\"\'At which state should the expenses be ready to export from \' + brandingConfig.brandName + \'?\'\\"\\n                        [subLabel]=\\"\'You can export expenses either when they\\\\\'re awaiting payment after approval (Payment processing) or when the payment has been settled (Paid).\'\\"\\n                        [options]=\\"cccExpenseState\\"\\n                        [iconPath]=\\"\'expense\'\\"\\n                        [placeholder]=\\"\'Select export state\'\\"\\n                        [appName]=\\"appName\\"\\n                        [formControllerName]=\\"\'cccExpenseState\'\\"></app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'export date\'\\"\\n                        [label]=\\"\'Set the \' + helper.getExportType(exportSettingForm.value.cccExportType) + \' date as\'\\"\\n                        [subLabel]=\\"\'Expenses will be grouped and posted using the configured date when exporting from \' + brandingConfig.brandName + \' to Sage 300 CRE. Click here for more details.\'\\"\\n                        [options]=\\"cccExpenseGroupingDateOptions\\"\\n                        [iconPath]=\\"\'calender\'\\"\\n                        [placeholder]=\\"\'Select date\'\\"\\n                        [appName]=\\"appName\\"\\n                        [formControllerName]=\\"\'cccExportDate\'\\"></app-configuration-select-field>\\n                    </div>\\n                    <div *ngIf=\\"exportSettingForm.value.cccExportType\\" class=\\"tw-mt-16-px tw-bg-white tw-border tw-border-solid tw-border-separator tw-rounded-12-px\\">\\n                        <app-configuration-select-field\\n                        [form]=\\"exportSettingForm\\"\\n                        [isFieldMandatory]=\\"true\\"\\n                        [mandatoryErrorListName]=\\"\'how expenses to be grouped\'\\"\\n                        [label]=\\"\'How should the expenses be grouped?\'\\"\\n                        [subLabel]=\\"\'Expense can either be exported as single line items (Expense) or as a grouped report with multiple line items (Expense Report)\'\\"\\n                        [options]=\\"expenseGroupByOptions\\"\\n                        [iconPath]=\\"\'questionmark\'\\"\\n                        [placeholder]=\\"\'Select expense grouping\'\\"\\n                        [appName]=\\"appName\\"\\n                        [formControllerName]=\\"\'cccExportGroup\'\\"></app-configuration-select-field>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div>\\n            <app-configuration-step-footer [ctaText] = \\"!isSaveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!exportSettingForm.valid\\"></app-configuration-step-footer>\\n        </div>\\n    </form>\\n</div>\\n"},{"name":"Sage300ImportSettingsComponent","id":"component-Sage300ImportSettingsComponent-835962c44e08ce3441c82dab3b6032b3e323d27d960926f5b61773632507d0cfe3d26874bca58938f88edc4bcf0e6087fe44b72361a9fbe0ca3fc4a34a0c421b","file":"src/app/integrations/sage300/sage300-shared/sage300-import-settings/sage300-import-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-import-settings","styleUrls":["./sage300-import-settings.component.scss"],"styles":[],"templateUrl":["./sage300-import-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"appName","defaultValue":"AppName.SAGE300","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":49},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":101,"modifierKind":[148]},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":99},{"name":"costCategoryOption","defaultValue":"[{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: true }]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":55},{"name":"costCodeFieldOption","defaultValue":"[{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: true }]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":53},{"name":"customField","deprecated":false,"deprecationMessage":"","type":"any","optional":false,"description":"","line":51},{"name":"customFieldControl","deprecated":false,"deprecationMessage":"","type":"AbstractControl","optional":false,"description":"","line":45},{"name":"customFieldForDependentField","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":59},{"name":"customFieldForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":39},{"name":"customFieldOption","defaultValue":"[{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: false }]","deprecated":false,"deprecationMessage":"","type":"ExpenseField[]","optional":false,"description":"","line":57},{"name":"customFieldType","defaultValue":"\'\'","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":61},{"name":"defaultImportFields","defaultValue":"[\\n    {\\n      source_field: DefaultImportFields.CATEGORY,\\n      destination_field: DefaultImportFields.ACCOUNT,\\n      formController: \'importCategories\'\\n    },\\n    {\\n      source_field: DefaultImportFields.MERCHANTS,\\n      destination_field: DefaultImportFields.VENDOR,\\n      formController: \'importVendorAsMerchant\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"Sage300DefaultFields[]","optional":false,"description":"","line":65,"modifierKind":[148]},{"name":"dependentImportFields","defaultValue":"[\\n    {\\n      source_field: \'Cost Codes\',\\n      options: this.costCodeFieldOption,\\n      formController: \'costCodes\',\\n      isDisabled: false\\n    },\\n    {\\n      source_field: \'Cost Category\',\\n      options: this.costCategoryOption,\\n      formController: \'costCategory\',\\n      isDisabled: false\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"Sage300DependentImportFields[]","optional":false,"description":"","line":78,"modifierKind":[148]},{"name":"fyleFields","deprecated":false,"deprecationMessage":"","type":"FyleField[]","optional":false,"description":"","line":35},{"name":"importSettingForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":31},{"name":"importSettings","deprecated":false,"deprecationMessage":"","type":"Sage300ImportSettingGet | null | any","optional":false,"description":"","line":29},{"name":"isDependentFieldAllowed","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":47},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33},{"name":"isOnboarding","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":27},{"name":"isPreviewDialogVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":43},{"name":"isSaveInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":97},{"name":"sage300Fields","deprecated":false,"deprecationMessage":"","type":"IntegrationField[]","optional":false,"description":"","line":37},{"name":"sessionStartTime","defaultValue":"new Date()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":63},{"name":"showCustomFieldDialog","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":41},{"name":"showDependentFieldWarning","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":93},{"name":"supportArticleLink","defaultValue":"brandingKbArticles.onboardingArticles.SAGE300.IMPORT_SETTING","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":95}],"methodsClass":[{"name":"acceptDependentFieldWarning","args":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":124,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"data","type":"ConfigurationWarningOut","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"closeDialog","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":292,"deprecated":false,"deprecationMessage":""},{"name":"closeModel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":119,"deprecated":false,"deprecationMessage":""},{"name":"constructPayloadAndSave","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":341,"deprecated":false,"deprecationMessage":""},{"name":"dependentCostFieldsWatchers","args":[{"name":"formControllerName","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":208,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"formControllerName","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"dependentFieldFormCreation","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":305,"deprecated":false,"deprecationMessage":""},{"name":"dependentFieldWatchers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":229,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"importSettingWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":266,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"initializeCustomFieldForm","args":[{"name":"shouldShowDialog","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":257,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"shouldShowDialog","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"isExpenseFieldDependent","args":[{"name":"expenseField","type":"ImportSettingMappingRow","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":300,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"expenseField","type":"ImportSettingMappingRow","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":398,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":296,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":373,"deprecated":false,"deprecationMessage":""},{"name":"saveCustomField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":200,"deprecated":false,"deprecationMessage":""},{"name":"saveDependentCustomField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":""},{"name":"saveFyleExpenseField","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":175,"deprecated":false,"deprecationMessage":""},{"name":"setupFormWatchers","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":336,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":379,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showPreviewDialog","args":[{"name":"visible","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":288,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"visible","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showWarningForDependentFields","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":142,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormArray, FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { AppName, AppNameInService, ConfigurationCta, DefaultImportFields, MappingSourceField, Page, Sage300OnboardingState, Sage300UpdateEvent, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { Sage300ImportSettingGet, Sage300DefaultFields, Sage300ImportSettingModel, Sage300DependentImportFields } from \'src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model\';\\nimport { ExpenseField, ImportSettingMappingRow } from \'src/app/core/models/common/import-settings.model\';\\nimport { IntegrationField, FyleField } from \'src/app/core/models/db/mapping.model\';\\nimport { HelperService } from \'src/app/core/services/common/helper.service\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { Sage300ImportSettingsService } from \'src/app/core/services/sage300/sage300-configuration/sage300-import-settings.service\';\\nimport { Sage300HelperService } from \'src/app/core/services/sage300/sage300-helper/sage300-helper.service\';\\nimport { fyleFieldsResponse, importSettingsResponse, sage300FieldsResponse } from \'../fixture\';\\nimport { catchError, forkJoin, of } from \'rxjs\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { ConfigurationWarningOut } from \'src/app/core/models/misc/configuration-warning.model\';\\n\\n@Component({\\n  selector: \'app-sage300-import-settings\',\\n  templateUrl: \'./sage300-import-settings.component.html\',\\n  styleUrls: [\'./sage300-import-settings.component.scss\']\\n})\\nexport class Sage300ImportSettingsComponent implements OnInit {\\n\\n  isOnboarding: boolean;\\n\\n  importSettings: Sage300ImportSettingGet | null | any;\\n\\n  importSettingForm: FormGroup;\\n\\n  isLoading: boolean = true;\\n\\n  fyleFields: FyleField[];\\n\\n  sage300Fields: IntegrationField[];\\n\\n  customFieldForm: FormGroup;\\n\\n  showCustomFieldDialog: boolean = false;\\n\\n  isPreviewDialogVisible: boolean;\\n\\n  customFieldControl: AbstractControl;\\n\\n  isDependentFieldAllowed: boolean;\\n\\n  appName: string = AppName.SAGE300;\\n\\n  customField: any;\\n\\n  costCodeFieldOption = [{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: true }];\\n\\n  costCategoryOption = [{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: true }];\\n\\n  customFieldOption: ExpenseField[] = [{ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', source_placeholder: null, is_dependent: false }];\\n\\n  customFieldForDependentField: boolean = false;\\n\\n  customFieldType: string = \'\';\\n\\n  sessionStartTime = new Date();\\n\\n  readonly defaultImportFields: Sage300DefaultFields[] = [\\n    {\\n      source_field: DefaultImportFields.CATEGORY,\\n      destination_field: DefaultImportFields.ACCOUNT,\\n      formController: \'importCategories\'\\n    },\\n    {\\n      source_field: DefaultImportFields.MERCHANTS,\\n      destination_field: DefaultImportFields.VENDOR,\\n      formController: \'importVendorAsMerchant\'\\n    }\\n  ];\\n\\n  readonly dependentImportFields: Sage300DependentImportFields[] = [\\n    {\\n      source_field: \'Cost Codes\',\\n      options: this.costCodeFieldOption,\\n      formController: \'costCodes\',\\n      isDisabled: false\\n    },\\n    {\\n      source_field: \'Cost Category\',\\n      options: this.costCategoryOption,\\n      formController: \'costCategory\',\\n      isDisabled: false\\n    }\\n  ];\\n\\n  showDependentFieldWarning: boolean;\\n\\n  supportArticleLink: string = brandingKbArticles.onboardingArticles.SAGE300.IMPORT_SETTING;\\n\\n  isSaveInProgress: boolean;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private router: Router,\\n    private importSettingService: Sage300ImportSettingsService,\\n    private mappingService: MappingService,\\n    private helperService: Sage300HelperService,\\n    private formBuilder: FormBuilder,\\n    private helper: HelperService,\\n    private toastService: IntegrationsToastService,\\n    private trackingService: TrackingService,\\n    private workspaceService: WorkspaceService\\n  ) { }\\n\\n  get expenseFieldsGetter() {\\n    return this.importSettingForm.get(\'expenseFields\') as FormArray;\\n  }\\n\\n  closeModel() {\\n    this.customFieldForm.reset();\\n    this.showCustomFieldDialog = false;\\n  }\\n\\n  acceptDependentFieldWarning(data: ConfigurationWarningOut): void {\\n    this.showDependentFieldWarning = false;\\n    if (!data.hasAccepted) {\\n      this.expenseFieldsGetter.controls.forEach((control) => {\\n        if (control.value.source_field === MappingSourceField.PROJECT) {\\n          control.patchValue({\\n            source_field: MappingSourceField.PROJECT,\\n            destination_field: control.value.destination_field,\\n            import_to_fyle: true,\\n            is_custom: control.value.is_custom,\\n            source_placeholder: control.value.source_placeholder\\n          });\\n          this.importSettingForm.controls.isDependentImportEnabled.setValue(true);\\n        }\\n      });\\n    }\\n  }\\n\\n  showWarningForDependentFields(): void {\\n    this.showDependentFieldWarning = true;\\n  }\\n\\n  saveDependentCustomField(): void {\\n    this.customField = {\\n      attribute_type: this.customFieldForm.value.attribute_type,\\n      display_name: this.customFieldForm.value.attribute_type,\\n      source_placeholder: this.customFieldForm.value.source_placeholder,\\n      is_dependent: true\\n    };\\n    if (this.customFieldControl) {\\n      if (this.customFieldType === \'costCodes\') {\\n        this.costCodeFieldOption.push(this.customField);\\n      } else {\\n        this.costCategoryOption.push(this.customField);\\n      }\\n      this.customFieldControl.patchValue({\\n        attribute_type: this.customFieldForm.value.attribute_type,\\n        display_name: this.customFieldForm.value.attribute_type,\\n        source_placeholder: this.customFieldForm.value.source_placeholder,\\n        is_dependent: true\\n      });\\n\\n      this.fyleFields = this.fyleFields.filter(field => !field.is_dependent);\\n      this.customFieldControl.value.is_custom = true;\\n      this.customFieldForm.reset();\\n      this.showCustomFieldDialog = false;\\n    }\\n    this.customFieldControl.disable();\\n    this.customFieldForDependentField = false;\\n  }\\n\\n  saveFyleExpenseField(): void {\\n    this.customField = {\\n      attribute_type: this.customFieldForm.value.attribute_type.split(\' \').join(\'_\').toUpperCase(),\\n      display_name: this.customFieldForm.value.attribute_type,\\n      source_placeholder: this.customFieldForm.value.source_placeholder,\\n      is_dependent: false\\n    };\\n\\n    if (this.customFieldControl) {\\n      this.fyleFields.pop();\\n      this.fyleFields.push(this.customField);\\n      this.fyleFields.push(this.customFieldOption[0]);\\n      const expenseField = {\\n        source_field: this.customField.attribute_type,\\n        destination_field: this.customFieldControl.value.destination_field,\\n        import_to_fyle: true,\\n        is_custom: true,\\n        source_placeholder: this.customField.source_placeholder\\n      };\\n      (this.importSettingForm.get(\'expenseFields\') as FormArray).controls.filter(field => field.value.destination_field === this.customFieldControl.value.destination_field)[0].patchValue(expenseField);\\n      this.customFieldForm.reset();\\n      this.showCustomFieldDialog = false;\\n    }\\n  }\\n\\n  saveCustomField() {\\n    if (this.customFieldType.length > 0 && this.customFieldForm.value) {\\n      this.saveDependentCustomField();\\n    } else {\\n      this.saveFyleExpenseField();\\n    }\\n  }\\n\\n  private dependentCostFieldsWatchers(formControllerName: string): void {\\n    this.importSettingForm.controls[formControllerName].valueChanges.subscribe((value) => {\\n      if (value?.attribute_type === \'custom_field\') {\\n        this.initializeCustomFieldForm(true);\\n        this.customFieldType = formControllerName;\\n        this.customFieldControl = this.importSettingForm.controls[formControllerName];\\n        if (value.source_field === \'custom_field\') {\\n          this.importSettingForm.controls[formControllerName].patchValue({\\n            source_field: null\\n          });\\n        }\\n      } else if (value) {\\n        this.dependentImportFields.forEach((fields, index) => {\\n          if (fields.formController === formControllerName) {\\n            this.dependentImportFields[index].isDisabled = true;\\n          }\\n        });\\n      }\\n    });\\n  }\\n\\n  private dependentFieldWatchers(): void {\\n    if (this.importSettingForm.value.isDependentImportEnabled) {\\n      this.helper.disableFormField(this.importSettingForm, \'costCodes\');\\n      this.helper.disableFormField(this.importSettingForm, \'costCategory\');\\n    }\\n\\n    this.importSettingForm.controls.isDependentImportEnabled.valueChanges.subscribe((isDependentImportEnabled) => {\\n      if (isDependentImportEnabled) {\\n        this.helper.enableFormField(this.importSettingForm, \'costCodes\');\\n        this.helper.enableFormField(this.importSettingForm, \'costCategory\');\\n        this.helper.markControllerAsRequired(this.importSettingForm, \'costCodes\');\\n        this.helper.markControllerAsRequired(this.importSettingForm, \'costCategory\');\\n        this.dependentImportFields[0].isDisabled = false;\\n        this.dependentImportFields[1].isDisabled = false;\\n      } else {\\n        this.helper.disableFormField(this.importSettingForm, \'costCodes\');\\n        this.helper.disableFormField(this.importSettingForm, \'costCategory\');\\n        this.helper.clearValidatorAndResetValue(this.importSettingForm, \'costCodes\');\\n        this.helper.clearValidatorAndResetValue(this.importSettingForm, \'costCategory\');\\n        this.dependentImportFields[0].isDisabled = true;\\n        this.dependentImportFields[1].isDisabled = true;\\n      }\\n    });\\n\\n    this.dependentCostFieldsWatchers(\'costCodes\');\\n    this.dependentCostFieldsWatchers(\'costCategory\');\\n  }\\n\\n  private initializeCustomFieldForm(shouldShowDialog: boolean) {\\n    this.customFieldForm = this.formBuilder.group({\\n      attribute_type: [\'\', Validators.required],\\n      display_name: [\'\'],\\n      source_placeholder: [\'\', Validators.required]\\n    });\\n    this.showCustomFieldDialog = shouldShowDialog;\\n  }\\n\\n  private importSettingWatcher(): void {\\n    const expenseFieldArray = this.importSettingForm.get(\'expenseFields\') as FormArray;\\n    expenseFieldArray.controls.forEach((control:any) => {\\n      control.valueChanges.subscribe((value: { source_field: string; destination_field: string; }) => {\\n        if (value.source_field === \'custom_field\') {\\n          this.initializeCustomFieldForm(true);\\n          this.customFieldType = \'\';\\n          this.customFieldControl = control;\\n          this.customFieldControl.patchValue({\\n            source_field: \'\',\\n            destination_field: control.value.destination_field,\\n            import_to_fyle: control.value.import_to_fyle,\\n            is_custom: control.value.is_custom,\\n            source_placeholder: null\\n          });\\n        } else if (value.source_field === \'PROJECT\' && value.destination_field === \'PROJECT\') {\\n          this.isDependentFieldAllowed = true;\\n        }\\n      });\\n    });\\n  }\\n\\n  showPreviewDialog(visible: boolean) {\\n    this.isPreviewDialogVisible = visible;\\n  }\\n\\n  closeDialog() {\\n    this.isPreviewDialogVisible = false;\\n  }\\n\\n  refreshDimensions(isRefresh: boolean) {\\n    this.helperService.importAttributes(isRefresh);\\n  }\\n\\n  isExpenseFieldDependent(expenseField: ImportSettingMappingRow): boolean {\\n    const isDependent = this.fyleFields.find(field => field.attribute_type === expenseField.source_field);\\n    return isDependent ? true : false;\\n  }\\n\\n  dependentFieldFormCreation(){\\n    const mappingSettings = this.importSettings?.mapping_settings;\\n\\n    if (mappingSettings) {\\n      for (const setting of mappingSettings) {\\n        const { source_field, destination_field, import_to_fyle } = setting;\\n        if (source_field === \'PROJECT\' && destination_field === \'JOB\' && import_to_fyle === true) {\\n          if (this.importSettings?.dependent_field_settings?.is_import_enabled) {\\n            this.customField = {\\n              attribute_type: this.importSettings.dependent_field_settings.cost_code_field_name,\\n              display_name: this.importSettings.dependent_field_settings.cost_code_field_name,\\n              source_placeholder: this.importSettings.dependent_field_settings.cost_code_placeholder,\\n              is_dependent: true\\n            };\\n            this.costCodeFieldOption.push(this.customField);\\n            this.customField = {\\n              attribute_type: this.importSettings.dependent_field_settings.cost_category_field_name,\\n              display_name: this.importSettings.dependent_field_settings.cost_category_field_name,\\n              source_placeholder: this.importSettings.dependent_field_settings.cost_category_placeholder,\\n              is_dependent: true\\n            };\\n            this.costCategoryOption.push(this.customField);\\n            this.dependentImportFields[0].isDisabled = true;\\n            this.dependentImportFields[1].isDisabled = true;\\n          }\\n          break;\\n        }\\n      }\\n    }\\n  }\\n\\n  private setupFormWatchers() {\\n    this.importSettingWatcher();\\n    this.dependentFieldWatchers();\\n  }\\n\\n  constructPayloadAndSave() {\\n    this.isSaveInProgress = true;\\n    const importSettingPayload = Sage300ImportSettingModel.createImportSettingPayload(this.importSettingForm, this.importSettings);\\n    this.importSettingService.postImportSettings(importSettingPayload).subscribe((importSettingsResponse: Sage300ImportSettingGet) => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Import settings saved successfully\');\\n      this.trackingService.trackTimeSpent(Page.IMPORT_SETTINGS_SAGE300, this.sessionStartTime);\\n      if (this.workspaceService.getOnboardingState() === Sage300OnboardingState.IMPORT_SETTINGS) {\\n        this.trackingService.onOnboardingStepCompletion(Sage300OnboardingState.IMPORT_SETTINGS, 3, importSettingPayload);\\n      } else {\\n        this.trackingService.onUpdateEvent(\\n          Sage300UpdateEvent.ADVANCED_SETTINGS_SAGE300,\\n          {\\n            phase: this.helper.getPhase(this.isOnboarding),\\n            oldState: this.importSettings,\\n            newState: importSettingsResponse\\n          }\\n        );\\n      }\\n\\n      if (this.isOnboarding) {\\n        this.workspaceService.setOnboardingState(Sage300OnboardingState.ADVANCED_SETTINGS);\\n        this.router.navigate([`/integrations/sage300/onboarding/advanced_settings`]);\\n      }\\n\\n\\n    }, () => {\\n      this.isSaveInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error saving import settings, please try again later\');\\n      });\\n  }\\n\\n  save(): void {\\n    if (this.importSettingForm.valid) {\\n      this.constructPayloadAndSave();\\n    }\\n  }\\n\\n  private setupPage(): void {\\n    this.isOnboarding = this.router.url.includes(\'onboarding\');\\n    forkJoin([\\n      this.importSettingService.getSage300ImportSettings().pipe(catchError(() => of(null))),\\n      this.mappingService.getFyleFields(),\\n      this.mappingService.getIntegrationsFields(AppNameInService.SAGE300)\\n    ]).subscribe(([importSettingsResponse, fyleFieldsResponse, sage300FieldsResponse]) => {\\n      this.importSettings = importSettingsResponse;\\n      this.importSettingForm = Sage300ImportSettingModel.mapAPIResponseToFormGroup(this.importSettings, sage300FieldsResponse);\\n      this.fyleFields = fyleFieldsResponse;\\n      this.sage300Fields = sage300FieldsResponse;\\n      this.fyleFields.push({ attribute_type: \'custom_field\', display_name: \'Create a Custom Field\', is_dependent: true });\\n      this.setupFormWatchers();\\n      this.dependentFieldFormCreation();\\n      this.initializeCustomFieldForm(false);\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-import-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"importSettingService","type":"Sage300ImportSettingsService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"Sage300HelperService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""}],"line":101,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"importSettingService","type":"Sage300ImportSettingsService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"Sage300HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helper","type":"HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"accessors":{"expenseFieldsGetter":{"name":"expenseFieldsGetter","getSignature":{"name":"expenseFieldsGetter","type":"","returnType":"","line":115}}},"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n<div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n    <div>\\n        <app-configuration-step-header [headerText]=\\"\'Import Settings\'\\"\\n            [contentText]=\\"\'In this section, you can choose the fields required to be imported from Sage 300 CRE to \' + brandingConfig.brandName + \'. \'\\"\\n            [redirectLink]=\\"supportArticleLink\\" [showSyncButton]=\\"isOnboarding\\" [appName]=\\"appName\\"\\n            (refreshDimension)=\\"refreshDimensions($event)\\">\\n        </app-configuration-step-header>\\n    </div>\\n    <div>\\n        <form [formGroup]=\\"importSettingForm\\">\\n            <div class=\\"tw-p-24-px\\">\\n                <div class=\\"tw-p-24-px tw-bg-configuration-bg tw-border tw-border-separator tw-rounded-8-px tw-mb-24-px\\">\\n                    <div>\\n                        <h4 class=\\"tw-text-16-px tw-text-normal-text-color tw-mb-8-px\\">\\n                            Import / Map Sage 300 CRE Dimensions\\n                        </h4>\\n                        <p class=\\"tw-text-14-px tw-text-faded-text-color\\">\\n                            The Sage 300 CRE dimensions listed below can be mapped to an existing {{brandingConfig.brandName}} field of your preference,\\n                            or a new custom field. Importing these dimensions from Sage 300 CRE to {{brandingConfig.brandName}} will make the values\\n                            available as a dropdown in the expense form for your employees to choose from.<a\\n                                class=\\"tw-text-hyperlink-color tw-pl-4-px tw-w-fit tw-cursor-pointer\\"\\n                                (click)=\\"showPreviewDialog(true)\\">Click here</a> to preview.\\n                        </p>\\n                    </div>\\n                    <div class=\\"tw-pt-16-px\\">\\n                        <app-configuration-info-label\\n                            [infoText]=\\"\'If you\\\\\'d like to use only selective data from Sage Intacct, map a Sage Intacct dimension to a field in \' + brandingConfig.brandName + \' and turn off the import, as importing the data will sync in all the active values in Sage Intacct. You can add the required values in \' + brandingConfig.brandName + \' and map them later in the integration mapping section.\'\\">\\n                        </app-configuration-info-label>\\n                    </div>\\n                </div>\\n                <div>\\n                    <app-configuration-import-field \\n                    [form]=\\"importSettingForm\\" \\n                    [appName]=\\"appName\\" \\n                    [defaultImportFields]=\\"defaultImportFields\\" \\n                    [costCategoryOption]=\\"costCategoryOption\\" \\n                    [costCodeFieldOption]=\\"costCodeFieldOption\\" \\n                    [accountingFieldOptions]=\\"sage300Fields\\" \\n                    [fyleFieldOptions]=\\"fyleFields\\" \\n                    [dependentImportFields]=\\"dependentImportFields\\" \\n                    [dependentDestinationValue] = \\"\'JOB\'\\"\\n                    (showWarningForDependentFields)=\\"showWarningForDependentFields()\\">\\n                    </app-configuration-import-field>\\n                </div>\\n            </div>\\n            <div>\\n                <app-configuration-step-footer [ctaText] = \\"!isSaveInProgress ? (isOnboarding ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVE) : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!importSettingForm.valid\\"></app-configuration-step-footer>\\n            </div>\\n        </form>\\n    </div>\\n    <div>\\n        <app-configuration-custom-field-creation-dialog \\n            [customFieldForm]=\\"customFieldForm\\"\\n            [showCustomFieldCreationDialog]=\\"showCustomFieldDialog\\" \\n            (saveCustomFieldFn)=\\"saveCustomField()\\"\\n            (closeModelFn)=\\"closeModel()\\">\\n        </app-configuration-custom-field-creation-dialog>\\n    </div>\\n</div>\\n<div>\\n    <app-configuration-confirmation-dialog \\n        (warningAccepted)=\\"acceptDependentFieldWarning($event)\\"\\n        [isWarningVisible]=\\"showDependentFieldWarning\\" \\n        [headerText]=\\"\'Warning\'\\"\\n        [contextText]=\\"\'You have imported Cost codes and Cost Types from Sage Intacct by mapping them to fields in \' + brandingConfig.brandName + \'. By turning off the import, you would lose the mappings you\\\\\'ve established for these fields.\'\\"\\n        [iconPath]=\\"\'assets/icons/alert_dialog.svg\'\\" \\n        [confirmBtnText]=\\"\'Continue\'\\">\\n    </app-configuration-confirmation-dialog>\\n</div>\\n<div *ngIf=\\"isPreviewDialogVisible\\">\\n    <app-preview-dialog \\n        [isPreviewDialogVisible]=\\"true\\"\\n        [iconPath]=\\"\'assets/illustrations/sageIntacct/IntacctImportSettings.png\'\\" (closeDialog)=\\"closeDialog()\\"\\n        [header]=\\"\'Preview\'\\">\\n    </app-preview-dialog>\\n</div>"},{"name":"Sage300MainComponent","id":"component-Sage300MainComponent-0c627093b61a90d7edae809f117bb156665655eac9df6e3f4487ca7752d86d944e007decf9c8d11ded6accb8a9506afe2ddaaad50801d93d8e713a335b118d93","file":"src/app/integrations/sage300/sage300-main/sage300-main.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-main","styleUrls":["./sage300-main.component.scss"],"styles":[],"templateUrl":["./sage300-main.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":24},{"name":"appName","defaultValue":"AppName.SAGE300","deprecated":false,"deprecationMessage":"","type":"AppName","optional":false,"description":"","line":15},{"name":"modules","defaultValue":"[\\n    {label: \'Dashboard\', routerLink: \'/integrations/sage300/main/dashboard\'},\\n    {label: \'Export Log\', routerLink: \'/integrations/sage300/main/export_log\'},\\n    {label: \'Mapping\', routerLink: \'/integrations/sage300/main/mapping\'},\\n    {label: \'Configuration\', routerLink: \'/integrations/sage300/main/configuration\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":17}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":42,"deprecated":false,"deprecationMessage":""},{"name":"refreshDimensions","args":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"isRefresh","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":37,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\nimport { AppName } from \'src/app/core/models/enum/enum.model\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\nimport { Sage300HelperService } from \'src/app/core/services/sage300/sage300-helper/sage300-helper.service\';\\n\\n@Component({\\n  selector: \'app-sage300-main\',\\n  templateUrl: \'./sage300-main.component.html\',\\n  styleUrls: [\'./sage300-main.component.scss\']\\n})\\nexport class Sage300MainComponent implements OnInit {\\n\\n  appName: AppName = AppName.SAGE300;\\n\\n  modules: MenuItem[] = [\\n    {label: \'Dashboard\', routerLink: \'/integrations/sage300/main/dashboard\'},\\n    {label: \'Export Log\', routerLink: \'/integrations/sage300/main/export_log\'},\\n    {label: \'Mapping\', routerLink: \'/integrations/sage300/main/mapping\'},\\n    {label: \'Configuration\', routerLink: \'/integrations/sage300/main/configuration\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private accountingExportService: AccountingExportService,\\n    private router: Router,\\n    private helperService: Sage300HelperService\\n  ) { }\\n\\n  refreshDimensions(isRefresh: boolean) {\\n    this.helperService.importAttributes(isRefresh);\\n    this.accountingExportService.importExpensesFromFyle().subscribe();\\n  }\\n\\n  private setupPage() {\\n    this.activeModule = this.modules[0];\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-main.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"helperService","type":"Sage300HelperService","deprecated":false,"deprecationMessage":""}],"line":24,"jsdoctags":[{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"helperService","type":"Sage300HelperService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <app-main-menu [modules]=\\"modules\\" [activeItem]=\\"modules[0]\\" [appName]=\\"appName\\" [isDropdrownRequired]=\\"false\\" (refreshDimensionClick)=\\"refreshDimensions($event)\\"></app-main-menu>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>"},{"name":"Sage300MappingComponent","id":"component-Sage300MappingComponent-8f86a80ecbb1eee369fd784bb4d37b3e0e1a2c406945b94711c46aed09fcad6b9beb8446230ad32f3e73c00da5810caf072122534f023e965c22b458110b5ee0","file":"src/app/integrations/sage300/sage300-main/sage300-mapping/sage300-mapping.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-mapping","styleUrls":["./sage300-mapping.component.scss"],"styles":[],"templateUrl":["./sage300-mapping.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","type":"MenuItem","optional":false,"description":"","line":24},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":17},{"name":"mappingPages","defaultValue":"[\\n    {label: \'Employee\', routerLink: \'/integrations/sage300/main/mapping/employee\'},\\n    {label: \'Category\', routerLink: \'/integrations/sage300/main/mapping/category\'}\\n  ]","deprecated":false,"deprecationMessage":"","type":"MenuItem[]","optional":false,"description":"","line":19}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":49,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":31,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { TitleCasePipe } from \'@angular/common\';\\nimport { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\nimport { FyleField } from \'src/app/core/models/enum/enum.model\';\\nimport { MappingService } from \'src/app/core/services/common/mapping.service\';\\nimport { SiMappingsService } from \'src/app/core/services/si/si-core/si-mappings.service\';\\nimport { SnakeCaseToSpaceCasePipe } from \'src/app/shared/pipes/snake-case-to-space-case.pipe\';\\n\\n@Component({\\n  selector: \'app-sage300-mapping\',\\n  templateUrl: \'./sage300-mapping.component.html\',\\n  styleUrls: [\'./sage300-mapping.component.scss\']\\n})\\nexport class Sage300MappingComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  mappingPages: MenuItem[] = [\\n    {label: \'Employee\', routerLink: \'/integrations/sage300/main/mapping/employee\'},\\n    {label: \'Category\', routerLink: \'/integrations/sage300/main/mapping/category\'}\\n  ];\\n\\n  activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router,\\n    private mappingService: MappingService\\n  ) { }\\n\\n  private setupPage(): void {\\n    this.isLoading = true;\\n    this.mappingService.getMappingSettings().subscribe((response) => {\\n      if (response.results && Array.isArray(response.results)) {\\n        response.results.forEach((item) => {\\n          if (item.source_field!==FyleField.EMPLOYEE && item.source_field!==\'CATEGORY\') {\\n            this.mappingPages.push({\\n              label: new TitleCasePipe().transform(new SnakeCaseToSpaceCasePipe().transform(item.source_field)),\\n              routerLink: `/integrations/sage300/main/mapping/${item.source_field.toLowerCase()}`\\n            });\\n          }\\n        });\\n      }\\n      this.router.navigateByUrl(this.mappingPages[0].routerLink);\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-mapping.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":""}],"line":24,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-absolute tw-bg-header-1 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div class=\\"tw-absolute tw-bg-header-2 tw-h-84-px tw-w-[100%] tw-z-[-1]\\"></div>\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-py-40-px tw-px-120-px\\">\\n    <app-sub-menu [modules]=\\"mappingPages\\" [activeModule]=\\"mappingPages[0]\\"></app-sub-menu>\\n    <div>\\n        <router-outlet></router-outlet>\\n    </div>\\n</div>\\n"},{"name":"Sage300OnboardingAdvancedSettingsComponent","id":"component-Sage300OnboardingAdvancedSettingsComponent-bd4ed37b7cdc4983f1932e83b0dbea6b82044468bb100b96da8a5c4806ecd90b9d74639c1ce04fdb4ac049beee400d762203c2e722117f1453f5d8228a62d50d","file":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-advanced-settings/sage300-onboarding-advanced-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-onboarding-advanced-settings","styleUrls":["./sage300-onboarding-advanced-settings.component.scss"],"styles":[],"templateUrl":["./sage300-onboarding-advanced-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"this.onboardingService.getOnboardingSteps(Sage300OnboardingState.ADVANCED_SETTINGS.replace(\'_\', \' \'))","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Sage300OnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { Sage300OnboardingService } from \'src/app/core/services/sage300/sage300-configuration/sage300-onboarding.service\';\\n\\n@Component({\\n  selector: \'app-sage300-onboarding-advanced-settings\',\\n  templateUrl: \'./sage300-onboarding-advanced-settings.component.html\',\\n  styleUrls: [\'./sage300-onboarding-advanced-settings.component.scss\']\\n})\\nexport class Sage300OnboardingAdvancedSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = this.onboardingService.getOnboardingSteps(Sage300OnboardingState.ADVANCED_SETTINGS.replace(\'_\', \' \'));\\n\\n  constructor(\\n    private onboardingService: Sage300OnboardingService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-onboarding-advanced-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"onboardingService","type":"Sage300OnboardingService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"onboardingService","type":"Sage300OnboardingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <div>\\n        <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    </div>\\n    <div>\\n        <app-sage300-advanced-settings></app-sage300-advanced-settings>\\n    </div>\\n</div>\\n\\n"},{"name":"Sage300OnboardingComponent","id":"component-Sage300OnboardingComponent-2b84efa51506478e7bf785fe4fb006f11dde78b45578bc6de824f1d447feedc2b368de071a56c2f844a0fc30dfcaabdde58f43e507ec52d4263fb132d71f2ec7","file":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-onboarding","styleUrls":["./sage300-onboarding.component.scss"],"styles":[],"templateUrl":["./sage300-onboarding.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":12,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-sage300-onboarding\',\\n  templateUrl: \'./sage300-onboarding.component.html\',\\n  styleUrls: [\'./sage300-onboarding.component.scss\']\\n})\\nexport class Sage300OnboardingComponent implements OnInit {\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-onboarding.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":8},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>\\n"},{"name":"Sage300OnboardingConnectorComponent","id":"component-Sage300OnboardingConnectorComponent-9a06e4cecab27d24ff91d56f90f3e176f4b4b7a3f6e5f60a27981bd4a9fd2668b3b8f8cab534b95405cda6a4a94f4574264282e89af9ef16cb9c4ace73f731a2","file":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-connector/sage300-onboarding-connector.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-onboarding-connector","styleUrls":["./sage300-onboarding-connector.component.scss"],"styles":[],"templateUrl":["./sage300-onboarding-connector.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":33,"modifierKind":[148]},{"name":"ConfigurationCtaText","defaultValue":"ConfigurationCta","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":31},{"name":"connectSage300Form","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":27},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":21},{"name":"onboardingSteps","defaultValue":"this.onboardingService.getOnboardingSteps(\'Connect to Sage 300 CRE\')","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":25},{"name":"redirectLink","defaultValue":"brandingKbArticles.topLevelArticles.SAGE300","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":23},{"name":"saveInProgress","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":29}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":86,"deprecated":false,"deprecationMessage":""},{"name":"save","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":68,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { Router } from \'@angular/router\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { ConfigurationCta, Sage300OnboardingState, ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { Sage300Credential } from \'src/app/core/models/sage300/db/sage300-credentials.model\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { WorkspaceService } from \'src/app/core/services/common/workspace.service\';\\nimport { Sage300ConnectorService } from \'src/app/core/services/sage300/sage300-configuration/sage300-connector.service\';\\nimport { Sage300OnboardingService } from \'src/app/core/services/sage300/sage300-configuration/sage300-onboarding.service\';\\nimport { Sage300MappingService } from \'src/app/core/services/sage300/sage300-mapping/sage300-mapping.service\';\\n\\n@Component({\\n  selector: \'app-sage300-onboarding-connector\',\\n  templateUrl: \'./sage300-onboarding-connector.component.html\',\\n  styleUrls: [\'./sage300-onboarding-connector.component.scss\']\\n})\\nexport class Sage300OnboardingConnectorComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  redirectLink = brandingKbArticles.topLevelArticles.SAGE300;\\n\\n  onboardingSteps: OnboardingStepper[] = this.onboardingService.getOnboardingSteps(\'Connect to Sage 300 CRE\');\\n\\n  connectSage300Form: FormGroup;\\n\\n  saveInProgress: boolean = false;\\n\\n  ConfigurationCtaText = ConfigurationCta;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private onboardingService: Sage300OnboardingService,\\n    private router: Router,\\n    private workspaceService: WorkspaceService,\\n    private formBuilder: FormBuilder,\\n    private connectorService: Sage300ConnectorService,\\n    private toastService: IntegrationsToastService,\\n    private mappingService: Sage300MappingService\\n  ) { }\\n\\n  save() {\\n    const userID = this.connectSage300Form.value.userID;\\n    const companyID = this.connectSage300Form.value.companyID;\\n    const userPassword = this.connectSage300Form.value.userPassword;\\n\\n    this.isLoading = true;\\n    this.connectorService.connectSage300({\\n      username: userID,\\n      identifier: companyID,\\n      password: userPassword,\\n      workspace: this.workspaceService.getWorkspaceId()\\n    }).subscribe((response) => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Connection Successful.\');\\n      this.workspaceService.setOnboardingState(Sage300OnboardingState.EXPORT_SETTINGS);\\n      this.mappingService.importSage300Attributes(true).subscribe();\\n      this.router.navigate([this.onboardingSteps[1].route]);\\n    }, () => {\\n      this.isLoading = false;\\n      this.toastService.displayToastMessage(ToastSeverity.ERROR, \'Error while connecting, please try again later.\');\\n    });\\n  }\\n\\n  private setupPage(): void {\\n    this.connectorService.getSage300Credential().subscribe((sage300Cred: Sage300Credential) => {\\n      this.connectSage300Form = this.formBuilder.group({\\n        userID: [sage300Cred.username, Validators.required],\\n        companyID: [sage300Cred.identifier, Validators.required],\\n        userPassword: [\'\', Validators.required]\\n      });\\n      this.isLoading = false;\\n    }, () => {\\n      this.connectSage300Form = this.formBuilder.group({\\n        userID: [\'\', Validators.required],\\n        companyID: [\'\', Validators.required],\\n        userPassword: [\'\', Validators.required]\\n      });\\n      this.isLoading = false;\\n    });\\n  }\\n\\nngOnInit(): void {\\n  this.setupPage();\\n}\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-onboarding-connector.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"onboardingService","type":"Sage300OnboardingService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"connectorService","type":"Sage300ConnectorService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"mappingService","type":"Sage300MappingService","deprecated":false,"deprecationMessage":""}],"line":33,"jsdoctags":[{"name":"onboardingService","type":"Sage300OnboardingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"WorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"connectorService","type":"Sage300ConnectorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"mappingService","type":"Sage300MappingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <div>\\n       <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    </div>\\n    <div>\\n        <div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n            <app-loader></app-loader>\\n        </div>\\n        <div *ngIf=\\"!isLoading\\" class=\\"configuration--contents tw-border-separator tw-mt-6\\">\\n            <div>\\n                <app-configuration-step-header \\n                [headerText]=\\"\'Connect to your Sage 300 CRE account\'\\"\\n                [contentText]=\\"\'Connect to your Sage 300 CRE account to establish a connection between \' + brandingConfig.brandName + \' and Sage 300 CRE. HH2 Identifier is required to connect Sage 300 CRE to \'+ brandingConfig.brandName\\"\\n                [redirectLink]=\\"redirectLink\\"></app-configuration-step-header>\\n            </div>\\n            <div class=\\"tw-flex tw-justify-center tw-items-center\\">\\n                <div class=\\"tw-p-24-px\\">\\n                    <form [formGroup]=\\"connectSage300Form\\">\\n                        <div class=\\"tw-mb-16-px\\">\\n                            <app-configuration-text-field [customErrorMessage]=\\"\'Please enter a valid HH2 Identifier.\'\\" [form]=\\"connectSage300Form\\" [formControllerName]=\\"\'companyID\'\\" [isFieldMandatory]=\\"true\\" [label]=\\"\'HH2 Identifier\'\\" [placeholder]=\\"\'Enter HH2 Identifier\'\\"></app-configuration-text-field>\\n                        </div>\\n                        <div class=\\"tw-mb-16-px\\">\\n                            <app-configuration-text-field [customErrorMessage]=\\"\'Please enter valid HH2 User ID.\'\\" [form]=\\"connectSage300Form\\" [formControllerName]=\\"\'userID\'\\" [isFieldMandatory]=\\"true\\" [label]=\\"\'HH2 User ID\'\\" [placeholder]=\\"\'Enter HH2 User ID\'\\"></app-configuration-text-field>\\n                        </div>\\n                        <div>\\n                            <app-configuration-text-field [customErrorMessage]=\\"\'Incorrect Password. Please enter correct password\'\\" [form]=\\"connectSage300Form\\" [formControllerName]=\\"\'userPassword\'\\" [isFieldMandatory]=\\"true\\" [label]=\\"\'HH2 User Password\'\\" [placeholder]=\\"\'Enter HH2 User Password\'\\" [type]=\\"\'password\'\\"></app-configuration-text-field>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n            <div>\\n                <app-configuration-step-footer [ctaText]=\\"!saveInProgress ? ConfigurationCtaText.SAVE_AND_CONTINUE : ConfigurationCtaText.SAVING\\" (save)=\\"save()\\" [isButtonDisabled]=\\"!connectSage300Form.valid\\"></app-configuration-step-footer>\\n             </div>\\n        </div>\\n    </div>\\n</div>"},{"name":"Sage300OnboardingDoneComponent","id":"component-Sage300OnboardingDoneComponent-bf27a3d756816eedf29e658acf8b04c89f6a5e53a77b42dea6e8ef66ed8f35e3c7b991564e97c2601906d5692e11742f2dabf7a9a23af0ec65022a2bdfe350c9","file":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-done/sage300-onboarding-done.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-onboarding-done","styleUrls":["./sage300-onboarding-done.component.scss"],"styles":[],"templateUrl":["./sage300-onboarding-done.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"navigateToDashboard","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":15,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-sage300-onboarding-done\',\\n  templateUrl: \'./sage300-onboarding-done.component.html\',\\n  styleUrls: [\'./sage300-onboarding-done.component.scss\']\\n})\\nexport class Sage300OnboardingDoneComponent implements OnInit {\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n  navigateToDashboard(): void {\\n    this.router.navigate([`/integrations/sage300/main`]);\\n  }\\n\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-onboarding-done.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":9,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<app-onboarding-done (launchIntegrationClick)=\\"navigateToDashboard()\\"></app-onboarding-done>\\n"},{"name":"Sage300OnboardingExportSettingsComponent","id":"component-Sage300OnboardingExportSettingsComponent-a94156b417f0644595d8f1968c1d330e7333aaffc8f74502b0f51e3e5d1f5a56a838c56976a3fc54b7b2d60a154b538c7c1e059cbebe4ecc41d27c1c0d10d9be","file":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-export-settings/sage300-onboarding-export-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-onboarding-export-settings","styleUrls":["./sage300-onboarding-export-settings.component.scss"],"styles":[],"templateUrl":["./sage300-onboarding-export-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"this.onboardingService.getOnboardingSteps(Sage300OnboardingState.EXPORT_SETTINGS.replace(\'_\', \' \'))","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Sage300OnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { Sage300OnboardingService } from \'src/app/core/services/sage300/sage300-configuration/sage300-onboarding.service\';\\n\\n@Component({\\n  selector: \'app-sage300-onboarding-export-settings\',\\n  templateUrl: \'./sage300-onboarding-export-settings.component.html\',\\n  styleUrls: [\'./sage300-onboarding-export-settings.component.scss\']\\n})\\nexport class Sage300OnboardingExportSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = this.onboardingService.getOnboardingSteps(Sage300OnboardingState.EXPORT_SETTINGS.replace(\'_\', \' \'));\\n\\n  constructor(\\n    private onboardingService: Sage300OnboardingService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-onboarding-export-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"onboardingService","type":"Sage300OnboardingService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"onboardingService","type":"Sage300OnboardingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <div>\\n        <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    </div>\\n    <div>\\n        <app-sage300-export-settings></app-sage300-export-settings>\\n    </div>\\n</div>\\n"},{"name":"Sage300OnboardingImportSettingsComponent","id":"component-Sage300OnboardingImportSettingsComponent-65be821a78aa64f16268b0203afca320b2c3399ba79459ee89e3e36a54ec7f731edb68a60cf39b0ae5b77eb1c6b5d56c052b7a77abf54e38bb8ca9eae6598876","file":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-import-settings/sage300-onboarding-import-settings.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-onboarding-import-settings","styleUrls":["./sage300-onboarding-import-settings.component.scss"],"styles":[],"templateUrl":["./sage300-onboarding-import-settings.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"onboardingSteps","defaultValue":"this.onboardingService.getOnboardingSteps(Sage300OnboardingState.IMPORT_SETTINGS.replace(\'_\', \' \'))","deprecated":false,"deprecationMessage":"","type":"OnboardingStepper[]","optional":false,"description":"","line":13}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { Sage300OnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { OnboardingStepper } from \'src/app/core/models/misc/onboarding-stepper.model\';\\nimport { Sage300OnboardingService } from \'src/app/core/services/sage300/sage300-configuration/sage300-onboarding.service\';\\n\\n@Component({\\n  selector: \'app-sage300-onboarding-import-settings\',\\n  templateUrl: \'./sage300-onboarding-import-settings.component.html\',\\n  styleUrls: [\'./sage300-onboarding-import-settings.component.scss\']\\n})\\nexport class Sage300OnboardingImportSettingsComponent implements OnInit {\\n\\n  onboardingSteps: OnboardingStepper[] = this.onboardingService.getOnboardingSteps(Sage300OnboardingState.IMPORT_SETTINGS.replace(\'_\', \' \'));\\n\\n  constructor(\\n    private onboardingService: Sage300OnboardingService\\n  ) { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-onboarding-import-settings.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"onboardingService","type":"Sage300OnboardingService","deprecated":false,"deprecationMessage":""}],"line":13,"jsdoctags":[{"name":"onboardingService","type":"Sage300OnboardingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-pb-48-px\\">\\n    <div>\\n        <app-onboarding-steppers [onboardingSteps]=\\"onboardingSteps\\"></app-onboarding-steppers>\\n    </div>\\n    <div>\\n        <app-sage300-import-settings></app-sage300-import-settings>\\n    </div>\\n</div>\\n"},{"name":"Sage300OnboardingLandingComponent","id":"component-Sage300OnboardingLandingComponent-fb0540821568f48817c6b04f52eda7a16d3441a5cb1e6a2cae5d1295e040616526be42788bc02f158d1ba1eeb1f0904b59cce09a5cdef1309cefa57d3867f29a","file":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-landing/sage300-onboarding-landing.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-onboarding-landing","styleUrls":["./sage300-onboarding-landing.component.scss"],"styles":[],"templateUrl":["./sage300-onboarding-landing.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":15,"modifierKind":[148]},{"name":"embedVideoLink","defaultValue":"brandingDemoVideoLinks.onboarding.SAGE300","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":13},{"name":"redirectLink","defaultValue":"brandingKbArticles.onboardingArticles.SAGE300.LANDING","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":11}],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { brandingConfig, brandingDemoVideoLinks, brandingKbArticles } from \'src/app/branding/branding-config\';\\n\\n@Component({\\n  selector: \'app-sage300-onboarding-landing\',\\n  templateUrl: \'./sage300-onboarding-landing.component.html\',\\n  styleUrls: [\'./sage300-onboarding-landing.component.scss\']\\n})\\nexport class Sage300OnboardingLandingComponent implements OnInit {\\n\\n  redirectLink = brandingKbArticles.onboardingArticles.SAGE300.LANDING;\\n\\n  embedVideoLink = brandingDemoVideoLinks.onboarding.SAGE300;\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-onboarding-landing.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":15},"extends":[],"implements":["OnInit"],"templateData":"<div>\\n    <div>\\n        <app-landing-page-header [iconPath]=\\"\'assets/logos/sage300-logo.svg\'\\" [appName]=\\"\'Sage 300 CRE\'\\" [appDescription]=\\"\'Import data from Sage 300 CRE to \' + brandingConfig.brandName + \' and Export expenses from \' + brandingConfig.brandName + \' to Sage 300 CRE. \'\\" [isLoading]=\\"false\\" [isIntegrationSetupInProgress]=\\"false\\" [isIntegrationConnected]=\\"false\\" [redirectLink]=\\"redirectLink\\" [buttonText]=\\"\'Connect\'\\" [postConnectionRoute]=\\"\'sage300/onboarding/connector\'\\"></app-landing-page-header>\\n    </div>\\n    <div>\\n        <app-landing-page-body [headlineText]=\\"\'Guide to setup your Integrations\'\\" [headerText]=\\"\'A quick guide to help you set up the integration quick and easy.\'\\" [embedVideo]=\\"embedVideoLink\\" [svgPath]=\\"\'assets/flow-charts/sage300-flow-chart.svg\'\\"></app-landing-page-body>\\n    </div>\\n</div>\\n"},{"name":"Sage300SkippedExportLogComponent","id":"component-Sage300SkippedExportLogComponent-473a0bb94013afba1f65c45137877c813d64478783af93b028e4f99d0ced3c32289319471513807fbea66b8b07f695c94b0d8c4881453d090414dc22a44aa478","file":"src/app/integrations/sage300/sage300-main/sage300-export-log/sage300-skipped-export-log/sage300-skipped-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sage300-skipped-export-log","styleUrls":["./sage300-skipped-export-log.component.scss"],"styles":[],"templateUrl":["./sage300-skipped-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":38},{"name":"dateOptions","defaultValue":"AccountingExportModel.getDateOptions()","deprecated":false,"deprecationMessage":"","type":"DateFilter[]","optional":false,"description":"","line":28},{"name":"expenses","deprecated":false,"deprecationMessage":"","type":"SkipExportList[]","optional":false,"description":"","line":30},{"name":"filteredExpenses","deprecated":false,"deprecationMessage":"","type":"SkipExportList[]","optional":false,"description":"","line":32},{"name":"isDateSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":40},{"name":"isLoading","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":34},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":36},{"name":"selectedDateFilter","deprecated":false,"deprecationMessage":"","type":"SelectedDateFilter | null","optional":false,"description":"","line":42},{"name":"skipExportLogForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":26},{"name":"totalCount","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":24}],"methodsClass":[{"name":"getSkippedExpenses","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":61,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSkippedExpensesAndSetupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"handleSimpleSearch","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":""},{"name":"pageChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":91,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":98,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"trackDateFilter","args":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":""},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":133,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { FormBuilder, FormGroup } from \'@angular/forms\';\\nimport { AccountingExportModel, SkippedAccountingExportModel } from \'src/app/core/models/db/accounting-export.model\';\\nimport { PaginatorPage } from \'src/app/core/models/enum/enum.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { DateFilter, SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { SkipExportList, SkipExportLog, SkipExportLogResponse } from \'src/app/core/models/si/db/expense-group.model\';\\nimport { AccountingExportService } from \'src/app/core/services/common/accounting-export.service\';\\nimport { ExportLogService } from \'src/app/core/services/common/export-log.service\';\\nimport { PaginatorService } from \'src/app/core/services/common/paginator.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-sage300-skipped-export-log\',\\n  templateUrl: \'./sage300-skipped-export-log.component.html\',\\n  styleUrls: [\'./sage300-skipped-export-log.component.scss\']\\n})\\nexport class Sage300SkippedExportLogComponent implements OnInit {\\n\\n  isLoading: boolean;\\n\\n  totalCount: number = 0;\\n\\n  skipExportLogForm: FormGroup;\\n\\n  dateOptions: DateFilter[] = AccountingExportModel.getDateOptions();\\n\\n  expenses: SkipExportList[];\\n\\n  filteredExpenses: SkipExportList[];\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  currentPage: number = 1;\\n\\n  isDateSelected: boolean = false;\\n\\n  selectedDateFilter: SelectedDateFilter | null;\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private trackingService: TrackingService,\\n    private exportLogService: ExportLogService,\\n    private accountingExportService: AccountingExportService,\\n    private windowService: WindowService,\\n    private paginatorService: PaginatorService\\n  ) { }\\n\\n  public handleSimpleSearch(event: any) {\\n    const query = event.target.value.toLowerCase();\\n\\n    this.filteredExpenses = this.expenses.filter((group: SkipExportList) => {\\n      return SkippedAccountingExportModel.getfilteredSkippedAccountingExports(query, group);\\n    });\\n  }\\n\\n  getSkippedExpenses(limit: number, offset: number) {\\n    this.isLoading = true;\\n    const skippedExpenseGroup: SkipExportList[] = [];\\n\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.EXPORT_LOG, limit);\\n    }\\n\\n    return this.exportLogService.getSkippedExpenses(limit, offset).subscribe((skippedExpenses: SkipExportLogResponse) => {\\n      if (!this.isDateSelected) {\\n        this.totalCount = skippedExpenses.count;\\n      }\\n\\n      skippedExpenses.results.forEach((skippedExpense: SkipExportLog) => {\\n        skippedExpenseGroup.push(SkippedAccountingExportModel.parseAPIResponseToSkipExportList(skippedExpense));\\n      });\\n\\n      this.filteredExpenses = skippedExpenseGroup;\\n      this.expenses = [...this.filteredExpenses];\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    this.limit = limit;\\n    this.currentPage = 1;\\n    this.getSkippedExpenses(limit, this.offset);\\n  }\\n\\n  pageChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.offset = offset;\\n    this.currentPage = Math.ceil(offset / this.limit) + 1;\\n    this.getSkippedExpenses(this.limit, offset);\\n  }\\n\\n  private setupForm(): void {\\n    this.skipExportLogForm = this.formBuilder.group({\\n      searchOption: [\'\'],\\n      dateRange: [null],\\n      start: [\'\'],\\n      end: [\'\']\\n    });\\n\\n    this.skipExportLogForm.controls.dateRange.valueChanges.subscribe((dateRange) => {\\n      const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n      if (dateRange) {\\n        this.selectedDateFilter = {\\n          startDate: dateRange.startDate,\\n          endDate: dateRange.endDate\\n        };\\n\\n        this.trackDateFilter(\'existing\', this.selectedDateFilter);\\n        this.getSkippedExpenses(paginator.limit, paginator.offset);\\n      } else {\\n        this.selectedDateFilter = null;\\n        this.getSkippedExpenses(paginator.limit, paginator.offset);\\n      }\\n    });\\n  }\\n\\n  private getSkippedExpensesAndSetupPage(): void {\\n    this.setupForm();\\n\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n\\n    this.getSkippedExpenses(paginator.limit, paginator.offset);\\n  }\\n\\n  private trackDateFilter(filterType: \'existing\' | \'custom\', selectedDateFilter: SelectedDateFilter): void {\\n    const trackingProperty = {\\n      filterType,\\n      ...selectedDateFilter\\n    };\\n    this.trackingService.onDateFilter(trackingProperty);\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSkippedExpensesAndSetupPage();\\n    this.isLoading = false;\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./sage300-skipped-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":""},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""}],"line":42,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"accountingExportService","type":"AccountingExportService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-justify-center tw-items-center tw-h-screen\\">\\n    <app-loader></app-loader>\\n</div>\\n\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-shadow-app-card tw-bg-white tw-border-1-px tw-border-separator\\">\\n    <div>\\n        <app-export-log-filter *ngIf=\\"totalCount > 0 || selectedDateFilter\\"\\n            [exportLogForm]=\\"skipExportLogForm\\"\\n            [dateOptions]=\\"dateOptions\\"\\n            (handleSimpleSearch)=\\"handleSimpleSearch($event)\\">\\n        </app-export-log-filter>\\n\\n        <app-skipped-export-log-table [filteredExpense]=\\"filteredExpenses\\">\\n        </app-skipped-export-log-table>\\n\\n        <div *ngIf=\\"filteredExpenses.length > 0\\" class=\\"tw-p-24-px tw-border-t-1-px\\">\\n            <app-paginator \\n                [dropDownValue]=\\"limit\\" \\n                [page]=\\"currentPage\\" \\n                [totalCount]=\\"totalCount\\" \\n                (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" \\n                (pageOffsetChangeEvent)=\\"pageChanges($event)\\">\\n            </app-paginator>\\n        </div>\\n\\n        <app-zero-state-with-illustration *ngIf=\\"!filteredExpenses.length && !selectedDateFilter && totalCount > 0\\"\\n            [mainText]=\\"\'Sorry, no results found!\'\\"\\n            [subText]=\\"\'We could not find what you were looking for. Kindly check the keywords again.\'\\">\\n        </app-zero-state-with-illustration>\\n\\n    </div>\\n\\n    <app-zero-state-with-illustration *ngIf=\\"totalCount === 0\\"\\n    [mainText]=\\"\'No records to show yet!\'\\"\\n    [subText]=\\"\'All your expenses that were skipped from exporting will be stored here.\'\\">\\n    </app-zero-state-with-illustration>\\n</div>\\n"},{"name":"ShimmersComponent","id":"component-ShimmersComponent-b441e2c94fedad98e19697a4cbe00fd57a94a08efde501696665fb7c2ae6e6ab1b5999030f7cfab8b24ede0d2920468a6f669ff347546f2e6faa2c9a5d3bec3c","file":"src/app/shared/components/helper/shimmers/shimmers.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-shimmers","styleUrls":["./shimmers.component.scss"],"styles":[],"templateUrl":["./shimmers.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"exportLogHeader","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"isDashboardImportInProgress","deprecated":false,"deprecationMessage":"","line":14,"type":"boolean","decorators":[]},{"name":"isExportLogFetchInProgress","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"isMappingTableShimmers","deprecated":false,"deprecationMessage":"","line":16,"type":"boolean","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-shimmers\',\\n  templateUrl: \'./shimmers.component.html\',\\n  styleUrls: [\'./shimmers.component.scss\']\\n})\\nexport class ShimmersComponent implements OnInit {\\n\\n  @Input() exportLogHeader: string;\\n\\n  @Input() isExportLogFetchInProgress: boolean;\\n\\n  @Input() isDashboardImportInProgress: boolean;\\n\\n  @Input() isMappingTableShimmers: boolean;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./shimmers.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":16},"extends":[],"implements":["OnInit"],"templateData":"\x3c!-- Dashboard Import Shimmers --\x3e\\n<div class=\\"tw-p-24-px\\" *ngIf=\\"isDashboardImportInProgress\\">\\n    <div class=\\"tw-flex tw-justify-between tw-items-center \\">\\n        <div class=\\"tw-w-3/5\\">\\n            <div class=\\"tw-mb-10-px\\"><p-skeleton width=\\"250px\\" height=\\"16px\\" shape=\\"rectangle\\" ></p-skeleton></div>\\n            <div class=\\"tw-mb-10-px\\"><p-skeleton width=\\"500px\\" height=\\"16px\\" shape=\\"rectangle\\"></p-skeleton></div>\\n            <div class=\\"tw-mb-10-px\\"><p-skeleton width=\\"300px\\" height=\\"16px\\" shape=\\"rectangle\\"></p-skeleton></div>\\n        </div>\\n        <div class=\\"tw-flex tw-items-end tw-justify-end\\">\\n            <p-skeleton width=\\"120px\\" height=\\"50px\\" shape=\\"rectangle\\" ></p-skeleton>\\n        </div>\\n    </div>\\n</div>\\n\\n\x3c!-- Export Log Dashboard View --\x3e\\n<div *ngIf=\\"isExportLogFetchInProgress && exportLogHeader\\">\\n    <tr *ngFor=\\"let _ of [0,1,2,3,4,5,6]\\">\\n        <td *ngIf=\\"isExportLogFetchInProgress\\"><p-skeleton width=\\"50px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n        <td *ngIf=\\"isExportLogFetchInProgress\\"><p-skeleton width=\\"100px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n        <td *ngIf=\\"isExportLogFetchInProgress\\"><p-skeleton width=\\"100px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n        <td *ngIf=\\"isExportLogFetchInProgress && exportLogHeader===\'Successful\'\\"><p-skeleton width=\\"50px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n        <td *ngIf=\\"isExportLogFetchInProgress && exportLogHeader===\'Successful\'\\"><p-skeleton width=\\"50px\\" height=\\"28px\\" shape=\\"rectangle\\"></p-skeleton></td>\\n    </tr>\\n</div>"},{"name":"SiComponent","id":"component-SiComponent-ed1103df86ec21fe874fa8cb3dacc6355e2a40bf747800a2cf6aff4713b9af03ff8518936a72f7c9ac6714c63e891adf25816149ef2dc3e107236124b54e986a","file":"src/app/integrations/si/si.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-si","styleUrls":["./si.component.scss"],"styles":[],"templateUrl":["./si.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":23},{"name":"user","defaultValue":"this.userService.getUserProfile()","deprecated":false,"deprecationMessage":"","type":"MinimalUser","optional":false,"description":"","line":19},{"name":"windowReference","deprecated":false,"deprecationMessage":"","type":"Window","optional":false,"description":"","line":25},{"name":"workspace","deprecated":false,"deprecationMessage":"","type":"IntacctWorkspace","optional":false,"description":"","line":21}],"methodsClass":[{"name":"getOrCreateWorkspace","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":64,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"navigate","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":38,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":77,"deprecated":false,"deprecationMessage":""},{"name":"setupWorkspace","args":[{"name":"workspace","type":"IntacctWorkspace","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"workspace","type":"IntacctWorkspace","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { NavigationEnd, Router } from \'@angular/router\';\\nimport { MinimalUser } from \'src/app/core/models/db/user.model\';\\nimport { AppName, IntacctOnboardingState } from \'src/app/core/models/enum/enum.model\';\\nimport { IntacctWorkspace } from \'src/app/core/models/si/db/workspaces.model\';\\nimport { StorageService } from \'src/app/core/services/common/storage.service\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { AppcuesService } from \'src/app/core/services/integration/appcues.service\';\\nimport { UserService } from \'src/app/core/services/misc/user.service\';\\nimport { SiWorkspaceService } from \'src/app/core/services/si/si-core/si-workspace.service\';\\n\\n@Component({\\n  selector: \'app-si\',\\n  templateUrl: \'./si.component.html\',\\n  styleUrls: [\'./si.component.scss\']\\n})\\nexport class SiComponent implements OnInit {\\n\\n  user: MinimalUser = this.userService.getUserProfile();\\n\\n  workspace: IntacctWorkspace;\\n\\n  isLoading: boolean = true;\\n\\n  windowReference: Window;\\n\\n  constructor(\\n    private appcuesService: AppcuesService,\\n    private storageService: StorageService,\\n    private router: Router,\\n    private userService: UserService,\\n    private workspaceService: SiWorkspaceService,\\n    private windowService: WindowService\\n  ) {\\n    this.windowReference = this.windowService.nativeWindow;\\n  }\\n\\n  private navigate(): void {\\n    const pathName = this.windowReference.location.pathname;\\n    if (pathName === \'/integrations/intacct\') {\\n      const onboardingStateComponentMap = {\\n        [IntacctOnboardingState.CONNECTION]: \'/integrations/intacct/onboarding/landing\',\\n        [IntacctOnboardingState.LOCATION_ENTITY]: \'/integrations/intacct/onboarding/connector\',\\n        [IntacctOnboardingState.EXPORT_SETTINGS]: \'/integrations/intacct/onboarding/export_settings\',\\n        [IntacctOnboardingState.IMPORT_SETTINGS]: \'/integrations/intacct/onboarding/import_settings\',\\n        [IntacctOnboardingState.ADVANCED_CONFIGURATION]: \'/integrations/intacct/onboarding/advanced_settings\',\\n        [IntacctOnboardingState.COMPLETE]: \'/integrations/intacct/main/dashboard\'\\n      };\\n      this.router.navigateByUrl(onboardingStateComponentMap[this.workspace.onboarding_state]);\\n    }\\n  }\\n\\n  setupWorkspace(workspace:IntacctWorkspace) {\\n    this.workspace = workspace;\\n    this.storageService.set(\'si.workspaceId\', this.workspace.id);\\n    this.storageService.set(\'si.onboardingState\', this.workspace.onboarding_state);\\n    this.appcuesService.initialiseAppcues(AppName.INTACCT, this.workspace.created_at);\\n    this.workspaceService.syncFyleDimensions().subscribe();\\n    this.workspaceService.syncIntacctDimensions().subscribe();\\n    this.isLoading = false;\\n    this.navigate();\\n  }\\n\\n  private getOrCreateWorkspace(): void {\\n    this.workspaceService.getWorkspace(this.user.org_id).subscribe((workspaces) => {\\n      if (workspaces.length) {\\n        this.setupWorkspace(workspaces[0]);\\n      } else {\\n        this.workspaceService.postWorkspace().subscribe((workspaces: IntacctWorkspace) => {\\n          this.setupWorkspace(workspaces);\\n        });\\n      }\\n    }\\n    );\\n  }\\n\\n  ngOnInit(): void {\\n    this.router.events.subscribe((event) => {\\n      if (event instanceof NavigationEnd) {\\n        (window as any).Appcues && (window as any).Appcues.page();\\n      }\\n    });\\n    this.getOrCreateWorkspace();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./si.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"appcuesService","type":"AppcuesService","deprecated":false,"deprecationMessage":""},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":""},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":""},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":25,"jsdoctags":[{"name":"appcuesService","type":"AppcuesService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"storageService","type":"StorageService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"userService","type":"UserService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"workspaceService","type":"SiWorkspaceService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<router-outlet></router-outlet>"},{"name":"SkipExportComponent","id":"component-SkipExportComponent-57e47e8c15b0e362b35e740ea973f81fc50fc37d992f963a9f1b81d87c99668b5e514c795a694a350cb2d6c9f92b7fe16a0f390904db41e11b394cd17e4db15c","file":"src/app/shared/components/si/helper/skip-export/skip-export.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-skip-export","styleUrls":["./skip-export.component.scss"],"styles":[],"templateUrl":["./skip-export.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"enableSkipExport","deprecated":false,"deprecationMessage":"","line":15,"type":"boolean","decorators":[]},{"name":"skipExportForm","deprecated":false,"deprecationMessage":"","line":17,"type":"FormGroup","decorators":[]}],"outputsClass":[{"name":"skipExportFormChange","defaultValue":"new EventEmitter<FormGroup>()","deprecated":false,"deprecationMessage":"","line":19,"type":"EventEmitter"}],"propertiesClass":[{"name":"conditionFieldOptions","deprecated":false,"deprecationMessage":"","type":"ConditionField[]","optional":false,"description":"","line":41},{"name":"customOperatorOptions","defaultValue":"[\\n    {\\n      label: \'Is\',\\n      value: CustomOperatorOption.Is\\n    },\\n    {\\n      label: \'Is empty\',\\n      value: CustomOperatorOption.IsEmpty\\n    },\\n    {\\n      label: \'Is not empty\',\\n      value: CustomOperatorOption.IsNotEmpty\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":49},{"name":"customSelectOperatorOptions","defaultValue":"[\\n    {\\n      label: \'is\',\\n      value: \'iexact\'\\n    },\\n    {\\n      label: \'is not\',\\n      value: \'not_in\'\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":64},{"name":"expenseFilters","deprecated":false,"deprecationMessage":"","type":"SkipExport[]","optional":false,"description":"","line":23},{"name":"isDisabledChip1","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":31},{"name":"isDisabledChip2","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":33},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":21},{"name":"joinByOptions","defaultValue":"[{value: JoinOptions.AND}, {value: JoinOptions.OR}]","deprecated":false,"deprecationMessage":"","type":"[]","optional":false,"description":"","line":47},{"name":"operatorFieldOptions1","deprecated":false,"deprecationMessage":"","type":"literal type[]","optional":false,"description":"","line":43},{"name":"operatorFieldOptions2","deprecated":false,"deprecationMessage":"","type":"literal type[]","optional":false,"description":"","line":45},{"name":"showAddButton","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":37},{"name":"showAdditionalCondition","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":35},{"name":"showExpenseFilters","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":25},{"name":"skippedCondition1","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":27},{"name":"skippedCondition2","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":29},{"name":"valueOption1","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any[]","optional":false,"description":"","line":75},{"name":"valueOption2","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"any[]","optional":false,"description":"","line":77},{"name":"workspaceId","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":39}],"methodsClass":[{"name":"checkValidationCondition","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":239,"deprecated":false,"deprecationMessage":""},{"name":"compareObjects","args":[{"name":"selectedOption","type":"any","deprecated":false,"deprecationMessage":""},{"name":"listedOption","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"boolean","typeParameters":[],"line":474,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"selectedOption","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"listedOption","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"conditionFieldWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":410,"deprecated":false,"deprecationMessage":""},{"name":"fieldWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":468,"deprecated":false,"deprecationMessage":""},{"name":"getFieldValue","args":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"condition","type":"ConditionField","deprecated":false,"deprecationMessage":""},{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":166,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"condition","type":"ConditionField","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSelectedOperator","args":[{"name":"operator","type":"string","deprecated":false,"deprecationMessage":""},{"name":"value","type":"any","deprecated":false,"deprecationMessage":""},{"name":"condition","type":"ConditionField","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"string","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"operator","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"condition","type":"ConditionField","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getSettingsAndSetupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":544,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":555,"deprecated":false,"deprecationMessage":""},{"name":"operatorFieldWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":434,"deprecated":false,"deprecationMessage":""},{"name":"remCondition","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":225,"deprecated":false,"deprecationMessage":""},{"name":"resetAdditionalFilter","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":181,"deprecated":false,"deprecationMessage":""},{"name":"resetFields","args":[{"name":"operator","type":"AbstractControl","deprecated":false,"deprecationMessage":""},{"name":"value","type":"AbstractControl","deprecated":false,"deprecationMessage":""},{"name":"conditionSelected","type":"ConditionField","deprecated":false,"deprecationMessage":""},{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":187,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"operator","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"value","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionSelected","type":"ConditionField","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"saveSkipExportFields","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":286,"deprecated":false,"deprecationMessage":""},{"name":"setConditionFields","args":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":""},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":115,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setCustomOperatorOptions","args":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":""},{"name":"type","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":394,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"rank","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"type","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setDefaultOperatorOptions","args":[{"name":"conditionField","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"{}","typeParameters":[],"line":364,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"conditionField","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setOperatorFieldOptions","args":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":""},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":123,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setSkippedConditions","args":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":""},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":140,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupSkipExportForm","args":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":""},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":481,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"response","type":"ExpenseFilterResponse","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"conditionArray","type":"ConditionField[]","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"showChipField1","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":266,"deprecated":false,"deprecationMessage":""},{"name":"showChipField2","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":278,"deprecated":false,"deprecationMessage":""},{"name":"showDateField1","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":270,"deprecated":false,"deprecationMessage":""},{"name":"showDateField2","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":282,"deprecated":false,"deprecationMessage":""},{"name":"showInputField1","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":262,"deprecated":false,"deprecationMessage":""},{"name":"showInputField2","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":274,"deprecated":false,"deprecationMessage":""},{"name":"showValueHeader1","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":254,"deprecated":false,"deprecationMessage":""},{"name":"showValueHeader2","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":258,"deprecated":false,"deprecationMessage":""},{"name":"skipExportWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":84,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"updateAdditionalFilterVisibility","args":[{"name":"show","type":"boolean","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":212,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"show","type":"boolean","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, EventEmitter, Input, OnInit, Output } from \'@angular/core\';\\nimport { AbstractControl, FormBuilder, FormGroup, Validators } from \'@angular/forms\';\\nimport { forkJoin } from \'rxjs\';\\nimport { constructPayload1, constructPayload2 } from \'src/app/core/models/si/misc/skip-export.model\';\\nimport { ConditionField, CustomOperatorOption, ExpenseFilterResponse, JoinOptions, SkipExport } from \'src/app/core/models/si/si-configuration/advanced-settings.model\';\\nimport { SiAdvancedSettingService } from \'src/app/core/services/si/si-configuration/si-advanced-setting.service\';\\n\\n@Component({\\n  selector: \'app-skip-export\',\\n  templateUrl: \'./skip-export.component.html\',\\n  styleUrls: [\'./skip-export.component.scss\']\\n})\\nexport class SkipExportComponent implements OnInit {\\n\\n  @Input() enableSkipExport: boolean;\\n\\n  @Input() skipExportForm: FormGroup;\\n\\n  @Output() skipExportFormChange = new EventEmitter<FormGroup>();\\n\\n  isLoading: boolean = true;\\n\\n  expenseFilters: SkipExport[];\\n\\n  showExpenseFilters: boolean;\\n\\n  skippedCondition1: string;\\n\\n  skippedCondition2: string;\\n\\n  isDisabledChip1: boolean = false;\\n\\n  isDisabledChip2: boolean = false;\\n\\n  showAdditionalCondition: boolean = false;\\n\\n  showAddButton: boolean = true;\\n\\n  workspaceId: number;\\n\\n  conditionFieldOptions: ConditionField[];\\n\\n  operatorFieldOptions1: { label: string; value: string }[];\\n\\n  operatorFieldOptions2: { label: string; value: string }[];\\n\\n  joinByOptions = [{value: JoinOptions.AND}, {value: JoinOptions.OR}];\\n\\n  customOperatorOptions = [\\n    {\\n      label: \'Is\',\\n      value: CustomOperatorOption.Is\\n    },\\n    {\\n      label: \'Is empty\',\\n      value: CustomOperatorOption.IsEmpty\\n    },\\n    {\\n      label: \'Is not empty\',\\n      value: CustomOperatorOption.IsNotEmpty\\n    }\\n  ];\\n\\n  customSelectOperatorOptions = [\\n    {\\n      label: \'is\',\\n      value: \'iexact\'\\n    },\\n    {\\n      label: \'is not\',\\n      value: \'not_in\'\\n    }\\n  ];\\n\\n  valueOption1: any[] = [];\\n\\n  valueOption2: any[] = [];\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private advancedSettingsService: SiAdvancedSettingService\\n  ) { }\\n\\n  private skipExportWatcher(): void {\\n\\n      this.skipExportForm.valueChanges.subscribe(() => {\\n        this.skipExportFormChange.emit(this.skipExportForm);\\n      });\\n\\n      if (this.enableSkipExport) {\\n        this.skipExportForm.controls.condition1.setValidators(Validators.required);\\n        this.skipExportForm.controls.operator1.setValidators(Validators.required);\\n        this.skipExportForm.controls.value1.setValidators(Validators.required);\\n      } else {\\n        this.skipExportForm.reset();\\n        this.skipExportForm.controls.condition1.clearValidators();\\n        this.skipExportForm.controls.operator1.clearValidators();\\n        this.skipExportForm.controls.condition1.setValue(null);\\n        this.skipExportForm.controls.operator1.setValue(null);\\n        this.skipExportForm.controls.value1.clearValidators();\\n        this.skipExportForm.controls.value1.setValue(null);\\n        this.skipExportForm.controls.join_by.clearValidators();\\n        this.skipExportForm.controls.join_by.setValue(null);\\n        this.skipExportForm.controls.condition2.clearValidators();\\n        this.skipExportForm.controls.operator2.clearValidators();\\n        this.skipExportForm.controls.condition2.setValue(null);\\n        this.skipExportForm.controls.operator2.setValue(null);\\n        this.skipExportForm.controls.value2.clearValidators();\\n        this.skipExportForm.controls.value2.setValue(null);\\n        this.showAdditionalCondition = false;\\n        this.showAddButton = true;\\n      }\\n  }\\n\\n  private setConditionFields(response: ExpenseFilterResponse, conditionArray: ConditionField[]) {\\n    response.results.forEach((element) => {\\n      const type = this.conditionFieldOptions.filter( (fieldOption) => fieldOption.field_name === element.condition);\\n      const selectedConditionOption : ConditionField = type[0];\\n      conditionArray.push(selectedConditionOption);\\n    });\\n  }\\n\\n  private setOperatorFieldOptions(response: ExpenseFilterResponse, conditionArray: ConditionField[]) {\\n    if (conditionArray.length) {\\n      if (response.results[0].is_custom) {\\n        this.setCustomOperatorOptions(response.results[0].rank, response.results[0].custom_field_type);\\n      } else {\\n        this.operatorFieldOptions1 = this.setDefaultOperatorOptions(response.results[0].condition);\\n      }\\n      if (response.results[0].join_by !== null) {\\n        if (response.results[1].is_custom) {\\n          this.setCustomOperatorOptions(response.results[1].rank, response.results[1].custom_field_type);\\n        } else {\\n          this.operatorFieldOptions2 = this.setDefaultOperatorOptions(response.results[1].condition);\\n        }\\n      }\\n    }\\n  }\\n\\n  private setSkippedConditions(response: ExpenseFilterResponse, conditionArray: ConditionField[]) {\\n    if (response.count > 0) {\\n      this.skippedCondition1 = conditionArray[0].field_name;\\n      if (response.count > 1 && response.results[0].join_by) {\\n        this.skippedCondition2 = conditionArray[1].field_name;\\n      } else {\\n        this.skippedCondition2 = \'\';\\n      }\\n    } else {\\n      this.skippedCondition1 = \'\';\\n      this.skippedCondition2 = \'\';\\n    }\\n  }\\n\\n  getSelectedOperator(operator: string, value: any, condition: ConditionField) {\\n    switch (operator) {\\n      case \'isnull\': {\\n        return value === \'True\' ? \'is_empty\' : \'is_not_empty\';\\n      }\\n      case \'in\':\\n        return \'iexact\';\\n      case \'iexact\': return operator;\\n      default: return operator;\\n    }\\n  }\\n\\n  getFieldValue(value: any, condition: ConditionField, rank: number) {\\n    if (condition.type === \'DATE\') {\\n      return new Date(value[0]);\\n    } else if (condition.field_name === \'report_title\') {\\n      return value[0];\\n    }\\n      if (rank === 1) {\\n        this.valueOption1 = value;\\n      } else if (rank === 2) {\\n        this.valueOption2 = value;\\n      }\\n        return \'\';\\n\\n  }\\n\\n  resetAdditionalFilter() {\\n    this.skipExportForm.controls.join_by.reset();\\n    this.skipExportForm.controls.condition2.reset();\\n    this.valueOption2=[];\\n  }\\n\\n  resetFields(operator: AbstractControl, value: AbstractControl, conditionSelected: ConditionField, rank: number) {\\n    operator.reset();\\n    value.reset();\\n    if (rank === 1) {\\n      this.valueOption1 = [];\\n    } else if (rank === 2) {\\n      this.valueOption2 = [];\\n    }\\n    if (conditionSelected !== null) {\\n      if (conditionSelected.is_custom === true) {\\n        this.setCustomOperatorOptions(rank, conditionSelected.type);\\n      } else if (conditionSelected.is_custom === false) {\\n        if (rank === 1) {\\n          this.operatorFieldOptions1 = this.setDefaultOperatorOptions(\\n            conditionSelected.field_name\\n          );\\n        } else if (rank === 2) {\\n          this.operatorFieldOptions2 = this.setDefaultOperatorOptions(\\n            conditionSelected.field_name\\n          );\\n        }\\n      }\\n    }\\n  }\\n\\n  updateAdditionalFilterVisibility(show: boolean) {\\n    this.showAdditionalCondition = show;\\n    this.showAddButton = !show;\\n    if (this.showAdditionalCondition) {\\n      this.skipExportForm.controls.join_by.setValidators(Validators.required);\\n      this.skipExportForm.controls.condition2.setValidators(Validators.required);\\n      this.skipExportForm.controls.operator2.setValidators(Validators.required);\\n      if (this.valueOption2.length===0) {\\n        this.skipExportForm.controls.value2.setValidators(Validators.required);\\n      }\\n    }\\n  }\\n\\n  remCondition() {\\n    this.showAdditionalCondition = false;\\n    this.showAddButton = true;\\n    this.resetAdditionalFilter();\\n    this.skipExportForm.controls.join_by.clearValidators();\\n    this.skipExportForm.controls.join_by.setValue(null);\\n    this.skipExportForm.controls.condition2.clearValidators();\\n    this.skipExportForm.controls.condition2.setValue(null);\\n    this.skipExportForm.controls.operator2.clearValidators();\\n    this.skipExportForm.controls.operator2.setValue(null);\\n    this.skipExportForm.controls.value2.clearValidators();\\n    this.skipExportForm.controls.value2.setValue(null);\\n  }\\n\\n  checkValidationCondition() {\\n    const condition1 = this.skipExportForm.controls.condition1;\\n    const condition2 = this.skipExportForm.controls.condition2;\\n    if (this.showAdditionalCondition) {\\n      if (condition1.valid && condition2.valid) {\\n        if (condition1.value?.field_name === condition2.value?.field_name) {\\n            this.skipExportForm.controls.operator2.setValue(null);\\n            return true;\\n          }\\n      }\\n    }\\n    return false;\\n  }\\n\\n  // For conditionally adding and removing Value fields from layout\\n  showValueHeader1(): boolean {\\n    return (this.skipExportForm.value.operator1 !== \'is_empty\') && (this.skipExportForm.value.operator1 !== \'is_not_empty\');\\n  }\\n\\n  showValueHeader2() {\\n    return (this.skipExportForm.value.operator2 !== \'is_empty\') && (this.skipExportForm.value.operator2 !== \'is_not_empty\');\\n  }\\n\\n  showInputField1() {\\n    return this.skipExportForm.value.condition1?.field_name === \'report_title\' && (this.skipExportForm.value.operator1 !== \'is_empty\' || this.skipExportForm.value.operator1 !== \'is_not_empty\');\\n  }\\n\\n  showChipField1() {\\n    return (this.skipExportForm.value.condition1?.field_name !== \'report_title\') && (!this.skipExportForm.value.condition1 || this.skipExportForm.value.condition1.type===\'SELECT\' || this.skipExportForm.value?.condition1?.type===\'TEXT\' || this.skipExportForm.value?.condition1?.type===\'NUMBER\') && (this.skipExportForm.value.operator1 !== \'is_empty\')  && (this.skipExportForm.value.operator1 !== \'is_not_empty\');\\n  }\\n\\n  showDateField1() {\\n    return this.skipExportForm.value?.condition1?.type===\'DATE\' && (this.skipExportForm.value.operator1 !== \'is_empty\' || this.skipExportForm.value.operator1 !== \'is_not_empty\');\\n  }\\n\\n  showInputField2() {\\n    return this.skipExportForm.value?.condition2?.field_name && this.skipExportForm.value?.condition2?.field_name === \'report_title\'  && (this.skipExportForm.value.operator2 !== \'is_empty\' || this.skipExportForm.value.operator2 !== \'is_not_empty\');\\n  }\\n\\n  showChipField2(): boolean {\\n    return this.skipExportForm.value?.condition2?.field_name !== \'report_title\' && (!this.skipExportForm.value?.condition2 || this.skipExportForm.value?.condition2?.type===\'SELECT\' || this.skipExportForm.value?.condition2?.type===\'TEXT\' || this.skipExportForm.value?.condition2?.type===\'NUMBER\') && (this.skipExportForm.value.operator2 !== \'is_empty\')  && (this.skipExportForm.value.operator2 !== \'is_not_empty\');\\n  }\\n\\n  showDateField2() {\\n    return this.skipExportForm.value?.condition2?.type===\'DATE\' && (this.skipExportForm.value.operator2 !== \'is_empty\' || this.skipExportForm.value.operator2 !== \'is_not_empty\');\\n  }\\n\\n  saveSkipExportFields() {\\n    if (!this.skipExportForm.valid) {\\n      return;\\n    }\\n\\n    const valueField = this.skipExportForm.getRawValue();\\n    if (this.showAddButton && this.expenseFilters.length > 1) {\\n      this.advancedSettingsService\\n      .deleteExpenseFilter(this.expenseFilters[1].rank)\\n      .subscribe((skipExport1: SkipExport) => {\\n      });\\n    }\\n    if (!this.enableSkipExport) {\\n      this.advancedSettingsService\\n      .deleteExpenseFilter(this.expenseFilters[0].rank)\\n      .subscribe((skipExport1: SkipExport) => {\\n      });\\n    } else {\\n      if (!valueField.condition1.field_name) {\\n        return;\\n      }\\n      if (valueField.condition1.field_name !== \'report_title\' && valueField.operator1 === \'iexact\') {\\n        valueField.operator1 = \'in\';\\n      }\\n      if (valueField.join_by) {\\n        valueField.join_by = valueField.join_by.value;\\n        if (valueField.condition2.field_name !== \'report_title\' && valueField.operator2 === \'iexact\') {\\n          valueField.operator2 = \'in\';\\n        }\\n      }\\n    if (valueField.condition1.is_custom === true) {\\n      if (valueField.operator1 === \'is_empty\') {\\n        valueField.value1 = [\'True\'];\\n        valueField.operator1 = \'isnull\';\\n      } else if (valueField.operator1 === \'is_not_empty\') {\\n        valueField.value1 = [\'False\'];\\n        valueField.operator1 = \'isnull\';\\n      }\\n    }\\n\\n    if (valueField.condition1.field_name === \'spent_at\') {\\n      valueField.value1 = new Date(valueField.value1).toISOString().split(\'T\')[0] + \'T17:00:00.000Z\';\\n    }\\n\\n    if (typeof valueField.value1 === \'string\') {\\n      valueField.value1 = [valueField.value1];\\n    }\\n    const payload1 = constructPayload1(valueField, this.valueOption1);\\n    this.advancedSettingsService\\n      .postExpenseFilter(payload1)\\n      .subscribe((skipExport1: SkipExport) => {\\n        if (valueField.condition2 && valueField.operator2) {\\n          if (valueField.condition2.field_name === \'spent_at\') {\\n            valueField.value2 = new Date(valueField.value2).toISOString().split(\'T\')[0] + \'T17:00:00.000Z\';\\n          }\\n\\n          if (valueField.condition2.is_custom === true) {\\n            if (valueField.operator2 === \'is_empty\') {\\n              valueField.value2 = [\'True\'];\\n              valueField.operator2 = \'isnull\';\\n            } else if (valueField.operator2 === \'is_not_empty\') {\\n              valueField.value2 = [\'False\'];\\n              valueField.operator2 = \'isnull\';\\n            }\\n          }\\n\\n          if (typeof valueField.value2 === \'string\') {\\n            valueField.value2 = [valueField.value2];\\n          }\\n            const payload2 = constructPayload2(valueField, this.valueOption2);\\n            this.advancedSettingsService\\n              .postExpenseFilter(payload2)\\n              .subscribe((skipExport2: SkipExport) => {});\\n        }\\n      });\\n    }\\n  }\\n\\n  setDefaultOperatorOptions(conditionField: string) {\\n    const operatorList = [];\\n    if (\\n      conditionField === \'claim_number\' ||\\n      conditionField === \'employee_email\' ||\\n      conditionField === \'report_title\'\\n    ) {\\n      operatorList.push({\\n        value: \'iexact\',\\n        label: \'is\'\\n      });\\n    } else if (conditionField === \'spent_at\') {\\n      operatorList.push({\\n        value: \'lt\',\\n        label: \'is before\'\\n      });\\n      operatorList.push({\\n        value: \'lte\',\\n        label: \'is on or before\'\\n      });\\n    }\\n    if (conditionField === \'report_title\') {\\n      operatorList.push({\\n        value: \'icontains\',\\n        label: \'contains\'\\n      });\\n    }\\n    return operatorList;\\n  }\\n\\n  setCustomOperatorOptions(rank: number, type: string) {\\n      if (type !== \'SELECT\') {\\n        if (rank === 1) {\\n          this.operatorFieldOptions1 = this.customOperatorOptions;\\n        } else if (rank === 2) {\\n          this.operatorFieldOptions2 = this.customOperatorOptions;\\n        }\\n      } else {\\n        if (rank === 1) {\\n          this.operatorFieldOptions1 = this.customSelectOperatorOptions;\\n        } else if (rank === 2) {\\n          this.operatorFieldOptions2 = this.customSelectOperatorOptions;\\n        }\\n      }\\n    }\\n\\n  conditionFieldWatcher() {\\n    this.skipExportForm.controls.condition1.valueChanges.subscribe(\\n      (conditionSelected) => {\\n        this.resetFields(\\n          this.skipExportForm.controls.operator1,\\n          this.skipExportForm.controls.value1,\\n          conditionSelected,\\n          1\\n        );\\n      }\\n    );\\n\\n    this.skipExportForm.controls.condition2.valueChanges.subscribe(\\n      (conditionSelected) => {\\n        this.resetFields(\\n          this.skipExportForm.controls.operator2,\\n          this.skipExportForm.controls.value2,\\n          conditionSelected,\\n          2\\n        );\\n      }\\n    );\\n  }\\n\\n  operatorFieldWatcher() {\\n    this.skipExportForm.controls.operator1.valueChanges.subscribe((operatorSelected) => {\\n        this.valueOption1 = [];\\n        if (operatorSelected === \'is_empty\' || operatorSelected === \'is_not_empty\') {\\n          this.isDisabledChip1 = true;\\n          this.skipExportForm.controls.value1.clearValidators();\\n          this.skipExportForm.controls.value1.setValue(null);\\n        } else {\\n          this.isDisabledChip1 = false;\\n          this.skipExportForm.controls.value1.setValidators(Validators.required);\\n          this.skipExportForm.controls.value1.setValue(null, {emitEvent: false});\\n        }\\n      }\\n    );\\n\\n    this.skipExportForm.controls.operator2.valueChanges.subscribe(\\n      (operatorSelected) => {\\n        this.valueOption2 = [];\\n        if (\\n          operatorSelected === \'is_empty\' ||\\n          operatorSelected === \'is_not_empty\'\\n        ) {\\n          this.isDisabledChip2 = true;\\n          this.skipExportForm.controls.value2.clearValidators();\\n          this.skipExportForm.controls.value2.setValue(null);\\n        } else {\\n          this.isDisabledChip2 = false;\\n          this.skipExportForm.controls.value2.setValidators([Validators.required]);\\n          this.skipExportForm.controls.value2.setValue(null, {emitEvent: false});\\n        }\\n      }\\n    );\\n  }\\n\\n  fieldWatcher() {\\n    this.skipExportWatcher();\\n    this.conditionFieldWatcher();\\n    this.operatorFieldWatcher();\\n  }\\n\\n  compareObjects(selectedOption: any, listedOption: any): boolean {\\n    if (JSON.stringify(selectedOption) === JSON.stringify(listedOption)) {\\n      return true;\\n    }\\n    return false;\\n  }\\n\\n  setupSkipExportForm(response: ExpenseFilterResponse, conditionArray: ConditionField[]) {\\n    this.isLoading = true;\\n    this.showExpenseFilters = response.count > 0;\\n    this.setConditionFields(response, conditionArray);\\n    this.setOperatorFieldOptions(response, conditionArray);\\n    this.setSkippedConditions(response, conditionArray);\\n    let [selectedOperator1, valueFC1, customFieldTypeFC1] = [\'\', \'\', \'\'];\\n    let [selectedOperator2, valueFC2] = [\'\', \'\'];\\n    let joinByFC = \'\';\\n\\n    response.results.forEach((result, index) => {\\n      if (index === 0) {\\n        selectedOperator1 = this.getSelectedOperator(result.operator, result.values[0], conditionArray[0]);\\n        if (!(selectedOperator1 === \'is_empty\' || selectedOperator1 === \'is_not_empty\')) {\\n          valueFC1 = this.getFieldValue(result.values, conditionArray[0], result.rank);\\n        } else {\\n          this.isDisabledChip1 = true;\\n        }\\n        customFieldTypeFC1 = result.custom_field_type;\\n      } else if (index === 1 && response.results[0].join_by !== null) {\\n        selectedOperator2 = this.getSelectedOperator(result.operator, result.values[0], conditionArray[1]);\\n        joinByFC = response.results[0].join_by;\\n        if (!(selectedOperator2 === \'is_empty\' || selectedOperator2 === \'is_not_empty\')) {\\n          valueFC2 = this.getFieldValue(result.values, conditionArray[1], result.rank);\\n        } else {\\n          this.isDisabledChip2 = true;\\n        }\\n      }\\n    });\\n\\n    this.skipExportForm = this.formBuilder.group({\\n      condition1: [conditionArray.length > 0 ? conditionArray[0] : \'\'],\\n      operator1: [selectedOperator1],\\n      value1: [valueFC1],\\n      customFieldType1: [customFieldTypeFC1],\\n      join_by: [{value: joinByFC}],\\n      condition2: [joinByFC ? conditionArray[1] : \'\'],\\n      operator2: [joinByFC && selectedOperator2 ? selectedOperator2 : \'\'],\\n      value2: [valueFC2],\\n      customFieldType2: joinByFC ? [response.results[1].custom_field_type] : [\'\']\\n    });\\n\\n    if (response.count) {\\n      this.skipExportForm.controls.condition1.setValidators(Validators.required);\\n      this.skipExportForm.controls.operator1.setValidators(Validators.required);\\n      if (!this.valueOption1.length && !(selectedOperator1 === \'is_empty\' || selectedOperator1 === \'is_not_empty\')) {\\n        this.skipExportForm.controls.value1.setValidators(Validators.required);\\n      }\\n      if (response.count === 2) {\\n        this.showAdditionalCondition = true;\\n        this.showAddButton = false;\\n        this.skipExportForm.controls.condition2.setValidators(Validators.required);\\n        this.skipExportForm.controls.operator2.setValidators(Validators.required);\\n        this.skipExportForm.controls.join_by.setValidators(Validators.required);\\n        if (!this.valueOption2.length && !(selectedOperator2 === \'is_empty\' || selectedOperator2 === \'is_not_empty\')) {\\n          this.skipExportForm.controls.value2.setValidators(Validators.required);\\n        }\\n      }\\n    }\\n    this.fieldWatcher();\\n    this.isLoading = false;\\n  }\\n\\n  private getSettingsAndSetupForm(): void {\\n    forkJoin([\\n      this.advancedSettingsService.getExpenseFilter(),\\n      this.advancedSettingsService.getFyleCustomFields()\\n    ]).subscribe((responses) => {\\n      this.expenseFilters = responses[0].results;\\n      this.conditionFieldOptions = responses[1];\\n      this.setupSkipExportForm(responses[0], []);\\n    });\\n  }\\n\\n  ngOnInit(): void {\\n    this.getSettingsAndSetupForm();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".fields-header {\\n  font-size: 14px;\\n  color: #5a5d72;\\n}\\n\\n.delete-icon {\\n  text-align: center;\\n  cursor: pointer;\\n  max-width: 20px;\\n  max-height: 20px;\\n  margin-left: 26.5px;\\n}\\n\\n.value-input-field {\\n  border: 1px solid #ccc;\\n  border-radius: 4px;\\n  padding: 6px 10px;\\n  display: inline-flex;\\n  align-items: center;\\n  width: 296px !important;\\n}\\n\\n:host ::ng-deep .joinby-field .p-dropdown {\\n  width: 98px !important;\\n  height: 38px !important;\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger-icon {\\n  @apply tw-text-12-px tw-mr-12-px tw-w-auto;\\n}\\n\\n:host ::ng-deep .p-dropdown .p-dropdown-trigger {\\n  @apply tw-w-auto;\\n}\\n\\n:host ::ng-deep .p-calendar .p-inputtext {\\n  @apply tw-cursor-pointer tw-w-360-px tw-h-40-px tw-border-solid tw-py-10-px tw-px-14-px #{!important};\\n}\\n\\n:host ::ng-deep .p-chips-token {\\n  height: 24px;  /* Reduced height */\\n  align-items: center;  /* Center content */\\n  background-color: white !important;  /* Change background color to white */\\n  border: 1px solid #ccc;  /* Optional: Add a border to make it visible against the white background */\\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);  /* Add shadow */\\n}\\n\\n/* To remove blue hover and other styles */\\n:host ::ng-deep .p-chips input:focus {\\n  outline: none !important;\\n  box-shadow: none !important;\\n  border-color: inherit !important;\\n}\\n\\n/* Scrollable container */\\n:host ::ng-deep .p-chips-multiple-container {\\n  max-height: 80px;\\n  overflow-y: auto;\\n  width: 360px !important;\\n  height: auto !important;\\n  min-height: 38px !important;\\n  padding-top: 2px!important;\\n  padding-bottom: 2px!important;\\n}\\n\\n/* Change text color to black */\\n:host ::ng-deep .p-chips-token-label {\\n  @apply tw-py-4-px tw-px-8-px tw-text-slightly-normal-text-color #{!important};\\n}\\n\\n\\n:host ::ng-deep .p-chips-token-icon {\\n  @apply tw-text-slightly-normal-text-color #{!important};\\n}\\n\\n:host ::ng-deep .p-chips-multiple-container::-webkit-scrollbar {\\n  background: transparent;  /* For WebKit browsers like Chrome and Safari */\\n}\\n\\n:host ::ng-deep .p-dropdown-panel .p-dropdown-items .p-dropdown-item:not(.p-highlight):hover .p-calendar .p-inputtext{\\n  @apply tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-calendar ::placeholder {\\n  @apply tw-text-placeholder #{!important};\\n}\\n\\n.chip-hint {\\n  font-size: 12px !important;\\n  color: grey !important;\\n}\\n\\n:host ::ng-deep .p-dropdown {\\n  transform: scale(0.9);\\n  width: 180px !important;\\n}\\n\\n:host ::ng-deep input {\\n  @apply tw-text-14-px #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span {\\n  @apply tw-w-auto tw-h-auto #{!important};\\n}\\n","styleUrl":"./skip-export.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"advancedSettingsService","type":"SiAdvancedSettingService","deprecated":false,"deprecationMessage":""}],"line":77,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"advancedSettingsService","type":"SiAdvancedSettingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\">\\n</div>\\n<div *ngIf=\\"enableSkipExport && !isLoading\\">\\n    <div class=\\"tw-flex tw-flex-col\\">\\n      <form [formGroup]=\\"skipExportForm\\" class=\\"tw-flex tw-flex-col tw-pl-24-px\\">\\n            <div class=\\"tw-flex\\">\\n                <div class=\\"tw-ml-120-px tw-w-200-px tw-mr-6-px fields-header\\">\\n                    Condition\\n                    <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n                </div>\\n                  <div class=\\"tw-w-180-px tw-mr-24-px fields-header\\">\\n                    Operator\\n                    <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n                </div>\\n                <div class=\\"tw-w-296-px fields-header\\" *ngIf=\\"showValueHeader1()\\">\\n                  Value\\n                  <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n                </div>\\n            </div>\\n            <div class=\\"tw-flex dropdown-row tw-mt-8-px\\">\\n              <p class=\\"tw-text-14-px tw-text-sub-text-color tw-pt-6-px\\">Where</p>\\n              <div class=\\"tw-ml-80-px tw-mr-24-px\\">\\n                <p-dropdown appendTo=\\"body\\" [options]=\\"conditionFieldOptions\\" formControlName=\\"condition1\\" placeholder=\\"Select Condition\\">\\n                  \x3c!-- For options --\x3e\\n                  <ng-template let-option pTemplate=\\"item\\">\\n                    {{ option.field_name | snakeCaseToSpaceCase | titlecase }}\\n                  </ng-template>\\n                  \x3c!-- For selected option --\x3e\\n                  <ng-template let-selectedOption pTemplate=\\"selectedItem\\">\\n                    {{ selectedOption.field_name | snakeCaseToSpaceCase | titlecase }}\\n                  </ng-template>\\n                </p-dropdown>                               \\n                <app-mandatory-error-message *ngIf=\\"skipExportForm.controls.condition1.touched && !skipExportForm.controls.condition1.valid\\"\\n                [customErrorMessage]=\\"\'Please select the condition\'\\"></app-mandatory-error-message>\\n              </div>\\n              <div class=\\"tw-mr-24-px\\">\\n                <p-dropdown appendTo=\\"body\\" [options]=\\"operatorFieldOptions1\\" formControlName=\\"operator1\\" placeholder=\\"Select Operator\\"></p-dropdown>\\n                <app-mandatory-error-message *ngIf=\\"skipExportForm.controls.operator1.touched && !skipExportForm.controls.operator1.valid\\"\\n                [customErrorMessage]=\\"\'Please select the operator\'\\"></app-mandatory-error-message>\\n              </div>\\n              <div class=\\"tw-w-296-px\\" *ngIf=\\"showInputField1()\\">\\n                <input type=\\"text\\" formControlName=\\"value1\\" class=\\"value-input-field\\" placeholder=\\"Enter Value\\">\\n              </div>\\n              <div class=\\"tw-w-296-px\\" *ngIf=\\"showDateField1()\\">\\n                <p-calendar formControlName=\\"value1\\" [readonlyInput]=\\"true\\" placeholder=\\"Select Date\\"></p-calendar>\\n              </div>\\n              <div class=\\"tw-w-296-px\\" *ngIf=\\"showChipField1()\\">\\n                <p-chips [addOnBlur]=\\"true\\" styleClass=\\"tw-w-[296px]\\" [(ngModel)]=\\"valueOption1\\" formControlName=\\"value1\\" separator=\\",\\" placeholder=\\"Enter Value\\"></p-chips>\\n                <small class=\\"chip-hint\\"><br>Separate your values with a comma or enter key.</small>\\n              </div>\\n        </div>\\n  \\n        <div *ngIf=\\"showAdditionalCondition\\" class=\\"tw-pb-24-px\\">\\n          <div class=\\"tw-flex tw-ml-120-px tw-mt-8-px\\">\\n              <div class=\\"tw-w-200-px tw-mr-6-px fields-header\\">\\n                  Condition\\n                  <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n              </div>\\n                <div class=\\"tw-w-180-px fields-header tw-mr-24-px\\">\\n                  Operator\\n                <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n              </div>\\n              <div class=\\"tw-w-296-px fields-header\\" *ngIf=\\"showValueHeader2()\\">\\n                Value\\n                <span class=\\"tw-text-mandatory-field-color\\">*</span>\\n              </div>\\n          </div>\\n          <div class=\\"tw-flex\\">\\n            <div class=\\"joinby-field\\">\\n              <p-dropdown optionLabel=\\"value\\" appendTo=\\"body\\" class=\\"joinby-field\\" [options]=\\"joinByOptions\\" formControlName=\\"join_by\\" placeholder=\\"Join by\\">\\n                <ng-template let-value pTemplate=\\"selectedItem\\" >\\n                  {{ value.value }}\\n                </ng-template>\\n                <ng-template let-value pTemplate=\\"item\\">\\n                  {{ value.value }}\\n                </ng-template>\\n              </p-dropdown>\\n            </div>\\n            <div class=\\"tw-ml-24-px tw-mr-24-px\\">\\n              <p-dropdown appendTo=\\"body\\" [options]=\\"conditionFieldOptions\\" formControlName=\\"condition2\\" placeholder=\\"Select Condition\\">\\n                \x3c!-- For options --\x3e\\n                <ng-template let-option pTemplate=\\"item\\">\\n                  {{ option.field_name | snakeCaseToSpaceCase | titlecase }}\\n                </ng-template>\\n                \x3c!-- For selected option --\x3e\\n                <ng-template let-selectedOption pTemplate=\\"selectedItem\\">\\n                  {{ selectedOption.field_name | snakeCaseToSpaceCase | titlecase }}\\n                </ng-template>\\n              </p-dropdown>                            \\n              <app-mandatory-error-message *ngIf=\\"skipExportForm.controls.condition2.touched && !skipExportForm.controls.condition2.valid\\"\\n              [customErrorMessage]=\\"\'Please select the condition\'\\"></app-mandatory-error-message>\\n            </div>\\n            <div class=\\"tw-mr-24-px\\">\\n              <p-dropdown appendTo=\\"body\\" [options]=\\"operatorFieldOptions2\\" formControlName=\\"operator2\\" placeholder=\\"Select Operator\\"></p-dropdown>\\n              <app-mandatory-error-message *ngIf=\\"skipExportForm.controls.operator2.touched && !skipExportForm.controls.operator2.valid\\"\\n              [customErrorMessage]=\\"\'Please select the operator\'\\"></app-mandatory-error-message>\\n            </div>\\n            <div *ngIf=\\"showInputField2()\\" class=\\"tw-w-296-px\\">\\n              <input type=\\"text\\" formControlName=\\"value2\\" placeholder=\\"Enter a value\\" class=\\"border p-2 rounded value-input-field\\" placeholder=\\"Enter Value\\">\\n            </div>\\n            <div *ngIf=\\"showChipField2()\\" class=\\"tw-w-296-px\\">\\n              <p-chips [addOnBlur]=\\"true\\" styleClass=\\"tw-w-[296px]\\" [(ngModel)]=\\"valueOption2\\" formControlName=\\"value2\\" placeholder=\\"Enter Value\\"></p-chips>\\n              <small class=\\"chip-hint\\"><br>Separate your values with a comma or enter key.</small>\\n            </div>\\n            <div *ngIf=\\"showDateField2()\\" class=\\"tw-w-296-px\\">\\n              <p-calendar formControlName=\\"value2\\" [readonlyInput]=\\"true\\" placeholder=\\"Select Date\\"></p-calendar>\\n            </div>\\n            <img class=\\"delete-icon\\" src=\\"assets/icons/delete.svg\\" (click)=\\"remCondition()\\" p-tooltip=\\"Remove Condition\\">\\n          </div>\\n          <div class=\\" tw-text-mandatory-field-color\\" *ngIf=\\"checkValidationCondition()\\">\\n            <p>*Condition selected should be distinct.</p>\\n          </div>\\n        </div>\\n        <div class=\\"tw-flex items-center tw-text-mandatory-field-color tw-pt-12-px tw-pb-24-px\\" *ngIf=\\"showAddButton\\">\\n          <img src=\\"assets/icons/add.svg\\" (click)=\\"updateAdditionalFilterVisibility(true)\\">\\n          <a class=\\"add-row-text tw-cursor-pointer tw-pl-8-px tw-text-14-px\\" (click)=\\"updateAdditionalFilterVisibility(true)\\">\\n            Add More Fields\\n          </a>\\n        </div>\\n      </form>\\n    </div>\\n</div>\\n  "},{"name":"SkipExportLogComponent","id":"component-SkipExportLogComponent-da65b3963a8bfb4935b0b91c01ae29a62acb99b656a6d2ca4fce7821eb112a8e164d5f578bebd306defb90b1e1837f83fe9443b9a10e67355aec9c34029866c3","file":"src/app/integrations/si/main/export-log/skip-export-log/skip-export-log.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-skip-export-log","styleUrls":["./skip-export-log.component.scss"],"styles":[],"templateUrl":["./skip-export-log.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"clickedExportLogIndex","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":84},{"name":"count","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":76},{"name":"currentPage","defaultValue":"1","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":32},{"name":"dateOptions","defaultValue":"[\\n    {\\n      dateRange: \'This Month\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'This Week\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - new Date().getDay()),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'Today\',\\n      startDate: new Date(),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: new Date().toLocaleDateString(),\\n      startDate: new Date(),\\n      endDate: new Date()\\n    }\\n  ]","deprecated":false,"deprecationMessage":"","type":"DateFilter[]","optional":false,"description":"","line":34},{"name":"dateValue","deprecated":false,"deprecationMessage":"","type":"Date","optional":false,"description":"","line":86},{"name":"expenseGroups","deprecated":false,"deprecationMessage":"","type":"SkipExportList[]","optional":false,"description":"","line":68},{"name":"expenses","defaultValue":"[]","deprecated":false,"deprecationMessage":"","type":"Expense[]","optional":false,"description":"","line":72},{"name":"filteredExpenseGroups","deprecated":false,"deprecationMessage":"","type":"SkipExportList[]","optional":false,"description":"","line":70},{"name":"isCalendarVisible","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":64},{"name":"isDateFieldFocused","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":24},{"name":"isDateSelected","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":74},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":20},{"name":"isRecordPresent","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":66},{"name":"isSearchFocused","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":22},{"name":"limit","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":28},{"name":"offset","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":30},{"name":"pageNumber","defaultValue":"0","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":82},{"name":"pageSize","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":80},{"name":"presentDate","defaultValue":"new Date().toLocaleDateString()","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":60},{"name":"selectedDateFilter","deprecated":false,"deprecationMessage":"","type":"SelectedDateFilter | null","optional":false,"description":"","line":58},{"name":"skipExportLogForm","deprecated":false,"deprecationMessage":"","type":"FormGroup","optional":false,"description":"","line":62},{"name":"state","deprecated":false,"deprecationMessage":"","type":"string","optional":false,"description":"","line":78},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":false,"description":"","line":26},{"name":"visible","defaultValue":"false","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":88}],"methodsClass":[{"name":"dateFilter","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"dropDownWatcher","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":146,"deprecated":false,"deprecationMessage":""},{"name":"filterTable","args":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":97,"deprecated":false,"deprecationMessage":"","modifierKind":[125],"jsdoctags":[{"name":"event","type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getDates","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":159,"deprecated":false,"deprecationMessage":""},{"name":"getExpenseGroups","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"any","typeParameters":[],"line":171,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getExpenseGroupsAndSetupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":221,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":239,"deprecated":false,"deprecationMessage":""},{"name":"openUrl","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""},{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":141,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageChanges","args":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":126,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"offset","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"pageSizeChanges","args":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":118,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"limit","type":"number","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"removeFilter","args":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":113,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"formField","type":"AbstractControl","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setupForm","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":198,"deprecated":false,"deprecationMessage":"","modifierKind":[123]},{"name":"showCalendar","args":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":154,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"event","type":"Event","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"trackDateFilter","args":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":""},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":231,"deprecated":false,"deprecationMessage":"","modifierKind":[123],"jsdoctags":[{"name":"filterType","type":"\\"existing\\" | \\"custom\\"","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"selectedDateFilter","type":"SelectedDateFilter","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit } from \'@angular/core\';\\nimport { AbstractControl, FormBuilder, FormGroup } from \'@angular/forms\';\\nimport { FyleReferenceType, PaginatorPage, TaskLogState } from \'src/app/core/models/enum/enum.model\';\\nimport { DateFilter, SelectedDateFilter } from \'src/app/core/models/qbd/misc/date-filter.model\';\\nimport { SkipExportLogResponse, SkipExportList, SkipExportLog } from \'src/app/core/models/si/db/expense-group.model\';\\nimport { Expense } from \'src/app/core/models/si/db/expense.model\';\\nimport { Paginator } from \'src/app/core/models/misc/paginator.model\';\\nimport { TrackingService } from \'src/app/core/services/integration/tracking.service\';\\nimport { ExportLogService } from \'src/app/core/services/si/export-log/export-log.service\';\\nimport { PaginatorService } from \'src/app/core/services/si/si-core/paginator.service\';\\nimport { environment } from \'src/environments/environment\';\\n\\n@Component({\\n  selector: \'app-skip-export-log\',\\n  templateUrl: \'./skip-export-log.component.html\',\\n  styleUrls: [\'./skip-export-log.component.scss\']\\n})\\nexport class SkipExportLogComponent implements OnInit {\\n\\n  isLoading: boolean = true;\\n\\n  isSearchFocused: boolean = false;\\n\\n  isDateFieldFocused: boolean = false;\\n\\n  totalCount: number;\\n\\n  limit: number;\\n\\n  offset: number = 0;\\n\\n  currentPage: number = 1;\\n\\n  dateOptions: DateFilter[] = [\\n    {\\n      dateRange: \'This Month\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'This Week\',\\n      startDate: new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() - new Date().getDay()),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: \'Today\',\\n      startDate: new Date(),\\n      endDate: new Date()\\n    },\\n    {\\n      dateRange: new Date().toLocaleDateString(),\\n      startDate: new Date(),\\n      endDate: new Date()\\n    }\\n  ];\\n\\n\\n  selectedDateFilter: SelectedDateFilter | null;\\n\\n  presentDate = new Date().toLocaleDateString();\\n\\n  skipExportLogForm: FormGroup;\\n\\n  isCalendarVisible: boolean;\\n\\n  isRecordPresent: boolean = false;\\n\\n  expenseGroups: SkipExportList [];\\n\\n  filteredExpenseGroups: SkipExportList [];\\n\\n  expenses: Expense [] = [];\\n\\n  isDateSelected: boolean = false;\\n\\n  count: number;\\n\\n  state: string;\\n\\n  pageSize: number;\\n\\n  pageNumber = 0;\\n\\n  clickedExportLogIndex: number = 0;\\n\\n  dateValue: Date;\\n\\n  visible: boolean = false;\\n\\n  constructor(\\n    private formBuilder: FormBuilder,\\n    private trackingService: TrackingService,\\n    private exportLogService: ExportLogService,\\n    private paginatorService: PaginatorService\\n  ) { }\\n\\n  public filterTable(event: any) {\\n    const query = event.target.value.toLowerCase();\\n\\n    this.filteredExpenseGroups = this.expenseGroups.filter((group: SkipExportList) => {\\n      const employeeID = group.employee ? group.employee[1] : \'\';\\n      const expenseType = group.expenseType ? group.expenseType : \'\';\\n      const referenceNumber = group.claim_number ? group.claim_number : \'\';\\n\\n      return (\\n        employeeID.toLowerCase().includes(query) ||\\n        expenseType.toLowerCase().includes(query) ||\\n        referenceNumber.toLowerCase().includes(query)\\n      );\\n    });\\n  }\\n\\n  removeFilter(formField: AbstractControl) {\\n    (formField as FormGroup).reset();\\n    event?.stopPropagation();\\n  }\\n\\n  pageSizeChanges(limit: number): void {\\n    this.isLoading = true;\\n    this.limit = limit;\\n    this.currentPage = 1;\\n    this.selectedDateFilter = this.selectedDateFilter ? this.selectedDateFilter : null;\\n    this.getExpenseGroups(limit, this.offset);\\n  }\\n\\n  pageChanges(offset: number): void {\\n    this.isLoading = true;\\n    this.currentPage = Math.ceil(offset / this.limit) + 1;\\n    this.offset = offset;\\n    this.selectedDateFilter = this.selectedDateFilter ? this.selectedDateFilter : null;\\n    this.getExpenseGroups(this.limit, offset);\\n  }\\n\\n  dateFilter(event: any): void {\\n    this.isLoading = true;\\n    this.isDateSelected = true;\\n    this.selectedDateFilter = event.value;\\n    this.getExpenseGroups(this.limit, this.offset);\\n  }\\n\\n  openUrl(event: Event, url: string) {\\n    window.open(url, \'_blank\');\\n    event.stopPropagation();\\n  }\\n\\n  dropDownWatcher() {\\n    if (this.skipExportLogForm.controls.dateRange.value !== this.dateOptions[3].dateRange) {\\n      this.isCalendarVisible = false;\\n    } else {\\n      this.isCalendarVisible = true;\\n    }\\n  }\\n\\n  showCalendar(event: Event) {\\n    event.stopPropagation();\\n    this.isCalendarVisible = true;\\n  }\\n\\n  getDates() {\\n    this.dateOptions[3].dateRange = this.skipExportLogForm.value.start[0].toLocaleDateString() + \'-\' + this.skipExportLogForm.value.start[1].toLocaleDateString();\\n    this.dateOptions[3].startDate = this.skipExportLogForm.value.start[0];\\n    this.dateOptions[3].endDate = this.skipExportLogForm.value.start[1];\\n    this.presentDate = this.dateOptions[3].dateRange;\\n    this.skipExportLogForm.controls.dateRange.patchValue(this.dateOptions[3]);\\n    const event = {\\n      value: this.dateOptions[3]\\n    };\\n    this.dateFilter(event);\\n  }\\n\\n  getExpenseGroups(limit: number, offset:number) {\\n    this.isLoading = true;\\n    const expenseGroups: SkipExportList[] = [];\\n\\n    if (this.limit !== limit) {\\n      this.paginatorService.storePageSize(PaginatorPage.EXPORT_LOG, limit);\\n    }\\n\\n    return this.exportLogService.getSkipExportLogs(limit, offset).subscribe((skippedExpenses: SkipExportLogResponse) => {\\n      if (!this.isDateSelected) {\\n        this.totalCount = skippedExpenses.count;\\n      }\\n      skippedExpenses.results.forEach((skippedExpenses: SkipExportLog) => {\\n        expenseGroups.push({\\n          updated_at: skippedExpenses.updated_at,\\n          claim_number: skippedExpenses.claim_number,\\n          employee: [skippedExpenses.employee_name, skippedExpenses.employee_email],\\n          expenseType: skippedExpenses.fund_source === \'PERSONAL\' ? \'Reimbursable\' : \'Corporate Card\',\\n          fyleUrl: `${environment.fyle_app_url}/app/admin/#/view_expense/${skippedExpenses.expense_id}`\\n        });\\n      });\\n      this.filteredExpenseGroups = expenseGroups;\\n      this.expenseGroups = [...this.filteredExpenseGroups];\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  private setupForm(): void {\\n    this.skipExportLogForm = this.formBuilder.group({\\n      searchOption: [\'\'],\\n      dateRange: [null],\\n      start: [\'\'],\\n      end: [\'\']\\n    });\\n\\n    this.skipExportLogForm.controls.dateRange.valueChanges.subscribe((dateRange) => {\\n      if (dateRange) {\\n        this.selectedDateFilter = {\\n          startDate: dateRange.startDate,\\n          endDate: dateRange.endDate\\n        };\\n\\n        this.trackDateFilter(\'existing\', this.selectedDateFilter);\\n\\n        const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n        this.getExpenseGroups(paginator.limit, paginator.offset);\\n      }\\n    });\\n  }\\n\\n  private getExpenseGroupsAndSetupPage(): void {\\n    this.setupForm();\\n\\n    const paginator: Paginator = this.paginatorService.getPageSize(PaginatorPage.EXPORT_LOG);\\n    this.limit = paginator.limit;\\n    this.offset = paginator.offset;\\n\\n    this.getExpenseGroups(paginator.limit, paginator.offset);\\n  }\\n\\n  private trackDateFilter(filterType: \'existing\' | \'custom\', selectedDateFilter: SelectedDateFilter): void {\\n    const trackingProperty = {\\n      filterType,\\n      ...selectedDateFilter\\n    };\\n    this.trackingService.onDateFilter(trackingProperty);\\n  }\\n\\n  ngOnInit(): void {\\n    this.getExpenseGroupsAndSetupPage();\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".custom-search-field {\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    padding: 2px 8px;\\n    display: inline-flex;\\n    align-items: center;\\n    width: 350px;\\n    height: 40px;\\n}\\n\\n.custom-search-field i.pi-search {\\n    margin-right: 10px;\\n}\\n\\n.custom-search-field input[type=\\"text\\"] {\\n    border: none;\\n    outline: none;\\n    width: 100%;\\n}\\n\\n.clickable-row:hover {\\n    cursor: pointer;\\n    &:hover {\\n        background: #FAFCFF;\\n      }\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\\n    background-color: transparent;\\n    @apply tw-px-24-px tw-py-12-px tw-mx-10-px tw-mt-0 tw-border-x-box-color tw-border-t-box-color tw-border-t tw-border-x tw-rounded-t-lg #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link:not(.p-disabled):hover {\\n    @apply tw-text-slightly-normal-text-color tw-border-b-transparent tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover .p-menuitem-link{\\n    background-color: transparent !important;\\n    @apply tw-border-b-transparent tw-font-500 #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link:not(.p-highlight):hover{\\n    @apply tw-border-b-transparent tw-font-500 tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav {\\n    background-color: transparent;\\n    @apply tw-border-b tw-border-b-box-color #{!important};\\n}\\n\\n:host ::ng-deep .drop-down .p-dropdown {\\n    @apply tw-w-200-px tw-border-0 #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {\\n    @apply tw-text-sub-text-color tw-text-14-px tw-font-400 tw-py-14-px tw-px-22-px tw-border-t tw-border-b-0 tw-border-t-box-color  #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\\n    @apply tw-text-slightly-normal-text-color tw-text-12-px tw-font-500 tw-py-12-px tw-px-22-px tw-border tw-border-box-color tw-bg-disabled-bg-color #{!important}\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td > button {\\n    @apply tw-pl-48-px #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar {\\n    @apply tw-h-1.5 tw-bg-progress-bar-bg #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar .p-progressbar-value {\\n    @apply tw-bg-mandatory-field-color tw-rounded-50  #{!important};\\n}\\n\\n:host ::ng-deep .p-progressbar-determinate .p-progressbar-value {\\n    content: none #{!important};\\n}\\n\\n.export-btn:disabled {\\n    @apply tw-cursor-not-allowed tw-bg-cta-disabled #{!important};\\n}\\n\\n:host ::ng-deep .p-calendar .p-inputtext {\\n    @apply tw-p-0 tw-bg-white tw-border-0 tw-cursor-pointer tw-transition-none\\t;\\n}\\n\\n:host ::ng-deep .p-dropdown-panel .p-dropdown-items .p-dropdown-item:not(.p-highlight):hover .p-calendar .p-inputtext{\\n    @apply tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-calendar ::placeholder {\\n    @apply tw-text-sub-text-color #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span.p-highlight {\\n    @apply tw-text-white tw-bg-mandatory-field-color #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table td > span:focus {\\n    @apply tw-shadow-none #{!important};\\n}\\n\\n:host ::ng-deep .p-datepicker table th {\\n    @apply tw-text-center ;\\n}\\n\\n:host ::ng-deep .p-datepicker-touch-ui, .p-calendar .p-datepicker-touch-ui {\\n    @apply tw-min-w-fit tw-top-2/3 #{!important};\\n}\\n\\n:host ::ng-deep .selectedItem  .p-dropdown-trigger {\\n    @apply tw-hidden #{!important};\\n}","styleUrl":"./skip-export-log.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":""},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":""},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":""},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":""}],"line":88,"jsdoctags":[{"name":"formBuilder","type":"FormBuilder","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"trackingService","type":"TrackingService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"exportLogService","type":"ExportLogService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"paginatorService","type":"PaginatorService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div *ngIf=\\"isLoading\\"></div>\\n<div *ngIf=\\"!isLoading\\" class=\\"tw-shadow-app-card tw-rounded-12-px tw-bg-white tw-border-1-px tw-border-separator\\">\\n    <div *ngIf=\\"totalCount > 0\\">\\n        <div [formGroup]=\\"skipExportLogForm\\" class=\\"tw-flex tw-items-center tw-p-24-px\\">\\n\\n            <span class=\\"custom-search-field\\" [ngStyle]=\\"{ \'border-color\': isSearchFocused ? \'black\' : \'#ccc\' }\\">\\n                <i class=\\"pi pi-search\\"></i>\\n                <input class=\\"tw-pb-1 tw-pt-1 tw-text-14-px\\" type=\\"text\\" (input)=\\"filterTable($event)\\" (focus)=\\"isSearchFocused = true\\" (blur)=\\"isSearchFocused = false\\" placeholder=\\"Search by Employee Name or Expense ID\\" />\\n            </span>\\n            <div class=\\"tw-flex tw-mr-4\\"></div>\\n            <span [ngClass]=\\"{\'tw-border-black\': isDateFieldFocused}\\" class=\\"tw-flex tw-justify-start tw-items-center tw-border tw-border-box-color tw-pl-12-px tw-rounded-4-px drop-down\\">\\n                <div>\\n                    <svg-icon-sprite src=\\"calender\\" width=\\"20px\\" height=\\"20px\\" class=\\"tw-text-placeholder\\"></svg-icon-sprite>\\n                </div>\\n                <p-dropdown placeholder=\\"Select date range\\" appendTo=\\"body\\" [options]=\\"dateOptions\\" formControlName=\\"dateRange\\" (onChange)=\\"dateFilter($event)\\" (click)=\\"dropDownWatcher()\\" \\n                (onFocus)=\\"isDateFieldFocused = true\\" (onBlur)=\\"isDateFieldFocused = false\\"\\n                [ngClass]=\\"{\'selectedItem\': skipExportLogForm.controls.dateRange.value, \'filterDropdown\': !skipExportLogForm.controls.dateRange.value}\\">\\n                    <ng-template let-item pTemplate=\\"selectedItem\\">\\n                        <div class=\\"tw-flex tw-justify-between tw-items-center\\">\\n                            <span>\\n                                <div *ngIf=\\"skipExportLogForm.controls.dateRange.value\\">\\n                                    <div class=\\"my-dropdown-selected-item\\">\\n                                        {{skipExportLogForm.controls.dateRange.value.dateRange}}\\n                                    </div>\\n                                </div>\\n                                <div *ngIf=\\"!skipExportLogForm.controls.dateRange.value\\">\\n                                    <div class=\\"my-dropdown-selected-item tw-text-placeholder\\">\\n                                        Select date range\\n                                    </div>\\n                                </div>\\n                            </span>\\n                            <i *ngIf=\\"skipExportLogForm.controls.dateRange.value\\" class=\\"pi pi-times\\" (click)=\\"removeFilter(skipExportLogForm.controls.dateRange)\\"></i>\\n                        </div>\\n                    </ng-template>\\n                    <ng-template let-date pTemplate=\\"item\\">\\n                        <div>\\n                            <p-calendar (click)=\\"showCalendar($event)\\" placeholder=\\"Custom dates\\" formControlName=\\"start\\" (onClose)=\\"getDates()\\" [touchUI]=\\"isCalendarVisible\\" *ngIf=\\"date.dateRange === presentDate\\" selectionMode=\\"range\\" [readonlyInput]=\\"true\\" inputId=\\"range\\"></p-calendar>\\n                            <p class=\\"tw-text-sub-text-color tw-text-14-px\\" [ngClass]=\\"{\'!tw-text-mandatory-field-color\' : skipExportLogForm.controls.dateRange.value === date }\\" *ngIf=\\"date.dateRange !== presentDate\\">{{ date.dateRange | titlecase | snakeCaseToSpaceCase }}</p>\\n                            <p class=\\"tw-text-sub-text-color tw-text-12-px\\" *ngIf=\\"date.dateRange !== presentDate && date.dateRange !== \'Today\'\\">{{date.startDate | date : \'MMM dd, yyyy\'}} - {{date.endDate | date : \'MMM dd, yyyy\'}}</p>\\n                            <p class=\\"tw-text-sub-text-color tw-text-12-px\\" *ngIf=\\"date.dateRange === \'Today\'\\">{{date.startDate | date : \'MMM dd, yyyy\'}}</p>\\n                        </div>\\n                    </ng-template> \\n                </p-dropdown>\\n            </span>\\n        </div>\\n\\n        <p-table *ngIf=\\"filteredExpenseGroups.length > 0\\" #dt1 [value]=\\"filteredExpenseGroups\\">\\n            <ng-template pTemplate=\\"header\\">\\n                <tr>\\n                    <th>Date and Time of Export</th>\\n                    <th>Employee Name and ID</th>\\n                    <th>Expense Type</th>\\n                    <th>Reference ID</th>\\n                </tr>\\n            </ng-template>\\n\\n            <ng-template pTemplate=\\"body\\" let-rowData>\\n                <tr>\\n                    <td>\\n                        <p class=\\"tw-font-400 tw-text-sub-text-color\\">{{rowData.updated_at | date}}</p>\\n                        <span class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">{{rowData.updated_at | date : \\"HH:ss\\"}}</span>\\n                    </td>\\n                    <td>\\n                        <h4>\\n                            {{rowData.employee[1]}}\\n                        </h4>\\n                        <h5 *ngIf=\\"false\\" class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">\\n                            {{rowData.employee[1]}}\\n                        </h5>\\n                    </td>\\n                    <td>{{rowData.expenseType | titlecase}}</td>\\n                    <td class=\\"tw-underline tw-cursor-pointer\\" (click)=\\"openUrl($event, rowData.fyleUrl)\\">{{rowData.claim_number}}</td>\\n                </tr>\\n            </ng-template>\\n        </p-table>\\n\\n        <div *ngIf=\\"filteredExpenseGroups.length > 0\\" class=\\"tw-p-24-px tw-border-t-1-px\\">\\n            <app-paginator [dropDownValue]=\\"limit\\" [page]=\\"currentPage\\" [totalCount]=\\"totalCount\\" (pageSizeChangeEvent)=\\"pageSizeChanges($event)\\" (pageOffsetChangeEvent)=\\"pageChanges($event)\\"></app-paginator>\\n        </div>\\n        <div *ngIf=\\"!filteredExpenseGroups.length\\" class=\\"tw-flex tw-h-3/6 tw-text-center tw-p-56-px\\">\\n            <div class=\\"tw-m-auto\\">\\n                <img src=\\"assets/illustrations/search-result-empty.svg\\" width=\\"200px\\" hight=\\"200px\\" class=\\"tw-inline-block\\">\\n                <div class=\\"tw-pt-12-px\\">\\n                    <h4 class=\\"tw-font-500 tw-text-14-px tw-text-slightly-normal-text-color\\">Sorry, no results found!</h4>\\n                    <p class=\\"tw-font-400 tw-text-14-px tw-text-faded-text-color tw-pt-8-px\\">We could not find what you were looking for.<br>Kindly check the keywords again.</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div *ngIf=\\"totalCount === 0\\">\\n        <div class=\\"tw-flex tw-h-3/6 tw-text-center tw-p-56-px\\">\\n            <div class=\\"tw-m-auto\\">\\n                <img src=\\"assets/illustrations/integrations-zero-state.svg\\" width=\\"200px\\" hight=\\"200px\\" class=\\"tw-inline-block\\">\\n                <div class=\\"tw-pt-20-px\\">\\n                    <h4 class=\\"tw-font-500 !tw-text-14-px tw-text-slightly-normal-text-color\\">No records to show yet!</h4>\\n                    <p class=\\"tw-pt-8-px tw-font-400 !tw-text-14-px tw-text-faded-text-color\\">All your expenses that were skipped from exporting<br>\\n                        will be stored here.</p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>"},{"name":"SkippedExportLogTableComponent","id":"component-SkippedExportLogTableComponent-1111d450f399b8434170131533ef86f2a61de3a824c223896c7917bdc7d2f2c5093a9c5f6cae5365e34f7bdcf3a04174ed1c340b32293da8440e1bd7cdeb1869","file":"src/app/shared/components/export-log/skipped-export-log-table/skipped-export-log-table.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-skipped-export-log-table","styleUrls":["./skipped-export-log-table.component.scss"],"styles":[],"templateUrl":["./skipped-export-log-table.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"filteredExpense","deprecated":false,"deprecationMessage":"","line":12,"type":"SkipExportList[]","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":23,"deprecated":false,"deprecationMessage":""},{"name":"openUrl","args":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":19,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"url","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { SkipExportList } from \'src/app/core/models/si/db/expense-group.model\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\n\\n@Component({\\n  selector: \'app-skipped-export-log-table\',\\n  templateUrl: \'./skipped-export-log-table.component.html\',\\n  styleUrls: [\'./skipped-export-log-table.component.scss\']\\n})\\nexport class SkippedExportLogTableComponent implements OnInit {\\n\\n  @Input() filteredExpense: SkipExportList[];\\n\\n  constructor(\\n    private windowService: WindowService\\n  ) { }\\n\\n\\n  openUrl(url: string) {\\n    this.windowService.openInNewTab(url);\\n  }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {\\n  @apply tw-text-sub-text-color tw-text-14-px tw-font-400 tw-py-14-px tw-px-22-px tw-border-t tw-border-b-0 tw-border-t-box-color  #{!important};\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {\\n  @apply tw-text-slightly-normal-text-color tw-text-12-px tw-font-500 tw-py-12-px tw-px-22-px tw-border tw-border-box-color tw-bg-disabled-bg-color #{!important}\\n}\\n\\n:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td > button {\\n  @apply tw-pl-48-px #{!important};\\n}","styleUrl":"./skipped-export-log-table.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":12,"jsdoctags":[{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<p-table *ngIf=\\"filteredExpense.length > 0\\" #dt1 [value]=\\"filteredExpense\\">\\n    <ng-template pTemplate=\\"header\\">\\n        <tr>\\n            <th>Export Skipped On</th>\\n            <th>Employee Name and ID</th>\\n            <th>Expense Type</th>\\n            <th>Reference ID</th>\\n        </tr>\\n    </ng-template>\\n\\n    <ng-template pTemplate=\\"body\\" let-rowData>\\n        <tr>\\n            <td>\\n                <p class=\\"tw-font-400 tw-text-sub-text-color\\">{{rowData.updated_at | date}}</p>\\n                <span class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">{{rowData.updated_at | date : \\"HH:ss\\"}}</span>\\n            </td>\\n            <td>\\n                <h4>\\n                    {{rowData.employee[0]}}\\n                </h4>\\n                <h5 class=\\"tw-font-400 !tw-text-12-px tw-text-placeholder\\">\\n                    {{rowData.employee[1]}}\\n                </h5>\\n            </td>\\n            <td>{{rowData.expenseType | titlecase}}</td>\\n            <td class=\\"tw-underline tw-cursor-pointer\\" (click)=\\"openUrl(rowData.fyleUrl)\\">{{rowData.claim_number}}</td>\\n        </tr>\\n    </ng-template>\\n</p-table>"},{"name":"SubMenuComponent","id":"component-SubMenuComponent-71b1333ed7beabaee016f9b239e353834eb7ceb70789ee031e8c3d51000ddb8a67f3eab27c5bce43fbdfdf6a9990efbcc9ce05816b9034cc2a86ff2979f61fc6","file":"src/app/shared/components/menu/sub-menu/sub-menu.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-sub-menu","styleUrls":["./sub-menu.component.scss"],"styles":[],"templateUrl":["./sub-menu.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"activeModule","deprecated":false,"deprecationMessage":"","line":14,"type":"MenuItem","decorators":[]},{"name":"modules","deprecated":false,"deprecationMessage":"","line":12,"type":"MenuItem[]","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { Router } from \'@angular/router\';\\nimport { MenuItem } from \'primeng/api\';\\n\\n@Component({\\n  selector: \'app-sub-menu\',\\n  templateUrl: \'./sub-menu.component.html\',\\n  styleUrls: [\'./sub-menu.component.scss\']\\n})\\nexport class SubMenuComponent implements OnInit {\\n\\n  @Input() modules: MenuItem[];\\n\\n  @Input() activeModule: MenuItem;\\n\\n  constructor(\\n    private router: Router\\n  ) { }\\n\\n  ngOnInit(): void {\\n    this.router.navigateByUrl(this.modules[0].routerLink);\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\\n    background-color: transparent;\\n    @apply tw-px-24-px tw-py-12-px tw-mx-10-px tw-mt-0 tw-border-x-box-color tw-border-t-box-color tw-border-t tw-border-x tw-rounded-t-lg #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link:not(.p-disabled):hover {\\n    @apply tw-text-slightly-normal-text-color tw-border-b-transparent tw-bg-white #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover, :host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem:not(.p-highlight):hover .p-menuitem-link{\\n    background-color: transparent !important;\\n    @apply tw-border-b-transparent tw-font-500 #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link:not(.p-highlight):hover{\\n    @apply tw-border-b-transparent tw-font-500 tw-bg-disabled-bg-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav {\\n    background-color: transparent;\\n    @apply tw-border-b tw-border-b-box-color #{!important};\\n}\\n\\n:host ::ng-deep .p-tabmenu .p-tabmenu-nav .p-tabmenuitem {\\n    @apply -tw-mr-12-px #{!important};\\n}","styleUrl":"./sub-menu.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""}],"line":14,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-mb-16-px\\">\\n    <p-tabMenu [model]=\\"modules\\" [activeItem]=\\"activeModule\\"></p-tabMenu>\\n</div>"},{"name":"ToggleComponent","id":"component-ToggleComponent-57c4ed94cd0d919bb8731c7beaf77f23525543f5e34da245f3a5a85904d646c6024ed29c912bd0b870edb22edb6258a7c902bd8992a44761ee63bc674bbfa07a","file":"src/app/shared/components/input/toggle/toggle.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-toggle","styleUrls":["./toggle.component.scss"],"styles":[],"templateUrl":["./toggle.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"form","deprecated":false,"deprecationMessage":"","line":11,"type":"FormGroup","decorators":[]},{"name":"formControllerName","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\nimport { FormGroup } from \'@angular/forms\';\\n\\n@Component({\\n  selector: \'app-toggle\',\\n  templateUrl: \'./toggle.component.html\',\\n  styleUrls: [\'./toggle.component.scss\']\\n})\\nexport class ToggleComponent {\\n\\n  @Input() form: FormGroup;\\n\\n  @Input() formControllerName: string;\\n\\n  constructor() { }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host ::ng-deep .p-inputswitch.p-inputswitch-checked .p-inputswitch-slider::after {\\n    content: \'Yes\';\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: absolute;\\n    left: 8px;\\n    bottom: 1px;\\n    font-size: 12px;\\n    color: white;\\n    font-weight: 500;\\n}\\n\\n:host ::ng-deep .p-inputswitch:not(.p-inputswitch-checked) .p-inputswitch-slider::after {\\n    content: \'No\';\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    position: absolute;\\n    left: 24px;\\n    bottom: 1px;\\n    font-size: 12px;\\n    color: white;\\n    font-weight: 500;\\n}\\n","styleUrl":"./toggle.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":13},"extends":[],"templateData":"<div [formGroup]=\\"form\\">\\n    <p-inputSwitch [formControlName]=\\"formControllerName\\"></p-inputSwitch>\\n</div>\\n"},{"name":"TravelperkComponent","id":"component-TravelperkComponent-59576c5e5c5d362c2da63adb76af9d53a473170f0405b7d38eb5fd9587230252b98a12f0ce0e631e5932b7011ab78cfaab45326706176113e7b47bb23b688d32","file":"src/app/integrations/travelperk/travelperk.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-travelperk","styleUrls":["./travelperk.component.scss"],"styles":[],"templateUrl":["./travelperk.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"AppName","defaultValue":"AppName","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":24},{"name":"brandingConfig","defaultValue":"brandingConfig","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":40,"modifierKind":[148]},{"name":"brandingKbArticles","defaultValue":"brandingKbArticles","deprecated":false,"deprecationMessage":"","type":"","optional":false,"description":"","line":22},{"name":"isConnectionInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":36},{"name":"isIntegrationConnected","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":34},{"name":"isLoading","defaultValue":"true","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":26},{"name":"isTravelperkSetupInProgress","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":32},{"name":"org","defaultValue":"this.orgService.getCachedOrg()","deprecated":false,"deprecationMessage":"","type":"Org","optional":false,"description":"","line":38},{"name":"showErrorScreen","deprecated":false,"deprecationMessage":"","type":"boolean","optional":false,"description":"","line":28},{"name":"travelperkData","deprecated":false,"deprecationMessage":"","type":"Travelperk","optional":false,"description":"","line":30}],"methodsClass":[{"name":"connectTravelperk","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":71,"deprecated":false,"deprecationMessage":""},{"name":"disconnect","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"deprecated":false,"deprecationMessage":""},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":100,"deprecated":false,"deprecationMessage":""},{"name":"setupPage","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":52,"deprecated":false,"deprecationMessage":"","modifierKind":[123]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, OnInit, OnDestroy } from \'@angular/core\';\\nimport { Subscription } from \'rxjs\';\\nimport { Location } from \'@angular/common\';\\nimport { ToastSeverity } from \'src/app/core/models/enum/enum.model\';\\nimport { AppName } from \'src/app/core/models/enum/enum.model\';\\nimport { Org } from \'src/app/core/models/org/org.model\';\\nimport { Travelperk } from \'src/app/core/models/travelperk/travelperk.model\';\\nimport { OrgService } from \'src/app/core/services/org/org.service\';\\nimport { IntegrationsToastService } from \'src/app/core/services/common/integrations-toast.service\';\\nimport { TravelperkService } from \'src/app/core/services/travelperk/travelperk.service\';\\nimport { environment } from \'src/environments/environment\';\\nimport { brandingConfig, brandingKbArticles } from \'src/app/branding/branding-config\';\\nimport { WindowService } from \'src/app/core/services/common/window.service\';\\nimport { ActivatedRoute, NavigationExtras, Router } from \'@angular/router\';\\n\\n@Component({\\n  selector: \'app-travelperk\',\\n  templateUrl: \'./travelperk.component.html\',\\n  styleUrls: [\'./travelperk.component.scss\']\\n})\\nexport class TravelperkComponent implements OnInit {\\n  brandingKbArticles = brandingKbArticles;\\n\\n  AppName = AppName;\\n\\n  isLoading: boolean = true;\\n\\n  showErrorScreen: boolean;\\n\\n  travelperkData: Travelperk;\\n\\n  isTravelperkSetupInProgress: boolean;\\n\\n  isIntegrationConnected: boolean;\\n\\n  isConnectionInProgress: boolean;\\n\\n  org: Org = this.orgService.getCachedOrg();\\n\\n  readonly brandingConfig = brandingConfig;\\n\\n  constructor(\\n    private router: Router,\\n    private route: ActivatedRoute,\\n    private location: Location,\\n    private travelperkService: TravelperkService,\\n    private orgService: OrgService,\\n    private toastService: IntegrationsToastService,\\n    private windowService: WindowService\\n  ) { }\\n\\n  private setupPage(): void {\\n    this.travelperkService.getTravelperkData().subscribe((travelperkData : Travelperk) => {\\n      this.travelperkData = travelperkData;\\n      this.isIntegrationConnected = travelperkData.is_travelperk_connected;\\n      this.isLoading = false;\\n    }, () => {\\n      this.isLoading = false;\\n    });\\n  }\\n\\n  disconnect(): void {\\n    this.isConnectionInProgress = true;\\n    this.travelperkService.disconnect().subscribe(() => {\\n      this.isIntegrationConnected = false;\\n      this.isConnectionInProgress = false;\\n      this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Disconnected Travelperk successfully\');\\n    });\\n  }\\n\\n  connectTravelperk(): void {\\n    this.isConnectionInProgress = true;\\n    const url = `${environment.travelperk_base_url}/oauth2/authorize?client_id=${environment.travelperk_client_id}&redirect_uri=${environment.travelperk_redirect_uri}&scope=expenses:read&response_type=code&state=${environment.production ? this.org.id : `${this.org.id}_travelperk_local_redirect`}`;\\n\\n    const popup = window.open(url, \'popup\', \'popup=true, width=500, height=800, left=500\');\\n\\n    const activePopup = setInterval(() => {\\n      try {\\n        if (popup?.location?.href?.includes(\'code\')) {\\n          popup.close();\\n        } else if (!popup || !popup.closed) {\\n          return;\\n        }\\n\\n        clearInterval(activePopup);\\n      } catch (error) {\\n        if (error instanceof DOMException && error.message.includes(\'An attempt was made to break through the security policy of the user agent\')) {\\n          this.travelperkService.getTravelperkData().subscribe(() => {\\n            this.isIntegrationConnected = true;\\n            this.isConnectionInProgress = false;\\n            this.toastService.displayToastMessage(ToastSeverity.SUCCESS, \'Connected Travelperk successfully\');\\n            popup?.close();\\n            clearInterval(activePopup);\\n          });\\n        }\\n      }\\n    }, 2000);\\n  }\\n\\n  ngOnInit(): void {\\n    this.setupPage();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./travelperk.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":""},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":""},{"name":"location","type":"Location","deprecated":false,"deprecationMessage":""},{"name":"travelperkService","type":"TravelperkService","deprecated":false,"deprecationMessage":""},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":""},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":""},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":""}],"line":40,"jsdoctags":[{"name":"router","type":"Router","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"route","type":"ActivatedRoute","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"location","type":"Location","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"travelperkService","type":"TravelperkService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"orgService","type":"OrgService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"toastService","type":"IntegrationsToastService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"windowService","type":"WindowService","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"implements":["OnInit"],"templateData":"<app-landing-page-header \\n    [iconPath]=\\"\'assets/logos/travelperk-logo.svg\'\\"\\n    [appName]=\\"AppName.TRAVELPERK\\"\\n    [appDescription]=\\"\'Autosync employee details between \' + brandingConfig.brandName + \' and TravelPerk.\'\\"\\n    [isLoading]=\\"isLoading\\"\\n    [appName]=\\"AppName.TRAVELPERK\\"\\n    [isIntegrationConnected]=\\"isIntegrationConnected\\"\\n    [isRecipeRunning]=\\"true\\"\\n    [isConnectionInProgress]=\\"isConnectionInProgress\\"\\n    (disconnectIntegration)=\\"disconnect()\\"\\n    (connectIntegration)=\\"connectTravelperk()\\"\\n></app-landing-page-header>\\n\\n<app-landing-page-body\\n    *ngIf=\\"!isLoading && !showErrorScreen\\"\\n    [headerText]=\\"\'Auto sync employee details between TravelPerk and \' + brandingConfig.brandName + \'.\'\\" \\n    [svgPath]=\\"\'assets/flow-charts/travelperk-flow-chart.svg\'\\" \\n    [redirectLink]=\\"brandingKbArticles.topLevelArticles.TRAVELPERK\\"\\n></app-landing-page-body>\\n\\n<app-error *ngIf=\\"showErrorScreen\\"></app-error>\\n\\n<div *ngIf=\\"isLoading\\" class=\\"tw-flex tw-flex-col tw-justify-center tw-items-center tw-pt-70-px\\">\\n    <div *ngFor=\\"let _ of [0,1,2,3,4,5,6]\\" class=\\"tw-w-75-vw tw-h-78-px tw-border-separator tw-border-1-px tw-rounded-8-px tw-mb-18-px\\">\\n        <div class=\\"tw-w-14-vw tw-h-18-px tw-pl-24-px tw-pt-16-px tw-pb-10-px\\">\\n            <p-skeleton shape=\\"rectangle\\"></p-skeleton>\\n        </div>\\n        <div class=\\"tw-w-50-vw tw-h-18-px tw-pl-24-px tw-pt-16-px tw-pb-10-px\\">\\n            <p-skeleton shape=\\"rectangle\\"></p-skeleton>\\n        </div>\\n    </div>\\n</div>\\n"},{"name":"ZeroStateComponent","id":"component-ZeroStateComponent-70b9c380d002d3763c6b0c2180d6552280dd1313a9bf2de1e01bd1221b7bd2d29d7f16284fe129e2ff3c26db564fda978a27af1e23cf51c820508f914ea5357e","file":"src/app/shared/components/helper/zero-state/zero-state.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-zero-state","styleUrls":["./zero-state.component.scss"],"styles":[],"templateUrl":["./zero-state.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"zeroStateCaption","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]},{"name":"zeroStateImageURL","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-zero-state\',\\n  templateUrl: \'./zero-state.component.html\',\\n  styleUrls: [\'./zero-state.component.scss\']\\n})\\nexport class ZeroStateComponent implements OnInit {\\n\\n  @Input() zeroStateImageURL: string;\\n\\n  @Input() zeroStateCaption: string;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./zero-state.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":12},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-justify-center tw-items-center tw-mt-130-px\\">\\n    <div class=\\"tw-text-center\\">\\n        <img class=\\"tw-pr-4\\" [src]=\\"zeroStateImageURL\\" alt=\\"Zero State\\">\\n        <p class=\\"tw-pt-8 tw-font-400 tw-text-14-px\\">{{zeroStateCaption}}</p>\\n    </div>\\n</div>"},{"name":"ZeroStateWithIllustrationComponent","id":"component-ZeroStateWithIllustrationComponent-1b9a9fad66c280058c8c988268a2041e0a56403f70403b5612db43203a3caa4584d8170f6624afa93d2f95783004616664eab472cfa78fa9e1d6b6a9c68e5c3c","file":"src/app/shared/components/qbd/core/zero-state-with-illustration/zero-state-with-illustration.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"app-zero-state-with-illustration","styleUrls":["./zero-state-with-illustration.component.scss"],"styles":[],"templateUrl":["./zero-state-with-illustration.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"mainText","deprecated":false,"deprecationMessage":"","line":10,"type":"string","decorators":[]},{"name":"subText","deprecated":false,"deprecationMessage":"","line":12,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":16,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input, OnInit } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'app-zero-state-with-illustration\',\\n  templateUrl: \'./zero-state-with-illustration.component.html\',\\n  styleUrls: [\'./zero-state-with-illustration.component.scss\']\\n})\\nexport class ZeroStateWithIllustrationComponent implements OnInit {\\n\\n  @Input() mainText: string;\\n\\n  @Input() subText: string;\\n\\n  constructor() { }\\n\\n  ngOnInit(): void {\\n  }\\n\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"","styleUrl":"./zero-state-with-illustration.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[],"line":12},"extends":[],"implements":["OnInit"],"templateData":"<div class=\\"tw-flex tw-h-3/6 tw-text-center tw-p-56-px\\">\\n    <div class=\\"tw-m-auto\\">\\n        <img src=\\"assets/illustrations/zero-state.svg\\" width=\\"200px\\" hight=\\"200px\\" class=\\"tw-inline-block\\">\\n        <div class=\\"tw-pt-20-px\\">\\n            <h4 class=\\"tw-font-500 !tw-text-14-px tw-text-slightly-normal-text-color\\">{{mainText}}</h4>\\n            <p class=\\"tw-pt-8-px tw-font-400 !tw-text-14-px tw-text-faded-text-color tw-max-w-sm tw-break-words\\">{{subText}}</p>\\n        </div>\\n    </div>\\n</div>"}],"modules":[{"name":"AppModule","id":"module-AppModule-fb34c16f1792fa1b7eb2d871bfcec1a0a08a39532663eb80634b84933cd1ebfabf922a6bf6cfe2427449cc6e845bce14afb8c5609058696c0cbc3ffffb92df37","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app.module.ts","methods":[],"sourceCode":"import { APP_INITIALIZER, ErrorHandler, NgModule } from \'@angular/core\';\\nimport { BrowserModule } from \'@angular/platform-browser\';\\nimport { BrowserAnimationsModule } from \'@angular/platform-browser/animations\';\\n\\nimport { AppRoutingModule } from \'./app-routing.module\';\\nimport { AppComponent } from \'./app.component\';\\n\\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \'@angular/common/http\';\\n\\n// External Libraries\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\nimport { JwtHelperService, JWT_OPTIONS } from \'@auth0/angular-jwt\';\\nimport { GlobalErrorHandler } from \'./app.error-handling\';\\nimport { JwtInterceptor } from \'./core/interceptor/jwt.interceptor\';\\nimport { ToastModule } from \'primeng/toast\';\\nimport { MessageService } from \'primeng/api\';\\nimport { SharedModule } from \'./shared/shared.module\';\\nimport { RippleModule } from \'primeng/ripple\';\\nimport { BrandingService } from \'./core/services/common/branding.service\';\\nimport { Sage300ConfigurationModule } from \'./integrations/sage300/sage300-main/sage300-configuration/sage300-configuration.module\';\\n\\n@NgModule({\\n  declarations: [\\n    AppComponent\\n  ],\\n  imports: [\\n    BrowserModule,\\n    AppRoutingModule,\\n    BrowserAnimationsModule,\\n    HttpClientModule,\\n    ToastModule,\\n    SharedModule,\\n    RippleModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' }),\\n    Sage300ConfigurationModule\\n  ],\\n  providers: [\\n    MessageService,\\n    {\\n      provide: JWT_OPTIONS,\\n      useValue: JWT_OPTIONS\\n    },\\n    JwtHelperService,\\n    {\\n      provide: HTTP_INTERCEPTORS,\\n      useClass: JwtInterceptor,\\n      multi: true\\n    },\\n    {\\n      provide: ErrorHandler,\\n      useClass: GlobalErrorHandler\\n    },\\n    {\\n      provide: APP_INITIALIZER,\\n      useFactory: (brandingService: BrandingService) => () => brandingService.init(),\\n      deps: [BrandingService],\\n      multi: true\\n    }\\n  ],\\n  bootstrap: [AppComponent]\\n})\\nexport class AppModule { }\\n","children":[{"type":"providers","elements":[{"name":"JwtInterceptor"}]},{"type":"declarations","elements":[{"name":"AppComponent"}]},{"type":"imports","elements":[{"name":"AppRoutingModule"},{"name":"Sage300ConfigurationModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[{"name":"AppComponent"}]},{"type":"classes","elements":[]}]},{"name":"AppRoutingModule","id":"module-AppRoutingModule-1abddd3638d366988926c8cf77fe88110cf5f4b8e7f227ee90d0f1abda50c8ee0cdd086c90b6ff39499379d2f03302a19b75899a308dc3ab1d4e355b4b538e04","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/app-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { AuthGuard } from \'./core/guard/auth.guard\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    redirectTo: \'integrations\',\\n    pathMatch: \'full\'\\n  },\\n  {\\n    path: \'auth\',\\n    loadChildren: () => \\"import(\'./auth/auth.module\').then(m => m.AuthModule)\\"\\n  },\\n  {\\n    path: \'oauth\',\\n    loadChildren: () => \\"import(\'./oauth/oauth.module\').then(m => m.OauthModule)\\"\\n  },\\n  {\\n    path: \'integrations\',\\n    loadChildren: () => \\"import(\'./integrations/integrations.module\').then(m => m.IntegrationsModule)\\",\\n    canActivate: [AuthGuard]\\n  },\\n  {\\n    path: \'**\',\\n    redirectTo: \'integrations\',\\n    pathMatch: \'full\'\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forRoot(routes)],\\n  exports: [RouterModule]\\n})\\nexport class AppRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"AuthModule","id":"module-AuthModule-a7e1b7028c72e4cc7848bd034303d965e9bfeb776e826b1836d11f289a984b0c07ac8ba6df5e16e2d1d8a04417d810d8404b02ec28cf3848d095ab88faebd1aa","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/auth/auth.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { AuthRoutingModule } from \'./auth-routing.module\';\\nimport { AuthComponent } from \'./auth.component\';\\nimport { LoginComponent } from \'./login/login.component\';\\nimport { RedirectComponent } from \'./redirect/redirect.component\';\\nimport { SharedModule } from \'../shared/shared.module\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    AuthComponent,\\n    LoginComponent,\\n    RedirectComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    AuthRoutingModule,\\n    SharedModule\\n  ]\\n})\\nexport class AuthModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AuthComponent"},{"name":"LoginComponent"},{"name":"RedirectComponent"}]},{"type":"imports","elements":[{"name":"AuthRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"AuthRoutingModule","id":"module-AuthRoutingModule-aac3aed6495b8a2628af47de87910fe7532afd2c15380eb8d0ce876c0b15ea1a2baf22290b7b75dc1405d75fbd28f3dea539c714d68f3c41122469d5cb1bd948","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/auth/auth-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { AuthComponent } from \'./auth.component\';\\nimport { LoginComponent } from \'./login/login.component\';\\nimport { RedirectComponent } from \'./redirect/redirect.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: AuthComponent,\\n    children: [\\n      {\\n        path: \'callback\',\\n        component: LoginComponent\\n      },\\n      {\\n        path: \'redirect\',\\n        component: RedirectComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class AuthRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BambooHrModule","id":"module-BambooHrModule-5cddf83d274e58fc08b865049f9edbd007f2a82ceaac273c47cb91ed28356bbaf2a866cb895db72428238d26bf0a5941f4e549e303377e4e32f5f7fa63360f5a","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/bamboo-hr/bamboo-hr.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { BambooHrRoutingModule } from \'./bamboo-hr-routing.module\';\\nimport { BambooHrComponent } from \'./bamboo-hr.component\';\\nimport { ConfigurationComponent } from \'./configuration/configuration.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\n\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { DialogModule } from \'primeng/dialog\';\\nimport { PasswordModule } from \'primeng/password\';\\nimport { InputTextModule } from \'primeng/inputtext\';\\nimport { ButtonModule } from \'primeng/button\';\\nimport { InputSwitchModule } from \'primeng/inputswitch\';\\nimport { DropdownModule } from \'primeng/dropdown\';\\nimport { MultiSelectModule } from \'primeng/multiselect\';\\nimport { SkeletonModule } from \'primeng/skeleton\';\\nimport { ProgressSpinnerModule } from \'primeng/progressspinner\';\\nimport { ToastModule } from \'primeng/toast\';\\n\\nimport { MessageService } from \'primeng/api\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    BambooHrComponent,\\n    ConfigurationComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BambooHrRoutingModule,\\n    SharedModule,\\n    DialogModule,\\n    PasswordModule,\\n    InputTextModule,\\n    ButtonModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    InputSwitchModule,\\n    DropdownModule,\\n    MultiSelectModule,\\n    SkeletonModule,\\n    ProgressSpinnerModule,\\n    ToastModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n  ],\\n  providers: [\\n    MessageService\\n  ]\\n})\\nexport class BambooHrModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BambooHrComponent"},{"name":"ConfigurationComponent"}]},{"type":"imports","elements":[{"name":"BambooHrRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BambooHrRoutingModule","id":"module-BambooHrRoutingModule-f17ce87d35b942bae0ea5e7a8a298dab2899be4a9ea829eeb8e9a43fa1e9965dc13305417cb76d982d55d18aa1b2f5fa30a539bba56d7d75e158471ad0826a0d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/bamboo-hr/bamboo-hr-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { BambooHrComponent } from \'./bamboo-hr.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: BambooHrComponent\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class BambooHrRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralConfigurationModule","id":"module-BusinessCentralConfigurationModule-827bb286f3b878f18b33e66ae20a20bf1138053f10d67c2fe26d3247a04261ef877705275e265de19d77ee24e3923efc12cc11aa3045e11a1ace58385a2f26f5","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-main/business-central-configuration/business-central-configuration.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { BusinessCentralConfigurationRoutingModule } from \'./business-central-configuration-routing.module\';\\n\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    BusinessCentralConfigurationRoutingModule\\n  ]\\n})\\nexport class BusinessCentralConfigurationModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"BusinessCentralConfigurationRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralConfigurationRoutingModule","id":"module-BusinessCentralConfigurationRoutingModule-ac59cecf7e88b917ced20d233eeb10b2196ab30f153fbe271052e7d85b5fc6a6554b15f8b77b3a91684f6fa872ac14db8754becc79304c74bdd3f4de9910998d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-main/business-central-configuration/business-central-configuration-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { BusinessCentralConfigurationComponent } from \'./business-central-configuration.component\';\\nimport { BusinessCentralImportSettingsComponent } from \'../../business-central-shared/business-central-import-settings/business-central-import-settings.component\';\\nimport { BusinessCentralAdvancedSettingsComponent } from \'../../business-central-shared/business-central-advanced-settings/business-central-advanced-settings.component\';\\nimport { BusinessCentralExportSettingsComponent } from \'../../business-central-shared/business-central-export-settings/business-central-export-settings.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: BusinessCentralConfigurationComponent,\\n    children: [\\n      {\\n        path: \'export_settings\',\\n        component: BusinessCentralExportSettingsComponent\\n      },\\n      {\\n        path: \'import_settings\',\\n        component: BusinessCentralImportSettingsComponent\\n      },\\n      {\\n        path: \'advanced_settings\',\\n        component: BusinessCentralAdvancedSettingsComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class BusinessCentralConfigurationRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralDashboardModule","id":"module-BusinessCentralDashboardModule-f2573795d681c68fd3abc780d1451b59a0d08666a92408da733e3e234ce4b88842a5ca24cca88692e3140c8b1c16d3e2f6fcc44479879dcd5a51a0035671d0f2","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-main/business-central-dashboard/business-central-dashboard.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { BusinessCentralDashboardRoutingModule } from \'./business-central-dashboard-routing.module\';\\n\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    BusinessCentralDashboardRoutingModule\\n  ]\\n})\\nexport class BusinessCentralDashboardModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"BusinessCentralDashboardRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralDashboardRoutingModule","id":"module-BusinessCentralDashboardRoutingModule-6fcdad74216428a1729547a6c4ad6b682fa79373b93f5a58c2d958eb6e06c04fe64e469ebbd70ad77e95e8d270533269dd808b00a1cf3ef64608569ce0f60063","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-main/business-central-dashboard/business-central-dashboard-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { BusinessCentralDashboardComponent } from \'./business-central-dashboard.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: BusinessCentralDashboardComponent\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class BusinessCentralDashboardRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralExportLogModule","id":"module-BusinessCentralExportLogModule-df1eb23a41935ca41d97dd1f51048e4666c517b20b1565f8df715691be6b624008b57cffbe607ea65f9d8534e379569d53434a90f91f4fd3c9fb75b4f0d9d410","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-main/business-central-export-log/business-central-export-log.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { BusinessCentralExportLogRoutingModule } from \'./business-central-export-log-routing.module\';\\nimport { BusinessCentralCompleteExportLogComponent } from \'./business-central-complete-export-log/business-central-complete-export-log.component\';\\nimport { BusinessCentralSkippedExportLogComponent } from \'./business-central-skipped-export-log/business-central-skipped-export-log.component\';\\n\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    BusinessCentralExportLogRoutingModule\\n  ]\\n})\\nexport class BusinessCentralExportLogModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"BusinessCentralExportLogRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralExportLogRoutingModule","id":"module-BusinessCentralExportLogRoutingModule-8ac5681fd41728940b919923006aa7314b14e43dbb0a1aef0638e3b69bdb13b98a26ef819348c97b794e5b4cf108ab3f10300d0d7eb649e53c49615e83fb7c8e","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-main/business-central-export-log/business-central-export-log-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { BusinessCentralExportLogComponent } from \'./business-central-export-log.component\';\\nimport { BusinessCentralCompleteExportLogComponent } from \'./business-central-complete-export-log/business-central-complete-export-log.component\';\\nimport { BusinessCentralSkippedExportLogComponent } from \'./business-central-skipped-export-log/business-central-skipped-export-log.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: BusinessCentralExportLogComponent,\\n    children: [\\n      {\\n        path: \'complete_export_log\',\\n        component: BusinessCentralCompleteExportLogComponent\\n      },\\n      {\\n        path: \'skip_export_log\',\\n        component: BusinessCentralSkippedExportLogComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class BusinessCentralExportLogRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralMainModule","id":"module-BusinessCentralMainModule-d2399f903121b278cfe582b73906536f82a34b0876f0e65c25ae9e3c3ec324899bac2ff33682815476bf72dd3e7f9c310199d4cd0c9aba5109933025086eb141","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-main/business-central-main.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { BusinessCentralMainRoutingModule } from \'./business-central-main-routing.module\';\\nimport { BusinessCentralConfigurationComponent } from \'./business-central-configuration/business-central-configuration.component\';\\nimport { BusinessCentralDashboardComponent } from \'./business-central-dashboard/business-central-dashboard.component\';\\nimport { BusinessCentralExportLogComponent } from \'./business-central-export-log/business-central-export-log.component\';\\nimport { BusinessCentralMappingComponent } from \'./business-central-mapping/business-central-mapping.component\';\\nimport { BusinessCentralMainComponent } from \'./business-central-main.component\';\\nimport { BusinessCentralBaseMappingComponent } from \'./business-central-mapping/business-central-base-mapping/business-central-base-mapping.component\';\\nimport { BusinessCentralCompleteExportLogComponent } from \'./business-central-export-log/business-central-complete-export-log/business-central-complete-export-log.component\';\\nimport { BusinessCentralSkippedExportLogComponent } from \'./business-central-export-log/business-central-skipped-export-log/business-central-skipped-export-log.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    BusinessCentralConfigurationComponent,\\n    BusinessCentralDashboardComponent,\\n    BusinessCentralExportLogComponent,\\n    BusinessCentralMappingComponent,\\n    BusinessCentralBaseMappingComponent,\\n    BusinessCentralCompleteExportLogComponent,\\n    BusinessCentralSkippedExportLogComponent,\\n    BusinessCentralMainComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    SharedModule,\\n    BusinessCentralMainRoutingModule\\n  ]\\n})\\nexport class BusinessCentralMainModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BusinessCentralBaseMappingComponent"},{"name":"BusinessCentralCompleteExportLogComponent"},{"name":"BusinessCentralConfigurationComponent"},{"name":"BusinessCentralDashboardComponent"},{"name":"BusinessCentralExportLogComponent"},{"name":"BusinessCentralMainComponent"},{"name":"BusinessCentralMappingComponent"},{"name":"BusinessCentralSkippedExportLogComponent"}]},{"type":"imports","elements":[{"name":"BusinessCentralMainRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralMainRoutingModule","id":"module-BusinessCentralMainRoutingModule-4348d13f12536115834c4d21ed0f6db7c20f0714812815daa67c1714afc0cf69e330b030fb8f3809781945f0cd4f514e0d1890ad55bff2f7450a1d5c1ccb0a78","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-main/business-central-main-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { BusinessCentralMainComponent } from \'./business-central-main.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: BusinessCentralMainComponent,\\n    children: [\\n      {\\n        path: \'dashboard\',\\n        loadChildren: () => \\"import(\'./business-central-dashboard/business-central-dashboard.module\').then(m => m.BusinessCentralDashboardModule)\\"\\n      },\\n      {\\n        path: \'export_log\',\\n        loadChildren: () => \\"import(\'./business-central-export-log/business-central-export-log.module\').then(m => m.BusinessCentralExportLogModule)\\"\\n      },\\n      {\\n        path: \'mapping\',\\n        loadChildren: () => \\"import(\'./business-central-mapping/business-central-mapping.module\').then(m => m.BusinessCentralMappingModule)\\"\\n      },\\n      {\\n        path: \'configuration\',\\n        loadChildren: () => \\"import(\'./business-central-configuration/business-central-configuration.module\').then(m => m.BusinessCentralConfigurationModule)\\"\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class BusinessCentralMainRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralMappingModule","id":"module-BusinessCentralMappingModule-32c8fe71e501a474c800368edd02881b62180fff9547c2fb80f5a6cb147b83a8809d437e518a4762cb9a81ea7b87c64ee426b48d27bda6d92052c108ceae0cfe","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-main/business-central-mapping/business-central-mapping.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { BusinessCentralMappingRoutingModule } from \'./business-central-mapping-routing.module\';\\nimport { BusinessCentralBaseMappingComponent } from \'./business-central-base-mapping/business-central-base-mapping.component\';\\n\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    BusinessCentralMappingRoutingModule\\n  ]\\n})\\nexport class BusinessCentralMappingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"BusinessCentralMappingRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralMappingRoutingModule","id":"module-BusinessCentralMappingRoutingModule-27e06335587b4d3a8522671d55e9efdb790b9f2a29584c0219c88c180188a44c20dce9dfecc95c2f155431d5b6c494713ed5fb26fc0e990940f990a660dc26cb","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-main/business-central-mapping/business-central-mapping-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { BusinessCentralMappingComponent } from \'./business-central-mapping.component\';\\nimport { BusinessCentralBaseMappingComponent } from \'./business-central-base-mapping/business-central-base-mapping.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: BusinessCentralMappingComponent,\\n    children: [\\n      {\\n        path: \':source_field\',\\n        component: BusinessCentralBaseMappingComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class BusinessCentralMappingRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralModule","id":"module-BusinessCentralModule-5e7e0b9865837ee72b777de47478511aa0f516f8cc8b568c09505a4ac940646ab89ce05c2c1dc267e57cd508745fa235db62d38728100f102a88d729392c7a8e","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { BusinessCentralRoutingModule } from \'./business-central-routing.module\';\\nimport { BusinessCentralComponent } from \'./business-central.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    BusinessCentralComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BusinessCentralRoutingModule,\\n    SharedModule\\n  ]\\n})\\nexport class BusinessCentralModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BusinessCentralComponent"}]},{"type":"imports","elements":[{"name":"BusinessCentralRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralOnboardingModule","id":"module-BusinessCentralOnboardingModule-b9fa6096e079aef642f1c2e56b78cd8aff94b389b91fa80fb76f7052040bf76c52b35e2297d6a16cb1f677da804d49559cb1f9057d1a16cd6212f02571a92451","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { BusinessCentralOnboardingRoutingModule } from \'./business-central-onboarding-routing.module\';\\nimport { BusinessCentralOnboardingAdvancedSettingsComponent } from \'./business-central-onboarding-advanced-settings/business-central-onboarding-advanced-settings.component\';\\nimport { BusinessCentralOnboardingConnectorComponent } from \'./business-central-onboarding-connector/business-central-onboarding-connector.component\';\\nimport { BusinessCentralOnboardingLandingComponent } from \'./business-central-onboarding-landing/business-central-onboarding-landing.component\';\\nimport { BusinessCentralOnboardingExportSettingsComponent } from \'./business-central-onboarding-export-settings/business-central-onboarding-export-settings.component\';\\nimport { BusinessCentralOnboardingImportSettingsComponent } from \'./business-central-onboarding-import-settings/business-central-onboarding-import-settings.component\';\\nimport { BusinessCentralOnboardingComponent } from \'./business-central-onboarding.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { BusinessCentralSharedModule } from \'../business-central-shared/business-central-shared.module\';\\nimport { BusinessCentralOnboardingDoneComponent } from \'./business-central-onboarding-done/business-central-onboarding-done.component\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    BusinessCentralOnboardingLandingComponent,\\n    BusinessCentralOnboardingConnectorComponent,\\n    BusinessCentralOnboardingExportSettingsComponent,\\n    BusinessCentralOnboardingImportSettingsComponent,\\n    BusinessCentralOnboardingAdvancedSettingsComponent,\\n    BusinessCentralOnboardingDoneComponent,\\n    BusinessCentralOnboardingComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    BusinessCentralOnboardingRoutingModule,\\n    SharedModule,\\n    BusinessCentralSharedModule\\n  ]\\n})\\nexport class BusinessCentralOnboardingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BusinessCentralOnboardingAdvancedSettingsComponent"},{"name":"BusinessCentralOnboardingComponent"},{"name":"BusinessCentralOnboardingConnectorComponent"},{"name":"BusinessCentralOnboardingDoneComponent"},{"name":"BusinessCentralOnboardingExportSettingsComponent"},{"name":"BusinessCentralOnboardingImportSettingsComponent"},{"name":"BusinessCentralOnboardingLandingComponent"}]},{"type":"imports","elements":[{"name":"BusinessCentralOnboardingRoutingModule"},{"name":"BusinessCentralSharedModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralOnboardingRoutingModule","id":"module-BusinessCentralOnboardingRoutingModule-82eb75b76f25a16767a49ac6f8808c80c1c2d106fdb97e02a1d7607733e58f917b57f5b6366e1291b1bb8faeef8bef2d01a5a94879b3078aa78535975aca82b6","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { BusinessCentralOnboardingComponent } from \'./business-central-onboarding.component\';\\nimport { BusinessCentralOnboardingLandingComponent } from \'./business-central-onboarding-landing/business-central-onboarding-landing.component\';\\nimport { BusinessCentralOnboardingConnectorComponent } from \'./business-central-onboarding-connector/business-central-onboarding-connector.component\';\\nimport { BusinessCentralOnboardingExportSettingsComponent } from \'./business-central-onboarding-export-settings/business-central-onboarding-export-settings.component\';\\nimport { BusinessCentralOnboardingImportSettingsComponent } from \'./business-central-onboarding-import-settings/business-central-onboarding-import-settings.component\';\\nimport { BusinessCentralOnboardingDoneComponent } from \'./business-central-onboarding-done/business-central-onboarding-done.component\';\\nimport { BusinessCentralOnboardingAdvancedSettingsComponent } from \'./business-central-onboarding-advanced-settings/business-central-onboarding-advanced-settings.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: BusinessCentralOnboardingComponent,\\n    children: [\\n      {\\n        path: \'landing\',\\n        component: BusinessCentralOnboardingLandingComponent\\n      },\\n      {\\n        path: \'connector\',\\n        component: BusinessCentralOnboardingConnectorComponent\\n      },\\n      {\\n        path: \'export_settings\',\\n        component: BusinessCentralOnboardingExportSettingsComponent\\n      },\\n      {\\n        path: \'import_settings\',\\n        component: BusinessCentralOnboardingImportSettingsComponent\\n      },\\n      {\\n        path: \'advanced_settings\',\\n        component: BusinessCentralOnboardingAdvancedSettingsComponent\\n      },\\n      {\\n        path: \'done\',\\n        component: BusinessCentralOnboardingDoneComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class BusinessCentralOnboardingRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralRoutingModule","id":"module-BusinessCentralRoutingModule-10bd993e1993023284494653cc98729fac9e5316b7129363c6c64773d5791930991fec5e90a5d558763521ef64ccba522391d66d32f5954f834993d662741987","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { BusinessCentralComponent } from \'./business-central.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: BusinessCentralComponent,\\n    children: [\\n      {\\n        path: \'onboarding\',\\n        loadChildren: () => \\"import(\'./business-central-onboarding/business-central-onboarding.module\').then(m => m.BusinessCentralOnboardingModule)\\"\\n      },\\n      {\\n        path: \'main\',\\n        loadChildren: () => \\"import(\'./business-central-main/business-central-main.module\').then(m => m.BusinessCentralMainModule)\\"\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class BusinessCentralRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"BusinessCentralSharedModule","id":"module-BusinessCentralSharedModule-1083dda8f8c2a723746251d7295ee6380732648db66dd5828d00e1242c4fbef103dfa5343125de53bd70844dd717152cac8628755f50d9db1e1ed7b091ae8a47","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/business-central/business-central-shared/business-central-shared.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { BusinessCentralAdvancedSettingsComponent } from \'./business-central-advanced-settings/business-central-advanced-settings.component\';\\nimport { BusinessCentralExportSettingsComponent } from \'./business-central-export-settings/business-central-export-settings.component\';\\nimport { BusinessCentralImportSettingsComponent } from \'./business-central-import-settings/business-central-import-settings.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\n\\n@NgModule({\\n  declarations: [\\n    BusinessCentralExportSettingsComponent,\\n    BusinessCentralImportSettingsComponent,\\n    BusinessCentralAdvancedSettingsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    SharedModule\\n  ],\\n  exports: [\\n    BusinessCentralExportSettingsComponent,\\n    BusinessCentralImportSettingsComponent,\\n    BusinessCentralAdvancedSettingsComponent\\n  ]\\n})\\nexport class BusinessCentralSharedModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"BusinessCentralAdvancedSettingsComponent"},{"name":"BusinessCentralExportSettingsComponent"},{"name":"BusinessCentralImportSettingsComponent"}]},{"type":"imports","elements":[{"name":"SharedModule"}]},{"type":"exports","elements":[{"name":"BusinessCentralAdvancedSettingsComponent"},{"name":"BusinessCentralExportSettingsComponent"},{"name":"BusinessCentralImportSettingsComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ConfigurationModule","id":"module-ConfigurationModule-1ff420bad877d0ea58b76f717fbba5a0870331bf0c1c860e89c3b1b12f99e97446b3cf3a463e80dc53eca5b4c6663aa6b39e6da1d220b7de5e66b12df3d9e359","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/main/configuration/configuration.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { ConfigurationRoutingModule } from \'./configuration-routing.module\';\\nimport { ConfigurationAdvancedSettingComponent } from \'./configuration-advanced-setting/configuration-advanced-setting.component\';\\nimport { ConfigurationFieldSettingComponent } from \'./configuration-field-setting/configuration-field-setting.component\';\\nimport { ConfigurationExportSettingComponent } from \'./configuration-export-setting/configuration-export-setting.component\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    ConfigurationAdvancedSettingComponent,\\n    ConfigurationFieldSettingComponent,\\n    ConfigurationExportSettingComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    ConfigurationRoutingModule,\\n    SharedModule\\n  ]\\n})\\nexport class ConfigurationModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"ConfigurationAdvancedSettingComponent"},{"name":"ConfigurationExportSettingComponent"},{"name":"ConfigurationFieldSettingComponent"}]},{"type":"imports","elements":[{"name":"ConfigurationRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ConfigurationModule","id":"module-ConfigurationModule-dd2017ac3df4829b917a4438d0d741413ef16a44a012777adb697885afb205f1a068819d934f0dc1717b5eb724c40c011aded9ce0c31f5bdbfb25af784319e6f-1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/main/configuration/configuration.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { ConfigurationRoutingModule } from \'./configuration-routing.module\';\\n\\n\\n@NgModule({\\n  declarations: [\\n  ],\\n  imports: [\\n    CommonModule,\\n    ConfigurationRoutingModule\\n  ]\\n})\\nexport class ConfigurationModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"ConfigurationRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ConfigurationRoutingModule","id":"module-ConfigurationRoutingModule-fd17a10aac8d20bcb598e45c1e47f68bd635bf7977e4fcf058c7b710dd63d0c42e5d52d22b6cfff0f28a3d0b8b2725a53419aadc2f1d67a58bb00e492c98c6a4","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/main/configuration/configuration-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { ConfigurationAdvancedSettingComponent } from \'./configuration-advanced-setting/configuration-advanced-setting.component\';\\nimport { ConfigurationExportSettingComponent } from \'./configuration-export-setting/configuration-export-setting.component\';\\nimport { ConfigurationFieldSettingComponent } from \'./configuration-field-setting/configuration-field-setting.component\';\\nimport { ConfigurationComponent } from \'./configuration.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: ConfigurationComponent,\\n    children: [\\n      {\\n        path: \'export_settings\',\\n        component: ConfigurationExportSettingComponent\\n      },\\n      {\\n        path: \'field_mapping\',\\n        component: ConfigurationFieldSettingComponent\\n      },\\n      {\\n        path: \'advanced_settings\',\\n        component: ConfigurationAdvancedSettingComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class ConfigurationRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ConfigurationRoutingModule","id":"module-ConfigurationRoutingModule-da4a7db634396c979433077a04f66f5de2a223b917f42ecee5a7d3bd2a09b99547f53293e958ef9ad3cc2d266e03377e3d3fa97e1996d24d26e46d85eeb6787e-1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/main/configuration/configuration-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { ConfigurationComponent } from \'./configuration.component\';\\nimport { ConfigurationExportSettingComponent } from \'./configuration-export-setting/configuration-export-setting.component\';\\nimport { ConfigurationImportSettingComponent } from \'./configuration-import-setting/configuration-import-setting.component\';\\nimport { ConfigurationAdvancedSettingComponent } from \'./configuration-advanced-setting/configuration-advanced-setting.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: ConfigurationComponent,\\n    children: [\\n      {\\n        path: \'export_settings\',\\n        component: ConfigurationExportSettingComponent\\n      },\\n      {\\n        path: \'import_settings\',\\n        component: ConfigurationImportSettingComponent\\n      },\\n      {\\n        path: \'advanced_settings\',\\n        component: ConfigurationAdvancedSettingComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class ConfigurationRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"CoreModule","id":"module-CoreModule-b28211cf6cc667233939898adca1bbe03f751bc4673b74a66b3ddaf417f0207cdde9374b03419adb539d7a504fe23e52d48a7b0171eecf8b16849ee644bdb7a3","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/core/core.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\n\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule\\n  ]\\n})\\nexport class CoreModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DashboardModule","id":"module-DashboardModule-77acf7635ce1ad2439cede50929f07021cf06a3dcc4d5f3f732e03c7f6ef2f7349c89d5d3c5d8f42ea91787e895106df6442fc09dd19c0605e3309edd452ee44","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/main/dashboard/dashboard.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { DashboardRoutingModule } from \'./dashboard-routing.module\';\\nimport { TooltipModule } from \'primeng/tooltip\';\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    DashboardRoutingModule,\\n    SharedModule,\\n    TooltipModule\\n  ]\\n})\\nexport class DashboardModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"DashboardRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DashboardModule","id":"module-DashboardModule-5755af476cbc5ee44541ac091749fbb535cea2e37f03ab74160174d651840571eb36a08b7446f1833e406093d84c227f7a3088eb4a94a93b54ef1b2b91927b5b-1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/main/dashboard/dashboard.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { DashboardRoutingModule } from \'./dashboard-routing.module\';\\nimport { TabMenuModule } from \'primeng/tabmenu\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { SkeletonModule } from \'primeng/skeleton\';\\nimport { DashboardComponent } from \'./dashboard.component\';\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\nimport { DialogModule } from \'primeng/dialog\';\\nimport { TableModule } from \'primeng/table\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    DashboardComponent\\n  ],\\n  imports: [\\n    TabMenuModule,\\n    SharedModule,\\n    CommonModule,\\n    DashboardRoutingModule,\\n    SkeletonModule,\\n    DialogModule,\\n    TableModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n  ]\\n})\\nexport class DashboardModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"DashboardComponent"}]},{"type":"imports","elements":[{"name":"DashboardRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DashboardRoutingModule","id":"module-DashboardRoutingModule-a21ebb5e0fe374f82b184dc7fe60ec5f791acbea5abb156afad77307e27d3353a398674ad1ddbd6e1fcf668c972bc1801113a7ca60e9cdbaa57390b3cc00a162","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/main/dashboard/dashboard-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { DashboardComponent } from \'./dashboard.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: DashboardComponent\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class DashboardRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DashboardRoutingModule","id":"module-DashboardRoutingModule-a21ebb5e0fe374f82b184dc7fe60ec5f791acbea5abb156afad77307e27d3353a398674ad1ddbd6e1fcf668c972bc1801113a7ca60e9cdbaa57390b3cc00a162-1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/main/dashboard/dashboard-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { DashboardComponent } from \'./dashboard.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: DashboardComponent\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class DashboardRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ExportLogModule","id":"module-ExportLogModule-bebf683561ba6d9f405cdb2b5d901eca4988457a649cf5d1c516c398bac29b2daf2586d905af4500f9ee5be6118e2a124ddbb3762b6a4e8d852aed75296ec264","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/main/export-log/export-log.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { ExportLogRoutingModule } from \'./export-log-routing.module\';\\nimport { ExportLogComponent } from \'./export-log.component\';\\nimport { TableModule } from \'primeng/table\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\nimport { DialogModule } from \'primeng/dialog\';\\nimport { TabMenuModule } from \'primeng/tabmenu\';\\nimport { SkipExportLogComponent } from \'./skip-export-log/skip-export-log.component\';\\nimport { CompletedExportLogComponent } from \'./completed-export-log/completed-export-log.component\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    ExportLogComponent,\\n    SkipExportLogComponent,\\n    CompletedExportLogComponent\\n  ],\\n  imports: [\\n    TabMenuModule,\\n    DialogModule,\\n    SharedModule,\\n    CommonModule,\\n    ExportLogRoutingModule,\\n    TableModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n  ]\\n})\\nexport class ExportLogModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"CompletedExportLogComponent"},{"name":"ExportLogComponent"},{"name":"SkipExportLogComponent"}]},{"type":"imports","elements":[{"name":"ExportLogRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"ExportLogRoutingModule","id":"module-ExportLogRoutingModule-825076f48b1c6280b1f4de6068db424053a0edf7745ca248c72511bb1d0dba7cf5a1df82874a3a33ec4697ff3211a67efe0d0fdf73f2fce285ce353f93be38b1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/main/export-log/export-log-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { ExportLogComponent } from \'./export-log.component\';\\nimport { SkipExportLogComponent } from \'./skip-export-log/skip-export-log.component\';\\nimport { CompletedExportLogComponent } from \'./completed-export-log/completed-export-log.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: ExportLogComponent,\\n    children: [\\n      {\\n        path: \'complete_export_log\',\\n        component: CompletedExportLogComponent\\n      },\\n      {\\n        path: \'skip_export_log\',\\n        component: SkipExportLogComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class ExportLogRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"GustoModule","id":"module-GustoModule-b3546907d29af0992b655aae3f5c4fd539ef915985d448012bc1e2a082af4dce6fdda544982d06154261b5cd87ea70da49cf1698cf7e0f35834f3f6c81dbaf25","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/gusto/gusto.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { GustoRoutingModule } from \'./gusto-routing.module\';\\nimport { GustoComponent } from \'./gusto.component\';\\nimport { GustoConfigurationComponent } from \'./gusto-configuration/gusto-configuration.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { SkeletonModule } from \'primeng/skeleton\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\nimport { ButtonModule } from \'primeng/button\';\\nimport { DropdownModule } from \'primeng/dropdown\';\\nimport { InputSwitchModule } from \'primeng/inputswitch\';\\nimport { InputTextModule } from \'primeng/inputtext\';\\nimport { MultiSelectModule } from \'primeng/multiselect\';\\nimport { ProgressSpinnerModule } from \'primeng/progressspinner\';\\nimport { ToastModule } from \'primeng/toast\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    GustoComponent,\\n    GustoConfigurationComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    GustoRoutingModule,\\n    SharedModule,\\n    InputTextModule,\\n    ButtonModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    InputSwitchModule,\\n    DropdownModule,\\n    MultiSelectModule,\\n    SkeletonModule,\\n    ProgressSpinnerModule,\\n    ToastModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n\\n  ]\\n})\\nexport class GustoModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"GustoComponent"},{"name":"GustoConfigurationComponent"}]},{"type":"imports","elements":[{"name":"GustoRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"GustoRoutingModule","id":"module-GustoRoutingModule-303a1aa09528a7717f38240198861951728fc547499a77b336b2b23874e70c641c2088c1308c7bba5a66a8801a65f84f934adee05948500c0e54635c33b6ed00","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/gusto/gusto-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { GustoComponent } from \'./gusto.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: GustoComponent\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class GustoRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"IntegrationsModule","id":"module-IntegrationsModule-1c22504969d50d890b1b2aa7a66c64e3ba07cc4501192d570fcfa859161c7cae2634dd85115655816a0d4d3483d0905a48d9f762653b1178b53b657a3ed247a8","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/integrations.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { IntegrationsRoutingModule } from \'./integrations-routing.module\';\\nimport { IntegrationsComponent } from \'./integrations.component\';\\nimport { LandingComponent } from \'./landing/landing.component\';\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\nimport { QbdComponent } from \'./qbd/qbd.component\';\\nimport { SharedModule } from \'../shared/shared.module\';\\nimport { Sage300Component } from \'./sage300/sage300.component\';\\nimport { BusinessCentralComponent } from \'./business-central/business-central.component\';\\n\\n@NgModule({\\n  declarations: [\\n    IntegrationsComponent,\\n    LandingComponent,\\n    QbdComponent,\\n    Sage300Component\\n  ],\\n  imports: [\\n    CommonModule,\\n    IntegrationsRoutingModule,\\n    SharedModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n  ]\\n})\\nexport class IntegrationsModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"IntegrationsComponent"},{"name":"LandingComponent"},{"name":"QbdComponent"},{"name":"Sage300Component"}]},{"type":"imports","elements":[{"name":"IntegrationsRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"IntegrationsRoutingModule","id":"module-IntegrationsRoutingModule-9105a728a5cb18b5374fe3f0fb3e9e1fc8502d23b1044a9c9dca471d36d67d45f3cf1debba0ae45dc394886329b2080fa549887070e1694337deeb9eeaff7a03","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/integrations-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { IntegrationsComponent } from \'./integrations.component\';\\nimport { LandingComponent } from \'./landing/landing.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: IntegrationsComponent,\\n    children: [\\n      {\\n        path: \'landing\',\\n        component: LandingComponent\\n      },\\n      {\\n        path: \'bamboo_hr\',\\n        loadChildren: () => \\"import(\'./bamboo-hr/bamboo-hr.module\').then(m => m.BambooHrModule)\\"\\n      },\\n      {\\n        path: \'qbd\',\\n        loadChildren: () => \\"import(\'./qbd/qbd.module\').then(m => m.QbdModule)\\"\\n      },\\n      {\\n        path: \'travelperk\',\\n        loadChildren: () => \\"import(\'./travelperk/travelperk.module\').then(m => m.TravelperkModule)\\"\\n      },\\n      {\\n        path: \'gusto\',\\n        loadChildren: () => \\"import(\'./gusto/gusto.module\').then(m => m.GustoModule)\\"\\n      },\\n      {\\n        path: \'intacct\',\\n        loadChildren: () => \\"import(\'./si/si.module\').then(m => m.SiModule)\\"\\n      },\\n      {\\n        path: \'sage300\',\\n        loadChildren: () => \\"import(\'./sage300/sage300.module\').then(m => m.Sage300Module)\\"\\n      },\\n      {\\n        path: \'qbo\',\\n        loadChildren: () => \\"import(\'./qbo/qbo.module\').then(m => m.QboModule)\\"\\n      },\\n      {\\n        path: \'business_central\',\\n        loadChildren: () => \\"import(\'./business-central/business-central.module\').then(m => m.BusinessCentralModule)\\"\\n      },\\n      {\\n        path: \'oauth_callback\',\\n        loadChildren: () => \\"import(\'./oauth-callback/oauth-callback.module\').then(m => m.OauthCallbackModule)\\"\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class IntegrationsRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MainModule","id":"module-MainModule-73ed8313c457d55963eb3af211ca5d5e562b5e4311b737e5bd252dcaa77419cc250c0813bcac88dfacbb0d7c5e44401fe7f90843fe5f2f78ec01b64281e18c63","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/main/main.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { MainRoutingModule } from \'./main-routing.module\';\\nimport { ConfigurationComponent } from \'./configuration/configuration.component\';\\nimport { DashboardComponent } from \'./dashboard/dashboard.component\';\\nimport { MappingComponent } from \'./mapping/mapping.component\';\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\nimport { TabMenuModule } from \'primeng/tabmenu\';\\nimport { DropdownModule } from \'primeng/dropdown\';\\nimport { TableModule } from \'primeng/table\';\\n\\n@NgModule({\\n  declarations: [\\n    ConfigurationComponent,\\n    DashboardComponent,\\n    MappingComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    SharedModule,\\n    TabMenuModule,\\n    DropdownModule,\\n    TableModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' }),\\n    MainRoutingModule\\n  ]\\n})\\nexport class MainModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"ConfigurationComponent"},{"name":"DashboardComponent"},{"name":"MappingComponent"}]},{"type":"imports","elements":[{"name":"MainRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MainModule","id":"module-MainModule-f67f55ca0e37011fdb78167c6e1218494d420a506800329139e9d5a9d46783eee46c5a9d04d5817a8d8e4b35ecc5338d06f29a4c4c893193fc13c58719291f29-1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/main/main.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { MainRoutingModule } from \'./main-routing.module\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { TabMenuModule } from \'primeng/tabmenu\';\\nimport { MappingComponent } from \'./mapping/mapping.component\';\\nimport { ButtonModule } from \'primeng/button\';\\n\\n@NgModule({\\n  declarations: [\\n    MappingComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    TabMenuModule,\\n    ButtonModule,\\n    MainRoutingModule,\\n    SharedModule\\n  ]\\n})\\nexport class MainModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"MainRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MainRoutingModule","id":"module-MainRoutingModule-23c05837cfa053b71ca28b4009601efd1f396a0d0d6e26d0bad35bf09b1780e1e1dfd35ab01bb628c59ca0799d82e61af86d32b7cd7d75244fca1470ea41345d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/main/main-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { MainComponent } from \'./main.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: MainComponent,\\n    children: [\\n      {\\n        path: \'configuration\',\\n        loadChildren: () => \\"import(\'./configuration/configuration.module\').then(m => m.ConfigurationModule)\\"\\n      },\\n      {\\n        path: \'dashboard\',\\n        loadChildren: () => \\"import(\'./dashboard/dashboard.module\').then(m => m.DashboardModule)\\"\\n      },\\n      {\\n        path: \'mapping\',\\n        loadChildren: () => \\"import(\'./mapping/mapping.module\').then(m => m.MappingModule)\\"\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class MainRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MainRoutingModule","id":"module-MainRoutingModule-70be3623955458810a13bb9c6a9e76e135791e291eafc64919909088869ce84090cfaf5a670ae6867b3a256e217f4fa467c074c647913d470b1fcd3b37c3b83e-1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/main/main-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { MainComponent } from \'./main.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: MainComponent,\\n    children: [\\n      {\\n        path: \'dashboard\',\\n        loadChildren: () => \\"import(\'./dashboard/dashboard.module\').then(m => m.DashboardModule)\\"\\n      },\\n      {\\n        path: \'export_log\',\\n        loadChildren: () => \\"import(\'./export-log/export-log.module\').then(m => m.ExportLogModule)\\"\\n      },\\n      {\\n        path: \'mapping\',\\n        loadChildren: () => \\"import(\'./mapping/mapping.module\').then(m => m.MappingModule)\\"\\n      },\\n      {\\n        path: \'configuration\',\\n        loadChildren: () => \\"import(\'./configuration/configuration.module\').then(m => m.ConfigurationModule)\\"\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    RouterModule.forChild(routes)\\n  ],\\n  exports: [RouterModule]\\n})\\nexport class MainRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MappingModule","id":"module-MappingModule-bc8dcf9a6f949a9c70a7e06b02e8dc2a00a0c6942b1fd79f8575b70f5d87a5d7fcd7c01ee75d60e957c5566c51356765083f35b382155c116a7c964f5ac44357","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/main/mapping/mapping.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { MappingRoutingModule } from \'./mapping-routing.module\';\\n\\nimport { TableModule } from \'primeng/table\';\\nimport { TabMenuModule } from \'primeng/tabmenu\';\\nimport { GenericMappingComponent } from \'./generic-mapping/generic-mapping.component\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    GenericMappingComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    TableModule,\\n    TabMenuModule,\\n    SharedModule,\\n    MappingRoutingModule\\n  ]\\n})\\nexport class MappingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"GenericMappingComponent"}]},{"type":"imports","elements":[{"name":"MappingRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MappingModule","id":"module-MappingModule-07f043583f0f1368a0a8eaa784e214a8de27156adaae65614ac133c974a71061e47d49afec608762bbc61966137d78d2afa7d81df7d28764a24b5090de1b52b4-1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/main/mapping/mapping.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { MappingRoutingModule } from \'./mapping-routing.module\';\\nimport { CategoryMappingComponent } from \'./category-mapping/category-mapping.component\';\\nimport { EmployeeMappingComponent } from \'./employee-mapping/employee-mapping.component\';\\nimport { GenericMappingComponent } from \'./generic-mapping/generic-mapping.component\';\\nimport { TabMenuModule } from \'primeng/tabmenu\';\\nimport { TableModule } from \'primeng/table\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    CategoryMappingComponent,\\n    EmployeeMappingComponent,\\n    GenericMappingComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    TableModule,\\n    TabMenuModule,\\n    SharedModule,\\n    MappingRoutingModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n  ]\\n})\\nexport class MappingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"CategoryMappingComponent"},{"name":"EmployeeMappingComponent"}]},{"type":"imports","elements":[{"name":"MappingRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MappingRoutingModule","id":"module-MappingRoutingModule-f05aac246ddddf0930bfc835b867cd36a608219247a30a624bef476b0342cbd730c88179e2777544e68b576e6fbf3a857103b5f2e03419516330cf20a534d13e","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/main/mapping/mapping-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { MappingComponent } from \'./mapping.component\';\\nimport { GenericMappingComponent } from \'src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: MappingComponent,\\n    children: [\\n      {\\n        path: \':source_field\',\\n        component: GenericMappingComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class MappingRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"MappingRoutingModule","id":"module-MappingRoutingModule-331a64eab8b86275273f1b62456d5723e28bc88030738c98eb083c3e52fb1adb832a184951a1f26fc2e6f865e3287449db43575f1d3a6a28ffb54d67b02f79b8-1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/main/mapping/mapping-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { MappingComponent } from \'./mapping.component\';\\nimport { EmployeeMappingComponent } from \'./employee-mapping/employee-mapping.component\';\\nimport { CategoryMappingComponent } from \'./category-mapping/category-mapping.component\';\\nimport { GenericMappingComponent } from \'./generic-mapping/generic-mapping.component\';\\n\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: MappingComponent,\\n    children: [\\n      {\\n        path: \'employee_mapping\',\\n        component: EmployeeMappingComponent\\n      },\\n      {\\n        path: \'category_mapping\',\\n        component: CategoryMappingComponent\\n      },\\n      {\\n        path: \':source_field\',\\n        component: GenericMappingComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class MappingRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"OauthCallbackModule","id":"module-OauthCallbackModule-c5ca6bfdd784dfda150782cfb6c7a19230a0930ede372b64624339d0fb7bd11975e9d7131e0c38a9a277754f21d447ce6b93982ec41597b4df312adfcff9db4d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/oauth-callback/oauth-callback.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { OauthCallbackRoutingModule } from \'./oauth-callback-routing.module\';\\nimport { OauthCallbackComponent } from \'./oauth-callback.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    OauthCallbackComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    OauthCallbackRoutingModule,\\n    SharedModule\\n  ]\\n})\\nexport class OauthCallbackModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"OauthCallbackComponent"}]},{"type":"imports","elements":[{"name":"OauthCallbackRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"OauthCallbackRoutingModule","id":"module-OauthCallbackRoutingModule-4045e0e6ea4125455ede8ffc68ed8eead5ace36299cc581c00f0c423318489bbd056945ec462370d2927af5f5ac81bfba038b713b2fc571ea7f581c9e628cb8c","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/oauth-callback/oauth-callback-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { OauthCallbackComponent } from \'./oauth-callback.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: OauthCallbackComponent\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class OauthCallbackRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"OauthModule","id":"module-OauthModule-6ee5dc38cd765da44b04dfd0a98272ae2c94a4cd9db457fbf9be0bed5e5c39de75a715f4bf8768a0506a589ae87490ffb9ba615167f88027e8e28b5efec6a21c","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/oauth/oauth.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { OauthRoutingModule } from \'./oauth-routing.module\';\\nimport { OauthComponent } from \'./oauth.component\';\\nimport { OauthTravelperkComponent } from \'./oauth-travelperk/oauth-travelperk.component\';\\nimport { SharedModule } from \'../shared/shared.module\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    OauthComponent,\\n    OauthTravelperkComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    OauthRoutingModule,\\n    SharedModule\\n  ]\\n})\\nexport class OauthModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"OauthComponent"},{"name":"OauthTravelperkComponent"}]},{"type":"imports","elements":[{"name":"OauthRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"OauthRoutingModule","id":"module-OauthRoutingModule-22ea5d63ff5b6ff10aed2f370be91e5318eb9755c8b77a4cd3a13d859370e270dc42d93e0ac988b9928a291bbb1e096480fc1589250772ce22f082585e1bf118","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/oauth/oauth-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { OauthComponent } from \'./oauth.component\';\\nimport { OauthTravelperkComponent } from \'./oauth-travelperk/oauth-travelperk.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: OauthComponent,\\n    children: [\\n      {\\n        path: \'travelperk\',\\n        component: OauthTravelperkComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class OauthRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"OnboardingModule","id":"module-OnboardingModule-2c953426b62bcca2a2b8b752284b86f9fa7e22f02d168287e1b97941bfdcea7e74f2e61cf622f4d1cf4534cc8113886a979a4ede1b79da061f8d71a02e5e680c","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/onboarding/onboarding.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { OnboardingRoutingModule } from \'./onboarding-routing.module\';\\nimport { OnboardingDoneComponent } from \'./onboarding-done/onboarding-done.component\';\\nimport { OnboardingExportSettingComponent } from \'./onboarding-export-setting/onboarding-export-setting.component\';\\nimport { OnboardingFieldSettingComponent } from \'./onboarding-field-setting/onboarding-field-setting.component\';\\nimport { OnboardingAdvancedSettingComponent } from \'./onboarding-advanced-setting/onboarding-advanced-setting.component\';\\nimport { LandingComponent } from \'./onboarding-landing/landing.component\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    OnboardingDoneComponent,\\n    OnboardingExportSettingComponent,\\n    OnboardingFieldSettingComponent,\\n    OnboardingAdvancedSettingComponent,\\n    LandingComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    OnboardingRoutingModule,\\n    SharedModule\\n  ]\\n})\\nexport class OnboardingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"LandingComponent"},{"name":"OnboardingAdvancedSettingComponent"},{"name":"OnboardingDoneComponent"},{"name":"OnboardingExportSettingComponent"},{"name":"OnboardingFieldSettingComponent"}]},{"type":"imports","elements":[{"name":"OnboardingRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"OnboardingModule","id":"module-OnboardingModule-b3614c60e350d6baa99a8d451105974b70273addf15a36e4652fbfb2ff7040f6f33bfa2d2e460f1fc1b1eadb59cf031df7faf022b766d018492855a98bad8eba-1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/onboarding/onboarding.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { OnboardingRoutingModule } from \'./onboarding-routing.module\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { OnboardingIntacctConnectorComponent } from \'./onboarding-intacct-connector/onboarding-intacct-connector.component\';\\nimport { OnboardingLandingComponent } from \'./onboarding-landing/onboarding-landing.component\';\\nimport { OnboardingComponent } from \'./onboarding.component\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { OnboardingDoneComponent } from \'./onboarding-done/onboarding-done.component\';\\nimport { OnboardingExportSettingComponent } from \'./onboarding-export-setting/onboarding-export-setting.component\';\\nimport { OnboardingAdvancedSettingComponent } from \'./onboarding-advanced-setting/onboarding-advanced-setting.component\';\\nimport { OnboardingImportSettingComponent } from \'./onboarding-import-setting/onboarding-import-setting.component\';\\n\\n@NgModule({\\n  declarations: [\\n    OnboardingIntacctConnectorComponent,\\n    OnboardingLandingComponent,\\n    OnboardingComponent,\\n    OnboardingComponent,\\n    OnboardingDoneComponent,\\n    OnboardingImportSettingComponent,\\n    OnboardingExportSettingComponent,\\n    OnboardingAdvancedSettingComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    OnboardingRoutingModule,\\n    SharedModule,\\n    FormsModule,\\n    ReactiveFormsModule\\n  ]\\n})\\nexport class OnboardingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"OnboardingAdvancedSettingComponent"},{"name":"OnboardingComponent"},{"name":"OnboardingComponent"},{"name":"OnboardingExportSettingComponent"},{"name":"OnboardingImportSettingComponent"},{"name":"OnboardingIntacctConnectorComponent"},{"name":"OnboardingLandingComponent"}]},{"type":"imports","elements":[{"name":"OnboardingRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"OnboardingRoutingModule","id":"module-OnboardingRoutingModule-290bcddfa9dc7f4209e5ce5274aae3fb41a836113c176bcc8c1451b30a40ed57ada41b4297f12a4d3808dfc631ff0e8c5872bea3d3a00e50a11308dc3dd3c6a2","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/onboarding/onboarding-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { OnboardingAdvancedSettingComponent } from \'./onboarding-advanced-setting/onboarding-advanced-setting.component\';\\nimport { OnboardingDoneComponent } from \'./onboarding-done/onboarding-done.component\';\\nimport { OnboardingExportSettingComponent } from \'./onboarding-export-setting/onboarding-export-setting.component\';\\nimport { OnboardingFieldSettingComponent } from \'./onboarding-field-setting/onboarding-field-setting.component\';\\nimport { LandingComponent } from \'./onboarding-landing/landing.component\';\\nimport { OnboardingComponent } from \'./onboarding.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: OnboardingComponent,\\n    children: [\\n      {\\n        path: \'landing\',\\n        component: LandingComponent\\n      },\\n      {\\n        path: \'export_settings\',\\n        component: OnboardingExportSettingComponent\\n      },\\n      {\\n        path: \'field_mappings\',\\n        component: OnboardingFieldSettingComponent\\n      },\\n      {\\n        path: \'advanced_settings\',\\n        component: OnboardingAdvancedSettingComponent\\n      },\\n      {\\n        path: \'done\',\\n        component: OnboardingDoneComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class OnboardingRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"OnboardingRoutingModule","id":"module-OnboardingRoutingModule-d5780e4ce3e35e7545cec3fd3160bc3d459cfad618c7033a846d042de27e5d2857b26e54bce38c5ce2eb9306888832bd3e47725f6c3326b8e732b9a9eb2be53f-1","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/onboarding/onboarding-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { OnboardingLandingComponent } from \'./onboarding-landing/onboarding-landing.component\';\\nimport { OnboardingExportSettingComponent } from \'./onboarding-export-setting/onboarding-export-setting.component\';\\nimport { OnboardingImportSettingComponent } from \'./onboarding-import-setting/onboarding-import-setting.component\';\\nimport { OnboardingAdvancedSettingComponent } from \'./onboarding-advanced-setting/onboarding-advanced-setting.component\';\\nimport { OnboardingDoneComponent } from \'./onboarding-done/onboarding-done.component\';\\nimport { OnboardingComponent } from \'./onboarding.component\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { OnboardingIntacctConnectorComponent } from \'./onboarding-intacct-connector/onboarding-intacct-connector.component\';\\n\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: OnboardingComponent,\\n    children: [\\n      {\\n        path: \'landing\',\\n        component: OnboardingLandingComponent\\n      },\\n      {\\n        path: \'connector\',\\n        component: OnboardingIntacctConnectorComponent\\n      },\\n      {\\n        path: \'export_settings\',\\n        component: OnboardingExportSettingComponent\\n      },\\n      {\\n        path: \'import_settings\',\\n        component: OnboardingImportSettingComponent\\n      },\\n      {\\n        path: \'advanced_settings\',\\n        component: OnboardingAdvancedSettingComponent\\n      },\\n      {\\n        path: \'done\',\\n        component: OnboardingDoneComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class OnboardingRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QbdModule","id":"module-QbdModule-5630ace1eb3b9e93ef2f5732fedaf7c773f5c914c9ec8579f4c273e825b54e8754ebcddb15641b34ce047f86ae6ff6627d65e4144f83a1acb0c0f7a739259ccf","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/qbd.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { QbdRoutingModule } from \'./qbd-routing.module\';\\nimport { MainComponent } from \'./main/main.component\';\\nimport { OnboardingComponent } from \'./onboarding/onboarding.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\nimport { TabMenuModule } from \'primeng/tabmenu\';\\nimport { DropdownModule } from \'primeng/dropdown\';\\nimport { TableModule } from \'primeng/table\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    MainComponent,\\n    OnboardingComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    QbdRoutingModule,\\n    SharedModule,\\n    TabMenuModule,\\n    DropdownModule,\\n    TableModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n  ]\\n})\\nexport class QbdModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"MainComponent"},{"name":"OnboardingComponent"}]},{"type":"imports","elements":[{"name":"QbdRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QbdRoutingModule","id":"module-QbdRoutingModule-f067ff1b6718fa8b07c48638268790ce78cafc7e558198b604041a706ae766dcd06524a16ca6f465fda162fcd466ed954f91b6e248cfb5da3024ca3f14df2215","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbd/qbd-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { QbdComponent } from \'./qbd.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: QbdComponent,\\n    children: [\\n      {\\n        path: \'onboarding\',\\n        loadChildren: () => \\"import(\'./onboarding/onboarding.module\').then(m => m.OnboardingModule)\\"\\n      },\\n      {\\n        path: \'main\',\\n        loadChildren: () => \\"import(\'./main/main.module\').then(m => m.MainModule)\\"\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class QbdRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboConfigurationModule","id":"module-QboConfigurationModule-d48851c5b8779d1d4547e9b4ada2b13674e6225de20b8346257ebbcea7ff6409b3d6f1fa41d4ebc48a5c745608b29633126abe1056e135786e192106431ccc79","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-main/qbo-configuration/qbo-configuration.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { QboConfigurationRoutingModule } from \'./qbo-configuration-routing.module\';\\n\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    QboConfigurationRoutingModule\\n  ]\\n})\\nexport class QboConfigurationModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"QboConfigurationRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboConfigurationRoutingModule","id":"module-QboConfigurationRoutingModule-021357a4018c999c0835ffdfbe875e445ae38e2c8a2b6a00121691e5f59bbe71c9cc1c8e05fd48d002a3fcffe8476461521ec666394cb69fa8f0c5ca82834cde","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-main/qbo-configuration/qbo-configuration-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { QboConfigurationComponent } from \'./qbo-configuration.component\';\\nimport { QboEmployeeSettingsComponent } from \'../../qbo-shared/qbo-employee-settings/qbo-employee-settings.component\';\\nimport { QboExportSettingsComponent } from \'../../qbo-shared/qbo-export-settings/qbo-export-settings.component\';\\nimport { QboImportSettingsComponent } from \'../../qbo-shared/qbo-import-settings/qbo-import-settings.component\';\\nimport { QboAdvancedSettingsComponent } from \'../../qbo-shared/qbo-advanced-settings/qbo-advanced-settings.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: QboConfigurationComponent,\\n    children: [\\n      {\\n        path: \'employee_settings\',\\n        component: QboEmployeeSettingsComponent\\n      },\\n      {\\n        path: \'export_settings\',\\n        component: QboExportSettingsComponent\\n      },\\n      {\\n        path: \'import_settings\',\\n        component: QboImportSettingsComponent\\n      },\\n      {\\n        path: \'advanced_settings\',\\n        component: QboAdvancedSettingsComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class QboConfigurationRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboDashboardModule","id":"module-QboDashboardModule-39e1db7bd466974595d4b077e6f9b57977caee6e83d9418196507e78b6efc1741f35fcb03a74cade850e0a0aab09e0643c0bba80bb0bc5a2c65b24e08e2e4547","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-main/qbo-dashboard/qbo-dashboard.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { QboDashboardRoutingModule } from \'./qbo-dashboard-routing.module\';\\n\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    QboDashboardRoutingModule\\n  ]\\n})\\nexport class QboDashboardModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"QboDashboardRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboDashboardRoutingModule","id":"module-QboDashboardRoutingModule-971d823159fe1fef9645a6c64ea2b5ade964f9010ac0875a322ed0028e4bedaeebcf9835b883a53523e296362029dac13f2340dc3437ae42c482d76542877d33","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-main/qbo-dashboard/qbo-dashboard-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { QboDashboardComponent } from \'./qbo-dashboard.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: QboDashboardComponent\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class QboDashboardRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboExportLogModule","id":"module-QboExportLogModule-08a5e227d929e52b8f24cacf5fb8b3233df557b21a8e3d19d1224fefcee2f7cb7a4ebed569f38a1ad979c5673fa4856c720d0c7dacabc56946c49e91413a8cde","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-main/qbo-export-log/qbo-export-log.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { QboExportLogRoutingModule } from \'./qbo-export-log-routing.module\';\\n\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    QboExportLogRoutingModule\\n  ]\\n})\\nexport class QboExportLogModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"QboExportLogRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboExportLogRoutingModule","id":"module-QboExportLogRoutingModule-4aafb1252e20444ea792dafcea2155fb708320716c726f0f62b1a15b8ebc7c2e396c51da8f35e96a025955874e15343afc1577710873e364fa8f7ea9a5fba779","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-main/qbo-export-log/qbo-export-log-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { QboExportLogComponent } from \'./qbo-export-log.component\';\\nimport { QboCompleteExportLogComponent } from \'./qbo-complete-export-log/qbo-complete-export-log.component\';\\nimport { QboSkippedExportLogComponent } from \'./qbo-skipped-export-log/qbo-skipped-export-log.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: QboExportLogComponent,\\n    children: [\\n      {\\n        path: \'complete\',\\n        component: QboCompleteExportLogComponent\\n      },\\n      {\\n        path: \'skipped\',\\n        component: QboSkippedExportLogComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class QboExportLogRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboMainModule","id":"module-QboMainModule-372d19d0470a369312b3ccc1e34ec160838385e94093459466b724612797cf60ffb558dda1e9d03797d2df72b221349b4a2c9ad8353302f894d195197ba859d7","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-main/qbo-main.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { QboMainRoutingModule } from \'./qbo-main-routing.module\';\\nimport { QboMainComponent } from \'./qbo-main.component\';\\nimport { QboDashboardComponent } from \'./qbo-dashboard/qbo-dashboard.component\';\\nimport { QboExportLogComponent } from \'./qbo-export-log/qbo-export-log.component\';\\nimport { QboCompleteExportLogComponent } from \'./qbo-export-log/qbo-complete-export-log/qbo-complete-export-log.component\';\\nimport { QboSkippedExportLogComponent } from \'./qbo-export-log/qbo-skipped-export-log/qbo-skipped-export-log.component\';\\nimport { QboMappingComponent } from \'./qbo-mapping/qbo-mapping.component\';\\nimport { QboBaseMappingComponent } from \'./qbo-mapping/qbo-base-mapping/qbo-base-mapping.component\';\\nimport { QboConfigurationComponent } from \'./qbo-configuration/qbo-configuration.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    QboMainComponent,\\n    QboDashboardComponent,\\n    QboExportLogComponent,\\n    QboCompleteExportLogComponent,\\n    QboSkippedExportLogComponent,\\n    QboMappingComponent,\\n    QboBaseMappingComponent,\\n    QboConfigurationComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    QboMainRoutingModule,\\n    SharedModule\\n  ]\\n})\\nexport class QboMainModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"QboBaseMappingComponent"},{"name":"QboCompleteExportLogComponent"},{"name":"QboConfigurationComponent"},{"name":"QboDashboardComponent"},{"name":"QboExportLogComponent"},{"name":"QboMainComponent"},{"name":"QboMappingComponent"},{"name":"QboSkippedExportLogComponent"}]},{"type":"imports","elements":[{"name":"QboMainRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboMainRoutingModule","id":"module-QboMainRoutingModule-8b31963cbd1e5bb9db1de0da8e54c55c9b5dd570fa0e29df10a976341b3b5b569f8ab11661ad65fbcd3f53a27e5bb8460d910407285966bd58f5a50b8b82c85a","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-main/qbo-main-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { QboMainComponent } from \'./qbo-main.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: QboMainComponent,\\n    children: [\\n      {\\n        path: \'dashboard\',\\n        loadChildren: () => \\"import(\'./qbo-dashboard/qbo-dashboard.module\').then(m => m.QboDashboardModule)\\"\\n      },\\n      {\\n        path: \'export_log\',\\n        loadChildren: () => \\"import(\'./qbo-export-log/qbo-export-log.module\').then(m => m.QboExportLogModule)\\"\\n      },\\n      {\\n        path: \'mapping\',\\n        loadChildren: () => \\"import(\'./qbo-mapping/qbo-mapping.module\').then(m => m.QboMappingModule)\\"\\n      },\\n      {\\n        path: \'configuration\',\\n        loadChildren: () => \\"import(\'./qbo-configuration/qbo-configuration.module\').then(m => m.QboConfigurationModule)\\"\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class QboMainRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboMappingModule","id":"module-QboMappingModule-0755d964a3c147ec657f8c3e78a61873e74de5509b3c4fe06afc1effa6dccaf9498090c94f9af4c20577ae927d509a554fdcbf7266451b37dbc4579bd1bbec99","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-main/qbo-mapping/qbo-mapping.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { QboMappingRoutingModule } from \'./qbo-mapping-routing.module\';\\n\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    QboMappingRoutingModule\\n  ]\\n})\\nexport class QboMappingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"QboMappingRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboMappingRoutingModule","id":"module-QboMappingRoutingModule-98d43062766a0071d4578b8e0d3d854d36768b81fbdaa38417e922b06ec584a188819cd33b82b693423077c1a6fc9cd505bcfadd28156b3b43b174b9c871f02d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-main/qbo-mapping/qbo-mapping-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { QboMappingComponent } from \'./qbo-mapping.component\';\\nimport { QboBaseMappingComponent } from \'./qbo-base-mapping/qbo-base-mapping.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: QboMappingComponent,\\n    children: [\\n      {\\n        path: \':source_field\',\\n        component: QboBaseMappingComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class QboMappingRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboModule","id":"module-QboModule-f9aa2c3b43fe94a41ac8af4c0cdaebea016005299371606b23b76fb1a7e91227642aff840dec97651632ea937cbf7115984f17da1777265823782ef8df0f6d90","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { QboRoutingModule } from \'./qbo-routing.module\';\\nimport { QboComponent } from \'./qbo.component\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    QboComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    QboRoutingModule\\n  ]\\n})\\nexport class QboModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"QboComponent"}]},{"type":"imports","elements":[{"name":"QboRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboOnboardingModule","id":"module-QboOnboardingModule-1df4b6dde3f56126a3633dfcb0d732f8d12ecbb13a044371b367091e8018b41d023fc47f7a9d3a720de033681b4706aefb846f3f00f0f5d29f927abf9b3f3f1b","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { InputSwitchModule } from \'primeng/inputswitch\';\\nimport { TooltipModule } from \'primeng/tooltip\';\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\n\\nimport { QboOnboardingRoutingModule } from \'./qbo-onboarding-routing.module\';\\nimport { QboOnboardingComponent } from \'./qbo-onboarding.component\';\\nimport { QboOnboardingLandingComponent } from \'./qbo-onboarding-landing/qbo-onboarding-landing.component\';\\nimport { QboOnboardingConnectorComponent } from \'./qbo-onboarding-connector/qbo-onboarding-connector.component\';\\nimport { QboOnboardingEmployeeSettingsComponent } from \'./qbo-onboarding-employee-settings/qbo-onboarding-employee-settings.component\';\\nimport { QboOnboardingExportSettingsComponent } from \'./qbo-onboarding-export-settings/qbo-onboarding-export-settings.component\';\\nimport { QboOnboardingImportSettingsComponent } from \'./qbo-onboarding-import-settings/qbo-onboarding-import-settings.component\';\\nimport { QboOnboardingAdvancedSettingsComponent } from \'./qbo-onboarding-advanced-settings/qbo-onboarding-advanced-settings.component\';\\nimport { QboOnboardingDoneComponent } from \'./qbo-onboarding-done/qbo-onboarding-done.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { QboSharedModule } from \'../qbo-shared/qbo-shared.module\';\\nimport { QboCloneSettingsComponent } from \'./qbo-clone-settings/qbo-clone-settings.component\';\\n\\n@NgModule({\\n  declarations: [\\n    QboOnboardingComponent,\\n    QboOnboardingLandingComponent,\\n    QboOnboardingConnectorComponent,\\n    QboOnboardingEmployeeSettingsComponent,\\n    QboOnboardingExportSettingsComponent,\\n    QboOnboardingImportSettingsComponent,\\n    QboOnboardingAdvancedSettingsComponent,\\n    QboOnboardingDoneComponent,\\n    QboCloneSettingsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    QboOnboardingRoutingModule,\\n    SharedModule,\\n    QboSharedModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    InputSwitchModule,\\n    TooltipModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n  ]\\n})\\nexport class QboOnboardingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"QboCloneSettingsComponent"},{"name":"QboOnboardingAdvancedSettingsComponent"},{"name":"QboOnboardingComponent"},{"name":"QboOnboardingConnectorComponent"},{"name":"QboOnboardingDoneComponent"},{"name":"QboOnboardingEmployeeSettingsComponent"},{"name":"QboOnboardingExportSettingsComponent"},{"name":"QboOnboardingImportSettingsComponent"},{"name":"QboOnboardingLandingComponent"}]},{"type":"imports","elements":[{"name":"QboOnboardingRoutingModule"},{"name":"QboSharedModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboOnboardingRoutingModule","id":"module-QboOnboardingRoutingModule-4ff7ea40111c6d0853e1e88182c3608f85e81661fd15bd9d974b361360f8e14ca10adcd7396b20d8c0db48841d5f078791ed14e8ddbb164bc05e6d4d7e94c15d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { QboOnboardingComponent } from \'./qbo-onboarding.component\';\\nimport { QboOnboardingLandingComponent } from \'./qbo-onboarding-landing/qbo-onboarding-landing.component\';\\nimport { QboOnboardingConnectorComponent } from \'./qbo-onboarding-connector/qbo-onboarding-connector.component\';\\nimport { QboOnboardingEmployeeSettingsComponent } from \'./qbo-onboarding-employee-settings/qbo-onboarding-employee-settings.component\';\\nimport { QboOnboardingExportSettingsComponent } from \'./qbo-onboarding-export-settings/qbo-onboarding-export-settings.component\';\\nimport { QboOnboardingImportSettingsComponent } from \'./qbo-onboarding-import-settings/qbo-onboarding-import-settings.component\';\\nimport { QboOnboardingAdvancedSettingsComponent } from \'./qbo-onboarding-advanced-settings/qbo-onboarding-advanced-settings.component\';\\nimport { QboOnboardingDoneComponent } from \'./qbo-onboarding-done/qbo-onboarding-done.component\';\\nimport { QboTokenGuard } from \'src/app/core/guard/qbo-token.guard\';\\nimport { QboCloneSettingsComponent } from \'./qbo-clone-settings/qbo-clone-settings.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: QboOnboardingComponent,\\n    children: [\\n      {\\n        path: \'landing\',\\n        component: QboOnboardingLandingComponent\\n      },\\n      {\\n        path: \'connector\',\\n        component: QboOnboardingConnectorComponent\\n      },\\n      {\\n        path: \'employee_settings\',\\n        component: QboOnboardingEmployeeSettingsComponent,\\n        canActivate: [QboTokenGuard]\\n      },\\n      {\\n        path: \'export_settings\',\\n        component: QboOnboardingExportSettingsComponent,\\n        canActivate: [QboTokenGuard]\\n      },\\n      {\\n        path: \'import_settings\',\\n        component: QboOnboardingImportSettingsComponent,\\n        canActivate: [QboTokenGuard]\\n      },\\n      {\\n        path: \'advanced_settings\',\\n        component: QboOnboardingAdvancedSettingsComponent,\\n        canActivate: [QboTokenGuard]\\n      },\\n      {\\n        path: \'done\',\\n        component: QboOnboardingDoneComponent,\\n        canActivate: [QboTokenGuard]\\n      },\\n      {\\n        path: \'clone_settings\',\\n        component: QboCloneSettingsComponent,\\n        canActivate: [QboTokenGuard]\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class QboOnboardingRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboRoutingModule","id":"module-QboRoutingModule-6293a521acc6f6ecd87335ac8baf81aac181c38848e2470303c5e39f69c71f42be6b36df916a4f7271eba9b5c92644486b7d1b14a37a2ff4f9b3ca4d6e29f600","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { QboComponent } from \'./qbo.component\';\\nimport { QboTokenGuard } from \'src/app/core/guard/qbo-token.guard\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: QboComponent,\\n    children: [\\n      {\\n        path: \'onboarding\',\\n        loadChildren: () => \\"import(\'./qbo-onboarding/qbo-onboarding.module\').then(m => m.QboOnboardingModule)\\"\\n      },\\n      {\\n        path: \'main\',\\n        loadChildren: () => \\"import(\'./qbo-main/qbo-main.module\').then(m => m.QboMainModule)\\",\\n        canActivate: [QboTokenGuard]\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class QboRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"QboSharedModule","id":"module-QboSharedModule-2da4cd3cbca4c0abd86daf2da6266ef3936a031a26ccf55fed291cec3d437b0324ab6b7f94e2e6cb3ce8628733cf619fdc1afe6a7bafcc742c0d0c970c6a9cca","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/qbo/qbo-shared/qbo-shared.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\n\\nimport { MultiSelectModule } from \'primeng/multiselect\';\\n\\nimport { QboEmployeeSettingsComponent } from \'./qbo-employee-settings/qbo-employee-settings.component\';\\nimport { QboExportSettingsComponent } from \'./qbo-export-settings/qbo-export-settings.component\';\\nimport { QboImportSettingsComponent } from \'./qbo-import-settings/qbo-import-settings.component\';\\nimport { QboAdvancedSettingsComponent } from \'./qbo-advanced-settings/qbo-advanced-settings.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\n\\n\\n\\n@NgModule({\\n  declarations: [\\n    QboEmployeeSettingsComponent,\\n    QboExportSettingsComponent,\\n    QboImportSettingsComponent,\\n    QboAdvancedSettingsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    SharedModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    MultiSelectModule\\n  ],\\n  exports: [\\n    QboEmployeeSettingsComponent,\\n    QboExportSettingsComponent,\\n    QboImportSettingsComponent,\\n    QboAdvancedSettingsComponent\\n  ]\\n})\\nexport class QboSharedModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"QboAdvancedSettingsComponent"},{"name":"QboEmployeeSettingsComponent"},{"name":"QboExportSettingsComponent"},{"name":"QboImportSettingsComponent"}]},{"type":"imports","elements":[{"name":"SharedModule"}]},{"type":"exports","elements":[{"name":"QboAdvancedSettingsComponent"},{"name":"QboEmployeeSettingsComponent"},{"name":"QboExportSettingsComponent"},{"name":"QboImportSettingsComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300ConfigurationModule","id":"module-Sage300ConfigurationModule-3e4c1f299f4f5cd1c39fa0e1d23f9a970d3d6684e8498e2ae276fbdc01acedf80989bbf4d02c160fcbef449ee95e21e4dc7c75262605afe9d63c2b935df48ce4","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-main/sage300-configuration/sage300-configuration.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Sage300SharedModule } from \'../../sage300-shared/sage300-shared.module\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { Sage300ConfigurationRoutingModule } from \'./sage300-configuration-routing.module\';\\nimport { Sage300ConfigurationComponent } from \'./sage300-configuration.component\';\\n\\n@NgModule({\\n  declarations: [\\n    Sage300ConfigurationComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    Sage300SharedModule,\\n    Sage300ConfigurationRoutingModule\\n  ]\\n})\\nexport class Sage300ConfigurationModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"Sage300ConfigurationComponent"}]},{"type":"imports","elements":[{"name":"Sage300ConfigurationRoutingModule"},{"name":"Sage300SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300ConfigurationRoutingModule","id":"module-Sage300ConfigurationRoutingModule-82886da8ae594c0c22eca8331a2394d6402209003cf12bce06319e20e23403c2a80993117f4fdeba608cc67e976283ebd518c7bf961ebf116a4e70a1fcf4b718","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-main/sage300-configuration/sage300-configuration-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { Sage300ConfigurationComponent } from \'./sage300-configuration.component\';\\nimport { Sage300ExportSettingsComponent } from \'../../sage300-shared/sage300-export-settings/sage300-export-settings.component\';\\nimport { Sage300ImportSettingsComponent } from \'../../sage300-shared/sage300-import-settings/sage300-import-settings.component\';\\nimport { Sage300AdvancedSettingsComponent } from \'../../sage300-shared/sage300-advanced-settings/sage300-advanced-settings.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: Sage300ConfigurationComponent,\\n    children: [\\n      {\\n        path: \'export_settings\',\\n        component: Sage300ExportSettingsComponent\\n      },\\n      {\\n        path: \'import_settings\',\\n        component: Sage300ImportSettingsComponent\\n      },\\n      {\\n        path: \'advanced_settings\',\\n        component: Sage300AdvancedSettingsComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    RouterModule.forChild(routes)\\n  ],\\n  exports: [RouterModule]\\n})\\nexport class Sage300ConfigurationRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300DashboardModule","id":"module-Sage300DashboardModule-349348bfa93f124e83301581406c768c55ab8d0e46f5524904d188277d4bfb74aa47276ee076b18b799bb76dab2843007ae93b841de5699c9d2d8eca03b88440","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-main/sage300-dashboard/sage300-dashboard.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Sage300DashboardRoutingModule } from \'./sage300-dashboard-routing.module\';\\nimport { Sage300DashboardComponent } from \'./sage300-dashboard.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\n\\n\\n\\n@NgModule({\\n  declarations: [\\n    Sage300DashboardComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    SharedModule,\\n    Sage300DashboardRoutingModule\\n  ]\\n})\\nexport class Sage300DashboardModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"Sage300DashboardComponent"}]},{"type":"imports","elements":[{"name":"Sage300DashboardRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300DashboardRoutingModule","id":"module-Sage300DashboardRoutingModule-b2f25ebeee3169ca67104189f080b6710addf09f2f5d8dffec01d581887495b2de3fa3e3389c788c9fa59a73c0c499890e519d318e842141f4e4c778e65b0e09","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-main/sage300-dashboard/sage300-dashboard-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { Sage300DashboardComponent } from \'./sage300-dashboard.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: Sage300DashboardComponent\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class Sage300DashboardRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300ExportLogModule","id":"module-Sage300ExportLogModule-fa68d229f4c9419f3d989260e90b0bcf3872c78a980fe4e1130bd0846a33ce8ca5e63c233247e9dd06f313af129ff3e56b49d3b038513e604ed9eccfba6b2a06","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-main/sage300-export-log/sage300-export-log.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { Sage300ExportLogRoutingModule } from \'./sage300-export-log-routing.module\';\\nimport { Sage300ExportLogComponent } from \'./sage300-export-log.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { Sage300CompleteExportLogComponent } from \'./sage300-complete-export-log/sage300-complete-export-log.component\';\\nimport { Sage300SkippedExportLogComponent } from \'./sage300-skipped-export-log/sage300-skipped-export-log.component\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    Sage300ExportLogComponent,\\n    Sage300CompleteExportLogComponent,\\n    Sage300SkippedExportLogComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    SharedModule,\\n    Sage300ExportLogRoutingModule\\n  ]\\n})\\nexport class Sage300ExportLogModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"Sage300CompleteExportLogComponent"},{"name":"Sage300ExportLogComponent"},{"name":"Sage300SkippedExportLogComponent"}]},{"type":"imports","elements":[{"name":"Sage300ExportLogRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300ExportLogRoutingModule","id":"module-Sage300ExportLogRoutingModule-950015e25b6160361c4926afa01453c673763b5b15d09397c700d1fcdd4456bd3b9cdb66f118fb70aa772551e8386583729e71ad4eae8f0e7f70c1dc578914ee","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-main/sage300-export-log/sage300-export-log-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { Sage300ExportLogComponent } from \'./sage300-export-log.component\';\\nimport { Sage300SkippedExportLogComponent } from \'./sage300-skipped-export-log/sage300-skipped-export-log.component\';\\nimport { Sage300CompleteExportLogComponent } from \'./sage300-complete-export-log/sage300-complete-export-log.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: Sage300ExportLogComponent,\\n    children: [\\n      {\\n        path: \'complete_export_log\',\\n        component: Sage300CompleteExportLogComponent\\n      },\\n      {\\n        path: \'skip_export_log\',\\n        component: Sage300SkippedExportLogComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class Sage300ExportLogRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300MainModule","id":"module-Sage300MainModule-de325d196f94d15098aa7516f4f90d5cf6de43f4d38d81a7dca568903b2f73a65b53bed714ca1bb62de4037c4c0022f93bda97c623931b2738d9298792697a40","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-main/sage300-main.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Sage300MainRoutingModule } from \'./sage300-main-routing.module\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { SharedModule as PrimeNGSharedModule } from \'primeng/api\';\\n\\n\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    SharedModule,\\n    PrimeNGSharedModule,\\n    Sage300MainRoutingModule\\n  ]\\n})\\nexport class Sage300MainModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[{"name":"Sage300MainRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300MainRoutingModule","id":"module-Sage300MainRoutingModule-fe76721fcc519efcaa339c68d0ff872f44afbf314b73c07d9869b3a6e05f17890478743db045252d56c09d65c0b2c026951d4928fafbe70e337f74478cb31853","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-main/sage300-main-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { Sage300MainComponent } from \'./sage300-main.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: Sage300MainComponent,\\n    children: [\\n      {\\n        path: \'dashboard\',\\n        loadChildren: () => \\"import(\'./sage300-dashboard/sage300-dashboard.module\').then(m => m.Sage300DashboardModule)\\"\\n      },\\n      {\\n        path: \'configuration\',\\n        loadChildren: () => \\"import(\'./sage300-configuration/sage300-configuration.module\').then(m => m.Sage300ConfigurationModule)\\"\\n      },\\n      {\\n        path: \'mapping\',\\n        loadChildren: () => \\"import(\'./sage300-mapping/sage300-mapping.module\').then(m => m.Sage300MappingModule)\\"\\n      },\\n      {\\n        path: \'export_log\',\\n        loadChildren: () => \\"import(\'./sage300-export-log/sage300-export-log.module\').then(m => m.Sage300ExportLogModule)\\"\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  declarations: [],\\n  imports: [\\n    CommonModule,\\n    RouterModule.forChild(routes)\\n  ],\\n  exports: [RouterModule]\\n})\\nexport class Sage300MainRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300MappingModule","id":"module-Sage300MappingModule-e2c8077cfeed3a45bbd1b3bc52e48ecf60f5401be1d63ab2b8197c3920db8094892cd95a0cef228d11f559b38456e9b3105db6e814991d9d71c121559fd62d54","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-main/sage300-mapping/sage300-mapping.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { Sage300MappingRoutingModule } from \'./sage300-mapping-routing.module\';\\nimport { Sage300MappingComponent } from \'./sage300-mapping.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { Sage300BaseMappingComponent } from \'./sage300-base-mapping/sage300-base-mapping.component\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    Sage300MappingComponent,\\n    Sage300BaseMappingComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    SharedModule,\\n    Sage300MappingRoutingModule\\n  ]\\n})\\nexport class Sage300MappingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"Sage300BaseMappingComponent"},{"name":"Sage300MappingComponent"}]},{"type":"imports","elements":[{"name":"Sage300MappingRoutingModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300MappingRoutingModule","id":"module-Sage300MappingRoutingModule-0c8888bc87171bde476c45fe41f19daf2e9635022c659cc0b46968754f90409b60d711ba0377b97f3770425a0a894bb83df9ea6e2c535efce1ddda8965f5a597","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-main/sage300-mapping/sage300-mapping-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { Sage300MappingComponent } from \'./sage300-mapping.component\';\\nimport { Sage300BaseMappingComponent } from \'./sage300-base-mapping/sage300-base-mapping.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: Sage300MappingComponent,\\n    children: [\\n      {\\n        path: \':source_field\',\\n        component: Sage300BaseMappingComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class Sage300MappingRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300Module","id":"module-Sage300Module-cb32a0d3299d7fa9859c9b9563dc9f8be5660e29a91297f4fa2d40debbbab18491e87e40574a06900075623985fb928d284de971c8aa962d752ef2c75160891d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Sage300OnboardingComponent } from \'./sage300-onboarding/sage300-onboarding.component\';\\nimport { Sage300RoutingModule } from \'./sage300-routing.module\';\\nimport { Sage300MainComponent } from \'./sage300-main/sage300-main.component\';\\nimport { Sage300SharedModule } from \'./sage300-shared/sage300-shared.module\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    Sage300OnboardingComponent,\\n    Sage300MainComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    Sage300SharedModule,\\n    SharedModule,\\n    Sage300RoutingModule\\n  ]\\n})\\nexport class Sage300Module { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"Sage300MainComponent"},{"name":"Sage300OnboardingComponent"}]},{"type":"imports","elements":[{"name":"Sage300RoutingModule"},{"name":"Sage300SharedModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300OnboardingModule","id":"module-Sage300OnboardingModule-d6bfd9f953800c6e5d6133f37866b48b3ad322e45cb96f9e4cb8a7be616a9b3217d85cc9b1fcf38e0562031128d467168409d8a5b4f8709673541b32513ebdea","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Sage300OnboardingLandingComponent } from \'./sage300-onboarding-landing/sage300-onboarding-landing.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { Sage300OnboardingRoutingModule } from \'./sage300-onboarding-routing.module\';\\nimport { Sage300OnboardingExportSettingsComponent } from \'./sage300-onboarding-export-settings/sage300-onboarding-export-settings.component\';\\nimport { Sage300SharedModule } from \'../sage300-shared/sage300-shared.module\';\\nimport { Sage300OnboardingConnectorComponent } from \'./sage300-onboarding-connector/sage300-onboarding-connector.component\';\\nimport { Sage300OnboardingDoneComponent } from \'./sage300-onboarding-done/sage300-onboarding-done.component\';\\nimport { Sage300OnboardingImportSettingsComponent } from \'./sage300-onboarding-import-settings/sage300-onboarding-import-settings.component\';\\nimport { Sage300OnboardingAdvancedSettingsComponent } from \'./sage300-onboarding-advanced-settings/sage300-onboarding-advanced-settings.component\';\\n\\n\\n\\n@NgModule({\\n  declarations: [\\n    Sage300OnboardingLandingComponent,\\n    Sage300OnboardingConnectorComponent,\\n    Sage300OnboardingExportSettingsComponent,\\n    Sage300OnboardingImportSettingsComponent,\\n    Sage300OnboardingAdvancedSettingsComponent,\\n    Sage300OnboardingDoneComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    SharedModule,\\n    Sage300SharedModule,\\n    Sage300OnboardingRoutingModule\\n  ],\\n  exports: [\\n    Sage300OnboardingExportSettingsComponent,\\n    Sage300OnboardingImportSettingsComponent,\\n    Sage300OnboardingAdvancedSettingsComponent\\n  ]\\n})\\nexport class Sage300OnboardingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"Sage300OnboardingAdvancedSettingsComponent"},{"name":"Sage300OnboardingConnectorComponent"},{"name":"Sage300OnboardingDoneComponent"},{"name":"Sage300OnboardingExportSettingsComponent"},{"name":"Sage300OnboardingImportSettingsComponent"},{"name":"Sage300OnboardingLandingComponent"}]},{"type":"imports","elements":[{"name":"Sage300OnboardingRoutingModule"},{"name":"Sage300SharedModule"},{"name":"SharedModule"}]},{"type":"exports","elements":[{"name":"Sage300OnboardingAdvancedSettingsComponent"},{"name":"Sage300OnboardingExportSettingsComponent"},{"name":"Sage300OnboardingImportSettingsComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300OnboardingRoutingModule","id":"module-Sage300OnboardingRoutingModule-b9595ea08da90b79705a2e6bb1d1ce950fb7376a3a581bb38786f28d48f7762c403b7889ba03b24468fce9cbd19640a47fd161548a8af2db2b124421333e00dd","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { Sage300OnboardingComponent } from \'./sage300-onboarding.component\';\\nimport { Sage300OnboardingLandingComponent } from \'./sage300-onboarding-landing/sage300-onboarding-landing.component\';\\nimport { Sage300OnboardingExportSettingsComponent } from \'./sage300-onboarding-export-settings/sage300-onboarding-export-settings.component\';\\nimport { Sage300OnboardingConnectorComponent } from \'./sage300-onboarding-connector/sage300-onboarding-connector.component\';\\nimport { Sage300OnboardingDoneComponent } from \'./sage300-onboarding-done/sage300-onboarding-done.component\';\\nimport { Sage300OnboardingImportSettingsComponent } from \'./sage300-onboarding-import-settings/sage300-onboarding-import-settings.component\';\\nimport { Sage300OnboardingAdvancedSettingsComponent } from \'./sage300-onboarding-advanced-settings/sage300-onboarding-advanced-settings.component\';\\n\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: Sage300OnboardingComponent,\\n    children: [\\n      {\\n        path: \'landing\',\\n        component: Sage300OnboardingLandingComponent\\n      },\\n      {\\n        path: \'connector\',\\n        component: Sage300OnboardingConnectorComponent\\n      },\\n      { path: \'export_settings\',\\n        component: Sage300OnboardingExportSettingsComponent\\n      },\\n      {\\n        path: \'import_settings\',\\n        component: Sage300OnboardingImportSettingsComponent\\n      },\\n      {\\n        path: \'advanced_settings\',\\n        component: Sage300OnboardingAdvancedSettingsComponent\\n      },\\n      {\\n        path: \'done\',\\n        component: Sage300OnboardingDoneComponent\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class Sage300OnboardingRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300RoutingModule","id":"module-Sage300RoutingModule-37d392504c751cb073b0a0b01661ecb3f06d41826c1063e9866d6ce7d09e7a78a471068e60590a42cfe5d9641dbce5fc46178fcbacf757b092f31661778b1141","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { Sage300Component } from \'./sage300.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: Sage300Component,\\n    children: [\\n      {\\n        path: \'onboarding\',\\n        loadChildren: () => \\"import(\'./sage300-onboarding/sage300-onboarding.module\').then(m => m.Sage300OnboardingModule)\\"\\n      },\\n      {\\n        path: \'main\',\\n        loadChildren: () => \\"import(\'./sage300-main/sage300-main.module\').then(m => m.Sage300MainModule)\\"\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class Sage300RoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"Sage300SharedModule","id":"module-Sage300SharedModule-15b0a8724683fd90cfdc74797be0c79ea67d002bf9d41cafe5ee09895aee13ea287bc2920726fdfd3006cbb423ea23a1652fed832a000a36b74da20e1fcdf49f","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/sage300/sage300-shared/sage300-shared.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { Sage300ExportSettingsComponent } from \'./sage300-export-settings/sage300-export-settings.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { Sage300ImportSettingsComponent } from \'./sage300-import-settings/sage300-import-settings.component\';\\nimport { Sage300AdvancedSettingsComponent } from \'./sage300-advanced-settings/sage300-advanced-settings.component\';\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\n\\n\\n\\n@NgModule({\\n  declarations: [\\n    Sage300ExportSettingsComponent,\\n    Sage300ImportSettingsComponent,\\n    Sage300AdvancedSettingsComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    SharedModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n  ],\\n  exports: [\\n    Sage300ExportSettingsComponent,\\n    Sage300ImportSettingsComponent,\\n    Sage300AdvancedSettingsComponent,\\n    SharedModule\\n  ]\\n})\\nexport class Sage300SharedModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"Sage300AdvancedSettingsComponent"},{"name":"Sage300ExportSettingsComponent"},{"name":"Sage300ImportSettingsComponent"}]},{"type":"imports","elements":[{"name":"SharedModule"}]},{"type":"exports","elements":[{"name":"Sage300AdvancedSettingsComponent"},{"name":"Sage300ExportSettingsComponent"},{"name":"Sage300ImportSettingsComponent"},{"name":"SharedModule"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SharedModule","id":"module-SharedModule-1788a5f37407b747072edb2a58a6e18b4fc8d8d034995b82f989580cc3174c7675f276999809f3f6901ac6ff0349597325ca2d6e62f7a81f83f3c36d5fd2f487","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/shared/shared.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { LoaderComponent } from \'./components/core/loader/loader.component\';\\nimport { AppLandingPageHeaderComponent } from \'./components/helper/app-landing-page-header/app-landing-page-header.component\';\\nimport { InputSwitchModule } from \'primeng/inputswitch\';\\nimport { RadioButtonModule } from \'primeng/radiobutton\';\\nimport { ToastModule } from \'primeng/toast\';\\nimport { InputTextModule } from \'primeng/inputtext\';\\nimport { DropdownModule } from \'primeng/dropdown\';\\nimport { DialogModule } from \'primeng/dialog\';\\nimport { MultiSelectModule } from \'primeng/multiselect\';\\nimport { DragDropModule } from \'primeng/dragdrop\';\\nimport { ProgressBarModule } from \'primeng/progressbar\';\\n\\n// External Libraries\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\nimport { ProgressSpinnerModule } from \'primeng/progressspinner\';\\nimport { ButtonModule } from \'primeng/button\';\\nimport { TooltipModule } from \'primeng/tooltip\';\\nimport { SkeletonModule } from \'primeng/skeleton\';\\nimport { ErrorComponent } from \'./components/core/error/error.component\';\\nimport { TrimCharacterPipe } from \'./pipes/trim-character.pipe\';\\nimport { SnakeCaseToSpaceCasePipe } from \'./pipes/snake-case-to-space-case.pipe\';\\nimport { SearchPipe } from \'./pipes/search.pipe\';\\nimport { PaginatorComponent } from \'./components/helper/paginator/paginator.component\';\\nimport { MandatoryFieldComponent } from \'./components/helper/mandatory-field/mandatory-field.component\';\\nimport { MandatoryErrorMessageComponent } from \'./components/helper/mandatory-error-message/mandatory-error-message.component\';\\nimport { ZeroStateWithIllustrationComponent } from \'./components/qbd/core/zero-state-with-illustration/zero-state-with-illustration.component\';\\nimport { OnboardingStepperComponent } from \'./components/qbd/helper/onboarding-stepper/onboarding-stepper.component\';\\nimport { OnboardingSteppersComponent } from \'./components/helper/onboarding-stepper/onboarding-stepper.component\';\\nimport { ExportSettingComponent } from \'./components/qbd/configuration/export-setting/export-setting.component\';\\nimport { AdvancedSettingComponent } from \'./components/qbd/configuration/advanced-setting/advanced-setting.component\';\\nimport { FieldMappingComponent } from \'./components/qbd/configuration/field-mapping/field-mapping.component\';\\nimport { ConfigurationToggleFieldComponent } from \'./components/configuration/configuration-toggle-field/configuration-toggle-field.component\';\\nimport { ConfigurationSelectFieldComponent } from \'./components/configuration/configuration-select-field/configuration-select-field.component\';\\nimport { ConfigurationRadioFieldComponent } from \'./components/qbd/configuration/configuration-radio-field/configuration-radio-field.component\';\\nimport { ConfigurationStepFooterComponent } from \'./components/configuration/configuration-step-footer/configuration-step-footer.component\';\\nimport { ConfigurationStepHeaderComponent } from \'./components/configuration/configuration-step-header/configuration-step-header.component\';\\nimport { EmailMultiSelectFieldComponent } from \'./components/configuration/email-multi-select-field/email-multi-select-field.component\';\\nimport { FormsModule, ReactiveFormsModule } from \'@angular/forms\';\\nimport { ConfigurationMultiSelectComponent } from \'./components/configuration/configuration-multi-select/configuration-multi-select.component\';\\nimport { ConfigurationLabelComponent } from \'./components/qbd/configuration/configuration-label/configuration-label.component\';\\nimport { CalendarModule } from \'primeng/calendar\';\\nimport { AppLandingPageBodyComponent } from \'./components/helper/app-landing-page-body/app-landing-page-body.component\';\\nimport { MappingTableComponent } from \'./components/qbd/mapping/mapping-table/mapping-table.component\';\\nimport { MappingFilterComponent } from \'./components/helper/mapping/mapping-filter/mapping-filter.component\';\\nimport { MappingHeaderSectionComponent } from \'./components/qbd/mapping/mapping-header-section/mapping-header-section.component\';\\nimport { TableModule } from \'primeng/table\';\\nimport { ConfigurationExportSettingsComponent } from \'./components/si/configuration/configuration-export-settings/configuration-export-settings.component\';\\nimport { IntacctStepperComponent } from \'./components/si/helper/intacct-stepper/intacct-stepper.component\';\\nimport { IntacctConnectorComponent } from \'./components/si/core/intacct-connector/intacct-connector.component\';\\nimport { IntacctLocationEntityComponent } from \'./components/si/core/intacct-location-entity/intacct-location-entity.component\';\\nimport { ConfigurationImportSettingsComponent } from \'./components/si/configuration/configuration-import-settings/configuration-import-settings.component\';\\nimport { ConfigurationAdvancedSettingsComponent } from \'./components/si/configuration/configuration-advanced-settings/configuration-advanced-settings.component\';\\nimport { SkipExportComponent } from \'./components/si/helper/skip-export/skip-export.component\';\\nimport { ChipsModule } from \'primeng/chips\';\\nimport { TabMenuModule } from \'primeng/tabmenu\';\\nimport { DashboardMappingResolveComponent } from \'./components/si/helper/dashboard-mapping-resolve/dashboard-mapping-resolve.component\';\\nimport { DashboardIntacctErrorsComponent } from \'./components/si/helper/dashboard-intacct-errors/dashboard-intacct-errors.component\';\\nimport { DashboardMenuComponent } from \'./components/core/dashboard-menu/dashboard-menu.component\';\\nimport { DashboardExportSectionComponent } from \'./components/dashboard/dashboard-export-section/dashboard-export-section.component\';\\nimport { DashboardErrorSectionComponent } from \'./components/dashboard/dashboard-error-section/dashboard-error-section.component\';\\nimport { DashboardExportLogDialogComponent } from \'./components/dashboard/dashboard-export-log-dialog/dashboard-export-log-dialog.component\';\\nimport { DashboardAccountingErrorDialogComponent } from \'./components/dashboard/dashboard-accounting-error-dialog/dashboard-accounting-error-dialog.component\';\\nimport { DashboardExportSummarySectionComponent } from \'./components/dashboard/dashboard-export-summary-section/dashboard-export-summary-section.component\';\\nimport { ConfigurationTextFieldComponent } from \'./components/configuration/configuration-text-field/configuration-text-field.component\';\\nimport { OnboardingDoneComponent } from \'./components/helper/onboarding-done/onboarding-done.component\';\\nimport { PreviewDialogComponent } from \'./components/configuration/preview-dialog/preview-dialog.component\';\\nimport { MainMenuComponent } from \'./components/menu/main-menu/main-menu.component\';\\nimport { ConfigurationImportFieldComponent } from \'./components/configuration/configuration-import-field/configuration-import-field.component\';\\nimport { ConfigurationInfoLabelComponent } from \'./components/configuration/configuration-info-label/configuration-info-label.component\';\\nimport { ConfigurationCustomFieldCreationDialogComponent } from \'./components/configuration/configuration-custom-field-creation-dialog/configuration-custom-field-creation-dialog.component\';\\nimport { ConfigurationConfirmationDialogComponent } from \'./components/configuration/configuration-confirmation-dialog/configuration-confirmation-dialog.component\';\\nimport { ZeroStateComponent } from \'./components/helper/zero-state/zero-state.component\';\\nimport { ConfigurationSkipExportComponent } from \'./components/configuration/configuration-skip-export/configuration-skip-export.component\';\\nimport { ConfigurationStepSubHeaderComponent } from \'./components/configuration/configuration-step-sub-header/configuration-step-sub-header.component\';\\nimport { GenericMappingV2Component } from \'./components/helper/mapping/generic-mapping-v2/generic-mapping-v2.component\';\\nimport { GenericMappingTableComponent } from \'./components/helper/mapping/generic-mapping-table/generic-mapping-table.component\';\\nimport { SubMenuComponent } from \'./components/menu/sub-menu/sub-menu.component\';\\nimport { MappingCardHeaderComponent } from \'./components/helper/mapping/mapping-card-header/mapping-card-header.component\';\\nimport { ConfigurationScheduleExportComponent } from \'./components/configuration/configuration-schedule-export/configuration-schedule-export.component\';\\nimport { ConfigurationConnectorComponent } from \'./components/configuration/configuration-connector/configuration-connector.component\';\\nimport { ExportLogTableComponent } from \'./components/export-log/export-log-table/export-log-table.component\';\\nimport { ExportLogFilterComponent } from \'./components/export-log/export-log-filter/export-log-filter.component\';\\nimport { ExportLogChildTableDialogComponent } from \'./components/export-log/export-log-dialog/export-log-child-table-dialog.component\';\\nimport { SkippedExportLogTableComponent } from \'./components/export-log/skipped-export-log-table/skipped-export-log-table.component\';\\nimport { ShimmersComponent } from \'./components/helper/shimmers/shimmers.component\';\\nimport { CloneSettingHeaderComponent } from \'./components/onboarding/clone-setting/clone-setting-header/clone-setting-header.component\';\\nimport { DropdownComponent } from \'./components/input/dropdown/dropdown.component\';\\nimport { CloneSettingFieldComponent } from \'./components/onboarding/clone-setting/clone-setting-field/clone-setting-field.component\';\\nimport { ToggleComponent } from \'./components/input/toggle/toggle.component\';\\nimport { MultiSelectComponent } from \'./components/input/multi-select/multi-select.component\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    LoaderComponent,\\n    AppLandingPageHeaderComponent,\\n    ErrorComponent,\\n    TrimCharacterPipe,\\n    SnakeCaseToSpaceCasePipe,\\n    SearchPipe,\\n    PaginatorComponent,\\n    MandatoryFieldComponent,\\n    MandatoryErrorMessageComponent,\\n    ZeroStateWithIllustrationComponent,\\n    OnboardingStepperComponent,\\n    OnboardingSteppersComponent,\\n    ExportSettingComponent,\\n    AdvancedSettingComponent,\\n    FieldMappingComponent,\\n    ConfigurationToggleFieldComponent,\\n    ConfigurationSelectFieldComponent,\\n    ConfigurationRadioFieldComponent,\\n    ConfigurationStepFooterComponent,\\n    ConfigurationStepHeaderComponent,\\n    EmailMultiSelectFieldComponent,\\n    ConfigurationMultiSelectComponent,\\n    ConfigurationLabelComponent,\\n    AppLandingPageBodyComponent,\\n    IntacctStepperComponent,\\n    IntacctConnectorComponent,\\n    IntacctLocationEntityComponent,\\n    MappingTableComponent,\\n    MappingFilterComponent,\\n    MappingHeaderSectionComponent,\\n    ConfigurationExportSettingsComponent,\\n    ConfigurationImportSettingsComponent,\\n    ConfigurationAdvancedSettingsComponent,\\n    SkipExportComponent,\\n    DashboardMappingResolveComponent,\\n    DashboardIntacctErrorsComponent,\\n    DashboardMenuComponent,\\n    DashboardExportSectionComponent,\\n    DashboardErrorSectionComponent,\\n    DashboardExportLogDialogComponent,\\n    DashboardAccountingErrorDialogComponent,\\n    DashboardExportSummarySectionComponent,\\n    ConfigurationTextFieldComponent,\\n    OnboardingDoneComponent,\\n    PreviewDialogComponent,\\n    MainMenuComponent,\\n    ConfigurationImportFieldComponent,\\n    ConfigurationInfoLabelComponent,\\n    ConfigurationCustomFieldCreationDialogComponent,\\n    ConfigurationConfirmationDialogComponent,\\n    ZeroStateComponent,\\n    ConfigurationSkipExportComponent,\\n    ConfigurationStepSubHeaderComponent,\\n    GenericMappingV2Component,\\n    GenericMappingTableComponent,\\n    SubMenuComponent,\\n    MappingCardHeaderComponent,\\n    ConfigurationScheduleExportComponent,\\n    ConfigurationConnectorComponent,\\n    ExportLogTableComponent,\\n    ExportLogFilterComponent,\\n    ExportLogChildTableDialogComponent,\\n    SkippedExportLogTableComponent,\\n    ShimmersComponent,\\n    CloneSettingHeaderComponent,\\n    DropdownComponent,\\n    CloneSettingFieldComponent,\\n    ToggleComponent,\\n    MultiSelectComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    ProgressSpinnerModule,\\n    ButtonModule,\\n    TooltipModule,\\n    SkeletonModule,\\n    InputSwitchModule,\\n    RadioButtonModule,\\n    FormsModule,\\n    ReactiveFormsModule,\\n    ToastModule,\\n    InputTextModule,\\n    DropdownModule,\\n    DialogModule,\\n    MultiSelectModule,\\n    DragDropModule,\\n    ProgressBarModule,\\n    CalendarModule,\\n    ChipsModule,\\n    TableModule,\\n    TabMenuModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n  ],\\n  exports: [\\n    LoaderComponent,\\n    AppLandingPageBodyComponent,\\n    AppLandingPageHeaderComponent,\\n    ErrorComponent,\\n    TrimCharacterPipe,\\n    SnakeCaseToSpaceCasePipe,\\n    SearchPipe,\\n    PaginatorComponent,\\n    MandatoryFieldComponent,\\n    MandatoryErrorMessageComponent,\\n    ZeroStateWithIllustrationComponent,\\n    OnboardingStepperComponent,\\n    OnboardingSteppersComponent,\\n    ExportSettingComponent,\\n    AdvancedSettingComponent,\\n    FieldMappingComponent,\\n    ConfigurationToggleFieldComponent,\\n    ConfigurationSelectFieldComponent,\\n    ConfigurationRadioFieldComponent,\\n    ConfigurationStepFooterComponent,\\n    ConfigurationStepHeaderComponent,\\n    EmailMultiSelectFieldComponent,\\n    ConfigurationMultiSelectComponent,\\n    DropdownModule,\\n    CalendarModule,\\n    ChipsModule,\\n    FormsModule, ReactiveFormsModule, ProgressBarModule,\\n    ToastModule,\\n    IntacctStepperComponent,\\n    IntacctConnectorComponent,\\n    IntacctLocationEntityComponent,\\n    MappingTableComponent,\\n    MappingFilterComponent,\\n    MappingHeaderSectionComponent,\\n    ConfigurationExportSettingsComponent,\\n    ConfigurationImportSettingsComponent,\\n    ConfigurationAdvancedSettingsComponent,\\n    DashboardMappingResolveComponent,\\n    DashboardIntacctErrorsComponent,\\n    DashboardMenuComponent,\\n    DashboardExportSectionComponent,\\n    DashboardErrorSectionComponent,\\n    DashboardExportLogDialogComponent,\\n    DashboardAccountingErrorDialogComponent,\\n    ConfigurationTextFieldComponent,\\n    OnboardingDoneComponent,\\n    MainMenuComponent,\\n    ConfigurationImportFieldComponent,\\n    ConfigurationInfoLabelComponent,\\n    ConfigurationCustomFieldCreationDialogComponent,\\n    ConfigurationConfirmationDialogComponent,\\n    ZeroStateComponent,\\n    DashboardExportSummarySectionComponent,\\n    PreviewDialogComponent,\\n    ConfigurationSkipExportComponent,\\n    ConfigurationStepSubHeaderComponent,\\n    GenericMappingV2Component,\\n    SubMenuComponent,\\n    ConfigurationScheduleExportComponent,\\n    ConfigurationConnectorComponent,\\n    ExportLogTableComponent,\\n    ExportLogFilterComponent,\\n    ExportLogChildTableDialogComponent,\\n    SkippedExportLogTableComponent,\\n    ShimmersComponent,\\n    CloneSettingHeaderComponent,\\n    DropdownComponent,\\n    CloneSettingFieldComponent,\\n    ToggleComponent,\\n    MultiSelectComponent\\n  ]\\n})\\nexport class SharedModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AdvancedSettingComponent"},{"name":"AppLandingPageBodyComponent"},{"name":"AppLandingPageHeaderComponent"},{"name":"CloneSettingFieldComponent"},{"name":"CloneSettingHeaderComponent"},{"name":"ConfigurationAdvancedSettingsComponent"},{"name":"ConfigurationConfirmationDialogComponent"},{"name":"ConfigurationConnectorComponent"},{"name":"ConfigurationCustomFieldCreationDialogComponent"},{"name":"ConfigurationExportSettingsComponent"},{"name":"ConfigurationImportFieldComponent"},{"name":"ConfigurationImportSettingsComponent"},{"name":"ConfigurationInfoLabelComponent"},{"name":"ConfigurationLabelComponent"},{"name":"ConfigurationMultiSelectComponent"},{"name":"ConfigurationRadioFieldComponent"},{"name":"ConfigurationScheduleExportComponent"},{"name":"ConfigurationSelectFieldComponent"},{"name":"ConfigurationSkipExportComponent"},{"name":"ConfigurationStepFooterComponent"},{"name":"ConfigurationStepHeaderComponent"},{"name":"ConfigurationStepSubHeaderComponent"},{"name":"ConfigurationTextFieldComponent"},{"name":"ConfigurationToggleFieldComponent"},{"name":"DashboardAccountingErrorDialogComponent"},{"name":"DashboardErrorSectionComponent"},{"name":"DashboardExportLogDialogComponent"},{"name":"DashboardExportSectionComponent"},{"name":"DashboardExportSummarySectionComponent"},{"name":"DashboardIntacctErrorsComponent"},{"name":"DashboardMappingResolveComponent"},{"name":"DashboardMenuComponent"},{"name":"DropdownComponent"},{"name":"EmailMultiSelectFieldComponent"},{"name":"ErrorComponent"},{"name":"ExportLogChildTableDialogComponent"},{"name":"ExportLogFilterComponent"},{"name":"ExportLogTableComponent"},{"name":"ExportSettingComponent"},{"name":"FieldMappingComponent"},{"name":"GenericMappingTableComponent"},{"name":"GenericMappingV2Component"},{"name":"IntacctConnectorComponent"},{"name":"IntacctLocationEntityComponent"},{"name":"IntacctStepperComponent"},{"name":"LoaderComponent"},{"name":"MainMenuComponent"},{"name":"MandatoryErrorMessageComponent"},{"name":"MandatoryFieldComponent"},{"name":"MappingCardHeaderComponent"},{"name":"MappingFilterComponent"},{"name":"MappingHeaderSectionComponent"},{"name":"MappingTableComponent"},{"name":"MultiSelectComponent"},{"name":"OnboardingStepperComponent"},{"name":"OnboardingSteppersComponent"},{"name":"PaginatorComponent"},{"name":"PreviewDialogComponent"},{"name":"SearchPipe"},{"name":"ShimmersComponent"},{"name":"SkipExportComponent"},{"name":"SkippedExportLogTableComponent"},{"name":"SnakeCaseToSpaceCasePipe"},{"name":"SubMenuComponent"},{"name":"ToggleComponent"},{"name":"TrimCharacterPipe"},{"name":"ZeroStateComponent"},{"name":"ZeroStateWithIllustrationComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"AdvancedSettingComponent"},{"name":"AppLandingPageBodyComponent"},{"name":"AppLandingPageHeaderComponent"},{"name":"CloneSettingFieldComponent"},{"name":"CloneSettingHeaderComponent"},{"name":"ConfigurationAdvancedSettingsComponent"},{"name":"ConfigurationConfirmationDialogComponent"},{"name":"ConfigurationConnectorComponent"},{"name":"ConfigurationCustomFieldCreationDialogComponent"},{"name":"ConfigurationExportSettingsComponent"},{"name":"ConfigurationImportFieldComponent"},{"name":"ConfigurationImportSettingsComponent"},{"name":"ConfigurationInfoLabelComponent"},{"name":"ConfigurationMultiSelectComponent"},{"name":"ConfigurationRadioFieldComponent"},{"name":"ConfigurationScheduleExportComponent"},{"name":"ConfigurationSelectFieldComponent"},{"name":"ConfigurationSkipExportComponent"},{"name":"ConfigurationStepFooterComponent"},{"name":"ConfigurationStepHeaderComponent"},{"name":"ConfigurationStepSubHeaderComponent"},{"name":"ConfigurationTextFieldComponent"},{"name":"ConfigurationToggleFieldComponent"},{"name":"DashboardAccountingErrorDialogComponent"},{"name":"DashboardErrorSectionComponent"},{"name":"DashboardExportLogDialogComponent"},{"name":"DashboardExportSectionComponent"},{"name":"DashboardExportSummarySectionComponent"},{"name":"DashboardIntacctErrorsComponent"},{"name":"DashboardMappingResolveComponent"},{"name":"DashboardMenuComponent"},{"name":"DropdownComponent"},{"name":"EmailMultiSelectFieldComponent"},{"name":"ErrorComponent"},{"name":"ExportLogChildTableDialogComponent"},{"name":"ExportLogFilterComponent"},{"name":"ExportLogTableComponent"},{"name":"ExportSettingComponent"},{"name":"FieldMappingComponent"},{"name":"GenericMappingV2Component"},{"name":"IntacctConnectorComponent"},{"name":"IntacctLocationEntityComponent"},{"name":"IntacctStepperComponent"},{"name":"LoaderComponent"},{"name":"MainMenuComponent"},{"name":"MandatoryErrorMessageComponent"},{"name":"MandatoryFieldComponent"},{"name":"MappingFilterComponent"},{"name":"MappingHeaderSectionComponent"},{"name":"MappingTableComponent"},{"name":"MultiSelectComponent"},{"name":"OnboardingStepperComponent"},{"name":"OnboardingSteppersComponent"},{"name":"PaginatorComponent"},{"name":"PreviewDialogComponent"},{"name":"SearchPipe"},{"name":"ShimmersComponent"},{"name":"SkippedExportLogTableComponent"},{"name":"SnakeCaseToSpaceCasePipe"},{"name":"SubMenuComponent"},{"name":"ToggleComponent"},{"name":"TrimCharacterPipe"},{"name":"ZeroStateComponent"},{"name":"ZeroStateWithIllustrationComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SiModule","id":"module-SiModule-48938f01a07215ad4782fe1b140d8c86145fd976ab6ff3066fa48adc4fb6558de73adc624c13a090fbe541d3ac263faa935cb404f5c26a4ff642016843472056","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/si.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { SiComponent } from \'./si.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { IconSpriteModule } from \'ng-svg-icon-sprite\';\\nimport { TabMenuModule } from \'primeng/tabmenu\';\\nimport { DropdownModule } from \'primeng/dropdown\';\\nimport { TableModule } from \'primeng/table\';\\nimport { SiRoutingModule } from \'./si-routing.module\';\\nimport { MainComponent } from \'./main/main.component\';\\nimport { ConfigurationComponent } from \'./main/configuration/configuration.component\';\\nimport { ConfigurationExportSettingComponent } from \'./main/configuration/configuration-export-setting/configuration-export-setting.component\';\\nimport { ConfigurationAdvancedSettingComponent } from \'./main/configuration/configuration-advanced-setting/configuration-advanced-setting.component\';\\nimport { ConfigurationImportSettingComponent } from \'./main/configuration/configuration-import-setting/configuration-import-setting.component\';\\nimport { DialogModule } from \'primeng/dialog\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    SiComponent,\\n    MainComponent,\\n    ConfigurationComponent,\\n    ConfigurationExportSettingComponent,\\n    ConfigurationAdvancedSettingComponent,\\n    ConfigurationImportSettingComponent\\n  ],\\n  imports: [\\n    DialogModule,\\n    TableModule,\\n    CommonModule,\\n    SiRoutingModule,\\n    SharedModule,\\n    TabMenuModule,\\n    DropdownModule,\\n    IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })\\n  ]\\n})\\nexport class SiModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"ConfigurationAdvancedSettingComponent"},{"name":"ConfigurationExportSettingComponent"},{"name":"ConfigurationImportSettingComponent"},{"name":"SiComponent"}]},{"type":"imports","elements":[{"name":"SharedModule"},{"name":"SiRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"SiRoutingModule","id":"module-SiRoutingModule-2c74570b4daf631f6d03d6a4a9a3de1924c6b66b65b09c8ca0891def0204a9e159be3ac1d720daa4dbf38e42bd4a5176551b418640b371691c981c4c99181dbb","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/si/si-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { SiComponent } from \'./si.component\';\\n\\nconst routes: Routes = [\\n  {\\n    path: \'\',\\n    component: SiComponent,\\n    children: [\\n      {\\n        path: \'onboarding\',\\n        loadChildren: () => \\"import(\'./onboarding/onboarding.module\').then(m => m.OnboardingModule)\\"\\n      },\\n      {\\n        path: \'main\',\\n        loadChildren: () => \\"import(\'./main/main.module\').then(m => m.MainModule)\\"\\n      }\\n    ]\\n  }\\n];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class SiRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"TravelperkModule","id":"module-TravelperkModule-3efd467eecb3e67fd5db7fbe67ece6754f30ec5c5134db9b997b0f9b59e638b683718a0604aeab6252fd078d97cb6aca6406644a6818114b94aaaca1f1c54ff0","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/travelperk/travelperk.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\n\\nimport { TravelperkRoutingModule } from \'./travelperk-routing.module\';\\nimport { TravelperkComponent } from \'./travelperk.component\';\\nimport { SharedModule } from \'src/app/shared/shared.module\';\\nimport { SkeletonModule } from \'primeng/skeleton\';\\n\\n\\n@NgModule({\\n  declarations: [\\n    TravelperkComponent\\n  ],\\n  imports: [\\n    CommonModule,\\n    SharedModule,\\n    TravelperkRoutingModule,\\n    SkeletonModule\\n  ]\\n})\\nexport class TravelperkModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"TravelperkComponent"}]},{"type":"imports","elements":[{"name":"SharedModule"},{"name":"TravelperkRoutingModule"}]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"TravelperkRoutingModule","id":"module-TravelperkRoutingModule-65ec73cf97b025ee3afdc9bd4dba0a654b2ae93e6ef8ffe600415069729366155ebd0fb3c9ddd5f85fa535be6ddc60b4eb4119392318972fb628cb24c3c5178d","description":"","deprecationMessage":"","deprecated":false,"file":"src/app/integrations/travelperk/travelperk-routing.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { RouterModule, Routes } from \'@angular/router\';\\nimport { TravelperkComponent } from \'./travelperk.component\';\\n\\nconst routes: Routes = [{ path: \'\', component: TravelperkComponent }];\\n\\n@NgModule({\\n  imports: [RouterModule.forChild(routes)],\\n  exports: [RouterModule]\\n})\\nexport class TravelperkRoutingModule { }\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[]},{"type":"imports","elements":[]},{"type":"exports","elements":[]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"adminEmails","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"EmailOption[]","defaultValue":"[\\n\\t{\\n\\t\\t\\"name\\": \\"Nilesh Pant\\",\\n\\t\\t\\"email\\": \\"nilesh.p@fyle.in\\"\\n    }\\n]"},{"name":"advancedSettingsCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbo/qbo-configuration/qbo-advanced-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"alphabetFilter","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MappingFilter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    selectedAlphabeticalFilter: \'C\',\\n    mappingFilter: MappingState.MAPPED\\n  }\\n}"},{"name":"API_BASE_URL","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/common/api.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"environment.api_url"},{"name":"API_BASE_URL","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbd/qbd-core/qbd-api.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"environment.qbd_api_url"},{"name":"API_BASE_URL","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/si/si-core/si-api.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"environment.si_api_url"},{"name":"bambooHRMockConfiguration","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BambooHRConfiguration","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    recipe_id: \'1\',\\n    recipe_data: \'xyz\',\\n    recipe_status: true,\\n    additional_email_options: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ],\\n    emails_selected: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ]\\n}"},{"name":"bambooHRMockConfigurationPayload","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BambooHRConfigurationPost","defaultValue":"{\\n    org: 1,\\n    additional_email_options: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ],\\n    emails_selected: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ]\\n}"},{"name":"bambooHRMockConnectionPayload","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BambooHrConnection","defaultValue":"{\\n    input: {\\n        api_token: \'xyz\',\\n        subdomain: \'fyle\'\\n    }\\n}"},{"name":"bambooHrMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BambooHr","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    folder_id: \'1\',\\n    package_id: \'1\',\\n    api_token: \'xyz\',\\n    sub_domain: \'fyle\',\\n    created_at: new Date(),\\n    updated_at: new Date()\\n}"},{"name":"bambooHrMockWithoutToken","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BambooHr","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    folder_id: \'\',\\n    package_id: \'\',\\n    api_token: \'\',\\n    sub_domain: \'\',\\n    created_at: new Date(),\\n    updated_at: new Date()\\n}"},{"name":"brandingConfig","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"BrandingConfiguration","defaultValue":"config"},{"name":"brandingDemoVideoLinks","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"demoVideoLinks[brandingConfig.brandId]"},{"name":"brandingFeatureConfig","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"featureConfigs[brandingConfig.brandId]"},{"name":"brandingKbArticles","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"kbArticles[brandingConfig.brandId]"},{"name":"businessCentralAdvancedSettingGetCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/business-central/business-central-configuration/business-central-advanced-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"businessCentralAdvancedSettingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BusinessCentralAdvancedSettingsGet","defaultValue":"{\\n  \\"id\\": 37,\\n  \\"created_at\\": new Date(\\"2023-10-09T11:26:49.324649Z\\"),\\n  \\"updated_at\\": new Date(\\"2023-10-09T11:26:49.324649Z\\"),\\n  \\"top_memo_structure\\": [\\n    \\"employee_email\\"\\n  ],\\n  \\"expense_memo_structure\\": [\\n    \\"employee_email\\",\\n    \\"merchant\\",\\n    \\"purpose\\",\\n    \\"category\\",\\n    \\"spent_on\\",\\n    \\"report_number\\",\\n    \\"expense_link\\"\\n  ],\\n  \\"schedule_is_enabled\\": true,\\n  \\"workspace\\": 1,\\n  \\"interval_hours\\": 1\\n}"},{"name":"businessCentralCredentialsCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/business-central/business-central-configuration/business-central-connector.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"businessCentralExportSettingCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/business-central/business-central-configuration/business-central-export-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"businessCentralFieldsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"IntegrationField[]","defaultValue":"[\\n  {\\n    \\"attribute_type\\": \\"LOCATION\\",\\n    \\"display_name\\": \\"Location\\"\\n  },\\n  {\\n    \\"attribute_type\\": \\"CATEGORY\\",\\n    \\"display_name\\": \\"Category\\"\\n  },\\n  {\\n    \\"attribute_type\\": \\"Employee\\",\\n    \\"display_name\\": \\"Employee\\"\\n  }\\n]"},{"name":"businessCentralImportSettingGetCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/business-central/business-central-configuration/business-central-import-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"cloneSetting","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(importSettingForm),\\n    appName: AppName.INTACCT,\\n    accountingFieldOptions: QBOImportSettingModel.getQBOFields(),\\n    fyleFieldOptions: [{ attribute_type: \'PROJECT\', display_name: \'Project\', is_dependent: false}, { attribute_type: \'COST_CENTER\', display_name: \'Cost Center\', is_dependent: false}, { attribute_type: \'CUSTOM_FIELD\', display_name: \'Custom Field\', is_dependent: false}],\\n    isDestinationFixedImport: true,\\n    isCloneSettingView: true\\n  }\\n}"},{"name":"connectAwsS3MockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    \\"application\\": \\"rest\\",\\n    \\"id\\": 22,\\n    \\"name\\": \\"S3 Connection\\",\\n    \\"description\\": null,\\n    \\"authorized_at\\": new Date(),\\n    \\"authorization_status\\": \\"success\\",\\n    \\"authorization_error\\": null,\\n    \\"created_at\\": new Date(),\\n    \\"updated_at\\": new Date(),\\n    \\"external_id\\": null,\\n    \\"folder_id\\": 12,\\n    \\"parent_id\\": null\\n}"},{"name":"connectGustoMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    \'message\': {\\n        \'connection_id\': \'123\'\\n    }\\n}"},{"name":"connectTravelperkMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    \'message\': {\\n        \'connection_id\': \'123\'\\n    },\\n    \'managed_user_id\': 234\\n}"},{"name":"dashboard","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Shimmers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    exportLogHeader: \'Dashboard\',\\n    isDashboardImportInProgress: true\\n  }\\n}"},{"name":"demoVideoLinks","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"DemoVideo","defaultValue":"{\\n    fyle: {\\n        onboarding: {\\n            INTACCT: \'https://www.youtube.com/embed/2oYdc8KcQnk\',\\n            // TODO: Update link for Sage 300\\n            SAGE300: \'https://www.youtube.com/embed/2oYdc8KcQnk\',\\n            QBO: \'https://www.youtube.com/embed/b63lS2DG5j4\',\\n            // TODO: Update link for MS Dynamics\\n            BUSINESS_CENTRAL: \'https://www.youtube.com/embed/2oYdc8KcQnk\'\\n        }\\n    }\\n}"},{"name":"destinationAttributes","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BusinessCentralDestinationAttributes[]","defaultValue":"[\\n  {\\n    \\"id\\": 33929,\\n    \\"attribute_type\\": \\"COMPANY\\",\\n    \\"display_name\\": \\"Company\\",\\n    \\"value\\": \\"Columbus\\",\\n    \\"destination_id\\": \\"9f9cbd27-880e-441e-8cf\\",\\n    \\"auto_created\\": false,\\n    \\"active\\": true,\\n    \\"created_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\"),\\n    \\"updated_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\"),\\n    \\"workspace\\": 343,\\n    \\"detail\\": null\\n  }\\n]"},{"name":"destinationAttributes","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","defaultValue":"[\\n    {\\n        \\"id\\": 214726,\\n        \\"attribute_type\\": \\"CHARGE_CARD_NUMBER\\",\\n        \\"display_name\\": \\"Charge Card Account\\",\\n        \\"value\\": \\"1234\\",\\n        \\"destination_id\\": \\"1234\\",\\n        \\"auto_created\\": false,\\n        \\"active\\": false,\\n        \\"detail\\": null,\\n        \\"created_at\\": new Date(),\\n        \\"updated_at\\": new Date(),\\n        \\"workspace\\": 313\\n    },\\n    {\\n        \\"id\\": 214731,\\n        \\"attribute_type\\": \\"VENDOR\\",\\n        \\"display_name\\": \\"vendor\\",\\n        \\"value\\": \\"A-1 Electric Company\\",\\n        \\"destination_id\\": \\"V100\\",\\n        \\"auto_created\\": false,\\n        \\"active\\": true,\\n        \\"detail\\": {\\n            \\"email\\": null\\n        },\\n        \\"created_at\\": new Date(),\\n        \\"updated_at\\": new Date(),\\n        \\"workspace\\": 313\\n    }\\n]"},{"name":"disabledButton","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepFooter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    ctaText: \'Save and Continue\',\\n    isButtonDisabled: true\\n  }\\n}"},{"name":"dropdown","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    iconSource: \'calendar\',\\n    label: \'Set the Credit Card export date as\',\\n    options: [{label: \'Transaction date\', value: \'transaction_date\'}, {label: \'Expense date\', value: \'expense_date\'}],\\n    placeholder: \'Select export date\',\\n    form: setupStoryBookFormGroup(new FormGroup({creditCardExportDate: new FormControl(null)})),\\n    formControllerName: \'emotion\',\\n    inputType: InputType.DROPDOWN,\\n    dropdownDisplayKey: \'label\',\\n    tooltipText: \'The selected date will reflect in the corporate card expenses exported to QuickBooks Online.\'\\n  }\\n}"},{"name":"dummyErrorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/interceptor/jwt.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  status: 401,\\n  statusText: \'Login Failed\',\\n  error: {\\n    message: \'Reason for failure . . .\'\\n  }\\n}"},{"name":"dynamicDestinationImport","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(importSettingForm),\\n    appName: AppName.INTACCT,\\n    accountingFieldOptions: QBOImportSettingModel.getQBOFields(),\\n    fyleFieldOptions: [{ attribute_type: \'PROJECT\', display_name: \'Project\', is_dependent: false}, { attribute_type: \'COST_CENTER\', display_name: \'Cost Center\', is_dependent: false}, { attribute_type: \'CUSTOM_FIELD\', display_name: \'Custom Field\', is_dependent: false}],\\n    isDestinationFixedImport: false\\n  }\\n}"},{"name":"employeeSettingsCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbo/qbo-configuration/qbo-employee-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"emptyDestinationAttribute","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{ id: null, name: null }"},{"name":"enabledButton","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepFooter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    ctaText: \'Save and Continue\',\\n    isButtonDisabled: false,\\n    showBackButton: true,\\n    showResetButton: true\\n  }\\n}"},{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"env"},{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/qbd.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'QBO\'\\n    }\\n}"},{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/si/si.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'Halo MasterChief\'\\n    }\\n}"},{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'QBO\'\\n    }\\n}"},{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'QBO\'\\n    }\\n}"},{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/export-setting/export-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'QBO\'\\n    }\\n  }"},{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'QBO\'\\n    }\\n  }"},{"name":"expenseFilterCondition","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"ConditionField[]","defaultValue":"[\\n  {\\n    \\"field_name\\": \\"employee_email\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": false\\n  },\\n  {\\n    \\"field_name\\": \\"claim_number\\",\\n    \\"type\\": \\"TEXT\\",\\n    \\"is_custom\\": false\\n  },\\n  {\\n    \\"field_name\\": \\"report_title\\",\\n    \\"type\\": \\"TEXT\\",\\n    \\"is_custom\\": false\\n  },\\n  {\\n    \\"field_name\\": \\"spent_at\\",\\n    \\"type\\": \\"DATE\\",\\n    \\"is_custom\\": false\\n  },\\n  {\\n    \\"field_name\\": \\"Class\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  },\\n  {\\n    \\"field_name\\": \\"Fyle Categories\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  },\\n  {\\n    \\"field_name\\": \\"Operating System\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  },\\n  {\\n    \\"field_name\\": \\"User Dimension\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  },\\n  {\\n    \\"field_name\\": \\"Asdasdas\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  },\\n  {\\n    \\"field_name\\": \\"Nilesh Custom Field\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  }\\n]"},{"name":"expenseFilterCondition","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"ConditionField[]","defaultValue":"[\\n    {\\n        \\"field_name\\": \\"employee_email\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": false\\n    },\\n    {\\n        \\"field_name\\": \\"claim_number\\",\\n        \\"type\\": \\"TEXT\\",\\n        \\"is_custom\\": false\\n    },\\n    {\\n        \\"field_name\\": \\"report_title\\",\\n        \\"type\\": \\"TEXT\\",\\n        \\"is_custom\\": false\\n    },\\n    {\\n        \\"field_name\\": \\"spent_at\\",\\n        \\"type\\": \\"DATE\\",\\n        \\"is_custom\\": false\\n    },\\n    {\\n        \\"field_name\\": \\"Class\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    },\\n    {\\n        \\"field_name\\": \\"Fyle Categories\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    },\\n    {\\n        \\"field_name\\": \\"Operating System\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    },\\n    {\\n        \\"field_name\\": \\"User Dimension\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    },\\n    {\\n        \\"field_name\\": \\"Asdasdas\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    },\\n    {\\n        \\"field_name\\": \\"Nilesh Custom Field\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    }\\n]"},{"name":"expenseFiltersGet","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"ExpenseFilterResponse","defaultValue":"{\\n  \\"count\\": 2,\\n  \\"next\\": null,\\n  \\"previous\\": null,\\n  \\"results\\": [\\n    {\\n      \\"id\\": 45,\\n      \\"condition\\": \\"spent_at\\",\\n      \\"operator\\": Operator.LessThan,\\n      \\"values\\": [\\n          \\"2023-10-16T17:00:00.000Z\\"\\n      ],\\n      \\"rank\\": 1,\\n      \\"join_by\\": JoinOption.AND,\\n      \\"is_custom\\": false,\\n      \\"custom_field_type\\": null,\\n      \\"created_at\\": new Date(),\\n      \\"updated_at\\": new Date(),\\n      \\"workspace\\": 383\\n    },\\n    {\\n      \\"id\\": 46,\\n      \\"condition\\": \\"employee_email\\",\\n      \\"operator\\": Operator.IExact,\\n      \\"values\\": [\\n          \\"aba@gamil.com\\"\\n      ],\\n      \\"rank\\": 2,\\n      \\"join_by\\": null,\\n      \\"is_custom\\": false,\\n      \\"custom_field_type\\": null,\\n      \\"created_at\\": new Date(),\\n      \\"updated_at\\": new Date(),\\n      \\"workspace\\": 383\\n    }\\n  ]\\n}"},{"name":"expenseFiltersGet","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"ExpenseFilterResponse","defaultValue":"{\\n    \\"count\\": 2,\\n    \\"next\\": null,\\n    \\"previous\\": null,\\n    \\"results\\": [\\n        {\\n            \\"id\\": 45,\\n            \\"condition\\": \\"spent_at\\",\\n            \\"operator\\": Operator.LessThan,\\n            \\"values\\": [\\n                \\"2023-10-16T17:00:00.000Z\\"\\n            ],\\n            \\"rank\\": 1,\\n            \\"join_by\\": JoinOption.AND,\\n            \\"is_custom\\": false,\\n            \\"custom_field_type\\": null,\\n            \\"created_at\\": new Date(),\\n            \\"updated_at\\": new Date(),\\n            \\"workspace\\": 383\\n        },\\n        {\\n            \\"id\\": 46,\\n            \\"condition\\": \\"employee_email\\",\\n            \\"operator\\": Operator.IExact,\\n            \\"values\\": [\\n                \\"aba@gamil.com\\"\\n            ],\\n            \\"rank\\": 2,\\n            \\"join_by\\": null,\\n            \\"is_custom\\": false,\\n            \\"custom_field_type\\": null,\\n            \\"created_at\\": new Date(),\\n            \\"updated_at\\": new Date(),\\n            \\"workspace\\": 383\\n        }\\n    ]\\n}"},{"name":"expiredToken","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConnector.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    accountingAppTitle: \'QuickBooks Online Company\',\\n    accountingCompanyName: \'Sandbox 1\',\\n    fyleOrgName: \'Fyle Org 1\',\\n    accountingCompanyTokenExpired: true,\\n    isAccountingCompanyConnected: true,\\n    showDisconnect: false,\\n    accountingCompanyConnectionInProgress: false,\\n    switchLinkText: \'Disconnect\'\\n  }\\n}"},{"name":"exportInProgress","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    loaderType: LoaderType.INDETERMINATE,\\n    isImportInProgress: false,\\n    isExportInProgress: true,\\n    exportableAccountingExportIds: [1, 2, 3],\\n    failedExpenseGroupCount: 0,\\n    exportProgressPercentage: 50,\\n    accountingExportSummary: {\\n      id: 1,\\n      last_exported_at: \'2021-09-01T08:00:00Z\',\\n      next_export_at: \'2021-09-01T08:00:00Z\',\\n      export_mode: \'AUTO\',\\n      total_accounting_export_count: 1,\\n      successful_accounting_export_count: 1,\\n      failed_accounting_export_count: 0,\\n      created_at: \'2021-09-01T08:00:00Z\',\\n      updated_at: \'2021-09-01T08:00:00Z\',\\n      workspace: 1\\n    },\\n    processedCount: 1\\n  }\\n}"},{"name":"exportLog","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Shimmers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    isExportLogFetchInProgress: true,\\n    exportLogHeader: \'Export Logs\'\\n  }\\n}"},{"name":"exportSettingsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingGet","defaultValue":"{\\n  \\"id\\": 38,\\n  \\"created_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\"),\\n  \\"reimbursable_expenses_export_type\\": BusinessCentralExportType.JOURNAL_ENTRY,\\n  \\"default_bank_account_name\\": \\"XYZ\\",\\n  \\"default_bank_account_id\\": \\"1232\\",\\n  \\"reimbursable_expense_state\\": ExpenseState.PAYMENT_PROCESSING,\\n  \\"reimbursable_expense_date\\": ExportDateType.LAST_SPENT_AT,\\n  \\"reimbursable_expense_grouped_by\\": ExpenseGroupedBy.EXPENSE,\\n  \\"credit_card_expense_export_type\\": BusinessCentralExportType.JOURNAL_ENTRY,\\n  \\"credit_card_expense_state\\": CCCExpenseState.PAYMENT_PROCESSING,\\n  \\"default_credit_card_account_name\\": \\"ASSS\\",\\n  \\"default_credit_card_account_id\\": \\"212\\",\\n  \\"credit_card_expense_grouped_by\\": ExpenseGroupedBy.EXPENSE,\\n  \\"credit_card_expense_date\\": ExportDateType.LAST_SPENT_AT,\\n  \\"updated_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\"),\\n  \\"workspace\\": 1,\\n  \\"credit_card_entity_name_preference\\": \\"EMPLOYEE\\",\\n  \\"employee_mapping\\": \\"EMAIL\\"\\n}"},{"name":"EXPOSE_INTACCT_NEW_APP","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/common/events.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"true"},{"name":"featureConfigs","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"FeatureConfiguration","defaultValue":"{\\n    fyle: {\\n        reimbursableExpenses: true\\n    },\\n    coco: {\\n        reimbursableExpenses: false\\n    }\\n}"},{"name":"fixedDestinationImport","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(importSettingForm),\\n    appName: AppName.QBO,\\n    accountingFieldOptions: QBOImportSettingModel.getQBOFields(),\\n    fyleFieldOptions: [{ attribute_type: \'PROJECT\', display_name: \'Project\', is_dependent: false}, { attribute_type: \'COST_CENTER\', display_name: \'Cost Center\', is_dependent: false}, { attribute_type: \'CUSTOM_FIELD\', display_name: \'Custom Field\', is_dependent: false}],\\n    isDestinationFixedImport: true\\n  }\\n}"},{"name":"fixture","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"QBOImportSettingGet","defaultValue":"{\\n  workspace_general_settings: {\\n    import_categories: true,\\n    import_items: true,\\n    import_vendors_as_merchants: true,\\n    charts_of_accounts: [\'Expense\'],\\n    import_tax_codes: true\\n  },\\n  general_mappings: {\\n    default_tax_code: {\\n      id: \'1\',\\n      name: \'Tax Code\'\\n    }\\n  },\\n  mapping_settings: [\\n    {\\n      id: 1,\\n      created_at: new Date(),\\n      updated_at: new Date(),\\n      workspace: 1,\\n      source_field: \'PROJECT\',\\n      destination_field: \'CUSTOMER\',\\n      import_to_fyle: true,\\n      is_custom: true,\\n      source_placeholder: \'source_placeholder\'\\n    },\\n    {\\n      id: 1,\\n      created_at: new Date(),\\n      updated_at: new Date(),\\n      workspace: 1,\\n      source_field: \'COST_CENTER\',\\n      destination_field: \'CLASS\',\\n      import_to_fyle: false,\\n      is_custom: true,\\n      source_placeholder: \'source_placeholder\'\\n    }\\n  ],\\n  workspace_id: 1\\n}"},{"name":"form","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"setupStoryBookFormGroup(new FormGroup({\\n  emotion: new FormControl(\'hehe\')\\n}))"},{"name":"fyleFieldsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"FyleField[]","defaultValue":"[\\n  {\\n    \\"attribute_type\\": \\"CATEGORY\\",\\n    \\"display_name\\": \\"Category\\",\\n    \\"is_dependent\\": true\\n  },\\n  {\\n    \\"attribute_type\\": \\"Employee\\",\\n    \\"display_name\\": \\"Employee\\",\\n    \\"is_dependent\\": true\\n  }\\n]"},{"name":"fyleFieldsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"FyleField[]","defaultValue":"[\\n    {\\n        \\"attribute_type\\": \\"COST_CENTER\\",\\n        \\"display_name\\": \\"Cost Center\\",\\n        \\"is_dependent\\": false\\n    },\\n    {\\n        \\"attribute_type\\": \\"PROJECT\\",\\n        \\"display_name\\": \\"Project\\",\\n        \\"is_dependent\\": false\\n    },\\n    {\\n        \\"attribute_type\\": \\"CLASS\\",\\n        \\"display_name\\": \\"Class\\",\\n        \\"is_dependent\\": false\\n    }\\n]"},{"name":"generateTokenData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/org/org.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    token: \'widget_token_comes_here\'\\n}"},{"name":"getMappingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"MappingResponse","defaultValue":"{\\n    \\"count\\": 16,\\n    \\"next\\": \\"http://localhost:8008/api/workspaces/4/qbd_mappings/?attribute_type=CORPORATE_CARD&limit=10&offset=10\\",\\n    \\"previous\\": \\"null\\",\\n    \\"results\\": [\\n        {\\n          \\"id\\": 59,\\n          \\"attribute_type\\": \\"CORPORATE_CARD\\",\\n          \\"source_value\\": \\"Bank of America - 1319\\",\\n          \\"source_id\\": \\"baccK5ssSzxv1g\\",\\n          \\"destination_value\\": \\"eefs\\",\\n          \\"created_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"updated_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"workspace\\": 4\\n        },\\n        {\\n          \\"id\\": 61,\\n          \\"attribute_type\\": \\"CORPORATE_CARD\\",\\n          \\"source_value\\": \\"American Express - 58057\\",\\n          \\"source_id\\": \\"baccsWbRJpSbnB\\",\\n          \\"destination_value\\": null,\\n          \\"created_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"updated_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"workspace\\": 4\\n        },\\n        {\\n          \\"id\\": 62,\\n          \\"attribute_type\\": \\"CORPORATE_CARD\\",\\n          \\"source_value\\": \\"American Express - 83167\\",\\n          \\"source_id\\": \\"baccAGZQWkwSnZ\\",\\n          \\"destination_value\\": null,\\n          \\"created_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"updated_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"workspace\\": 4\\n        }\\n    ]\\n}"},{"name":"getMappingStatsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"MappingStats","defaultValue":"{\\n    \\"all_attributes_count\\": 16,\\n    \\"unmapped_attributes_count\\": 12\\n}"},{"name":"getQbdAccountingExports","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QbdExportTriggerResponse","defaultValue":"{\\n    count: 2,\\n    next: null,\\n    previous: null,\\n    results: [\\n        {\\n            id: 2,\\n            type: \\"EXPORT_BILLS\\",\\n            fund_source: \'CCC\',\\n            file_id: \\"fieZ6GMSmgkb\\",\\n            task_id: null,\\n            status: \\"COMPLETE\\",\\n            errors: null,\\n            created_at: new Date(\\"2023-02-09\\"),\\n            updated_at: new Date(\\"2023-02-09\\"),\\n            workspace: 1\\n        },\\n        {\\n            id: 1,\\n            type: \\"FETCHING_REIMBURSABLE_EXPENSES\\",\\n            fund_source: \'Reimbursable\',\\n            file_id: null,\\n            task_id: null,\\n            status: \\"IN_PROGRESS\\",\\n            errors: null,\\n            created_at: new Date(\\"2023-02-09T12:39:31.005110Z\\"),\\n            updated_at: new Date(\\"2023-02-09T12:39:31.005110Z\\"),\\n            workspace: 1\\n        }\\n\\n    ]\\n}"},{"name":"getQbdAccountingExports2","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QbdExportTriggerResponse","defaultValue":"{\\n    count: 0,\\n    next: null,\\n    previous: null,\\n    results: []\\n}"},{"name":"gustoConfigurationCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"GustoMockConfiguration","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"GustoConfiguration","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    recipe_id: \'1\',\\n    recipe_data: \'xyz\',\\n    recipe_status: true,\\n    additional_email_options: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ],\\n    emails_selected: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ]\\n}"},{"name":"GustoMockConfigurationPayload","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"GustoConfigurationPost","defaultValue":"{\\n    org: 1,\\n    additional_email_options: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ],\\n    emails_selected: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ]\\n}"},{"name":"GustoMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Gusto","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    folder_id: \'1\',\\n    package_id: \'1\',\\n    created_at: new Date(),\\n    updated_at: new Date(),\\n    connection_id: \'cyx\'\\n}"},{"name":"GustoMockWithoutToken","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Gusto","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    folder_id: \'\',\\n    package_id: \'\',\\n    created_at: new Date(),\\n    updated_at: new Date(),\\n    connection_id: \'\'\\n}"},{"name":"httpOptions","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/common/api.service.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  headers: new HttpHeaders({\\n    \'Content-Type\': \'application/json\'\\n  }),\\n  body: {}\\n}"},{"name":"httpOptions","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbd/qbd-core/qbd-api.service.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  headers: new HttpHeaders({\\n    \'Content-Type\': \'application/json\'\\n  })\\n}"},{"name":"httpOptions","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/si/si-core/si-api.service.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  headers: new HttpHeaders({\\n    \'Content-Type\': \'application/json\'\\n  }),\\n  body: {}\\n}"},{"name":"importInProgress","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    loaderType: LoaderType.INDETERMINATE,\\n    isImportInProgress: true,\\n    isExportInProgress: false,\\n    exportableAccountingExportIds: [1, 2, 3],\\n    failedExpenseGroupCount: 0,\\n    exportProgressPercentage: 50,\\n    accountingExportSummary: {\\n      id: 1,\\n      last_exported_at: \'2021-09-01T08:00:00Z\',\\n      next_export_at: \'2021-09-01T08:00:00Z\',\\n      export_mode: \'AUTO\',\\n      total_accounting_export_count: 1,\\n      successful_accounting_export_count: 1,\\n      failed_accounting_export_count: 0,\\n      created_at: \'2021-09-01T08:00:00Z\',\\n      updated_at: \'2021-09-01T08:00:00Z\',\\n      workspace: 1\\n    },\\n    processedCount: 1\\n  }\\n}"},{"name":"importSettingForm","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"QBOImportSettingModel.mapAPIResponseToFormGroup(fixture)"},{"name":"importSettingsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BusinessCentralImportSettingsGet","defaultValue":"{\\n  \\"id\\": 123,\\n  \\"import_categories\\": true,\\n  \\"mapping_settings\\": [],\\n  \\"workspace_id\\": 343,\\n  \\"created_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\"),\\n  \\"updated_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\")\\n}"},{"name":"importSettingsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"Sage300ImportSettingGet","defaultValue":"{\\n    \\"import_settings\\": {\\n        \\"import_categories\\": false,\\n        \\"import_vendors_as_merchants\\": false\\n    },\\n    \\"mapping_settings\\": [\\n        {\\n            \\"source_field\\": \\"COST_CENTER\\",\\n            \\"destination_field\\": \\"CLASS\\",\\n            \\"import_to_fyle\\": false,\\n            \\"is_custom\\": false,\\n            \\"source_placeholder\\": null\\n        },\\n        {\\n            \\"source_field\\": \\"PROJECT\\",\\n            \\"destination_field\\": \\"PROJECT\\",\\n            \\"import_to_fyle\\": true,\\n            \\"is_custom\\": false,\\n            \\"source_placeholder\\": null\\n        }\\n    ],\\n    \\"dependent_field_settings\\": {\\n        \\"cost_code_field_name\\": \\"Sage Cost COde\\",\\n        \\"cost_code_placeholder\\": \\"null\\",\\n        \\"cost_category_field_name\\": \\"Sage Cost Type\\",\\n        \\"cost_category_placeholder\\": \\"null\\",\\n        \\"is_import_enabled\\": true\\n    },\\n    workspaceId: 312\\n}"},{"name":"JoinOptions","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  AND: \'AND\',\\n  OR: \'OR\'\\n}"},{"name":"kbArticles","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"KbArticle","defaultValue":"{\\n    fyle: {\\n        topLevelArticles: {\\n            BAMBOO_HR: \'https://help.fylehq.com/en/articles/6845034-fyle-bamboo-hr-integration\',\\n            QBD: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle#quickbooks-desktop\',\\n            INTACCT: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle\',\\n            TRAVELPERK: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle\',\\n            GUSTO: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle\',\\n            SAGE300: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle\',\\n            BUSINESS_CENTRAL: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle\'\\n        },\\n        onboardingArticles: {\\n            INTACCT: {\\n                IMPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_85f929716c\',\\n                EXPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_6492c5038d\',\\n                ADVANCED_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_3f6718633c\',\\n                LANDING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration\',\\n                CONNECTOR: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_38e0c9bea6\',\\n                SKIP_EXPORT: \'https://help.fylehq.com/en/articles/7882821-how-to-skip-exporting-specific-expenses-from-fyle-to-sage-intacct\'\\n            },\\n            // TODO: Update KB articles for Sage 300\\n            SAGE300: {\\n                IMPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_85f929716c\',\\n                EXPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_6492c5038d\',\\n                ADVANCED_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_3f6718633c\',\\n                LANDING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration\',\\n                SKIP_EXPORT: \'https://help.fylehq.com/en/articles/7882821-how-to-skip-exporting-specific-expenses-from-fyle-to-sage-intacct\'\\n            },\\n            // TODO: Update KB articles for QBO\\n            QBO: {\\n                LANDING: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle#quickbooks-2-0\',\\n                CONNECTOR: \'https://help.fylehq.com/en/articles/6208620-how-to-set-up-the-fyle-quickbooks-online-integration-v2-0\',\\n                EMPLOYEE_SETTING: \'https://help.fylehq.com/en/articles/6208620-how-to-set-up-the-fyle-quickbooks-online-integration-v2-0#h_d70f1d54cc\',\\n                EXPORT_SETTING: \'https://help.fylehq.com/en/articles/6208620-how-to-set-up-the-fyle-quickbooks-online-integration-v2-0#h_dca1353686\',\\n                IMPORT_SETTING: \'https://help.fylehq.com/en/articles/6208620-how-to-set-up-the-fyle-quickbooks-online-integration-v2-0#h_b8a2df129f\',\\n                ADVANCED_SETTING: \'https://help.fylehq.com/en/articles/6208620-how-to-set-up-the-fyle-quickbooks-online-integration-v2-0#h_18c28de6c7\',\\n                SKIP_EXPORT: \'https://help.fylehq.com/en/articles/7044785-how-to-skip-exporting-specific-expenses-from-fyle-to-quickbooks-online\'\\n            },\\n            // TODO: Update KB articles for MS Dynamics\\n            BUSINESS_CENTRAL: {\\n                IMPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_85f929716c\',\\n                EXPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_6492c5038d\',\\n                ADVANCED_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_3f6718633c\',\\n                LANDING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration\',\\n                SKIP_EXPORT: \'https://help.fylehq.com/en/articles/7882821-how-to-skip-exporting-specific-expenses-from-fyle-to-sage-intacct\'\\n            }\\n        }\\n    }\\n}"},{"name":"loaderButton","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepFooter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    ctaText: \'Saving\',\\n    isButtonDisabled: true\\n  }\\n}"},{"name":"loginResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/interceptor/jwt.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Token","defaultValue":"{\\n  access_token: \'\',\\n  expires_in: 3600,\\n  refresh_token: \'ffff\',\\n  token_type: \'Bearer\',\\n  user: {\\n    access_token: \'\',\\n    email: \'ashwin.t@fyle.in\',\\n    full_name: \'Joanna\',\\n    org_id: \'orHVw3ikkCxJ\',\\n    org_name: \'Anagha Org\',\\n    refresh_token: \'y.y.y\',\\n    user_id: \'usqywo0f3nBY\',\\n    active: true,\\n    admin: true,\\n    id: 1,\\n    last_login: null,\\n    password: \'\',\\n    staff: true\\n  }\\n}"},{"name":"mapping","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Shimmers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    exportLogHeader: \'Mapping\',\\n    isMappingTableShimmers: true\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/AppLandingPageBody.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<AppLandingPageBodyComponent>","defaultValue":"{\\n  title: \'Onboarding/Landing/AppLandingPageBody\',\\n  component: AppLandingPageBodyComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: AppLandingPageBodyComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [AppLandingPageBodyComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/AppLandingPageHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<AppLandingPageHeaderComponent>","defaultValue":"{\\n  title: \'Onboarding/Landing/AppLandingPageHeader\',\\n  component: AppLandingPageHeaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: AppLandingPageHeaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [AppLandingPageHeaderComponent],\\n      imports: [CommonModule, ButtonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<CloneSettingFieldComponent>","defaultValue":"{\\n  title: \'Onboarding/CloneSetting/CloneSettingField\',\\n  component: CloneSettingFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: CloneSettingFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, BrowserAnimationsModule, SharedModule, RippleModule, InputSwitchModule, FormsModule, ReactiveFormsModule, DropdownModule, MultiSelectModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' }), TooltipModule]\\n    })\\n  ],\\n  argTypes: {\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<CloneSettingHeaderComponent>","defaultValue":"{\\n  title: \'Onboarding/CloneSetting/CloneSettingHeader\',\\n  component: CloneSettingHeaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: CloneSettingHeaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [CloneSettingHeaderComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConfirmationDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationConfirmationDialogComponent>","defaultValue":"{\\n  title: \'Configuration/Dialog/ConfigurationConfirmationDialog\',\\n  component: ConfigurationConfirmationDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationConfirmationDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationConfirmationDialogComponent],\\n      imports: [CommonModule, ButtonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConnector.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationConnectorComponent>","defaultValue":"{\\n  title: \'Configuration/Connector/ConfigurationConnector\',\\n  component: ConfigurationConnectorComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationConnectorComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationCustomFieldCreationDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationCustomFieldCreationDialogComponent>","defaultValue":"{\\n  title: \'Configuration/ImportSetting/ConfigurationCustomFieldCreationDialog\',\\n  component: ConfigurationCustomFieldCreationDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationCustomFieldCreationDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, DialogModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationImportFieldComponent>","defaultValue":"{\\n  title: \'Configuration/ImportSetting/ConfigurationImportField\',\\n  component: ConfigurationImportFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationImportFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, BrowserAnimationsModule, SharedModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationInfoLabel.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationInfoLabelComponent>","defaultValue":"{\\n  title: \'Configuration/ImportSetting/ConfigurationInfoLabel\',\\n  component: ConfigurationInfoLabelComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationInfoLabelComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationInfoLabelComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationLabel.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationLabelComponent>","defaultValue":"{\\n  title: \'Configuration/ExportSetting/ConfigurationLabel\',\\n  component: ConfigurationLabelComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationLabelComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationLabelComponent, MandatoryFieldComponent],\\n      imports: [CommonModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationMultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationMultiSelectComponent>","defaultValue":"{\\n  title: \'Input/ConfigurationMultiSelect\',\\n  component: ConfigurationMultiSelectComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationMultiSelectComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, BrowserAnimationsModule, SharedModule, FormsModule, ReactiveFormsModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationRadioField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationRadioFieldComponent>","defaultValue":"{\\n  title: \'Configuration/ExportSetting/ConfigurationRadioField\',\\n  component: ConfigurationRadioFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationRadioFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationRadioFieldComponent],\\n      imports: [CommonModule, RadioButtonModule, FormsModule, ReactiveFormsModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationScheduleExport.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationScheduleExportComponent>","defaultValue":"{\\n  title: \'Configuration/AdvancedSetting/ConfigurationScheduleExport\',\\n  component: ConfigurationScheduleExportComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationScheduleExportComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, SharedModule, MultiSelectModule],\\n      providers: [MessageService, IntegrationsToastService]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationSelectField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationSelectFieldComponent>","defaultValue":"{\\n  title: \'Configuration/ConfigurationSelectField\',\\n  component: ConfigurationSelectFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationSelectFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule, BrowserAnimationsModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationSkipExport.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationSkipExportComponent>","defaultValue":"{\\n  title: \'Configuration/AdvancedSetting/ConfigurationSkipExport\',\\n  component: ConfigurationSkipExportComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationSkipExportComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationSkipExportComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepFooter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationStepFooterComponent>","defaultValue":"{\\n  title: \'Configuration/ConfigurationStepFooter\',\\n  component: ConfigurationStepFooterComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationStepFooterComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationStepFooterComponent],\\n      imports: [CommonModule, ButtonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationStepHeaderComponent>","defaultValue":"{\\n  title: \'Configuration/ConfigurationStepHeader\',\\n  component: ConfigurationStepHeaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationStepHeaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationStepHeaderComponent],\\n      imports: [CommonModule, TooltipModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepSubHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationStepSubHeaderComponent>","defaultValue":"{\\n  title: \'Configuration/AdvancedSetting/ConfigurationStepSubHeader\',\\n  component: ConfigurationStepSubHeaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationStepSubHeaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationStepSubHeaderComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationTextField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationTextFieldComponent>","defaultValue":"{\\n  title: \'Input/ConfigurationTextField\',\\n  component: ConfigurationTextFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationTextFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, SharedModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationToggleField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationToggleFieldComponent>","defaultValue":"{\\n  title: \'Configuration/ConfigurationToggleField\',\\n  component: ConfigurationToggleFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationToggleFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationToggleFieldComponent],\\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, InputSwitchModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardAccountingErrorDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DashboardAccountingErrorDialogComponent>","defaultValue":"{\\n  title: \'Dashboard/DashboardAccountingErrorDialog\',\\n  component: DashboardAccountingErrorDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DashboardAccountingErrorDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [DashboardAccountingErrorDialogComponent],\\n      imports: [CommonModule, TableModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardErrorSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DashboardErrorSectionComponent>","defaultValue":"{\\n  title: \'Dashboard/DashboardErrorSection\',\\n  component: DashboardErrorSectionComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DashboardErrorSectionComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule, BrowserAnimationsModule],\\n      providers: [\\n        IntegrationsToastService, MessageService,\\n        {\\n          provide: DashboardService,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: MappingService,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: WorkspaceService,\\n          useValue: {\\n          }\\n        }\\n      ]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportLogDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DashboardExportLogDialogComponent>","defaultValue":"{\\n  title: \'Dashboard/DashboardExportLogDialog\',\\n  component: DashboardExportLogDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DashboardExportLogDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [DashboardExportLogDialogComponent, ExportLogTableComponent, ExportLogChildTableDialogComponent, SnakeCaseToSpaceCasePipe],\\n      imports: [CommonModule, DialogModule, BrowserAnimationsModule, TableModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DashboardExportSectionComponent>","defaultValue":"{\\n  title: \'Dashboard/DashboardExportSection\',\\n  component: DashboardExportSectionComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DashboardExportSectionComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule, ProgressBarModule, TooltipModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSummarySection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DashboardExportSummarySectionComponent>","defaultValue":"{\\n  title: \'Dashboard/DashboardExportSummarySection\',\\n  component: DashboardExportSummarySectionComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DashboardExportSummarySectionComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule],\\n      providers: [\\n        {\\n          provide: AccountingExportService,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: ApiService,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: HttpClient,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: ExportLogService,\\n          useValue: {\\n          }\\n        }\\n      ]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DropdownComponent>","defaultValue":"{\\n  title: \'Input/Dropdown\',\\n  component: DropdownComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DropdownComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [DropdownComponent],\\n      imports: [CommonModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, DropdownModule, TooltipModule, RippleModule]\\n    })\\n  ],\\n  argTypes: {}\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/EmailMultiSelectField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<EmailMultiSelectFieldComponent>","defaultValue":"{\\n  title: \'Configuration/AdvancedSetting/EmailMultiSelectField\',\\n  component: EmailMultiSelectFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: EmailMultiSelectFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MandatoryErrorMessageComponent],\\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, BrowserAnimationsModule, SharedModule, MultiSelectModule, DialogModule, TooltipModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })],\\n      providers: [MessageService, IntegrationsToastService]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Error.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ErrorComponent>","defaultValue":"{\\n  title: \'Onboarding/Error\',\\n  component: ErrorComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ErrorComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })],\\n      providers: [MessageService, IntegrationsToastService]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogChildTableDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ExportLogChildTableDialogComponent>","defaultValue":"{\\n  title: \'ExportLog/ExportLogChildTableDialog\',\\n  component: ExportLogChildTableDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ExportLogChildTableDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ExportLogChildTableDialogComponent],\\n      imports: [CommonModule, DialogModule, BrowserAnimationsModule, TableModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogFilter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ExportLogFilterComponent>","defaultValue":"{\\n  title: \'ExportLog/ExportLogFilter\',\\n  component: ExportLogFilterComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ExportLogFilterComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule, BrowserAnimationsModule, DropdownModule, FormsModule, ReactiveFormsModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ExportLogTableComponent>","defaultValue":"{\\n  title: \'ExportLog/ExportLogTable\',\\n  component: ExportLogTableComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ExportLogTableComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, BrowserAnimationsModule, TableModule, SharedModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/GenericMappingV2.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<GenericMappingV2Component>","defaultValue":"{\\n  title: \'Mapping/GenericMappingV2\',\\n  component: GenericMappingV2Component,\\n  tags: [\'autodocs\'],\\n  render: (args: GenericMappingV2Component) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule, BrowserAnimationsModule],\\n      providers: [\\n        IntegrationsToastService, MessageService,\\n        {\\n          provide: MappingService,\\n          useValue: {\\n            getGenericMappingsV2: () => of(\\n              {\\n                count: 0,\\n                next: null,\\n                previous: null,\\n                results: []\\n              }\\n            ),\\n            getMappingStats: () => of({\\n              all_attributes_count: 10,\\n              unmapped_attributes_count: 10\\n            })\\n          }\\n        },\\n        {\\n          provide: WorkspaceService,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: ActivatedRoute,\\n          useValue: {\\n            snapshot: {\\n              params: {\\n                source_field: \'employee\'\\n              }\\n            }\\n          }\\n        }\\n      ]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MainMenu.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MainMenuComponent>","defaultValue":"{\\n  title: \'Core/MainMenu\',\\n  component: MainMenuComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MainMenuComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MainMenuComponent],\\n      imports: [CommonModule, TabMenuModule, RouterModule],\\n      providers: [{\\n        provide: ActivatedRoute,\\n        useValue: {\\n        }\\n      }]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MandatoryErrorMessage.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MandatoryErrorMessageComponent>","defaultValue":"{\\n  title: \'Core/MandatoryErrorMessage\',\\n  component: MandatoryErrorMessageComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MandatoryErrorMessageComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MandatoryErrorMessageComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MandatoryField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MandatoryFieldComponent>","defaultValue":"{\\n  title: \'Core/MandatoryField\',\\n  component: MandatoryFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MandatoryFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MandatoryFieldComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MappingCardHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MappingCardHeaderComponent>","defaultValue":"{\\n  title: \'Mapping/MappingCardHeader\',\\n  component: MappingCardHeaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MappingCardHeaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MappingCardHeaderComponent, SnakeCaseToSpaceCasePipe],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MappingFilter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MappingFilterComponent>","defaultValue":"{\\n  title: \'Mapping/MappingFilter\',\\n  component: MappingFilterComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MappingFilterComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, BrowserAnimationsModule, DropdownModule, InputTextModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MultiSelectComponent>","defaultValue":"{\\n  title: \'Input/MultiSelect\',\\n  component: MultiSelectComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MultiSelectComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MultiSelectComponent],\\n      imports: [CommonModule, BrowserAnimationsModule, SharedModule, FormsModule, ReactiveFormsModule, MultiSelectModule]\\n    })\\n  ],\\n  argTypes: {\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/OnboardingDone.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<OnboardingDoneComponent>","defaultValue":"{\\n  title: \'Onboarding/OnboardingDone\',\\n  component: OnboardingDoneComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: OnboardingDoneComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [OnboardingDoneComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Paginator.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<PaginatorComponent>","defaultValue":"{\\n  title: \'Core/Paginator\',\\n  component: PaginatorComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: PaginatorComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, DropdownModule, BrowserAnimationsModule, SharedModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/PreviewDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<PreviewDialogComponent>","defaultValue":"{\\n  title: \'Configuration/PreviewDialog\',\\n  component: PreviewDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: PreviewDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [PreviewDialogComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Shimmers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ShimmersComponent>","defaultValue":"{\\n  title: \'Core/Shimmers\',\\n  component: ShimmersComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ShimmersComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ShimmersComponent],\\n      imports: [CommonModule, SkeletonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/SkippedExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<SkippedExportLogTableComponent>","defaultValue":"{\\n  title: \'ExportLog/SkippedExportLogTable\',\\n  component: SkippedExportLogTableComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: SkippedExportLogTableComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [SkippedExportLogTableComponent],\\n      imports: [CommonModule, TableModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/SubMenu.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<SubMenuComponent>","defaultValue":"{\\n  title: \'Core/SubMenu\',\\n  component: SubMenuComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: SubMenuComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, TabMenuModule, RouterModule],\\n      providers: [{\\n        provide: ActivatedRoute,\\n        useValue: {\\n        }\\n      }]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Toggle.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ToggleComponent>","defaultValue":"{\\n  title: \'Input/Toggle\',\\n  component: ToggleComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ToggleComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ToggleComponent],\\n      imports: [CommonModule, BrowserAnimationsModule, InputSwitchModule, FormsModule, ReactiveFormsModule, RippleModule]\\n    })\\n  ],\\n  argTypes: {\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ZeroState.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ZeroStateComponent>","defaultValue":"{\\n  title: \'Core/ZeroState\',\\n  component: ZeroStateComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ZeroStateComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ZeroStateComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ZeroStateWithIllustration.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ZeroStateWithIllustrationComponent>","defaultValue":"{\\n  title: \'Core/ZeroStateWithIllustration\',\\n  component: ZeroStateWithIllustrationComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ZeroStateWithIllustrationComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ZeroStateWithIllustrationComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/loader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<LoaderComponent>","defaultValue":"{\\n  title: \'Core/Loader\',\\n  component: LoaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: LoaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [LoaderComponent],\\n      imports: [CommonModule, ProgressSpinnerModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"minimalUser","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/interceptor/jwt.fixture.ts","deprecated":false,"deprecationMessage":"","type":"MinimalUser","defaultValue":"{\\n  access_token: \'x.x.x\',\\n  email: \'ashwin.t@fyle.in\',\\n  full_name: \'Joanna\',\\n  org_id: \'orHVw3ikkCxJ\',\\n  org_name: \'Anagha Org\',\\n  refresh_token: \'y.y.y\',\\n  user_id: \'usqywo0f3nBY\'\\n}"},{"name":"mockDataComplete","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/mock.data.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    count: 1,\\n    next: null,\\n    previous: null,\\n    results: [\\n      {\\n        id: 8291,\\n        type: \\"DIRECT_COSTS\\",\\n        status: \\"COMPLETE\\",\\n        mapping_errors: [],\\n        sage_300_errors: null,\\n        created_at: \\"2023-10-09T09:48:30.802135Z\\",\\n        updated_at: \\"2023-10-09T09:48:35.369142Z\\",\\n        exported_at: \\"2023-10-09T09:48:38.929923Z\\",\\n        workspace: 313,\\n        response: {},\\n        purchase_invoice_id: 12,\\n        export_url: \\"odsifodkmf.com\\",\\n        direct_costs_id: null,\\n        sage_300_reimbursement: null\\n      }\\n    ]\\n  }"},{"name":"mockDataFailed","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/mock.data.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    count: 2,\\n    next: null,\\n    previous: null,\\n    results: [\\n      {\\n        id: 8290,\\n        type: \\"PURCHASE_INVOICE\\",\\n        status: \\"FAILED\\",\\n        mapping_errors: [\\n          {\\n            type: \\"Employee Mapping\\",\\n            value: \\"nilesh.p@fyle.in\\"\\n          },\\n          {\\n            type: \\"Category Mapping\\",\\n            value: \\"Unspecified\\"\\n          }\\n        ],\\n        sage_300_errors: {\\n          created_on: \\"2023-08-17T09:46:30Z\\",\\n          entity_id: \\"728406bd-32f6-4676-95ff-b06100a0f840\\",\\n          error_msg:\\n            \\"Exception of type \'DBI.Synchronization.Processing.TimberlineOffice.KeyAlreadyInUseException\' was thrown.\\",\\n          id: \\"6615abdf-733f-4190-a4ed-b06100a1166f\\",\\n          type_id: \\"4de325f1-a380-41cc-90ce-be1e02fef167\\",\\n          version: 12967\\n        },\\n        response: {},\\n        created_at: \\"2023-10-09T09:48:30.764031Z\\",\\n        updated_at: \\"2023-10-09T09:48:38.929923Z\\",\\n        exported_at: \\"2023-10-09T09:48:38.929923Z\\",\\n        workspace: 313,\\n        purchase_invoice_id: null,\\n        export_url: \\"odsifodkmf.com\\",\\n        direct_costs_id: null,\\n        sage_300_reimbursement: null\\n      }\\n    ]\\n  }"},{"name":"MODULE_PATHS","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/common/events.service.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\'mapping\', \'export_log\', \'configuration\', \'intacct\', \'qbd\']"},{"name":"multiSelect","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Select the accounts from QuickBooks Online to import as categories\',\\n    options: QBOImportSettingModel.getChartOfAccountTypesList(),\\n    placeholder: \'Select Chart of Accouts\',\\n    form: setupStoryBookFormGroup(new FormGroup({chartOfAccountTypes: new FormControl([\'Expense\'])})),\\n    formControllerName: \'chartOfAccountTypes\',\\n    inputType: InputType.MULTI_SELECT,\\n    dropdownDisplayKey: \'label\',\\n    tooltipText: \'By default expense will be selected. Open the dropdown to select more as per your requirements\'\\n  }\\n}"},{"name":"newField","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    placeholder: \'Select an option\',\\n    options: [{key: \'hehe\', value: \'hehe\'}, {\'key\': \'haha\', \'value\': \'haha\'}],\\n    form: newFieldForm,\\n    formControllerName: \'emotion\',\\n    displayKey: \'key\'\\n  }\\n}"},{"name":"newFieldForm","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"setupStoryBookFormGroup(new FormGroup({\\n  emotion: new FormControl()\\n}))"},{"name":"orgMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/org/org.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Org","defaultValue":"{\\n    id: 1,\\n    name: \'Fyle\',\\n    user: [1],\\n    fyle_org_id: \'org_1\',\\n    managed_user_id: \'1\',\\n    cluster_domain: \'fyle\',\\n    is_bamboo_connector: true,\\n    is_fyle_connected: true,\\n    is_sendgrid_connected: true,\\n    allow_gusto: true,\\n    allow_travelperk: true,\\n    created_at: new Date(),\\n    updated_at: new Date()\\n}"},{"name":"password","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationTextField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    customErrorMessage: \'Invalid Password\',\\n    formControllerName: \'userID\',\\n    isFieldMandatory: true,\\n    label: \'HH2 Password\',\\n    placeholder: \'Enter HH2 Password\',\\n    form: setupStoryBookFormGroup(new FormGroup({userID: new FormControl(\'\')})),\\n    type: \'password\'\\n  }\\n}"},{"name":"postMappingPayload","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"MappingPost","defaultValue":"{\\n    attribute_type: \\"CORPORATE_CARD\\",\\n    destination_value: \\"eefw\\",\\n    source_id: \\"baccK5ssSzxv1g\\",\\n    source_value: \\"Bank of America - 1319\\"\\n}"},{"name":"postMappingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Mapping","defaultValue":"{\\n    \\"id\\": 59,\\n    \\"attribute_type\\": \\"CORPORATE_CARD\\",\\n    \\"source_value\\": \\"Bank of America - 1319\\",\\n    \\"source_id\\": \\"baccK5ssSzxv1g\\",\\n    \\"destination_value\\": \\"eefw\\",\\n    \\"created_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n    \\"updated_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n    \\"workspace\\": 4\\n}"},{"name":"postQbdAccountingExports","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QbdAccountingExportDownload","defaultValue":"{\\n    accounting_export_id: 2,\\n    download_url: \\"fyle\\",\\n    file_id: \\"fieZ6GMSmgkb\\",\\n    workspace_id: 1\\n}"},{"name":"postQbdTriggerExportResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QbdExportTriggerGet","defaultValue":"{\\n    message: \\"Trigger successful\\",\\n    new_expenses_imported: true\\n}"},{"name":"postQbdTriggerExportResponse2","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QbdExportTriggerGet","defaultValue":"{\\n    message: \\"Trigger successful\\",\\n    new_expenses_imported: false\\n}"},{"name":"preFilled","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    placeholder: \'Select an option\',\\n    options: [{key: \'hehe\', value: \'hehe\'}, {\'key\': \'haha\', \'value\': \'haha\'}],\\n    form: form,\\n    formControllerName: \'emotion\',\\n    displayKey: \'key\'\\n  }\\n}"},{"name":"preview","ctype":"miscellaneous","subtype":"variable","file":".storybook/preview.ts","deprecated":false,"deprecationMessage":"","type":"Preview","defaultValue":"{\\n  decorators: [\\n    (Story: any, context: any) => {\\n      document.documentElement.setAttribute(\'data-theme\', \'fyle\');\\n      return Story(context);\\n    },\\n  ],\\n  parameters: {\\n    actions: { argTypesRegex: \\"^on[A-Z].*\\" },\\n    controls: {\\n      matchers: {\\n        color: /(background|color)$/i,\\n        date: /Date$/i,\\n      },\\n    },\\n  },\\n}"},{"name":"project","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MandatoryErrorMessage.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    customErrorMessage: \'Project is mandatory\'\\n  }\\n}"},{"name":"QBD","ctype":"miscellaneous","subtype":"variable","file":"src/stories/AppLandingPageHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBD,\\n    iconPath: \'assets/logos/quickbooks-desktop.svg\',\\n    appDescription: \'Import data from QBD to \' + brandingConfig.brandName + \' and Export expenses from \' + brandingConfig.brandName + \' to QBD. \',\\n    isLoading: false,\\n    isIntegrationSetupInProgress: false,\\n    isIntegrationConnected: false,\\n    redirectLink: \'qbd/onboarding/connector\',\\n    buttonText: \'Connect\',\\n    postConnectionRoute: \'qbd/onboarding/connector\'\\n  }\\n}"},{"name":"QBDAdvancedSettingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    expense_memo_structure: [\\n        \\"employee_email\\",\\n        \\"merchant\\",\\n        \\"purpose\\",\\n        \\"report_number\\",\\n        \\"expense_link\\"\\n    ],\\n    top_memo_structure: [\\n        \\"purpose\\"\\n    ],\\n    schedule_is_enabled: true,\\n    day_of_month: null,\\n    day_of_week: \\"MONDAY\\",\\n    frequency: QBDScheduleFrequency.WEEKLY,\\n    time_of_day: \\"12:00:00\\",\\n    emails_selected: [{name: \'shwetabh\', email: \\"shwetabh.kumar@fylehq.com\\"}],\\n    workspace: 1,\\n    schedule_id: null\\n}"},{"name":"QBDAdvancedSettingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    expense_memo_structure: [\\n        \\"employee_email\\",\\n        \\"merchant\\",\\n        \\"purpose\\",\\n        \\"report_number\\",\\n        \\"expense_link\\"\\n    ],\\n    top_memo_structure: [\\n        \\"purpose\\"\\n    ],\\n    schedule_is_enabled: false,\\n    day_of_month: null,\\n    day_of_week: \\"MONDAY\\",\\n    frequency: QBDScheduleFrequency.WEEKLY,\\n    time_of_day: \\"12:00:00\\",\\n    emails_selected: [{name: \'shwetabh\', email: \\"shwetabh.kumar@fylehq.com\\"}],\\n    workspace: 1,\\n    schedule_id: null\\n}"},{"name":"QBDAdvancedSettingResponse2","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    expense_memo_structure: [\\n        \\"employee_email\\",\\n        \\"merchant\\",\\n        \\"purpose\\",\\n        \\"report_number\\",\\n        \\"expense_link\\"\\n    ],\\n    top_memo_structure: [\\n        \\"purpose\\"\\n    ],\\n    schedule_is_enabled: true,\\n    day_of_month: \\"11\\",\\n    day_of_week: \\"MONDAY\\",\\n    frequency: QBDScheduleFrequency.MONTHLY,\\n    time_of_day: \\"12:00:00\\",\\n    emails_selected: [{name: \'shwetabh\', email: \\"shwetabh.kumar@fylehq.com\\"}],\\n    workspace: 1,\\n    schedule_id: null\\n}"},{"name":"QBDAdvancedSettingResponse2","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    expense_memo_structure: [],\\n    top_memo_structure: [],\\n    schedule_is_enabled: true,\\n    day_of_month: \\"01\\",\\n    day_of_week: null,\\n    frequency: null,\\n    time_of_day: null,\\n    emails_selected: [],\\n    workspace: 1,\\n    schedule_id: null\\n}"},{"name":"QBDAdvancedSettingResponse3","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    expense_memo_structure: [],\\n    top_memo_structure: [],\\n    schedule_is_enabled: true,\\n    day_of_month: null,\\n    day_of_week: null,\\n    frequency: QBDScheduleFrequency.DAILY,\\n    time_of_day: \'00:00:00\',\\n    emails_selected: [],\\n    workspace: 1,\\n    schedule_id: null\\n}"},{"name":"QBDEmailOptioResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"EmailOptions[]","defaultValue":"[{name: \'shwetabh\', email: \\"shwetabh.kumar@fylehq.com\\"}]"},{"name":"QBDExportSettingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/export-setting/export-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    reimbursable_expenses_export_type: QBDReimbursableExpensesObject.BILL,\\n    bank_account_name: \\"string\\",\\n    mileage_account_name: \\"string\\",\\n    reimbursable_expense_state: ExpenseState.PAYMENT_PROCESSING,\\n    reimbursable_expense_date: QBDExportDateType.SPENT_AT,\\n    reimbursable_expense_grouped_by: QBDExpenseGroupedBy.REPORT,\\n    credit_card_expense_export_type: QBDCorporateCreditCardExpensesObject.JOURNAL_ENTRY,\\n    credit_card_expense_state: CCCExpenseState.PAID,\\n    credit_card_entity_name_preference: QBDEntity.VENDOR,\\n    credit_card_account_name: \\"string\\",\\n    credit_card_expense_grouped_by: QBDExpenseGroupedBy.EXPENSE,\\n    credit_card_expense_date: QBDExportDateType.LAST_SPENT_AT,\\n    workspace: 1,\\n    is_simplify_report_closure_enabled: true\\n}"},{"name":"QBDExportSettingResponse2","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/export-setting/export-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingGet","defaultValue":"{\\n  id: 1,\\n  created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n  updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n  reimbursable_expenses_export_type: null,\\n  bank_account_name: null,\\n  mileage_account_name: null,\\n  reimbursable_expense_state: null,\\n  reimbursable_expense_date: null,\\n  reimbursable_expense_grouped_by: null,\\n  credit_card_expense_export_type: null,\\n  credit_card_expense_state: null,\\n  credit_card_entity_name_preference: null,\\n  credit_card_account_name: null,\\n  credit_card_expense_grouped_by: null,\\n  credit_card_expense_date: null,\\n  workspace: 1,\\n  is_simplify_report_closure_enabled: false\\n}"},{"name":"QBDFieldMappingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDFieldMappingGet","defaultValue":"{\\n    id: 1,\\n      created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n      updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n      class_type: \\"CLASS\\",\\n      project_type: \\"PROJECT\\",\\n      workspace: 1\\n}"},{"name":"QBDFieldMappingResponse2","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDFieldMappingGet","defaultValue":"{\\n    id: 1,\\n      created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n      updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n      class_type: null,\\n      project_type: null,\\n      workspace: 1\\n}"},{"name":"qbo","ctype":"miscellaneous","subtype":"variable","file":"src/stories/AppLandingPageHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    iconPath: \'assets/logos/qbo.svg\',\\n    appDescription: \'Import data from QuickBooks Online to \' + brandingConfig.brandName + \' and Export expenses from \' + brandingConfig.brandName + \' to QuickBooks Online. \',\\n    isLoading: false,\\n    isIntegrationSetupInProgress: false,\\n    isIntegrationConnected: false,\\n    redirectLink: \'qbo/onboarding/connector\',\\n    buttonText: \'Connect\',\\n    postConnectionRoute: \'qbo/onboarding/connector\',\\n    showQBOButton: true\\n  }\\n}"},{"name":"qboCredentialsCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbo/qbo-configuration/qbo-connector.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"qboImportSettingGetCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbo/qbo-configuration/qbo-import-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"readyState","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    isImportInProgress: false,\\n    isExportInProgress: false,\\n    exportableAccountingExportIds: [0],\\n    failedExpenseGroupCount: 0,\\n    exportProgressPercentage: 0,\\n    accountingExportSummary: {\\n      id: 1,\\n      last_exported_at: \'2021-09-01T08:00:00Z\',\\n      next_export_at: \'2021-09-01T08:00:00Z\',\\n      export_mode: \'AUTO\',\\n      total_accounting_export_count: 1,\\n      successful_accounting_export_count: 1,\\n      failed_accounting_export_count: 0,\\n      created_at: \'2021-09-01T08:00:00Z\',\\n      updated_at: \'2021-09-01T08:00:00Z\',\\n      workspace: 1\\n    },\\n    processedCount: 0\\n  }\\n}"},{"name":"refreshingDimension","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConnector.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    accountingAppTitle: \'QuickBooks Online Company\',\\n    accountingCompanyName: \'Sandbox 1\',\\n    fyleOrgName: \'Fyle Org 1\',\\n    accountingCompanyTokenExpired: false,\\n    isAccountingCompanyConnected: false,\\n    showDisconnect: false,\\n    accountingCompanyConnectionInProgress: true,\\n    switchLinkText: \'Disconnect\'\\n  }\\n}"},{"name":"sage300AdvancedSettingGetCache","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/sage300/sage300-configuration/sage300-advanced-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"sage300AdvancedSettingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"Sage300AdvancedSettingGet","defaultValue":"{\\n    memo_structure: [\\n        \\"employee_email\\",\\n        \\"category\\",\\n        \\"spent_on\\",\\n        \\"report_number\\",\\n        \\"purpose\\",\\n        \\"expense_link\\"\\n    ],\\n    schedule_is_enabled: true,\\n    id: 0,\\n    created_at: new Date(),\\n    update_at: new Date(),\\n    workspace: 1,\\n    auto_create_vendor: false,\\n    interval_hours: 1\\n}"},{"name":"sage300CredentialCache","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/sage300/sage300-configuration/sage300-connector.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"sage300ExportSettingGetCache","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/sage300/sage300-configuration/sage300-export-setting.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"sage300FieldsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"IntegrationField[]","defaultValue":"[\\n    {\\n        \\"attribute_type\\": \\"COST_CENTER\\",\\n        \\"display_name\\": \\"Cost Center\\"\\n    },\\n    {\\n        \\"attribute_type\\": \\"PROJECT\\",\\n        \\"display_name\\": \\"Project\\"\\n    },\\n    {\\n        \\"attribute_type\\": \\"CLASS\\",\\n        \\"display_name\\": \\"Class\\"\\n    }\\n]"},{"name":"sage300ImportSettingGetCache","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/sage300/sage300-configuration/sage300-import-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"sageIntacctCredentialCache","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/si/si-core/intacct-connector.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"setupStoryBookFormGroup","ctype":"miscellaneous","subtype":"variable","file":"src/stories/utility.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"<TControl extends AbstractControl>(control: TControl): TControl => {\\n    // @ts-ignore\\n    delete control._parent;\\n    if (control instanceof FormGroup || control instanceof FormRecord) {\\n        for (const childKey of Object.keys(control.controls)) {\\n            setupStoryBookFormGroup(control.controls[childKey]);\\n        }\\n    } else if (control instanceof FormArray) {\\n        for (const child of control.controls) {\\n            setupStoryBookFormGroup(child);\\n        }\\n    }\\n    return control;\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/AppLandingPageBody.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    headlineText: \'Guide to setup your Integrations\',\\n    headerText: \'A quick guide to help you set up the integration quick and easy.\',\\n    svgPath: \'assets/flow-charts/fyle-qbo-data-flow.svg\',\\n    embedVideo: \'https://www.youtube.com/embed/b63lS2DG5j4\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    headerText: \'Advanced Settings\',\\n    subHeaderText: \'In this section,  you can configure settings to automate and customize your expense exports\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConfirmationDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    isWarningVisible: true,\\n    event: ConfigurationWarningEvent.INCORRECT_QBO_ACCOUNT_CONNECTED,\\n    headerText: \'Your settings are pre-filled\',\\n    contextText: `Your previous organization\'s settings <b>(Fyle for Ashwin)</b> have been copied over to the current organization\\n    <br><br>You can change the settings or reset the configuration to restart the process from the beginning<br>`,\\n    iconPath: \'assets/icons/alert_dialog.svg\',\\n    confirmBtnText: \'Continue\',\\n    showSecondaryCTA: false\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConnector.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    accountingAppTitle: \'QuickBooks Online Company\',\\n    accountingCompanyName: \'Sandbox 1\',\\n    fyleOrgName: \'Fyle Org 1\',\\n    accountingCompanyTokenExpired: false,\\n    isAccountingCompanyConnected: true,\\n    showDisconnect: true,\\n    accountingCompanyConnectionInProgress: false,\\n    switchLinkText: \'Disconnect\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationCustomFieldCreationDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    customFieldForm: setupStoryBookFormGroup(new FormGroup({attribute_type: new FormControl(\'\'), display_name: new FormControl(\'\'), source_placeholder: new FormControl(\'\')})),\\n    showCustomFieldCreationDialog: true\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationInfoLabel.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    infoText: \'If you\\\\\'d like to use only selective data from Sage Intacct, map a Sage Intacct dimension to a field in \' + brandingConfig.brandName + \' and turn off the import, as importing the data will sync in all the active values in Sage Intacct. You can add the required values in \' + brandingConfig.brandName + \' and map them later in the integration mapping section.\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationLabel.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'How would you like to group your expenses?\',\\n    subLabel: \'Grouping reflects how the expense entries are posted in QuickBooks Desktop.\',\\n    labelValue: {\\n      label: \'Expense\',\\n      value: QBDExpenseGroupedBy.EXPENSE\\n    },\\n    iconPath: \'copy-v2\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationMultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Select the accounts from QuickBooks Online to import as categories\',\\n    options: QBOImportSettingModel.getChartOfAccountTypesList(),\\n    placeholder: \'Select Chart of Accouts\',\\n    form: setupStoryBookFormGroup(new FormGroup({chartOfAccountTypes: new FormControl([\'Expense\'])})),\\n    formControllerName: \'chartOfAccountTypes\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationRadioField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({reimbursableExportType: new FormControl()})),\\n    isFieldMandatory: true,\\n    mandatoryErrorListName: \'how expenses to be exported\',\\n    label: \'How should the expenses be exported?\',\\n    subLabel: \'Choose the type of transaction in QuickBooks Desktop to export your expenses.\',\\n    options: [\\n      {\\n        label: \'Bill\',\\n        value: \'BILL\'\\n      },\\n      {\\n        label: \'Check\',\\n        value: \'CHECK\'\\n      },\\n      {\\n        label: \'Expense\',\\n        value: \'EXPENSE\'\\n      }\\n    ],\\n    iconPath: \'expense\',\\n    formControllerName: \'reimbursableExportType\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationScheduleExport.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({exportScheduleFrequency: new FormControl(1), exportSchedule: new FormControl(true), email: new FormControl([{email: \'ashwin.t@fyle.in\', name: \'Ashwin\'}]), search: new FormControl(\'\')})),\\n    isFieldMandatory: false,\\n    mandatoryErrorListName: \'automatic export method\',\\n    label: \'Set up export frequency\',\\n    subLabel: \'Set a frequency based on how often you want your expenses in \' + \'brandingConfig.brandName\' + \' to be exported to QuickBooks Online\',\\n    options: [...Array(24).keys()].map(day => {\\n      return {\\n        label: (day + 1).toString(),\\n        value: day + 1\\n      };\\n    }),\\n    isEmailPresent: true,\\n    formControllerName: \'exportScheduleFrequency\',\\n    adminEmails: [{email: \'ashwin.t@fyle.in\', name: \'Ashwin\'}]\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationSelectField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({employeeMapping: new FormControl(\'\')})),\\n    isFieldMandatory: true,\\n    mandatoryErrorListName: \'option\',\\n    label: \'How are your Employees represented in QuickBooks Online?\',\\n    subLabel: \'Select how you represent your employees in QuickBooks Online. This would help to export the expenses from \' + brandingConfig.brandName + \' to the correct employee/vendor record in QuickBooks Online.\',\\n    options: [{label: \'Employee\', value: \'EMPLOYEE\'}, {label: \'Vendor\', value: \'VENDOR\'}],\\n    iconPath: \'employee\',\\n    placeholder: \'Select representation\',\\n    formControllerName: \'employeeMapping\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationSkipExport.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    headerText: \'Advanced Settings\',\\n    contentText: \'In this section, you can customize the integration based on your accounting requirements.\',\\n    redirectLink: \'https://help.fylehq.com/en/articles/5239189-advanced-settings\',\\n    showSyncButton: true,\\n    appName: AppName.QBO\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepSubHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Other Preferences\',\\n    subLabel: \'Based on your preference, you can choose whether you want to create any new records in QuickBooks Online from \' + brandingConfig.brandName + \'. (when there is no employee record found, or when the accounting period is closed)\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationTextField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    customErrorMessage: \'Invalid User ID. Please enter valid User ID\',\\n    formControllerName: \'userID\',\\n    isFieldMandatory: true,\\n    label: \'HH2 User ID\',\\n    placeholder: \'Enter HH2 User ID\',\\n    form: setupStoryBookFormGroup(new FormGroup({userID: new FormControl(\'\')}))\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationToggleField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({autoCreateVendors: new FormControl(true)})),\\n    iconPath: \'building\',\\n    label: \'Auto-Create Vendors\',\\n    subLabel: \'While exporting reimbursable expenses from \' + brandingConfig.brandName + \', the integration will automatically create a vendor if a match does not exist in QuickBooks Online already.\',\\n    formControllerName: \'autoCreateVendors\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardAccountingErrorDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    errorExpenses: [\\n      {\\n        id: 1,\\n        employee_email: \'ashwin.t@fyle.in\',\\n        employee_name: \'Ashwin\',\\n        category: \'Travel\',\\n        sub_category: \'Travel\',\\n        project: \'Fyle\',\\n        expense_id: \'1\',\\n        org_id: \'1\',\\n        expense_number: \'E/2020/05/28\',\\n        claim_number: \'C/2020/05/28\',\\n        amount: 100,\\n        currency: \'INR\',\\n        foreign_amount: 100,\\n        foreign_currency: \'INR\',\\n        tax_amount: 0,\\n        tax_group_id: \'1\',\\n        settlement_id: \'1\',\\n        reimbursable: true,\\n        billable: false,\\n        state: \'COMPLETE\',\\n        vendor: \'Fyle\',\\n        cost_center: \'Fyle\',\\n        purpose: \'Fyle\',\\n        report_id: \'1\',\\n        spent_at: new Date(),\\n        approved_at: new Date(),\\n        posted_at: new Date(),\\n        expense_created_at: new Date(),\\n        expense_updated_at: new Date(),\\n        created_at: new Date(),\\n        updated_at: new Date(),\\n        fund_source: \'Personal Funds\',\\n        verified_at: new Date(),\\n        custom_properties: [],\\n        paid_on_sage_intacct: true,\\n        file_ids: [],\\n        payment_number: \'1\',\\n        corporate_card_id: \'1\',\\n        is_skipped: false,\\n        report_title: \'Fyle\'\\n      }\\n    ]\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardErrorSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    apiModuleUrl: AppUrl.QBO,\\n    errors: {\\n      EMPLOYEE_MAPPING: [\\n        {\\n          id: 1,\\n          expense_attribute: {\\n            id: 1,\\n            attribute_type: \'EMPLOYEE\',\\n            display_name: \'Employee\',\\n            value: \'ashwin.t@fyle.in\',\\n            source_id: \'ash\',\\n            auto_mapped: false,\\n            auto_created: false,\\n            active: true,\\n            detail: null,\\n            created_at: \'2021-06-01T06:30:00.000Z\',\\n            updated_at: \'2021-06-01T06:30:00.000Z\',\\n            workspace: 1\\n          },\\n          expense_group: {\\n            id: 1,\\n            type: \'EXPENSE\',\\n            description: {\\n              claim_number: \'123\',\\n              employee_email: \'\',\\n              expense_id: \'\',\\n              report_id: \'\',\\n              settlement_id: \'\'\\n            },\\n            status: AccountingExportStatus.COMPLETE,\\n            mapping_errors: [],\\n            response: {},\\n            created_at: new Date(),\\n            updated_at: new Date(),\\n            exported_at: new Date(),\\n            workspace: 1,\\n            export_url: \'\',\\n            expenses: [],\\n            fund_source: FundSource.CCC\\n          },\\n          type: AccountingErrorType.EMPLOYEE_MAPPING,\\n          is_resolved: false,\\n          error_title: \'Employee Mapping Error\',\\n          error_detail: \'Employee Mapping Error\',\\n          created_at: new Date(),\\n          updated_at: new Date(),\\n          workspace: 1\\n        }\\n      ],\\n      CATEGORY_MAPPING: [],\\n      ACCOUNTING_ERROR: [\\n        {\\n          id: 1,\\n          expense_attribute: {\\n            id: 1,\\n            attribute_type: \'EMPLOYEE\',\\n            display_name: \'Employee\',\\n            value: \'ashwin.t@fyle.in\',\\n            source_id: \'ash\',\\n            auto_mapped: false,\\n            auto_created: false,\\n            active: true,\\n            detail: null,\\n            created_at: \'2021-06-01T06:30:00.000Z\',\\n            updated_at: \'2021-06-01T06:30:00.000Z\',\\n            workspace: 1\\n          },\\n          expense_group: {\\n            id: 1,\\n            type: \'EXPENSE\',\\n            description: {\\n              claim_number: \'123\',\\n              employee_email: \'\',\\n              expense_id: \'\',\\n              report_id: \'\',\\n              settlement_id: \'\'\\n            },\\n            status: AccountingExportStatus.COMPLETE,\\n            mapping_errors: [],\\n            response: {},\\n            created_at: new Date(),\\n            updated_at: new Date(),\\n            exported_at: new Date(),\\n            workspace: 1,\\n            export_url: \'\',\\n            expenses: [],\\n            fund_source: FundSource.CCC\\n          },\\n          type: AccountingErrorType.ACCOUNTING_ERROR,\\n          is_resolved: false,\\n          error_title: \'Invalid account code for expense\',\\n          error_detail: \'Account code 223 doesn\\\\\'t exist in Quickbooks Online\',\\n          created_at: new Date(),\\n          updated_at: new Date(),\\n          workspace: 1\\n        }\\n      ]\\n    },\\n    groupedErrorStat: {\\n      [AccountingErrorType.EMPLOYEE_MAPPING]: null,\\n      [AccountingErrorType.CATEGORY_MAPPING]: null\\n    },\\n    destinationFieldMap: {\\n      [ExportErrorSourceType.EMPLOYEE]: \'EMPLOYEE\',\\n      [ExportErrorSourceType.CATEGORY]: \'ACCOUNT\'\\n    },\\n    isCategoryMappingGeneric: true,\\n    isImportItemsEnabled: false,\\n    destinationOptionsVersion: \'v1\',\\n    errorsVersion: \'v1\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportLogDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    isExportLogVisible: true,\\n    accountingExports: [\\n      {\\n        exportedAt: new Date(),\\n        employee: [\'Ashwin\', \'ashwin.t@fyle.in\'],\\n        expenseType: \'Reimbursable\',\\n        referenceNumber: \'E/2020/05/28\',\\n        exportedAs: \'Bill\',\\n        integrationUrl: \'https://www.fylehq.com\',\\n        fyleUrl: \'https://www.fylehq.com\',\\n        expenses: [\\n          {\\n            id: 1,\\n            employee_email: \'ashwin.t@fyle.in\',\\n            employee_name: \'Ashwin\',\\n            category: \'Travel\',\\n            sub_category: \'Travel\',\\n            project: \'Fyle\',\\n            expense_id: \'1\',\\n            org_id: \'1\',\\n            expense_number: \'E/2020/05/28\',\\n            claim_number: \'C/2020/05/28\',\\n            amount: 100,\\n            currency: \'INR\',\\n            foreign_amount: 100,\\n            foreign_currency: \'INR\',\\n            tax_amount: 0,\\n            tax_group_id: \'1\',\\n            settlement_id: \'1\',\\n            reimbursable: true,\\n            billable: false,\\n            state: \'COMPLETE\',\\n            vendor: \'Fyle\',\\n            cost_center: \'Fyle\',\\n            purpose: \'Fyle\',\\n            report_id: \'1\',\\n            spent_at: new Date(),\\n            approved_at: new Date(),\\n            posted_at: new Date(),\\n            expense_created_at: new Date(),\\n            expense_updated_at: new Date(),\\n            created_at: new Date(),\\n            updated_at: new Date(),\\n            fund_source: \'Personal Funds\',\\n            verified_at: new Date(),\\n            custom_properties: [],\\n            paid_on_sage_intacct: true,\\n            file_ids: [],\\n            payment_number: \'1\',\\n            corporate_card_id: \'1\',\\n            is_skipped: false,\\n            report_title: \'Fyle\'\\n          }\\n        ]\\n      }\\n    ],\\n    isExportLogFetchInProgress: false,\\n    exportLogHeader: \'Successful\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSummarySection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    exportLogVersion: \'v1\',\\n    accountingExportType: [QBOTaskLogType.FETCHING_EXPENSE, QBOTaskLogType.CREATING_BILL, QBOTaskLogType.CREATING_EXPENSE, QBOTaskLogType.CREATING_CHECK, QBOTaskLogType.CREATING_CREDIT_CARD_PURCHASE, QBOTaskLogType.CREATING_JOURNAL_ENTRY, QBOTaskLogType.CREATING_CREDIT_CARD_CREDIT, QBOTaskLogType.CREATING_DEBIT_CARD_EXPENSE],\\n    accountingExportSummary: {\\n      id: 1,\\n      last_exported_at: \'2021-09-01T08:00:00Z\',\\n      next_export_at: \'2021-09-01T08:00:00Z\',\\n      export_mode: \'AUTO\',\\n      total_accounting_export_count: 1,\\n      successful_accounting_export_count: 1,\\n      failed_accounting_export_count: 0,\\n      created_at: \'2021-09-01T08:00:00Z\',\\n      updated_at: \'2021-09-01T08:00:00Z\',\\n      workspace: 1\\n    }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/EmailMultiSelectField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({exportScheduleFrequency: new FormControl(1), exportSchedule: new FormControl(true), email: new FormControl([{email: \'ashwin.t@fyle.in\', name: \'Ashwin\'}]), search: new FormControl(\'\')})),\\n    isFieldMandatory: false,\\n    mandatoryErrorListName: \'automatic export method\',\\n    label: \'Set up export frequency\',\\n    subLabel: \'Set a frequency based on how often you want your expenses in \' + brandingConfig.brandName + \' to be exported to QuickBooks Online\',\\n    formControllerName: \'exportScheduleFrequency\',\\n    options: [{email: \'ashwin.t@fyle.in\', name: \'Ashwin\'}]\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Error.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogChildTableDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    isDialogOpen: true,\\n    expenses: [\\n      {\\n        id: 1,\\n        employee_email: \'ashwin.t@fyle.in\',\\n        employee_name: \'Ashwin\',\\n        category: \'Travel\',\\n        sub_category: \'Travel\',\\n        project: \'Fyle\',\\n        expense_id: \'1\',\\n        org_id: \'1\',\\n        expense_number: \'E/2020/05/28\',\\n        claim_number: \'C/2020/05/28\',\\n        amount: 100,\\n        currency: \'INR\',\\n        foreign_amount: 100,\\n        foreign_currency: \'INR\',\\n        tax_amount: 0,\\n        tax_group_id: \'1\',\\n        settlement_id: \'1\',\\n        reimbursable: true,\\n        billable: false,\\n        state: \'COMPLETE\',\\n        vendor: \'Fyle\',\\n        cost_center: \'Fyle\',\\n        purpose: \'Fyle\',\\n        report_id: \'1\',\\n        spent_at: new Date(),\\n        approved_at: new Date(),\\n        posted_at: new Date(),\\n        expense_created_at: new Date(),\\n        expense_updated_at: new Date(),\\n        created_at: new Date(),\\n        updated_at: new Date(),\\n        fund_source: \'Personal Funds\',\\n        verified_at: new Date(),\\n        custom_properties: [],\\n        paid_on_sage_intacct: true,\\n        file_ids: [],\\n        payment_number: \'1\',\\n        corporate_card_id: \'1\',\\n        is_skipped: false,\\n        report_title: \'Fyle\'\\n      }\\n    ]\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogFilter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    exportLogForm: setupStoryBookFormGroup(new FormGroup({searchOption: new FormControl(), dateRange: new FormControl(), start: new FormControl(), end: new FormControl()}))\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    filteredExpenseGroups: [\\n      {\\n        exportedAt: new Date(),\\n        employee: [\'Ashwin\', \'ashwin.t@fyle.in\'],\\n        expenseType: \'Reimbursable\',\\n        referenceNumber: \'E/2020/05/28\',\\n        exportedAs: \'Bill\',\\n        integrationUrl: \'https://www.fylehq.com\',\\n        fyleUrl: \'https://www.fylehq.com\',\\n        expenses: [\\n          {\\n            id: 1,\\n            employee_email: \'ashwin.t@fyle.in\',\\n            employee_name: \'Ashwin\',\\n            category: \'Travel\',\\n            sub_category: \'Travel\',\\n            project: \'Fyle\',\\n            expense_id: \'1\',\\n            org_id: \'1\',\\n            expense_number: \'E/2020/05/28\',\\n            claim_number: \'C/2020/05/28\',\\n            amount: 100,\\n            currency: \'INR\',\\n            foreign_amount: 100,\\n            foreign_currency: \'INR\',\\n            tax_amount: 0,\\n            tax_group_id: \'1\',\\n            settlement_id: \'1\',\\n            reimbursable: true,\\n            billable: false,\\n            state: \'COMPLETE\',\\n            vendor: \'Fyle\',\\n            cost_center: \'Fyle\',\\n            purpose: \'Fyle\',\\n            report_id: \'1\',\\n            spent_at: new Date(),\\n            approved_at: new Date(),\\n            posted_at: new Date(),\\n            expense_created_at: new Date(),\\n            expense_updated_at: new Date(),\\n            created_at: new Date(),\\n            updated_at: new Date(),\\n            fund_source: \'Personal Funds\',\\n            verified_at: new Date(),\\n            custom_properties: [],\\n            paid_on_sage_intacct: true,\\n            file_ids: [],\\n            payment_number: \'1\',\\n            corporate_card_id: \'1\',\\n            is_skipped: false,\\n            report_title: \'Fyle\'\\n          }\\n        ]\\n      }\\n    ],\\n    appName: AppName.QBO,\\n    isExportLogTable: true,\\n    isDashboardFailed: false\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/GenericMappingV2.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    isLoading: false,\\n    destinationOptions: [\\n      {\\n        id: 1,\\n        attribute_type: \'EMPLOYEE\',\\n        display_name: \'Employee\',\\n        value: \'Ashwin\',\\n        destination_id: \'1\',\\n        active: true,\\n        created_at: new Date(),\\n        updated_at: new Date(),\\n        workspace: 1\\n      },\\n      {\\n        id: 2,\\n        attribute_type: \'EMPLOYEE\',\\n        display_name: \'Employee\',\\n        value: \'Dhoni\',\\n        destination_id: \'2\',\\n        active: true,\\n        created_at: new Date(),\\n        updated_at: new Date(),\\n        workspace: 1\\n      }\\n    ],\\n    employeeFieldMapping: FyleField.EMPLOYEE,\\n    sourceField: \'employee\',\\n    destinationField: \'employee\',\\n    showAutoMapEmployee: true,\\n    appName: AppName.QBO,\\n    isCategoryMappingGeneric: true\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MainMenu.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    modules: [\\n      {label: \'Dashboard\', routerLink: \'/integrations/qbo/main/dashboard\'},\\n      {label: \'Export Log\', routerLink: \'/integrations/qbo/main/export_log\'},\\n      {label: \'Mapping\', routerLink: \'/integrations/qbo/main/mapping\'},\\n      {label: \'Configuration\', routerLink: \'/integrations/qbo/main/configuration\'}\\n    ],\\n    activeItem: {label: \'Dashboard\', routerLink: \'/integrations/qbo/main/dashboard\'},\\n    appName: AppName.QBO,\\n    isDropdrownRequired: false\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MandatoryErrorMessage.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    listName: \'project\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MandatoryField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MappingCardHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    sourceField: \'employee\',\\n    showAutoMapEmployee: true,\\n    mappingStats: {\\n      all_attributes_count: 5,\\n      unmapped_attributes_count: 5\\n    }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MappingFilter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    selectedAlphabeticalFilter: \'All\',\\n    mappingFilter: MappingState.ALL\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    options: QBOImportSettingModel.getChartOfAccountTypesList(),\\n    placeholder: \'Select Chart of Accouts\',\\n    form: setupStoryBookFormGroup(new FormGroup({chartOfAccountTypes: new FormControl([\'Expense\'])})),\\n    formControllerName: \'chartOfAccountTypes\',\\n    disabledOption: \'Expense\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/OnboardingDone.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Paginator.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dropDownValue: 10,\\n    page: 1,\\n    totalCount: 100\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/PreviewDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    isPreviewDialogVisible: true,\\n    iconPath: \'assets/illustrations/sageIntacct/IntacctImportSettings.png\',\\n    header: \'Preview\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/SkippedExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    filteredExpense: [\\n      {\\n        updated_at: new Date(),\\n        employee: [\'Ashwin\', \'ashwin.t@fyle.in\'],\\n        expenseType: \'Reimbursable\',\\n        claim_number: \'C/2020/05/28\',\\n        fyleUrl: \'https://www.fylehq.com\'\\n      }\\n    ]\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/SubMenu.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    modules: [\\n      {label: \'Map Employees\', routerLink: \'/integrations/qbo/main/configuration/employee_settings\'},\\n      {label: \'Export Settings\', routerLink: \'/integrations/qbo/main/configuration/export_settings\'},\\n      {label: \'Import Settings\', routerLink: \'/integrations/qbo/main/configuration/import_settings\'},\\n      {label: \'Advanced Settings\', routerLink: \'/integrations/qbo/main/configuration/advanced_settings\'}\\n    ],\\n    activeModule: {label: \'Map Employees\', routerLink: \'/integrations/qbo/main/configuration/employee_settings\'}\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Toggle.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({field: new FormControl(true)})),\\n    formControllerName: \'field\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ZeroState.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    zeroStateImageURL: \'assets/icons/dashboard-illustration.svg\',\\n    zeroStateCaption: \'There are no expenses to export at the moment!\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ZeroStateWithIllustration.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    mainText: \'Sorry, no results found!\',\\n    subText: \'We could not find what you were looking for. Kindly check the keywords again.\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/loader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{}"},{"name":"smallLoader","ctype":"miscellaneous","subtype":"variable","file":"src/stories/loader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    styleClass: \\"!tw-w-16-px !tw-h-16-px spinner-default\\"\\n  }\\n}"},{"name":"toggle","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    iconSource: \'arrow-tail-down\',\\n    label: \'Import Tax from QuickBooks Online\',\\n    form: setupStoryBookFormGroup(new FormGroup({taxCode: new FormControl(true)})),\\n    formControllerName: \'taxCode\',\\n    inputType: InputType.TOGGLE,\\n    tooltipText: \'The imported Tax codes from QuickBooks Online will be set as Tax group in \' + brandingConfig.brandName + \'. This will be a selectable field while creating an expense.\'\\n  }\\n}"},{"name":"tokenResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/interceptor/jwt.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  access_token: \'fylee\',\\n  expires_in: 3600,\\n  refresh_token: \'ffff\',\\n  token_type: \'Bearer\'\\n}"},{"name":"travelPerkConfigurationCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"},{"name":"travelperkConfigurationMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"TravelperkConfiguration","defaultValue":"{\\n    id: 1,\\n    org: orgMockData,\\n    recipe_id: \'123\',\\n    recipe_data: \'123\',\\n    is_recipe_enabled: true\\n}"},{"name":"travelperkErrorMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    message: \\"Travelperk Not Found\\"\\n}"},{"name":"travelperkMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Travelperk","defaultValue":"{\\n    id: 1,\\n    folder_id: \'1234\',\\n    package_id: \'467\',\\n    is_travelperk_connected: true,\\n    is_fyle_connected: true,\\n    is_s3_connected: true,\\n    org: 1,\\n    travelperk_connection_id: 123,\\n    created_at: new Date(),\\n    updated_at: new Date()\\n}"},{"name":"workatoConnectionStatusMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"WorkatoConnectionStatus","defaultValue":"{\\n    wk: true,\\n    type: \'travelperk\',\\n    payload: {\\n        id: 1,\\n        provider: \'travelperk\',\\n        connected: false\\n    }\\n}"},{"name":"workatoConnectionStatusMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"WorkatoConnectionStatus","defaultValue":"{\\n    wk: true,\\n    type: \'travelperk\',\\n    payload: {\\n        id: 1,\\n        provider: \'travelperk\',\\n        connected: false\\n    }\\n}"},{"name":"workatoConnectionStatusMockDatawithTrue","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"WorkatoConnectionStatus","defaultValue":"{\\n    wk: true,\\n    type: \'travelperk\',\\n    payload: {\\n        id: 1,\\n        provider: \'travelperk\',\\n        connected: true\\n    }\\n}"},{"name":"workspaceResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/qbd.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    \\"id\\": 1,\\n    \\"name\\": \\"Anagha Org\\",\\n    \\"org_id\\": \\"orHVw3ikkCxJ\\",\\n    \\"currency\\": \\"EUR\\",\\n    \\"reimbursable_last_synced_at\\": null,\\n    \\"ccc_last_synced_at\\": null,\\n    \\"onboarding_state\\": QBDOnboardingState.EXPORT_SETTINGS,\\n    \\"created_at\\": \\"2023-01-23T05:37:56.907997Z\\",\\n    \\"updated_at\\": \\"2023-01-23T05:37:56.908051Z\\",\\n    \\"user\\": [1]\\n  }"},{"name":"workspaceResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/si/si.fixture.ts","deprecated":false,"deprecationMessage":"","type":"IntacctWorkspace[]","defaultValue":"[{\\n    \\"id\\": 1,\\n    \\"name\\": \\"Halo Org\\",\\n    \\"org_id\\": \\"orHVw3iaexgg\\",\\n    \\"currency\\": \\"EUR\\",\\n    \\"destination_synced_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"ccc_last_synced_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"onboarding_state\\": IntacctOnboardingState.CONNECTION,\\n    \\"created_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"updated_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"user\\": [1],\\n    \\"last_synced_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"source_synced_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"cluster_domain\\": \'string\'\\n  }]"}],"functions":[{"name":"constructPayload1","file":"src/app/core/models/si/misc/skip-export.model.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"valueField","deprecated":false,"deprecationMessage":""},{"name":"valueOption1","deprecated":false,"deprecationMessage":""}],"returnType":"SkipExport","jsdoctags":[{"name":"valueField","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"valueOption1","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructPayload2","file":"src/app/core/models/si/misc/skip-export.model.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"valueField","deprecated":false,"deprecationMessage":""},{"name":"valueOption2","deprecated":false,"deprecationMessage":""}],"returnType":"SkipExport","jsdoctags":[{"name":"valueField","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"valueOption2","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"getFrequencyTime","file":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"advancedSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"advancedSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"typealiases":[{"name":"AccountingExportGetParam","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/accounting-export.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AccountingExportsResult","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/iif-logs.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AccountingGroupedErrors","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AccountingGroupedErrorStat","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AccountingIntegrationEvent","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/integrations/integrations.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AdvancedSettingFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AdvancedSettingsGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AdvancedSettingsPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AdvancedSettingValidatorRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AppUrlMap","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/integrations/integrations.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BambooHr","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BambooHRConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BambooHRConfigurationPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BambooHrConnection","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BrandingConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/branding/branding-configuration.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BusinessCentralAdvancedSettings","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BusinessCentralConnector","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-connector.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BusinessCentralCredential","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/db/business-central-credentials.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BusinessCentralExportSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BusinessCentralExportSettingFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BusinessCentralImportSettings","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BusinessCentralOnboardingStepperMap","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-onboarding.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"CategoryMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/category-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"CategoryMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/category-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"CategoryMappingResult","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/category-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"CategoryMappingsResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/category-mapping-response.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"CloneSettingExist","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/clone-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ConditionField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ConditionField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Configuration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/configuration.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Configuration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ConfigurationWarningOut","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/configuration-warning.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DateFilter","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/misc/date-filter.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DefaultDestinationAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DemoVideo","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/branding/demo-video.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DependentFieldSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DestinationAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DestinationAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DestinationAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/destination-attribute-detail.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DropdownOptionSearch","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmailOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmailOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmailOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/select-form-option.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmailOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/gusto/gusto.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmailOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmailOptions","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMappingDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/db/business-central-destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMappingDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/db/sage300-destination-attribuite.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMappingResult","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMappingsResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Error","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ErrorStat","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ErrorStat","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Expense","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-attribute-detail.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-field.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFieldFormArray","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFieldFormArray","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-field.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFilterPayload","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFilterPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFilterResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFilterResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroup","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroup","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroupDescription","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroupDescription","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroupParam","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroupResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroupSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/expense-group-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroupSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportableExpenseGroup","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportModuleRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportModuleRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingDestinationAttributeOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingGeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingOptionSearch","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingValidatorRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingValidatorRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExtendedExpenseAttributeResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"FeatureConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/branding/feature-configuration.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"FyleCredential","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/fyle-credentials.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"FyleField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mappings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GeneratedToken","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/org/org.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GenericMappingApiParams","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GenericMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/generic-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GenericMappingV2","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/generic-mapping-v2.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GenericMappingV2Response","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/generic-mapping-v2.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GroupedDestinationAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GroupedDestinationAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GroupedErrors","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GroupedErrorStat","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Gusto","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/gusto/gusto.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GustoConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/gusto/gusto.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GustoConfigurationPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/gusto/gusto.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportDefaultField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportSettingGeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportSettingMappingRow","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportSettingsCustomFieldRow","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"InAppIntegrationUrlMap","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/integrations/integrations.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntacctDestinationAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntacctExports","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/export-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntacctExportTriggerResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/export-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntegrationCallbackUrl","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/integrations/integrations.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntegrationField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntegrationsView","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/integrations/integrations.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"KbArticle","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/branding/kb-article.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"LastExport","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/last-export.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"LocationEntityMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/location-entity-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"LocationEntityPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/connector.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingAlphabeticalFilterAdditionalProperty","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/tracking.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingDestination","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-destination.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingList","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingPrimaryKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSettingList","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSettingResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSource","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-source.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingStats","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingStats","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingStats","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MinimalExpenseAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MinimalMappingSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/generic-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MinimalMappingSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MinimalUser","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/user.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"OnboardingStepper","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/onboarding-stepper.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Org","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/org/org.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"PaginatedintacctDestinationAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Paginator","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/paginator.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"PreviewPage","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/preview-page.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QbdAccountingExportDownload","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/iif-logs.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDAdvancedSettingsGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDAdvancedSettingsPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDExportSettingFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDExportSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDExportSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QbdExportTriggerGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/iif-logs.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QbdExportTriggerResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/iif-logs.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDFieldMappingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/field-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDFieldMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/field-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingAddEmailModel","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingGeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingWorkspaceGeneralSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingWorkspaceSchedule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingWorkspaceSchedulePost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOCloneSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-clone-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOCloneSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-clone-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOConnector","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-connector.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOCredential","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/db/qbo-credential.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOEmployeeSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOEmployeeSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOEmployeeSettingWorkspaceGeneralSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOExportSettingGeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOExportSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOExportSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOExportSettingWorkspaceGeneralSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOImportSettingGeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOImportSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOImportSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOImportSettingWorkspaceGeneralSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOOnboardingStepperMap","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOWorkspaceGeneralSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/db/workspace-general-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QuickbooksError","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/db/qbo-task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ResolveMappingError","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ResolveMappingErrorProperty","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/tracking.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300AdvancedSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300Credential","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/db/sage300-credentials.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300DefaultFields","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300DependentImportFields","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300ExportSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300ExportSettingFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300ImportSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300ImportSettingsDependentFieldSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300OnboardingStepperMap","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-onboarding-stepper/sage300-onboarding-stepper.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SageIntacctCredential","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/sage-credentials.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SageIntacctError","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SelectedDateFilter","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/misc/date-filter.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SelectFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/select-form-option.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SkipExport","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/misc/skip-export.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SkipExport","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SkipExportLog","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"skipExportValidator","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SkipExportValidatorRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<AppLandingPageBodyComponent>","file":"src/stories/AppLandingPageBody.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<AppLandingPageHeaderComponent>","file":"src/stories/AppLandingPageHeader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<CloneSettingFieldComponent>","file":"src/stories/CloneSettingField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<CloneSettingHeaderComponent>","file":"src/stories/CloneSettingHeader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationConfirmationDialogComponent>","file":"src/stories/ConfigurationConfirmationDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationConnectorComponent>","file":"src/stories/ConfigurationConnector.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationCustomFieldCreationDialogComponent>","file":"src/stories/ConfigurationCustomFieldCreationDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationImportFieldComponent>","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationInfoLabelComponent>","file":"src/stories/ConfigurationInfoLabel.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationLabelComponent>","file":"src/stories/ConfigurationLabel.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationMultiSelectComponent>","file":"src/stories/ConfigurationMultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationRadioFieldComponent>","file":"src/stories/ConfigurationRadioField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationScheduleExportComponent>","file":"src/stories/ConfigurationScheduleExport.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationSelectFieldComponent>","file":"src/stories/ConfigurationSelectField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationSkipExportComponent>","file":"src/stories/ConfigurationSkipExport.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationStepFooterComponent>","file":"src/stories/ConfigurationStepFooter.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationStepHeaderComponent>","file":"src/stories/ConfigurationStepHeader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationStepSubHeaderComponent>","file":"src/stories/ConfigurationStepSubHeader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationTextFieldComponent>","file":"src/stories/ConfigurationTextField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationToggleFieldComponent>","file":"src/stories/ConfigurationToggleField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DashboardAccountingErrorDialogComponent>","file":"src/stories/DashboardAccountingErrorDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DashboardErrorSectionComponent>","file":"src/stories/DashboardErrorSection.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DashboardExportLogDialogComponent>","file":"src/stories/DashboardExportLogDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DashboardExportSectionComponent>","file":"src/stories/DashboardExportSection.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DashboardExportSummarySectionComponent>","file":"src/stories/DashboardExportSummarySection.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DropdownComponent>","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<EmailMultiSelectFieldComponent>","file":"src/stories/EmailMultiSelectField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ErrorComponent>","file":"src/stories/Error.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ExportLogChildTableDialogComponent>","file":"src/stories/ExportLogChildTableDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ExportLogFilterComponent>","file":"src/stories/ExportLogFilter.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ExportLogTableComponent>","file":"src/stories/ExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<GenericMappingV2Component>","file":"src/stories/GenericMappingV2.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MainMenuComponent>","file":"src/stories/MainMenu.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MandatoryErrorMessageComponent>","file":"src/stories/MandatoryErrorMessage.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MandatoryFieldComponent>","file":"src/stories/MandatoryField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MappingCardHeaderComponent>","file":"src/stories/MappingCardHeader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MappingFilterComponent>","file":"src/stories/MappingFilter.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MultiSelectComponent>","file":"src/stories/MultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<OnboardingDoneComponent>","file":"src/stories/OnboardingDone.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<PaginatorComponent>","file":"src/stories/Paginator.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<PreviewDialogComponent>","file":"src/stories/PreviewDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ShimmersComponent>","file":"src/stories/Shimmers.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SkippedExportLogTableComponent>","file":"src/stories/SkippedExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SubMenuComponent>","file":"src/stories/SubMenu.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ToggleComponent>","file":"src/stories/Toggle.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ZeroStateComponent>","file":"src/stories/ZeroState.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ZeroStateWithIllustrationComponent>","file":"src/stories/ZeroStateWithIllustration.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<LoaderComponent>","file":"src/stories/loader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Task","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaskGetParams","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaskLog","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaskLogGetParams","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaskResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaxMappingDetails","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/db/business-central-destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaxMappingDetails","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/db/sage300-destination-attribuite.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Token","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/token.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Travelperk","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/travelperk/travelperk.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TravelperkConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/travelperk/travelperk.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"UpdateEventAdditionalProperty","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/tracking.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"UpdateIntacctEventAdditionalProperty","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/tracking.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"WorkatoConnectionStatus","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/travelperk/travelperk.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Workspace","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/workspaces.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"enumerations":[{"name":"AccountingDisplayName","childs":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"Account"},{"name":"ITEM","deprecated":false,"deprecationMessage":"","value":"Item"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingErrorType","childs":[{"name":"EMPLOYEE_MAPPING","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE_MAPPING"},{"name":"CATEGORY_MAPPING","deprecated":false,"deprecationMessage":"","value":"CATEGORY_MAPPING"},{"name":"ACCOUNTING_ERROR","deprecated":false,"deprecationMessage":"","value":"ACCOUNTING_ERROR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingExport","childs":[{"name":"CREATING_DIRECT_COST","deprecated":false,"deprecationMessage":"","value":"CREATING_DIRECT_COST"},{"name":"CREATING_PURCHASE_INVOICE","deprecated":false,"deprecationMessage":"","value":"CREATING_PURCHASE_INVOICE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingExportStatus","childs":[{"name":"READY","deprecated":false,"deprecationMessage":"","value":"READY"},{"name":"FAILED","deprecated":false,"deprecationMessage":"","value":"FAILED"},{"name":"FATAL","deprecated":false,"deprecationMessage":"","value":"FATAL"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"},{"name":"IN_PROGRESS","deprecated":false,"deprecationMessage":"","value":"IN_PROGRESS"},{"name":"ENQUEUED","deprecated":false,"deprecationMessage":"","value":"ENQUEUED"},{"name":"EXPORT_QUEUED","deprecated":false,"deprecationMessage":"","value":"EXPORT_QUEUED"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingExportType","childs":[{"name":"PURCHASE_INVOICE","deprecated":false,"deprecationMessage":"","value":"PURCHASE_INVOICE"},{"name":"DIRECT_COSTS","deprecated":false,"deprecationMessage":"","value":"DIRECT_COSTS"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingField","childs":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingIntegrationApp","childs":[{"name":"QBO","deprecated":false,"deprecationMessage":"","value":"QBO"},{"name":"NETSUITE","deprecated":false,"deprecationMessage":"","value":"NetSuite"},{"name":"SAGE_INTACCT","deprecated":false,"deprecationMessage":"","value":"Sage Intacct"},{"name":"XERO","deprecated":false,"deprecationMessage":"","value":"Xero"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AppName","childs":[{"name":"BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"BambooHR"},{"name":"QBD","deprecated":false,"deprecationMessage":"","value":"QuickBooks Desktop"},{"name":"TRAVELPERK","deprecated":false,"deprecationMessage":"","value":"Travelperk"},{"name":"GUSTO","deprecated":false,"deprecationMessage":"","value":"Gusto"},{"name":"INTACCT","deprecated":false,"deprecationMessage":"","value":"Sage Intacct"},{"name":"SAGE300","deprecated":false,"deprecationMessage":"","value":"Sage 300 CRE"},{"name":"QBO","deprecated":false,"deprecationMessage":"","value":"QuickBooks Online"},{"name":"BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Dynamics 365 Business Central"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AppNameInService","childs":[{"name":"BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"bambooHR"},{"name":"QBD","deprecated":false,"deprecationMessage":"","value":"qbd"},{"name":"TRAVELPERK","deprecated":false,"deprecationMessage":"","value":"travelperk"},{"name":"GUSTO","deprecated":false,"deprecationMessage":"","value":"gusto"},{"name":"INTACCT","deprecated":false,"deprecationMessage":"","value":"sage_intacct"},{"name":"SAGE300","deprecated":false,"deprecationMessage":"","value":"sage300"},{"name":"BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"business_central"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AppUrl","childs":[{"name":"BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"bamboo_hr"},{"name":"QBD","deprecated":false,"deprecationMessage":"","value":"qbd"},{"name":"TRAVELPERK","deprecated":false,"deprecationMessage":"","value":"travelperk"},{"name":"GUSTO","deprecated":false,"deprecationMessage":"","value":"gusto"},{"name":"INTACCT","deprecated":false,"deprecationMessage":"","value":"intacct"},{"name":"SAGE300","deprecated":false,"deprecationMessage":"","value":"sage300"},{"name":"BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"business_central"},{"name":"INTEGRATION","deprecated":false,"deprecationMessage":"","value":"integration"},{"name":"QBO","deprecated":false,"deprecationMessage":"","value":"qbo"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AutoMapEmployeeOptions","childs":[{"name":"EMAIL","deprecated":false,"deprecationMessage":"","value":"EMAIL"},{"name":"NAME","deprecated":false,"deprecationMessage":"","value":"NAME"},{"name":"EMPLOYEE_CODE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE_CODE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"BusinessCentralAccountingExportType","childs":[],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"BusinessCentralExportType","childs":[{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL_ENTRY"},{"name":"PURCHASE_INVOICE","deprecated":false,"deprecationMessage":"","value":"PURCHASE_INVOICE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"BusinessCentralField","childs":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"},{"name":"CUSTOMER","deprecated":false,"deprecationMessage":"","value":"CUSTOMER"},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","value":"DEPARTMENT"},{"name":"CLASS","deprecated":false,"deprecationMessage":"","value":"CLASS"},{"name":"TAX_DETAIL","deprecated":false,"deprecationMessage":"","value":"TAX_DETAIL"},{"name":"JOB","deprecated":false,"deprecationMessage":"","value":"JOB"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"BusinessCentralOnboardingState","childs":[{"name":"CONNECTION","deprecated":false,"deprecationMessage":"","value":"CONNECTION"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"IMPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"IMPORT_SETTINGS"},{"name":"ADVANCED_SETTINGS","deprecated":false,"deprecationMessage":"","value":"ADVANCED_SETTINGS"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"BusinessCentralUpdateEvent","childs":[{"name":"CONNECT_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Connect Business Central"},{"name":"EXPORT_SETTING_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Export Settings Business Central"},{"name":"IMPORT_SETTINGS_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Import Settings Business Central"},{"name":"ADVANCED_SETTINGS_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Advanced Settings Business Central"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"CCCExpenseState","childs":[{"name":"PAYMENT_PROCESSING","deprecated":false,"deprecationMessage":"","value":"PAYMENT_PROCESSING"},{"name":"PAID","deprecated":false,"deprecationMessage":"","value":"PAID"},{"name":"APPROVED","deprecated":false,"deprecationMessage":"","value":"APPROVED"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ClickEvent","childs":[{"name":"OPEN_QBO_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open QBO Integration"},{"name":"OPEN_NETSUITE_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open NetSuite Integration"},{"name":"OPEN_SAGE_INTACCT_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open Sage Intacct Integration"},{"name":"OPEN_XERO_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open Xero Integration"},{"name":"OPEN_BAMBOO_HR_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open Bamboo HR Integration"},{"name":"OPEN_QBD_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open QBD Integration"},{"name":"OPEN_GUSTO_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open Gusto Integration"},{"name":"INTEGRATION_TABS","deprecated":false,"deprecationMessage":"","value":"Integration Tabs"},{"name":"CONNECT_BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Connect Bamboo HR"},{"name":"CONFIGURE_BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Configure Bamboo HR"},{"name":"DISCONNECT_BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Disconnect Bamboo HR"},{"name":"CONNECT_GUSTO","deprecated":false,"deprecationMessage":"","value":"Connect Gusto"},{"name":"CONFIGURE_GUSTO","deprecated":false,"deprecationMessage":"","value":"Configure Gusto"},{"name":"DISCONNECT_GUSTO","deprecated":false,"deprecationMessage":"","value":"Disconnect Gusto"},{"name":"SYNC_GUSTO_EMPLOYEES","deprecated":false,"deprecationMessage":"","value":"Sync Gusto Employees"},{"name":"CONNECT_QBD","deprecated":false,"deprecationMessage":"","value":"Connect QBD"},{"name":"COPY_SUPPORT_EMAIL","deprecated":false,"deprecationMessage":"","value":"Copy Support Email"},{"name":"SYNC_BAMBOO_HR_EMPLOYEES","deprecated":false,"deprecationMessage":"","value":"Sync Bamboo HR Employees"},{"name":"ADD_BAMBOO_HR_EMAIL_MANUALLY","deprecated":false,"deprecationMessage":"","value":"Add Bamboo HR Email Manually"},{"name":"ADD_EMAIL_MANUALLY","deprecated":false,"deprecationMessage":"","value":"Add Email Manually"},{"name":"ADD_CUSTOM_FIELD","deprecated":false,"deprecationMessage":"","value":"Add Custom Field"},{"name":"QBD_EXPORT","deprecated":false,"deprecationMessage":"","value":"Export IIF files"},{"name":"CONNECT_INTACCT","deprecated":false,"deprecationMessage":"","value":"Connect Sage Intacct"},{"name":"PREVIEW_INTACCT_EXPORT","deprecated":false,"deprecationMessage":"","value":"Preview Sage Intacct Export"},{"name":"INTACCT_EXPORT","deprecated":false,"deprecationMessage":"","value":"Export Sage Intacct"},{"name":"CONNECT_SAGE300","deprecated":false,"deprecationMessage":"","value":"Connect Sage 300 CRE"},{"name":"CONNECT_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Connect Dynamic 360 Business Central"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ConfigurationCta","childs":[{"name":"SAVE","deprecated":false,"deprecationMessage":"","value":"Save"},{"name":"SAVE_AND_CONTINUE","deprecated":false,"deprecationMessage":"","value":"Save and Continue"},{"name":"CONTINUE","deprecated":false,"deprecationMessage":"","value":"Continue"},{"name":"SAVING","deprecated":false,"deprecationMessage":"","value":"Saving"},{"name":"SYNCING","deprecated":false,"deprecationMessage":"","value":"Syncing"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ConfigurationWarningEvent","childs":[{"name":"CLONE_SETTINGS","deprecated":false,"deprecationMessage":"","value":"CLONE_SETTINGS"},{"name":"INCORRECT_QBO_ACCOUNT_CONNECTED","deprecated":false,"deprecationMessage":"","value":"INCORRECT_QBO_ACCOUNT_CONNECTED"},{"name":"QBO_EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"QBO_EXPORT_SETTINGS"},{"name":"RESET_CONFIGURATION","deprecated":false,"deprecationMessage":"","value":"RESET_CONFIGURATION"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"CorporateCreditCardExpensesObject","childs":[{"name":"BILL","deprecated":false,"deprecationMessage":"","value":"BILL"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL_ENTRY"},{"name":"EXPENSE_REPORT","deprecated":false,"deprecationMessage":"","value":"EXPENSE_REPORT"},{"name":"CHARGE_CARD_TRANSACTION","deprecated":false,"deprecationMessage":"","value":"CHARGE_CARD_TRANSACTION"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"CustomOperatorOption","childs":[{"name":"Is","deprecated":false,"deprecationMessage":"","value":"iexact"},{"name":"IsEmpty","deprecated":false,"deprecationMessage":"","value":"is_empty"},{"name":"IsNotEmpty","deprecated":false,"deprecationMessage":"","value":"is_not_empty"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"CustomOperatorOption","childs":[{"name":"Is","deprecated":false,"deprecationMessage":"","value":"iexact"},{"name":"IsEmpty","deprecated":false,"deprecationMessage":"","value":"is_empty"},{"name":"IsNotEmpty","deprecated":false,"deprecationMessage":"","value":"is_not_empty"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts"},{"name":"DefaultImportFields","childs":[{"name":"CATEGORY","deprecated":false,"deprecationMessage":"","value":"CATEGORY"},{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"},{"name":"MERCHANTS","deprecated":false,"deprecationMessage":"","value":"MERCHANTS"},{"name":"LOCATION","deprecated":false,"deprecationMessage":"","value":"LOCATION"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"EmployeeFieldMapping","childs":[{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE"},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExpenseGroupedBy","childs":[{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"EXPENSE"},{"name":"REPORT","deprecated":false,"deprecationMessage":"","value":"REPORT"},{"name":"PAYMENT","deprecated":false,"deprecationMessage":"","value":"PAYMENT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExpenseGroupingFieldOption","childs":[{"name":"CLAIM_NUMBER","deprecated":false,"deprecationMessage":"","value":"claim_number"},{"name":"SETTLEMENT_ID","deprecated":false,"deprecationMessage":"","value":"settlement_id"},{"name":"EXPENSE_ID","deprecated":false,"deprecationMessage":"","value":"expense_id"},{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"EXPENSE"},{"name":"REPORT","deprecated":false,"deprecationMessage":"","value":"REPORT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExpenseState","childs":[{"name":"PAYMENT_PROCESSING","deprecated":false,"deprecationMessage":"","value":"PAYMENT_PROCESSING"},{"name":"PAID","deprecated":false,"deprecationMessage":"","value":"PAID"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExportDateType","childs":[{"name":"LAST_SPENT_AT","deprecated":false,"deprecationMessage":"","value":"last_spent_at"},{"name":"SPENT_AT","deprecated":false,"deprecationMessage":"","value":"spent_at"},{"name":"POSTED_AT","deprecated":false,"deprecationMessage":"","value":"posted_at"},{"name":"CURRENT_DATE","deprecated":false,"deprecationMessage":"","value":"current_date"},{"name":"VERIFIED_DATE","deprecated":false,"deprecationMessage":"","value":"verified_at"},{"name":"APPROVAL_DATE","deprecated":false,"deprecationMessage":"","value":"approved_at"},{"name":"VERIFIED_AT","deprecated":false,"deprecationMessage":"","value":"verified_at"},{"name":"APPROVED_AT","deprecated":false,"deprecationMessage":"","value":"approved_at"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExportErrorSourceType","childs":[{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE"},{"name":"CATEGORY","deprecated":false,"deprecationMessage":"","value":"CATEGORY"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExportMode","childs":[{"name":"MANUAL","deprecated":false,"deprecationMessage":"","value":"MANUAL"},{"name":"AUTO","deprecated":false,"deprecationMessage":"","value":"AUTO"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExportState","childs":[{"name":"SUCCESS","deprecated":false,"deprecationMessage":"","value":"SUCCESS"},{"name":"FAILED","deprecated":false,"deprecationMessage":"","value":"FAILED"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"FieldType","childs":[{"name":"TEXT","deprecated":false,"deprecationMessage":"","value":"TEXT"},{"name":"SELECT","deprecated":false,"deprecationMessage":"","value":"SELECT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"FundSource","childs":[{"name":"PERSONAL","deprecated":false,"deprecationMessage":"","value":"PERSONAL"},{"name":"CCC","deprecated":false,"deprecationMessage":"","value":"CCC"},{"name":"REIMBURSABLE","deprecated":false,"deprecationMessage":"","value":"Reimbursable"},{"name":"CORPORATE_CARD","deprecated":false,"deprecationMessage":"","value":"Corporate Card"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"FyleField","childs":[{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE"},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"},{"name":"CATEGORY","deprecated":false,"deprecationMessage":"","value":"CATEGORY"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"FyleReferenceType","childs":[{"name":"REPORT_ID","deprecated":false,"deprecationMessage":"","value":"report_id"},{"name":"EXPENSE_REPORT","deprecated":false,"deprecationMessage":"","value":"claim_number"},{"name":"PAYMENT","deprecated":false,"deprecationMessage":"","value":"settlement_id"},{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"expense_id"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"InAppIntegration","childs":[{"name":"BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Bamboo HR"},{"name":"QBD","deprecated":false,"deprecationMessage":"","value":"QuickBooks Desktop"},{"name":"TRAVELPERK","deprecated":false,"deprecationMessage":"","value":"TravelPerk"},{"name":"GUSTO","deprecated":false,"deprecationMessage":"","value":"Gusto"},{"name":"INTACCT","deprecated":false,"deprecationMessage":"","value":"Sage Intacct"},{"name":"SAGE300","deprecated":false,"deprecationMessage":"","value":"Sage 300 CRE"},{"name":"BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Dynamics 365 Business Central"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"InputType","childs":[{"name":"DROPDOWN","deprecated":false,"deprecationMessage":"","value":"DROPDOWN"},{"name":"TOGGLE","deprecated":false,"deprecationMessage":"","value":"TOGGLE"},{"name":"MULTI_SELECT","deprecated":false,"deprecationMessage":"","value":"MULTI_SELECT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctCategoryDestination","childs":[{"name":"EXPENSE_TYPE","deprecated":false,"deprecationMessage":"","value":"EXPENSE_TYPE"},{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"GL_ACCOUNT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctErrorType","childs":[{"name":"EMPLOYEE_MAPPING","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE_MAPPING"},{"name":"CATEGORY_MAPPING","deprecated":false,"deprecationMessage":"","value":"CATEGORY_MAPPING"},{"name":"INTACCT_ERROR","deprecated":false,"deprecationMessage":"","value":"INTACCT_ERROR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctExportSettingDestinationOptionKey","childs":[{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"},{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"},{"name":"EXPENSE_PAYMENT_TYPE","deprecated":false,"deprecationMessage":"","value":"EXPENSE_PAYMENT_TYPE"},{"name":"CCC_EXPENSE_PAYMENT_TYPE","deprecated":false,"deprecationMessage":"","value":"CCC_EXPENSE_PAYMENT_TYPE"},{"name":"CHARGE_CARD","deprecated":false,"deprecationMessage":"","value":"CHARGE_CARD"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctField","childs":[{"name":"LOCATION_ENTITY","deprecated":false,"deprecationMessage":"","value":"LOCATION_ENTITY"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"IMPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"IMPORT_SETTINGS"},{"name":"ADVANCED_SETTINGS","deprecated":false,"deprecationMessage":"","value":"ADVANCED_SETTINGS"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctOnboardingState","childs":[{"name":"CONNECTION","deprecated":false,"deprecationMessage":"","value":"CONNECTION"},{"name":"LOCATION_ENTITY","deprecated":false,"deprecationMessage":"","value":"LOCATION_ENTITY_MAPPINGS"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"IMPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"IMPORT_SETTINGS"},{"name":"ADVANCED_CONFIGURATION","deprecated":false,"deprecationMessage":"","value":"ADVANCED_CONFIGURATION"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctReimbursableExpensesObject","childs":[{"name":"BILL","deprecated":false,"deprecationMessage":"","value":"BILL"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL_ENTRY"},{"name":"EXPENSE_REPORT","deprecated":false,"deprecationMessage":"","value":"EXPENSE_REPORT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctUpdateEvent","childs":[{"name":"CONNECT_INTACCT","deprecated":false,"deprecationMessage":"","value":"Connect Sage Intacct"},{"name":"EXPORT_SETTING_INTACCT","deprecated":false,"deprecationMessage":"","value":"Export Settings Intacct"},{"name":"IMPORT_SETTINGS_INTACCT","deprecated":false,"deprecationMessage":"","value":"Import Settings Intacct"},{"name":"ADVANCED_SETTINGS_INTACCT","deprecated":false,"deprecationMessage":"","value":"Advanced Settings Intacct"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntegrationName","childs":[{"name":"SAGE300","deprecated":false,"deprecationMessage":"","value":"SAGE300"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntegrationView","childs":[{"name":"ALL","deprecated":false,"deprecationMessage":"","value":"ALL"},{"name":"ACCOUNTING","deprecated":false,"deprecationMessage":"","value":"ACCOUNTING"},{"name":"HRMS","deprecated":false,"deprecationMessage":"","value":"HRMS"},{"name":"TRAVEL","deprecated":false,"deprecationMessage":"","value":"TRAVEL"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"JoinOption","childs":[{"name":"AND","deprecated":false,"deprecationMessage":"","value":"AND"},{"name":"OR","deprecated":false,"deprecationMessage":"","value":"OR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"JoinOption","childs":[{"name":"AND","deprecated":false,"deprecationMessage":"","value":"AND"},{"name":"OR","deprecated":false,"deprecationMessage":"","value":"OR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts"},{"name":"LoaderType","childs":[{"name":"DETERMINATE","deprecated":false,"deprecationMessage":"","value":"determinate"},{"name":"INDETERMINATE","deprecated":false,"deprecationMessage":"","value":"indeterminate"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"MappingDestinationField","childs":[{"name":"CUSTOMER","deprecated":false,"deprecationMessage":"","value":"CUSTOMER"},{"name":"CLASS","deprecated":false,"deprecationMessage":"","value":"CLASS"},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","value":"DEPARTMENT"},{"name":"TAX_CODE","deprecated":false,"deprecationMessage":"","value":"TAX_CODE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"MappingSourceField","childs":[{"name":"PROJECT","deprecated":false,"deprecationMessage":"","value":"PROJECT"},{"name":"COST_CENTER","deprecated":false,"deprecationMessage":"","value":"COST_CENTER"},{"name":"TAX_GROUP","deprecated":false,"deprecationMessage":"","value":"TAX_GROUP"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"MappingState","childs":[{"name":"MAPPED","deprecated":false,"deprecationMessage":"","value":"MAPPED"},{"name":"UNMAPPED","deprecated":false,"deprecationMessage":"","value":"UNMAPPED"},{"name":"ALL","deprecated":false,"deprecationMessage":"","value":"ALL"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"NameInJournalEntry","childs":[{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE"},{"name":"MERCHANT","deprecated":false,"deprecationMessage":"","value":"MERCHANT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"OperatingSystem","childs":[{"name":"WIN","deprecated":false,"deprecationMessage":"","value":"Win"},{"name":"MAC","deprecated":false,"deprecationMessage":"","value":"Mac"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Operator","childs":[{"name":"IsNull","deprecated":false,"deprecationMessage":"","value":"isnull"},{"name":"IExact","deprecated":false,"deprecationMessage":"","value":"iexact"},{"name":"IContains","deprecated":false,"deprecationMessage":"","value":"icontains"},{"name":"LessThan","deprecated":false,"deprecationMessage":"","value":"lt"},{"name":"LessThanOrEqual","deprecated":false,"deprecationMessage":"","value":"lte"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Operator","childs":[{"name":"IsNull","deprecated":false,"deprecationMessage":"","value":"isnull"},{"name":"IExact","deprecated":false,"deprecationMessage":"","value":"iexact"},{"name":"IContains","deprecated":false,"deprecationMessage":"","value":"icontains"},{"name":"LessThan","deprecated":false,"deprecationMessage":"","value":"lt"},{"name":"LessThanOrEqual","deprecated":false,"deprecationMessage":"","value":"lte"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts"},{"name":"Page","childs":[{"name":"LANDING","deprecated":false,"deprecationMessage":"","value":"Landing"},{"name":"BAMBOO_HR_LANDING","deprecated":false,"deprecationMessage":"","value":"Bamboo HR Landing"},{"name":"CONNECT_BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Connect Bamboo HR"},{"name":"CONFIGURE_BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Bamboo HR Configuration"},{"name":"GUSTO_LANDING","deprecated":false,"deprecationMessage":"","value":"Gusto Landing"},{"name":"CONFIGURE_GUSTO","deprecated":false,"deprecationMessage":"","value":"Gusto Configuration"},{"name":"QBD_LANDING","deprecated":false,"deprecationMessage":"","value":"QuickBooks Desktop Landing"},{"name":"INTACCT_LANDING","deprecated":false,"deprecationMessage":"","value":"Sage Intacct Landing"},{"name":"CONNECT_QBD","deprecated":false,"deprecationMessage":"","value":"Connect QuickBooks Desktop"},{"name":"CONNECT_INTACCT","deprecated":false,"deprecationMessage":"","value":"Connect Sage Intacct"},{"name":"EXPORT_SETTING_QBD","deprecated":false,"deprecationMessage":"","value":"Export Settings QBD"},{"name":"EXPORT_SETTING_INTACCT","deprecated":false,"deprecationMessage":"","value":"Export Settings Intacct"},{"name":"IMPORT_SETTINGS_INTACCT","deprecated":false,"deprecationMessage":"","value":"Import Settings Intacct"},{"name":"FIELD_MAPPING_QBD","deprecated":false,"deprecationMessage":"","value":"Field Mappings QBD"},{"name":"ADVANCED_SETTINGS_QBD","deprecated":false,"deprecationMessage":"","value":"Advanced Settings QBD"},{"name":"EXPORT_SETTING_SAGE300","deprecated":false,"deprecationMessage":"","value":"Export Settings Sage300"},{"name":"IMPORT_SETTINGS_SAGE300","deprecated":false,"deprecationMessage":"","value":"Import Settings Sage300"},{"name":"ADVANCED_SETTINGS_SAGE300","deprecated":false,"deprecationMessage":"","value":"Advanced Settings Sage300"},{"name":"EXPORT_SETTING_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Export Settings BusinessCentral"},{"name":"IMPORT_SETTINGS_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Import Settings BusinessCentral"},{"name":"ADVANCED_SETTINGS_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Advanced Settings BusinessCentral"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"PaginatorPage","childs":[{"name":"MAPPING","deprecated":false,"deprecationMessage":"","value":"mapping"},{"name":"DASHBOARD","deprecated":false,"deprecationMessage":"","value":"dashboard"},{"name":"EXPORT_LOG","deprecated":false,"deprecationMessage":"","value":"export-log"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"PaymentSyncDirection","childs":[{"name":"FYLE_TO_INTACCT","deprecated":false,"deprecationMessage":"","value":"fyle_to_intacct"},{"name":"INTACCT_TO_FYLE","deprecated":false,"deprecationMessage":"","value":"intacct_to_fyle"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ProgressPhase","childs":[{"name":"ONBOARDING","deprecated":false,"deprecationMessage":"","value":"Onboarding"},{"name":"POST_ONBOARDING","deprecated":false,"deprecationMessage":"","value":"Post Onboarding"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDAccountingExportsState","childs":[{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"},{"name":"ENQUEUED","deprecated":false,"deprecationMessage":"","value":"ENQUEUED"},{"name":"IN_PROGRESS","deprecated":false,"deprecationMessage":"","value":"IN_PROGRESS"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDAccountingExportsType","childs":[{"name":"EXPORT_BILLS","deprecated":false,"deprecationMessage":"","value":"EXPORT_BILLS"},{"name":"REIMBURSABLE","deprecated":false,"deprecationMessage":"","value":"REIMBURSABLE"},{"name":"CREDIT_CARD","deprecated":false,"deprecationMessage":"","value":"CREDIT_CARD"},{"name":"EXPORT_CREDIT_CARD_PURCHASES","deprecated":false,"deprecationMessage":"","value":"EXPORT_CREDIT_CARD_PURCHASES"},{"name":"EXPORT_JOURNALS","deprecated":false,"deprecationMessage":"","value":"EXPORT_JOURNALS"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDCorporateCreditCardExpensesObject","childs":[{"name":"CREDIT_CARD_PURCHASE","deprecated":false,"deprecationMessage":"","value":"CREDIT_CARD_PURCHASE"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL_ENTRY"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDEntity","childs":[{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE"},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDExpenseGroupedBy","childs":[{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"EXPENSE"},{"name":"REPORT","deprecated":false,"deprecationMessage":"","value":"REPORT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDExportDateType","childs":[{"name":"LAST_SPENT_AT","deprecated":false,"deprecationMessage":"","value":"last_spent_at"},{"name":"SPENT_AT","deprecated":false,"deprecationMessage":"","value":"spent_at"},{"name":"POSTED_AT","deprecated":false,"deprecationMessage":"","value":"posted_at"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDFyleField","childs":[{"name":"PROJECT","deprecated":false,"deprecationMessage":"","value":"PROJECT"},{"name":"COST_CENTER","deprecated":false,"deprecationMessage":"","value":"COST_CENTER"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDOnboardingState","childs":[{"name":"CONNECTION","deprecated":false,"deprecationMessage":"","value":"CONNECTION"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"FIELD_MAPPINGS","deprecated":false,"deprecationMessage":"","value":"FIELD_MAPPINGS"},{"name":"ADVANCED_SETTINGS","deprecated":false,"deprecationMessage":"","value":"ADVANCED_SETTINGS"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDReimbursableExpensesObject","childs":[{"name":"BILL","deprecated":false,"deprecationMessage":"","value":"BILL"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL_ENTRY"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDScheduleFrequency","childs":[{"name":"DAILY","deprecated":false,"deprecationMessage":"","value":"DAILY"},{"name":"WEEKLY","deprecated":false,"deprecationMessage":"","value":"WEEKLY"},{"name":"MONTHLY","deprecated":false,"deprecationMessage":"","value":"MONTHLY"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOCorporateCreditCardExpensesObject","childs":[{"name":"CREDIT_CARD_PURCHASE","deprecated":false,"deprecationMessage":"","value":"CREDIT CARD PURCHASE"},{"name":"BILL","deprecated":false,"deprecationMessage":"","value":"BILL"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL ENTRY"},{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"EXPENSE"},{"name":"DEBIT_CARD_EXPENSE","deprecated":false,"deprecationMessage":"","value":"DEBIT CARD EXPENSE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOField","childs":[{"name":"CLASS","deprecated":false,"deprecationMessage":"","value":"CLASS"},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","value":"DEPARTMENT"},{"name":"CUSTOMER","deprecated":false,"deprecationMessage":"","value":"CUSTOMER"},{"name":"TAX_CODE","deprecated":false,"deprecationMessage":"","value":"TAX_CODE"},{"name":"BANK_ACCOUNT","deprecated":false,"deprecationMessage":"","value":"BANK_ACCOUNT"},{"name":"CREDIT_CARD_ACCOUNT","deprecated":false,"deprecationMessage":"","value":"CREDIT_CARD_ACCOUNT"},{"name":"ACCOUNTS_PAYABLE","deprecated":false,"deprecationMessage":"","value":"ACCOUNTS_PAYABLE"},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOOnboardingState","childs":[{"name":"CONNECTION","deprecated":false,"deprecationMessage":"","value":"CONNECTION"},{"name":"MAP_EMPLOYEES","deprecated":false,"deprecationMessage":"","value":"MAP_EMPLOYEES"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"IMPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"IMPORT_SETTINGS"},{"name":"ADVANCED_CONFIGURATION","deprecated":false,"deprecationMessage":"","value":"ADVANCED_CONFIGURATION"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"},{"name":"CLONE_SETTINGS","deprecated":false,"deprecationMessage":"","value":"CLONE_SETTINGS"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOPaymentSyncDirection","childs":[{"name":"FYLE_TO_QBO","deprecated":false,"deprecationMessage":"","value":"fyle_to_qbo"},{"name":"QBO_TO_FYLE","deprecated":false,"deprecationMessage":"","value":"qbo_to_fyle"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOReimbursableExpensesObject","childs":[{"name":"BILL","deprecated":false,"deprecationMessage":"","value":"BILL"},{"name":"CHECK","deprecated":false,"deprecationMessage":"","value":"CHECK"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL ENTRY"},{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"EXPENSE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOTaskLogType","childs":[{"name":"CREATING_BILL","deprecated":false,"deprecationMessage":"","value":"CREATING_BILL"},{"name":"CREATING_EXPENSE","deprecated":false,"deprecationMessage":"","value":"CREATING_EXPENSE"},{"name":"CREATING_CHECK","deprecated":false,"deprecationMessage":"","value":"CREATING_CHECK"},{"name":"CREATING_JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"CREATING_JOURNAL_ENTRY"},{"name":"CREATING_CREDIT_CARD_PURCHASE","deprecated":false,"deprecationMessage":"","value":"CREATING_CREDIT_CARD_PURCHASE"},{"name":"CREATING_CREDIT_CARD_CREDIT","deprecated":false,"deprecationMessage":"","value":"CREATING_CREDIT_CARD_CREDIT"},{"name":"CREATING_DEBIT_CARD_EXPENSE","deprecated":false,"deprecationMessage":"","value":"CREATING_DEBIT_CARD_EXPENSE"},{"name":"CREATING_BILL_PAYMENT","deprecated":false,"deprecationMessage":"","value":"CREATING_BILL_PAYMENT"},{"name":"FETCHING_EXPENSE","deprecated":false,"deprecationMessage":"","value":"FETCHING_EXPENSE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"RefinerSurveyType","childs":[{"name":"ONBOARDING_DONE","deprecated":false,"deprecationMessage":"","value":"Onboarding Done"},{"name":"EXPORT_DONE","deprecated":false,"deprecationMessage":"","value":"Export Done"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Sage300ExpenseDate","childs":[{"name":"LAST_SPENT_AT","deprecated":false,"deprecationMessage":"","value":"LAST_SPENT_AT"},{"name":"CURRENT_DATE","deprecated":false,"deprecationMessage":"","value":"CURRENT_DATE"},{"name":"SPENT_AT","deprecated":false,"deprecationMessage":"","value":"SPENT_AT"},{"name":"POSTED_AT","deprecated":false,"deprecationMessage":"","value":"POSTED_AT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Sage300ExportType","childs":[{"name":"PURCHASE_INVOICE","deprecated":false,"deprecationMessage":"","value":"PURCHASE_INVOICE"},{"name":"DIRECT_COST","deprecated":false,"deprecationMessage":"","value":"DIRECT_COST"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Sage300Field","childs":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"},{"name":"CUSTOMER","deprecated":false,"deprecationMessage":"","value":"CUSTOMER"},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","value":"DEPARTMENT"},{"name":"CLASS","deprecated":false,"deprecationMessage":"","value":"CLASS"},{"name":"TAX_DETAIL","deprecated":false,"deprecationMessage":"","value":"TAX_DETAIL"},{"name":"JOB","deprecated":false,"deprecationMessage":"","value":"JOB"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Sage300OnboardingState","childs":[{"name":"CONNECTION","deprecated":false,"deprecationMessage":"","value":"CONNECTION"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"IMPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"IMPORT_SETTINGS"},{"name":"ADVANCED_SETTINGS","deprecated":false,"deprecationMessage":"","value":"ADVANCED_SETTINGS"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Sage300UpdateEvent","childs":[{"name":"CONNECT_SAGE300","deprecated":false,"deprecationMessage":"","value":"Connect Sage300"},{"name":"EXPORT_SETTING_SAGE300","deprecated":false,"deprecationMessage":"","value":"Export Settings Sage300"},{"name":"IMPORT_SETTINGS_SAGE300","deprecated":false,"deprecationMessage":"","value":"Import Settings Sage300"},{"name":"ADVANCED_SETTINGS_SAGE300","deprecated":false,"deprecationMessage":"","value":"Advanced Settings Sage300"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"SageIntacctField","childs":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"},{"name":"CUSTOMER","deprecated":false,"deprecationMessage":"","value":"CUSTOMER"},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","value":"DEPARTMENT"},{"name":"CLASS","deprecated":false,"deprecationMessage":"","value":"CLASS"},{"name":"TAX_CODE","deprecated":false,"deprecationMessage":"","value":"TAX_CODE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"TaskLogState","childs":[{"name":"ENQUEUED","deprecated":false,"deprecationMessage":"","value":"ENQUEUED"},{"name":"IN_PROGRESS","deprecated":false,"deprecationMessage":"","value":"IN_PROGRESS"},{"name":"FAILED","deprecated":false,"deprecationMessage":"","value":"FAILED"},{"name":"FATAL","deprecated":false,"deprecationMessage":"","value":"FATAL"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"TaskLogType","childs":[{"name":"CREATING_AP_PAYMENT","deprecated":false,"deprecationMessage":"","value":"CREATING_AP_PAYMENT"},{"name":"CREATING_EXPENSE_REPORTS","deprecated":false,"deprecationMessage":"","value":"CREATING_EXPENSE_REPORTS"},{"name":"CREATING_CHARGE_CARD_TRANSACTIONS","deprecated":false,"deprecationMessage":"","value":"CREATING_CHARGE_CARD_TRANSACTIONS"},{"name":"CREATING_JOURNAL_ENTRIES","deprecated":false,"deprecationMessage":"","value":"CREATING_JOURNAL_ENTRIES"},{"name":"FETCHING_EXPENSES","deprecated":false,"deprecationMessage":"","value":"FETCHING_EXPENSES"},{"name":"CREATING_BILLS","deprecated":false,"deprecationMessage":"","value":"CREATING_BILLS"},{"name":"CREATING_REIMBURSEMENT","deprecated":false,"deprecationMessage":"","value":"CREATING_REIMBURSEMENT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ToastSeverity","childs":[{"name":"SUCCESS","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"ERROR","deprecated":false,"deprecationMessage":"","value":"error"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"UpdateEvent","childs":[{"name":"CONNECT_QBD","deprecated":false,"deprecationMessage":"","value":"Connect QuickBooks Desktop"},{"name":"EXPORT_SETTING_QBD","deprecated":false,"deprecationMessage":"","value":"Export Settings QBD"},{"name":"FIELD_MAPPING_QBD","deprecated":false,"deprecationMessage":"","value":"Field Mappings QBD"},{"name":"ADVANCED_SETTINGS_QBD","deprecated":false,"deprecationMessage":"","value":"Advanced Settings QBD"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"}],"groupedVariables":{"src/app/integrations/sage300/sage300-shared/fixture.ts":[{"name":"adminEmails","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"EmailOption[]","defaultValue":"[\\n\\t{\\n\\t\\t\\"name\\": \\"Nilesh Pant\\",\\n\\t\\t\\"email\\": \\"nilesh.p@fyle.in\\"\\n    }\\n]"},{"name":"destinationAttributes","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"Sage300DestinationAttributes[]","defaultValue":"[\\n    {\\n        \\"id\\": 214726,\\n        \\"attribute_type\\": \\"CHARGE_CARD_NUMBER\\",\\n        \\"display_name\\": \\"Charge Card Account\\",\\n        \\"value\\": \\"1234\\",\\n        \\"destination_id\\": \\"1234\\",\\n        \\"auto_created\\": false,\\n        \\"active\\": false,\\n        \\"detail\\": null,\\n        \\"created_at\\": new Date(),\\n        \\"updated_at\\": new Date(),\\n        \\"workspace\\": 313\\n    },\\n    {\\n        \\"id\\": 214731,\\n        \\"attribute_type\\": \\"VENDOR\\",\\n        \\"display_name\\": \\"vendor\\",\\n        \\"value\\": \\"A-1 Electric Company\\",\\n        \\"destination_id\\": \\"V100\\",\\n        \\"auto_created\\": false,\\n        \\"active\\": true,\\n        \\"detail\\": {\\n            \\"email\\": null\\n        },\\n        \\"created_at\\": new Date(),\\n        \\"updated_at\\": new Date(),\\n        \\"workspace\\": 313\\n    }\\n]"},{"name":"expenseFilterCondition","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"ConditionField[]","defaultValue":"[\\n    {\\n        \\"field_name\\": \\"employee_email\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": false\\n    },\\n    {\\n        \\"field_name\\": \\"claim_number\\",\\n        \\"type\\": \\"TEXT\\",\\n        \\"is_custom\\": false\\n    },\\n    {\\n        \\"field_name\\": \\"report_title\\",\\n        \\"type\\": \\"TEXT\\",\\n        \\"is_custom\\": false\\n    },\\n    {\\n        \\"field_name\\": \\"spent_at\\",\\n        \\"type\\": \\"DATE\\",\\n        \\"is_custom\\": false\\n    },\\n    {\\n        \\"field_name\\": \\"Class\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    },\\n    {\\n        \\"field_name\\": \\"Fyle Categories\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    },\\n    {\\n        \\"field_name\\": \\"Operating System\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    },\\n    {\\n        \\"field_name\\": \\"User Dimension\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    },\\n    {\\n        \\"field_name\\": \\"Asdasdas\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    },\\n    {\\n        \\"field_name\\": \\"Nilesh Custom Field\\",\\n        \\"type\\": \\"SELECT\\",\\n        \\"is_custom\\": true\\n    }\\n]"},{"name":"expenseFiltersGet","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"ExpenseFilterResponse","defaultValue":"{\\n    \\"count\\": 2,\\n    \\"next\\": null,\\n    \\"previous\\": null,\\n    \\"results\\": [\\n        {\\n            \\"id\\": 45,\\n            \\"condition\\": \\"spent_at\\",\\n            \\"operator\\": Operator.LessThan,\\n            \\"values\\": [\\n                \\"2023-10-16T17:00:00.000Z\\"\\n            ],\\n            \\"rank\\": 1,\\n            \\"join_by\\": JoinOption.AND,\\n            \\"is_custom\\": false,\\n            \\"custom_field_type\\": null,\\n            \\"created_at\\": new Date(),\\n            \\"updated_at\\": new Date(),\\n            \\"workspace\\": 383\\n        },\\n        {\\n            \\"id\\": 46,\\n            \\"condition\\": \\"employee_email\\",\\n            \\"operator\\": Operator.IExact,\\n            \\"values\\": [\\n                \\"aba@gamil.com\\"\\n            ],\\n            \\"rank\\": 2,\\n            \\"join_by\\": null,\\n            \\"is_custom\\": false,\\n            \\"custom_field_type\\": null,\\n            \\"created_at\\": new Date(),\\n            \\"updated_at\\": new Date(),\\n            \\"workspace\\": 383\\n        }\\n    ]\\n}"},{"name":"fyleFieldsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"FyleField[]","defaultValue":"[\\n    {\\n        \\"attribute_type\\": \\"COST_CENTER\\",\\n        \\"display_name\\": \\"Cost Center\\",\\n        \\"is_dependent\\": false\\n    },\\n    {\\n        \\"attribute_type\\": \\"PROJECT\\",\\n        \\"display_name\\": \\"Project\\",\\n        \\"is_dependent\\": false\\n    },\\n    {\\n        \\"attribute_type\\": \\"CLASS\\",\\n        \\"display_name\\": \\"Class\\",\\n        \\"is_dependent\\": false\\n    }\\n]"},{"name":"importSettingsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"Sage300ImportSettingGet","defaultValue":"{\\n    \\"import_settings\\": {\\n        \\"import_categories\\": false,\\n        \\"import_vendors_as_merchants\\": false\\n    },\\n    \\"mapping_settings\\": [\\n        {\\n            \\"source_field\\": \\"COST_CENTER\\",\\n            \\"destination_field\\": \\"CLASS\\",\\n            \\"import_to_fyle\\": false,\\n            \\"is_custom\\": false,\\n            \\"source_placeholder\\": null\\n        },\\n        {\\n            \\"source_field\\": \\"PROJECT\\",\\n            \\"destination_field\\": \\"PROJECT\\",\\n            \\"import_to_fyle\\": true,\\n            \\"is_custom\\": false,\\n            \\"source_placeholder\\": null\\n        }\\n    ],\\n    \\"dependent_field_settings\\": {\\n        \\"cost_code_field_name\\": \\"Sage Cost COde\\",\\n        \\"cost_code_placeholder\\": \\"null\\",\\n        \\"cost_category_field_name\\": \\"Sage Cost Type\\",\\n        \\"cost_category_placeholder\\": \\"null\\",\\n        \\"is_import_enabled\\": true\\n    },\\n    workspaceId: 312\\n}"},{"name":"sage300AdvancedSettingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"Sage300AdvancedSettingGet","defaultValue":"{\\n    memo_structure: [\\n        \\"employee_email\\",\\n        \\"category\\",\\n        \\"spent_on\\",\\n        \\"report_number\\",\\n        \\"purpose\\",\\n        \\"expense_link\\"\\n    ],\\n    schedule_is_enabled: true,\\n    id: 0,\\n    created_at: new Date(),\\n    update_at: new Date(),\\n    workspace: 1,\\n    auto_create_vendor: false,\\n    interval_hours: 1\\n}"},{"name":"sage300FieldsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/sage300/sage300-shared/fixture.ts","deprecated":false,"deprecationMessage":"","type":"IntegrationField[]","defaultValue":"[\\n    {\\n        \\"attribute_type\\": \\"COST_CENTER\\",\\n        \\"display_name\\": \\"Cost Center\\"\\n    },\\n    {\\n        \\"attribute_type\\": \\"PROJECT\\",\\n        \\"display_name\\": \\"Project\\"\\n    },\\n    {\\n        \\"attribute_type\\": \\"CLASS\\",\\n        \\"display_name\\": \\"Class\\"\\n    }\\n]"}],"src/app/core/services/qbo/qbo-configuration/qbo-advanced-settings.service.ts":[{"name":"advancedSettingsCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbo/qbo-configuration/qbo-advanced-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/stories/MappingFilter.stories.ts":[{"name":"alphabetFilter","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MappingFilter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    selectedAlphabeticalFilter: \'C\',\\n    mappingFilter: MappingState.MAPPED\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MappingFilter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MappingFilterComponent>","defaultValue":"{\\n  title: \'Mapping/MappingFilter\',\\n  component: MappingFilterComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MappingFilterComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, BrowserAnimationsModule, DropdownModule, InputTextModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MappingFilter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    selectedAlphabeticalFilter: \'All\',\\n    mappingFilter: MappingState.ALL\\n  }\\n}"}],"src/app/core/services/common/api.service.ts":[{"name":"API_BASE_URL","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/common/api.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"environment.api_url"},{"name":"httpOptions","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/common/api.service.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  headers: new HttpHeaders({\\n    \'Content-Type\': \'application/json\'\\n  }),\\n  body: {}\\n}"}],"src/app/core/services/qbd/qbd-core/qbd-api.service.ts":[{"name":"API_BASE_URL","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbd/qbd-core/qbd-api.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"environment.qbd_api_url"},{"name":"httpOptions","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbd/qbd-core/qbd-api.service.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  headers: new HttpHeaders({\\n    \'Content-Type\': \'application/json\'\\n  })\\n}"}],"src/app/core/services/si/si-core/si-api.service.ts":[{"name":"API_BASE_URL","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/si/si-core/si-api.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"environment.si_api_url"},{"name":"httpOptions","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/si/si-core/si-api.service.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  headers: new HttpHeaders({\\n    \'Content-Type\': \'application/json\'\\n  }),\\n  body: {}\\n}"}],"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts":[{"name":"bambooHRMockConfiguration","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BambooHRConfiguration","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    recipe_id: \'1\',\\n    recipe_data: \'xyz\',\\n    recipe_status: true,\\n    additional_email_options: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ],\\n    emails_selected: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ]\\n}"},{"name":"bambooHRMockConfigurationPayload","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BambooHRConfigurationPost","defaultValue":"{\\n    org: 1,\\n    additional_email_options: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ],\\n    emails_selected: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ]\\n}"},{"name":"bambooHRMockConnectionPayload","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BambooHrConnection","defaultValue":"{\\n    input: {\\n        api_token: \'xyz\',\\n        subdomain: \'fyle\'\\n    }\\n}"},{"name":"bambooHrMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BambooHr","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    folder_id: \'1\',\\n    package_id: \'1\',\\n    api_token: \'xyz\',\\n    sub_domain: \'fyle\',\\n    created_at: new Date(),\\n    updated_at: new Date()\\n}"},{"name":"bambooHrMockWithoutToken","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BambooHr","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    folder_id: \'\',\\n    package_id: \'\',\\n    api_token: \'\',\\n    sub_domain: \'\',\\n    created_at: new Date(),\\n    updated_at: new Date()\\n}"}],"src/app/branding/branding-config.ts":[{"name":"brandingConfig","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"BrandingConfiguration","defaultValue":"config"},{"name":"brandingDemoVideoLinks","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"demoVideoLinks[brandingConfig.brandId]"},{"name":"brandingFeatureConfig","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"featureConfigs[brandingConfig.brandId]"},{"name":"brandingKbArticles","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"kbArticles[brandingConfig.brandId]"},{"name":"demoVideoLinks","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"DemoVideo","defaultValue":"{\\n    fyle: {\\n        onboarding: {\\n            INTACCT: \'https://www.youtube.com/embed/2oYdc8KcQnk\',\\n            // TODO: Update link for Sage 300\\n            SAGE300: \'https://www.youtube.com/embed/2oYdc8KcQnk\',\\n            QBO: \'https://www.youtube.com/embed/b63lS2DG5j4\',\\n            // TODO: Update link for MS Dynamics\\n            BUSINESS_CENTRAL: \'https://www.youtube.com/embed/2oYdc8KcQnk\'\\n        }\\n    }\\n}"},{"name":"featureConfigs","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"FeatureConfiguration","defaultValue":"{\\n    fyle: {\\n        reimbursableExpenses: true\\n    },\\n    coco: {\\n        reimbursableExpenses: false\\n    }\\n}"},{"name":"kbArticles","ctype":"miscellaneous","subtype":"variable","file":"src/app/branding/branding-config.ts","deprecated":false,"deprecationMessage":"","type":"KbArticle","defaultValue":"{\\n    fyle: {\\n        topLevelArticles: {\\n            BAMBOO_HR: \'https://help.fylehq.com/en/articles/6845034-fyle-bamboo-hr-integration\',\\n            QBD: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle#quickbooks-desktop\',\\n            INTACCT: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle\',\\n            TRAVELPERK: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle\',\\n            GUSTO: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle\',\\n            SAGE300: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle\',\\n            BUSINESS_CENTRAL: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle\'\\n        },\\n        onboardingArticles: {\\n            INTACCT: {\\n                IMPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_85f929716c\',\\n                EXPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_6492c5038d\',\\n                ADVANCED_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_3f6718633c\',\\n                LANDING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration\',\\n                CONNECTOR: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_38e0c9bea6\',\\n                SKIP_EXPORT: \'https://help.fylehq.com/en/articles/7882821-how-to-skip-exporting-specific-expenses-from-fyle-to-sage-intacct\'\\n            },\\n            // TODO: Update KB articles for Sage 300\\n            SAGE300: {\\n                IMPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_85f929716c\',\\n                EXPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_6492c5038d\',\\n                ADVANCED_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_3f6718633c\',\\n                LANDING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration\',\\n                SKIP_EXPORT: \'https://help.fylehq.com/en/articles/7882821-how-to-skip-exporting-specific-expenses-from-fyle-to-sage-intacct\'\\n            },\\n            // TODO: Update KB articles for QBO\\n            QBO: {\\n                LANDING: \'https://help.fylehq.com/en/collections/215867-integrations-with-fyle#quickbooks-2-0\',\\n                CONNECTOR: \'https://help.fylehq.com/en/articles/6208620-how-to-set-up-the-fyle-quickbooks-online-integration-v2-0\',\\n                EMPLOYEE_SETTING: \'https://help.fylehq.com/en/articles/6208620-how-to-set-up-the-fyle-quickbooks-online-integration-v2-0#h_d70f1d54cc\',\\n                EXPORT_SETTING: \'https://help.fylehq.com/en/articles/6208620-how-to-set-up-the-fyle-quickbooks-online-integration-v2-0#h_dca1353686\',\\n                IMPORT_SETTING: \'https://help.fylehq.com/en/articles/6208620-how-to-set-up-the-fyle-quickbooks-online-integration-v2-0#h_b8a2df129f\',\\n                ADVANCED_SETTING: \'https://help.fylehq.com/en/articles/6208620-how-to-set-up-the-fyle-quickbooks-online-integration-v2-0#h_18c28de6c7\',\\n                SKIP_EXPORT: \'https://help.fylehq.com/en/articles/7044785-how-to-skip-exporting-specific-expenses-from-fyle-to-quickbooks-online\'\\n            },\\n            // TODO: Update KB articles for MS Dynamics\\n            BUSINESS_CENTRAL: {\\n                IMPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_85f929716c\',\\n                EXPORT_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_6492c5038d\',\\n                ADVANCED_SETTING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration#h_3f6718633c\',\\n                LANDING: \'https://help.fylehq.com/en/articles/8394683-how-to-configure-the-fyle-sage-intacct-integration\',\\n                SKIP_EXPORT: \'https://help.fylehq.com/en/articles/7882821-how-to-skip-exporting-specific-expenses-from-fyle-to-sage-intacct\'\\n            }\\n        }\\n    }\\n}"}],"src/app/core/services/business-central/business-central-configuration/business-central-advanced-settings.service.ts":[{"name":"businessCentralAdvancedSettingGetCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/business-central/business-central-configuration/business-central-advanced-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts":[{"name":"businessCentralAdvancedSettingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BusinessCentralAdvancedSettingsGet","defaultValue":"{\\n  \\"id\\": 37,\\n  \\"created_at\\": new Date(\\"2023-10-09T11:26:49.324649Z\\"),\\n  \\"updated_at\\": new Date(\\"2023-10-09T11:26:49.324649Z\\"),\\n  \\"top_memo_structure\\": [\\n    \\"employee_email\\"\\n  ],\\n  \\"expense_memo_structure\\": [\\n    \\"employee_email\\",\\n    \\"merchant\\",\\n    \\"purpose\\",\\n    \\"category\\",\\n    \\"spent_on\\",\\n    \\"report_number\\",\\n    \\"expense_link\\"\\n  ],\\n  \\"schedule_is_enabled\\": true,\\n  \\"workspace\\": 1,\\n  \\"interval_hours\\": 1\\n}"},{"name":"businessCentralFieldsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"IntegrationField[]","defaultValue":"[\\n  {\\n    \\"attribute_type\\": \\"LOCATION\\",\\n    \\"display_name\\": \\"Location\\"\\n  },\\n  {\\n    \\"attribute_type\\": \\"CATEGORY\\",\\n    \\"display_name\\": \\"Category\\"\\n  },\\n  {\\n    \\"attribute_type\\": \\"Employee\\",\\n    \\"display_name\\": \\"Employee\\"\\n  }\\n]"},{"name":"destinationAttributes","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BusinessCentralDestinationAttributes[]","defaultValue":"[\\n  {\\n    \\"id\\": 33929,\\n    \\"attribute_type\\": \\"COMPANY\\",\\n    \\"display_name\\": \\"Company\\",\\n    \\"value\\": \\"Columbus\\",\\n    \\"destination_id\\": \\"9f9cbd27-880e-441e-8cf\\",\\n    \\"auto_created\\": false,\\n    \\"active\\": true,\\n    \\"created_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\"),\\n    \\"updated_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\"),\\n    \\"workspace\\": 343,\\n    \\"detail\\": null\\n  }\\n]"},{"name":"expenseFilterCondition","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"ConditionField[]","defaultValue":"[\\n  {\\n    \\"field_name\\": \\"employee_email\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": false\\n  },\\n  {\\n    \\"field_name\\": \\"claim_number\\",\\n    \\"type\\": \\"TEXT\\",\\n    \\"is_custom\\": false\\n  },\\n  {\\n    \\"field_name\\": \\"report_title\\",\\n    \\"type\\": \\"TEXT\\",\\n    \\"is_custom\\": false\\n  },\\n  {\\n    \\"field_name\\": \\"spent_at\\",\\n    \\"type\\": \\"DATE\\",\\n    \\"is_custom\\": false\\n  },\\n  {\\n    \\"field_name\\": \\"Class\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  },\\n  {\\n    \\"field_name\\": \\"Fyle Categories\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  },\\n  {\\n    \\"field_name\\": \\"Operating System\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  },\\n  {\\n    \\"field_name\\": \\"User Dimension\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  },\\n  {\\n    \\"field_name\\": \\"Asdasdas\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  },\\n  {\\n    \\"field_name\\": \\"Nilesh Custom Field\\",\\n    \\"type\\": \\"SELECT\\",\\n    \\"is_custom\\": true\\n  }\\n]"},{"name":"expenseFiltersGet","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"ExpenseFilterResponse","defaultValue":"{\\n  \\"count\\": 2,\\n  \\"next\\": null,\\n  \\"previous\\": null,\\n  \\"results\\": [\\n    {\\n      \\"id\\": 45,\\n      \\"condition\\": \\"spent_at\\",\\n      \\"operator\\": Operator.LessThan,\\n      \\"values\\": [\\n          \\"2023-10-16T17:00:00.000Z\\"\\n      ],\\n      \\"rank\\": 1,\\n      \\"join_by\\": JoinOption.AND,\\n      \\"is_custom\\": false,\\n      \\"custom_field_type\\": null,\\n      \\"created_at\\": new Date(),\\n      \\"updated_at\\": new Date(),\\n      \\"workspace\\": 383\\n    },\\n    {\\n      \\"id\\": 46,\\n      \\"condition\\": \\"employee_email\\",\\n      \\"operator\\": Operator.IExact,\\n      \\"values\\": [\\n          \\"aba@gamil.com\\"\\n      ],\\n      \\"rank\\": 2,\\n      \\"join_by\\": null,\\n      \\"is_custom\\": false,\\n      \\"custom_field_type\\": null,\\n      \\"created_at\\": new Date(),\\n      \\"updated_at\\": new Date(),\\n      \\"workspace\\": 383\\n    }\\n  ]\\n}"},{"name":"exportSettingsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BusinessCentralExportSettingGet","defaultValue":"{\\n  \\"id\\": 38,\\n  \\"created_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\"),\\n  \\"reimbursable_expenses_export_type\\": BusinessCentralExportType.JOURNAL_ENTRY,\\n  \\"default_bank_account_name\\": \\"XYZ\\",\\n  \\"default_bank_account_id\\": \\"1232\\",\\n  \\"reimbursable_expense_state\\": ExpenseState.PAYMENT_PROCESSING,\\n  \\"reimbursable_expense_date\\": ExportDateType.LAST_SPENT_AT,\\n  \\"reimbursable_expense_grouped_by\\": ExpenseGroupedBy.EXPENSE,\\n  \\"credit_card_expense_export_type\\": BusinessCentralExportType.JOURNAL_ENTRY,\\n  \\"credit_card_expense_state\\": CCCExpenseState.PAYMENT_PROCESSING,\\n  \\"default_credit_card_account_name\\": \\"ASSS\\",\\n  \\"default_credit_card_account_id\\": \\"212\\",\\n  \\"credit_card_expense_grouped_by\\": ExpenseGroupedBy.EXPENSE,\\n  \\"credit_card_expense_date\\": ExportDateType.LAST_SPENT_AT,\\n  \\"updated_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\"),\\n  \\"workspace\\": 1,\\n  \\"credit_card_entity_name_preference\\": \\"EMPLOYEE\\",\\n  \\"employee_mapping\\": \\"EMAIL\\"\\n}"},{"name":"fyleFieldsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"FyleField[]","defaultValue":"[\\n  {\\n    \\"attribute_type\\": \\"CATEGORY\\",\\n    \\"display_name\\": \\"Category\\",\\n    \\"is_dependent\\": true\\n  },\\n  {\\n    \\"attribute_type\\": \\"Employee\\",\\n    \\"display_name\\": \\"Employee\\",\\n    \\"is_dependent\\": true\\n  }\\n]"},{"name":"importSettingsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","deprecated":false,"deprecationMessage":"","type":"BusinessCentralImportSettingsGet","defaultValue":"{\\n  \\"id\\": 123,\\n  \\"import_categories\\": true,\\n  \\"mapping_settings\\": [],\\n  \\"workspace_id\\": 343,\\n  \\"created_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\"),\\n  \\"updated_at\\": new Date(\\"2023-10-09T08:18:29.080160Z\\")\\n}"}],"src/app/core/services/business-central/business-central-configuration/business-central-connector.service.ts":[{"name":"businessCentralCredentialsCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/business-central/business-central-configuration/business-central-connector.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/core/services/business-central/business-central-configuration/business-central-export-settings.service.ts":[{"name":"businessCentralExportSettingCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/business-central/business-central-configuration/business-central-export-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/core/services/business-central/business-central-configuration/business-central-import-settings.service.ts":[{"name":"businessCentralImportSettingGetCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/business-central/business-central-configuration/business-central-import-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/stories/ConfigurationImportField.stories.ts":[{"name":"cloneSetting","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(importSettingForm),\\n    appName: AppName.INTACCT,\\n    accountingFieldOptions: QBOImportSettingModel.getQBOFields(),\\n    fyleFieldOptions: [{ attribute_type: \'PROJECT\', display_name: \'Project\', is_dependent: false}, { attribute_type: \'COST_CENTER\', display_name: \'Cost Center\', is_dependent: false}, { attribute_type: \'CUSTOM_FIELD\', display_name: \'Custom Field\', is_dependent: false}],\\n    isDestinationFixedImport: true,\\n    isCloneSettingView: true\\n  }\\n}"},{"name":"dynamicDestinationImport","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(importSettingForm),\\n    appName: AppName.INTACCT,\\n    accountingFieldOptions: QBOImportSettingModel.getQBOFields(),\\n    fyleFieldOptions: [{ attribute_type: \'PROJECT\', display_name: \'Project\', is_dependent: false}, { attribute_type: \'COST_CENTER\', display_name: \'Cost Center\', is_dependent: false}, { attribute_type: \'CUSTOM_FIELD\', display_name: \'Custom Field\', is_dependent: false}],\\n    isDestinationFixedImport: false\\n  }\\n}"},{"name":"fixedDestinationImport","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(importSettingForm),\\n    appName: AppName.QBO,\\n    accountingFieldOptions: QBOImportSettingModel.getQBOFields(),\\n    fyleFieldOptions: [{ attribute_type: \'PROJECT\', display_name: \'Project\', is_dependent: false}, { attribute_type: \'COST_CENTER\', display_name: \'Cost Center\', is_dependent: false}, { attribute_type: \'CUSTOM_FIELD\', display_name: \'Custom Field\', is_dependent: false}],\\n    isDestinationFixedImport: true\\n  }\\n}"},{"name":"fixture","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"QBOImportSettingGet","defaultValue":"{\\n  workspace_general_settings: {\\n    import_categories: true,\\n    import_items: true,\\n    import_vendors_as_merchants: true,\\n    charts_of_accounts: [\'Expense\'],\\n    import_tax_codes: true\\n  },\\n  general_mappings: {\\n    default_tax_code: {\\n      id: \'1\',\\n      name: \'Tax Code\'\\n    }\\n  },\\n  mapping_settings: [\\n    {\\n      id: 1,\\n      created_at: new Date(),\\n      updated_at: new Date(),\\n      workspace: 1,\\n      source_field: \'PROJECT\',\\n      destination_field: \'CUSTOMER\',\\n      import_to_fyle: true,\\n      is_custom: true,\\n      source_placeholder: \'source_placeholder\'\\n    },\\n    {\\n      id: 1,\\n      created_at: new Date(),\\n      updated_at: new Date(),\\n      workspace: 1,\\n      source_field: \'COST_CENTER\',\\n      destination_field: \'CLASS\',\\n      import_to_fyle: false,\\n      is_custom: true,\\n      source_placeholder: \'source_placeholder\'\\n    }\\n  ],\\n  workspace_id: 1\\n}"},{"name":"importSettingForm","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"QBOImportSettingModel.mapAPIResponseToFormGroup(fixture)"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationImportFieldComponent>","defaultValue":"{\\n  title: \'Configuration/ImportSetting/ConfigurationImportField\',\\n  component: ConfigurationImportFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationImportFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, BrowserAnimationsModule, SharedModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"}],"src/app/core/services/travelperk/travelperk.fixture.ts":[{"name":"connectAwsS3MockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    \\"application\\": \\"rest\\",\\n    \\"id\\": 22,\\n    \\"name\\": \\"S3 Connection\\",\\n    \\"description\\": null,\\n    \\"authorized_at\\": new Date(),\\n    \\"authorization_status\\": \\"success\\",\\n    \\"authorization_error\\": null,\\n    \\"created_at\\": new Date(),\\n    \\"updated_at\\": new Date(),\\n    \\"external_id\\": null,\\n    \\"folder_id\\": 12,\\n    \\"parent_id\\": null\\n}"},{"name":"connectTravelperkMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    \'message\': {\\n        \'connection_id\': \'123\'\\n    },\\n    \'managed_user_id\': 234\\n}"},{"name":"travelperkConfigurationMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"TravelperkConfiguration","defaultValue":"{\\n    id: 1,\\n    org: orgMockData,\\n    recipe_id: \'123\',\\n    recipe_data: \'123\',\\n    is_recipe_enabled: true\\n}"},{"name":"travelperkErrorMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    message: \\"Travelperk Not Found\\"\\n}"},{"name":"travelperkMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Travelperk","defaultValue":"{\\n    id: 1,\\n    folder_id: \'1234\',\\n    package_id: \'467\',\\n    is_travelperk_connected: true,\\n    is_fyle_connected: true,\\n    is_s3_connected: true,\\n    org: 1,\\n    travelperk_connection_id: 123,\\n    created_at: new Date(),\\n    updated_at: new Date()\\n}"},{"name":"workatoConnectionStatusMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.fixture.ts","deprecated":false,"deprecationMessage":"","type":"WorkatoConnectionStatus","defaultValue":"{\\n    wk: true,\\n    type: \'travelperk\',\\n    payload: {\\n        id: 1,\\n        provider: \'travelperk\',\\n        connected: false\\n    }\\n}"}],"src/app/core/services/gusto/gusto.service.fixture.ts":[{"name":"connectGustoMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    \'message\': {\\n        \'connection_id\': \'123\'\\n    }\\n}"},{"name":"GustoMockConfiguration","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"GustoConfiguration","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    recipe_id: \'1\',\\n    recipe_data: \'xyz\',\\n    recipe_status: true,\\n    additional_email_options: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ],\\n    emails_selected: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ]\\n}"},{"name":"GustoMockConfigurationPayload","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"GustoConfigurationPost","defaultValue":"{\\n    org: 1,\\n    additional_email_options: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ],\\n    emails_selected: [\\n        {\\n            email: \'ashwin.t+lolooi@fyle.in\',\\n            name: \'Ashwin\'\\n        }\\n    ]\\n}"},{"name":"GustoMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Gusto","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    folder_id: \'1\',\\n    package_id: \'1\',\\n    created_at: new Date(),\\n    updated_at: new Date(),\\n    connection_id: \'cyx\'\\n}"},{"name":"GustoMockWithoutToken","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Gusto","defaultValue":"{\\n    id: 1,\\n    org: 1,\\n    folder_id: \'\',\\n    package_id: \'\',\\n    created_at: new Date(),\\n    updated_at: new Date(),\\n    connection_id: \'\'\\n}"},{"name":"workatoConnectionStatusMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"WorkatoConnectionStatus","defaultValue":"{\\n    wk: true,\\n    type: \'travelperk\',\\n    payload: {\\n        id: 1,\\n        provider: \'travelperk\',\\n        connected: false\\n    }\\n}"},{"name":"workatoConnectionStatusMockDatawithTrue","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.fixture.ts","deprecated":false,"deprecationMessage":"","type":"WorkatoConnectionStatus","defaultValue":"{\\n    wk: true,\\n    type: \'travelperk\',\\n    payload: {\\n        id: 1,\\n        provider: \'travelperk\',\\n        connected: true\\n    }\\n}"}],"src/stories/Shimmers.stories.ts":[{"name":"dashboard","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Shimmers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    exportLogHeader: \'Dashboard\',\\n    isDashboardImportInProgress: true\\n  }\\n}"},{"name":"exportLog","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Shimmers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    isExportLogFetchInProgress: true,\\n    exportLogHeader: \'Export Logs\'\\n  }\\n}"},{"name":"mapping","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Shimmers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    exportLogHeader: \'Mapping\',\\n    isMappingTableShimmers: true\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Shimmers.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ShimmersComponent>","defaultValue":"{\\n  title: \'Core/Shimmers\',\\n  component: ShimmersComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ShimmersComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ShimmersComponent],\\n      imports: [CommonModule, SkeletonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"}],"src/stories/ConfigurationStepFooter.stories.ts":[{"name":"disabledButton","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepFooter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    ctaText: \'Save and Continue\',\\n    isButtonDisabled: true\\n  }\\n}"},{"name":"enabledButton","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepFooter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    ctaText: \'Save and Continue\',\\n    isButtonDisabled: false,\\n    showBackButton: true,\\n    showResetButton: true\\n  }\\n}"},{"name":"loaderButton","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepFooter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    ctaText: \'Saving\',\\n    isButtonDisabled: true\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepFooter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationStepFooterComponent>","defaultValue":"{\\n  title: \'Configuration/ConfigurationStepFooter\',\\n  component: ConfigurationStepFooterComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationStepFooterComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationStepFooterComponent],\\n      imports: [CommonModule, ButtonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"}],"src/stories/CloneSettingField.stories.ts":[{"name":"dropdown","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    iconSource: \'calendar\',\\n    label: \'Set the Credit Card export date as\',\\n    options: [{label: \'Transaction date\', value: \'transaction_date\'}, {label: \'Expense date\', value: \'expense_date\'}],\\n    placeholder: \'Select export date\',\\n    form: setupStoryBookFormGroup(new FormGroup({creditCardExportDate: new FormControl(null)})),\\n    formControllerName: \'emotion\',\\n    inputType: InputType.DROPDOWN,\\n    dropdownDisplayKey: \'label\',\\n    tooltipText: \'The selected date will reflect in the corporate card expenses exported to QuickBooks Online.\'\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<CloneSettingFieldComponent>","defaultValue":"{\\n  title: \'Onboarding/CloneSetting/CloneSettingField\',\\n  component: CloneSettingFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: CloneSettingFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, BrowserAnimationsModule, SharedModule, RippleModule, InputSwitchModule, FormsModule, ReactiveFormsModule, DropdownModule, MultiSelectModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' }), TooltipModule]\\n    })\\n  ],\\n  argTypes: {\\n  }\\n}"},{"name":"multiSelect","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Select the accounts from QuickBooks Online to import as categories\',\\n    options: QBOImportSettingModel.getChartOfAccountTypesList(),\\n    placeholder: \'Select Chart of Accouts\',\\n    form: setupStoryBookFormGroup(new FormGroup({chartOfAccountTypes: new FormControl([\'Expense\'])})),\\n    formControllerName: \'chartOfAccountTypes\',\\n    inputType: InputType.MULTI_SELECT,\\n    dropdownDisplayKey: \'label\',\\n    tooltipText: \'By default expense will be selected. Open the dropdown to select more as per your requirements\'\\n  }\\n}"},{"name":"toggle","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    iconSource: \'arrow-tail-down\',\\n    label: \'Import Tax from QuickBooks Online\',\\n    form: setupStoryBookFormGroup(new FormGroup({taxCode: new FormControl(true)})),\\n    formControllerName: \'taxCode\',\\n    inputType: InputType.TOGGLE,\\n    tooltipText: \'The imported Tax codes from QuickBooks Online will be set as Tax group in \' + brandingConfig.brandName + \'. This will be a selectable field while creating an expense.\'\\n  }\\n}"}],"src/app/core/interceptor/jwt.fixture.ts":[{"name":"dummyErrorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/interceptor/jwt.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  status: 401,\\n  statusText: \'Login Failed\',\\n  error: {\\n    message: \'Reason for failure . . .\'\\n  }\\n}"},{"name":"loginResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/interceptor/jwt.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Token","defaultValue":"{\\n  access_token: \'\',\\n  expires_in: 3600,\\n  refresh_token: \'ffff\',\\n  token_type: \'Bearer\',\\n  user: {\\n    access_token: \'\',\\n    email: \'ashwin.t@fyle.in\',\\n    full_name: \'Joanna\',\\n    org_id: \'orHVw3ikkCxJ\',\\n    org_name: \'Anagha Org\',\\n    refresh_token: \'y.y.y\',\\n    user_id: \'usqywo0f3nBY\',\\n    active: true,\\n    admin: true,\\n    id: 1,\\n    last_login: null,\\n    password: \'\',\\n    staff: true\\n  }\\n}"},{"name":"minimalUser","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/interceptor/jwt.fixture.ts","deprecated":false,"deprecationMessage":"","type":"MinimalUser","defaultValue":"{\\n  access_token: \'x.x.x\',\\n  email: \'ashwin.t@fyle.in\',\\n  full_name: \'Joanna\',\\n  org_id: \'orHVw3ikkCxJ\',\\n  org_name: \'Anagha Org\',\\n  refresh_token: \'y.y.y\',\\n  user_id: \'usqywo0f3nBY\'\\n}"},{"name":"tokenResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/interceptor/jwt.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  access_token: \'fylee\',\\n  expires_in: 3600,\\n  refresh_token: \'ffff\',\\n  token_type: \'Bearer\'\\n}"}],"src/app/core/services/qbo/qbo-configuration/qbo-employee-settings.service.ts":[{"name":"employeeSettingsCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbo/qbo-configuration/qbo-employee-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/core/models/si/si-configuration/import-settings.model.ts":[{"name":"emptyDestinationAttribute","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{ id: null, name: null }"}],"src/environments/environment.ts":[{"name":"environment","ctype":"miscellaneous","subtype":"variable","file":"src/environments/environment.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"env"}],"src/app/integrations/qbd/qbd.fixture.ts":[{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/qbd.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'QBO\'\\n    }\\n}"},{"name":"workspaceResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/qbd.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    \\"id\\": 1,\\n    \\"name\\": \\"Anagha Org\\",\\n    \\"org_id\\": \\"orHVw3ikkCxJ\\",\\n    \\"currency\\": \\"EUR\\",\\n    \\"reimbursable_last_synced_at\\": null,\\n    \\"ccc_last_synced_at\\": null,\\n    \\"onboarding_state\\": QBDOnboardingState.EXPORT_SETTINGS,\\n    \\"created_at\\": \\"2023-01-23T05:37:56.907997Z\\",\\n    \\"updated_at\\": \\"2023-01-23T05:37:56.908051Z\\",\\n    \\"user\\": [1]\\n  }"}],"src/app/integrations/si/si.fixture.ts":[{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/si/si.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'Halo MasterChief\'\\n    }\\n}"},{"name":"workspaceResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/si/si.fixture.ts","deprecated":false,"deprecationMessage":"","type":"IntacctWorkspace[]","defaultValue":"[{\\n    \\"id\\": 1,\\n    \\"name\\": \\"Halo Org\\",\\n    \\"org_id\\": \\"orHVw3iaexgg\\",\\n    \\"currency\\": \\"EUR\\",\\n    \\"destination_synced_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"ccc_last_synced_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"onboarding_state\\": IntacctOnboardingState.CONNECTION,\\n    \\"created_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"updated_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"user\\": [1],\\n    \\"last_synced_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"source_synced_at\\": new Date(\\"2023-06-23T05:37:56.907997Z\\"),\\n    \\"cluster_domain\\": \'string\'\\n  }]"}],"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts":[{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'QBO\'\\n    }\\n}"},{"name":"getQbdAccountingExports","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QbdExportTriggerResponse","defaultValue":"{\\n    count: 2,\\n    next: null,\\n    previous: null,\\n    results: [\\n        {\\n            id: 2,\\n            type: \\"EXPORT_BILLS\\",\\n            fund_source: \'CCC\',\\n            file_id: \\"fieZ6GMSmgkb\\",\\n            task_id: null,\\n            status: \\"COMPLETE\\",\\n            errors: null,\\n            created_at: new Date(\\"2023-02-09\\"),\\n            updated_at: new Date(\\"2023-02-09\\"),\\n            workspace: 1\\n        },\\n        {\\n            id: 1,\\n            type: \\"FETCHING_REIMBURSABLE_EXPENSES\\",\\n            fund_source: \'Reimbursable\',\\n            file_id: null,\\n            task_id: null,\\n            status: \\"IN_PROGRESS\\",\\n            errors: null,\\n            created_at: new Date(\\"2023-02-09T12:39:31.005110Z\\"),\\n            updated_at: new Date(\\"2023-02-09T12:39:31.005110Z\\"),\\n            workspace: 1\\n        }\\n\\n    ]\\n}"},{"name":"getQbdAccountingExports2","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QbdExportTriggerResponse","defaultValue":"{\\n    count: 0,\\n    next: null,\\n    previous: null,\\n    results: []\\n}"},{"name":"postQbdAccountingExports","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QbdAccountingExportDownload","defaultValue":"{\\n    accounting_export_id: 2,\\n    download_url: \\"fyle\\",\\n    file_id: \\"fieZ6GMSmgkb\\",\\n    workspace_id: 1\\n}"},{"name":"postQbdTriggerExportResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QbdExportTriggerGet","defaultValue":"{\\n    message: \\"Trigger successful\\",\\n    new_expenses_imported: true\\n}"},{"name":"postQbdTriggerExportResponse2","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QbdExportTriggerGet","defaultValue":"{\\n    message: \\"Trigger successful\\",\\n    new_expenses_imported: false\\n}"},{"name":"QBDAdvancedSettingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    expense_memo_structure: [\\n        \\"employee_email\\",\\n        \\"merchant\\",\\n        \\"purpose\\",\\n        \\"report_number\\",\\n        \\"expense_link\\"\\n    ],\\n    top_memo_structure: [\\n        \\"purpose\\"\\n    ],\\n    schedule_is_enabled: true,\\n    day_of_month: null,\\n    day_of_week: \\"MONDAY\\",\\n    frequency: QBDScheduleFrequency.WEEKLY,\\n    time_of_day: \\"12:00:00\\",\\n    emails_selected: [{name: \'shwetabh\', email: \\"shwetabh.kumar@fylehq.com\\"}],\\n    workspace: 1,\\n    schedule_id: null\\n}"},{"name":"QBDAdvancedSettingResponse2","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    expense_memo_structure: [\\n        \\"employee_email\\",\\n        \\"merchant\\",\\n        \\"purpose\\",\\n        \\"report_number\\",\\n        \\"expense_link\\"\\n    ],\\n    top_memo_structure: [\\n        \\"purpose\\"\\n    ],\\n    schedule_is_enabled: true,\\n    day_of_month: \\"11\\",\\n    day_of_week: \\"MONDAY\\",\\n    frequency: QBDScheduleFrequency.MONTHLY,\\n    time_of_day: \\"12:00:00\\",\\n    emails_selected: [{name: \'shwetabh\', email: \\"shwetabh.kumar@fylehq.com\\"}],\\n    workspace: 1,\\n    schedule_id: null\\n}"},{"name":"QBDAdvancedSettingResponse3","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    expense_memo_structure: [],\\n    top_memo_structure: [],\\n    schedule_is_enabled: true,\\n    day_of_month: null,\\n    day_of_week: null,\\n    frequency: QBDScheduleFrequency.DAILY,\\n    time_of_day: \'00:00:00\',\\n    emails_selected: [],\\n    workspace: 1,\\n    schedule_id: null\\n}"}],"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts":[{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'QBO\'\\n    }\\n}"},{"name":"QBDAdvancedSettingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    expense_memo_structure: [\\n        \\"employee_email\\",\\n        \\"merchant\\",\\n        \\"purpose\\",\\n        \\"report_number\\",\\n        \\"expense_link\\"\\n    ],\\n    top_memo_structure: [\\n        \\"purpose\\"\\n    ],\\n    schedule_is_enabled: false,\\n    day_of_month: null,\\n    day_of_week: \\"MONDAY\\",\\n    frequency: QBDScheduleFrequency.WEEKLY,\\n    time_of_day: \\"12:00:00\\",\\n    emails_selected: [{name: \'shwetabh\', email: \\"shwetabh.kumar@fylehq.com\\"}],\\n    workspace: 1,\\n    schedule_id: null\\n}"},{"name":"QBDAdvancedSettingResponse2","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDAdvancedSettingsGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    expense_memo_structure: [],\\n    top_memo_structure: [],\\n    schedule_is_enabled: true,\\n    day_of_month: \\"01\\",\\n    day_of_week: null,\\n    frequency: null,\\n    time_of_day: null,\\n    emails_selected: [],\\n    workspace: 1,\\n    schedule_id: null\\n}"},{"name":"QBDEmailOptioResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"EmailOptions[]","defaultValue":"[{name: \'shwetabh\', email: \\"shwetabh.kumar@fylehq.com\\"}]"}],"src/app/shared/components/qbd/configuration/export-setting/export-setting.fixture.ts":[{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/export-setting/export-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'QBO\'\\n    }\\n  }"},{"name":"QBDExportSettingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/export-setting/export-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingGet","defaultValue":"{\\n    id: 1,\\n    created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n    reimbursable_expenses_export_type: QBDReimbursableExpensesObject.BILL,\\n    bank_account_name: \\"string\\",\\n    mileage_account_name: \\"string\\",\\n    reimbursable_expense_state: ExpenseState.PAYMENT_PROCESSING,\\n    reimbursable_expense_date: QBDExportDateType.SPENT_AT,\\n    reimbursable_expense_grouped_by: QBDExpenseGroupedBy.REPORT,\\n    credit_card_expense_export_type: QBDCorporateCreditCardExpensesObject.JOURNAL_ENTRY,\\n    credit_card_expense_state: CCCExpenseState.PAID,\\n    credit_card_entity_name_preference: QBDEntity.VENDOR,\\n    credit_card_account_name: \\"string\\",\\n    credit_card_expense_grouped_by: QBDExpenseGroupedBy.EXPENSE,\\n    credit_card_expense_date: QBDExportDateType.LAST_SPENT_AT,\\n    workspace: 1,\\n    is_simplify_report_closure_enabled: true\\n}"},{"name":"QBDExportSettingResponse2","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/export-setting/export-setting.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDExportSettingGet","defaultValue":"{\\n  id: 1,\\n  created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n  updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n  reimbursable_expenses_export_type: null,\\n  bank_account_name: null,\\n  mileage_account_name: null,\\n  reimbursable_expense_state: null,\\n  reimbursable_expense_date: null,\\n  reimbursable_expense_grouped_by: null,\\n  credit_card_expense_export_type: null,\\n  credit_card_expense_state: null,\\n  credit_card_entity_name_preference: null,\\n  credit_card_account_name: null,\\n  credit_card_expense_grouped_by: null,\\n  credit_card_expense_date: null,\\n  workspace: 1,\\n  is_simplify_report_closure_enabled: false\\n}"}],"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.fixture.ts":[{"name":"errorResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    status: 404,\\n    statusText: \\"Not Found\\",\\n    error: {\\n      id: 1,\\n      is_expired: true,\\n      company_name: \'QBO\'\\n    }\\n  }"},{"name":"QBDFieldMappingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDFieldMappingGet","defaultValue":"{\\n    id: 1,\\n      created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n      updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n      class_type: \\"CLASS\\",\\n      project_type: \\"PROJECT\\",\\n      workspace: 1\\n}"},{"name":"QBDFieldMappingResponse2","ctype":"miscellaneous","subtype":"variable","file":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"QBDFieldMappingGet","defaultValue":"{\\n    id: 1,\\n      created_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n      updated_at: new Date(\'2023-02-01T08:42:45.803382Z\'),\\n      class_type: null,\\n      project_type: null,\\n      workspace: 1\\n}"}],"src/stories/ConfigurationConnector.stories.ts":[{"name":"expiredToken","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConnector.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    accountingAppTitle: \'QuickBooks Online Company\',\\n    accountingCompanyName: \'Sandbox 1\',\\n    fyleOrgName: \'Fyle Org 1\',\\n    accountingCompanyTokenExpired: true,\\n    isAccountingCompanyConnected: true,\\n    showDisconnect: false,\\n    accountingCompanyConnectionInProgress: false,\\n    switchLinkText: \'Disconnect\'\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConnector.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationConnectorComponent>","defaultValue":"{\\n  title: \'Configuration/Connector/ConfigurationConnector\',\\n  component: ConfigurationConnectorComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationConnectorComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"refreshingDimension","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConnector.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    accountingAppTitle: \'QuickBooks Online Company\',\\n    accountingCompanyName: \'Sandbox 1\',\\n    fyleOrgName: \'Fyle Org 1\',\\n    accountingCompanyTokenExpired: false,\\n    isAccountingCompanyConnected: false,\\n    showDisconnect: false,\\n    accountingCompanyConnectionInProgress: true,\\n    switchLinkText: \'Disconnect\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConnector.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    accountingAppTitle: \'QuickBooks Online Company\',\\n    accountingCompanyName: \'Sandbox 1\',\\n    fyleOrgName: \'Fyle Org 1\',\\n    accountingCompanyTokenExpired: false,\\n    isAccountingCompanyConnected: true,\\n    showDisconnect: true,\\n    accountingCompanyConnectionInProgress: false,\\n    switchLinkText: \'Disconnect\'\\n  }\\n}"}],"src/stories/DashboardExportSection.stories.ts":[{"name":"exportInProgress","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    loaderType: LoaderType.INDETERMINATE,\\n    isImportInProgress: false,\\n    isExportInProgress: true,\\n    exportableAccountingExportIds: [1, 2, 3],\\n    failedExpenseGroupCount: 0,\\n    exportProgressPercentage: 50,\\n    accountingExportSummary: {\\n      id: 1,\\n      last_exported_at: \'2021-09-01T08:00:00Z\',\\n      next_export_at: \'2021-09-01T08:00:00Z\',\\n      export_mode: \'AUTO\',\\n      total_accounting_export_count: 1,\\n      successful_accounting_export_count: 1,\\n      failed_accounting_export_count: 0,\\n      created_at: \'2021-09-01T08:00:00Z\',\\n      updated_at: \'2021-09-01T08:00:00Z\',\\n      workspace: 1\\n    },\\n    processedCount: 1\\n  }\\n}"},{"name":"importInProgress","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    loaderType: LoaderType.INDETERMINATE,\\n    isImportInProgress: true,\\n    isExportInProgress: false,\\n    exportableAccountingExportIds: [1, 2, 3],\\n    failedExpenseGroupCount: 0,\\n    exportProgressPercentage: 50,\\n    accountingExportSummary: {\\n      id: 1,\\n      last_exported_at: \'2021-09-01T08:00:00Z\',\\n      next_export_at: \'2021-09-01T08:00:00Z\',\\n      export_mode: \'AUTO\',\\n      total_accounting_export_count: 1,\\n      successful_accounting_export_count: 1,\\n      failed_accounting_export_count: 0,\\n      created_at: \'2021-09-01T08:00:00Z\',\\n      updated_at: \'2021-09-01T08:00:00Z\',\\n      workspace: 1\\n    },\\n    processedCount: 1\\n  }\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DashboardExportSectionComponent>","defaultValue":"{\\n  title: \'Dashboard/DashboardExportSection\',\\n  component: DashboardExportSectionComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DashboardExportSectionComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule, ProgressBarModule, TooltipModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"readyState","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    isImportInProgress: false,\\n    isExportInProgress: false,\\n    exportableAccountingExportIds: [0],\\n    failedExpenseGroupCount: 0,\\n    exportProgressPercentage: 0,\\n    accountingExportSummary: {\\n      id: 1,\\n      last_exported_at: \'2021-09-01T08:00:00Z\',\\n      next_export_at: \'2021-09-01T08:00:00Z\',\\n      export_mode: \'AUTO\',\\n      total_accounting_export_count: 1,\\n      successful_accounting_export_count: 1,\\n      failed_accounting_export_count: 0,\\n      created_at: \'2021-09-01T08:00:00Z\',\\n      updated_at: \'2021-09-01T08:00:00Z\',\\n      workspace: 1\\n    },\\n    processedCount: 0\\n  }\\n}"}],"src/app/core/services/common/events.service.ts":[{"name":"EXPOSE_INTACCT_NEW_APP","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/common/events.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"true"},{"name":"MODULE_PATHS","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/common/events.service.ts","deprecated":false,"deprecationMessage":"","type":"[]","defaultValue":"[\'mapping\', \'export_log\', \'configuration\', \'intacct\', \'qbd\']"}],"src/stories/Dropdown.stories.ts":[{"name":"form","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"setupStoryBookFormGroup(new FormGroup({\\n  emotion: new FormControl(\'hehe\')\\n}))"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DropdownComponent>","defaultValue":"{\\n  title: \'Input/Dropdown\',\\n  component: DropdownComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DropdownComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [DropdownComponent],\\n      imports: [CommonModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, DropdownModule, TooltipModule, RippleModule]\\n    })\\n  ],\\n  argTypes: {}\\n}"},{"name":"newField","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    placeholder: \'Select an option\',\\n    options: [{key: \'hehe\', value: \'hehe\'}, {\'key\': \'haha\', \'value\': \'haha\'}],\\n    form: newFieldForm,\\n    formControllerName: \'emotion\',\\n    displayKey: \'key\'\\n  }\\n}"},{"name":"newFieldForm","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"setupStoryBookFormGroup(new FormGroup({\\n  emotion: new FormControl()\\n}))"},{"name":"preFilled","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    placeholder: \'Select an option\',\\n    options: [{key: \'hehe\', value: \'hehe\'}, {\'key\': \'haha\', \'value\': \'haha\'}],\\n    form: form,\\n    formControllerName: \'emotion\',\\n    displayKey: \'key\'\\n  }\\n}"}],"src/app/core/services/org/org.fixture.ts":[{"name":"generateTokenData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/org/org.fixture.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    token: \'widget_token_comes_here\'\\n}"},{"name":"orgMockData","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/org/org.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Org","defaultValue":"{\\n    id: 1,\\n    name: \'Fyle\',\\n    user: [1],\\n    fyle_org_id: \'org_1\',\\n    managed_user_id: \'1\',\\n    cluster_domain: \'fyle\',\\n    is_bamboo_connector: true,\\n    is_fyle_connected: true,\\n    is_sendgrid_connected: true,\\n    allow_gusto: true,\\n    allow_travelperk: true,\\n    created_at: new Date(),\\n    updated_at: new Date()\\n}"}],"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts":[{"name":"getMappingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"MappingResponse","defaultValue":"{\\n    \\"count\\": 16,\\n    \\"next\\": \\"http://localhost:8008/api/workspaces/4/qbd_mappings/?attribute_type=CORPORATE_CARD&limit=10&offset=10\\",\\n    \\"previous\\": \\"null\\",\\n    \\"results\\": [\\n        {\\n          \\"id\\": 59,\\n          \\"attribute_type\\": \\"CORPORATE_CARD\\",\\n          \\"source_value\\": \\"Bank of America - 1319\\",\\n          \\"source_id\\": \\"baccK5ssSzxv1g\\",\\n          \\"destination_value\\": \\"eefs\\",\\n          \\"created_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"updated_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"workspace\\": 4\\n        },\\n        {\\n          \\"id\\": 61,\\n          \\"attribute_type\\": \\"CORPORATE_CARD\\",\\n          \\"source_value\\": \\"American Express - 58057\\",\\n          \\"source_id\\": \\"baccsWbRJpSbnB\\",\\n          \\"destination_value\\": null,\\n          \\"created_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"updated_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"workspace\\": 4\\n        },\\n        {\\n          \\"id\\": 62,\\n          \\"attribute_type\\": \\"CORPORATE_CARD\\",\\n          \\"source_value\\": \\"American Express - 83167\\",\\n          \\"source_id\\": \\"baccAGZQWkwSnZ\\",\\n          \\"destination_value\\": null,\\n          \\"created_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"updated_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n          \\"workspace\\": 4\\n        }\\n    ]\\n}"},{"name":"getMappingStatsResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"MappingStats","defaultValue":"{\\n    \\"all_attributes_count\\": 16,\\n    \\"unmapped_attributes_count\\": 12\\n}"},{"name":"postMappingPayload","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"MappingPost","defaultValue":"{\\n    attribute_type: \\"CORPORATE_CARD\\",\\n    destination_value: \\"eefw\\",\\n    source_id: \\"baccK5ssSzxv1g\\",\\n    source_value: \\"Bank of America - 1319\\"\\n}"},{"name":"postMappingResponse","ctype":"miscellaneous","subtype":"variable","file":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","deprecated":false,"deprecationMessage":"","type":"Mapping","defaultValue":"{\\n    \\"id\\": 59,\\n    \\"attribute_type\\": \\"CORPORATE_CARD\\",\\n    \\"source_value\\": \\"Bank of America - 1319\\",\\n    \\"source_id\\": \\"baccK5ssSzxv1g\\",\\n    \\"destination_value\\": \\"eefw\\",\\n    \\"created_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n    \\"updated_at\\": new Date(\\"2023-09-01T08:32:40.176736Z\\"),\\n    \\"workspace\\": 4\\n}"}],"src/app/core/services/gusto/gusto.service.ts":[{"name":"gustoConfigurationCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/gusto/gusto.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/core/models/si/si-configuration/advanced-settings.model.ts":[{"name":"JoinOptions","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n  AND: \'AND\',\\n  OR: \'OR\'\\n}"}],"src/stories/AppLandingPageBody.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/AppLandingPageBody.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<AppLandingPageBodyComponent>","defaultValue":"{\\n  title: \'Onboarding/Landing/AppLandingPageBody\',\\n  component: AppLandingPageBodyComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: AppLandingPageBodyComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [AppLandingPageBodyComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/AppLandingPageBody.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    headlineText: \'Guide to setup your Integrations\',\\n    headerText: \'A quick guide to help you set up the integration quick and easy.\',\\n    svgPath: \'assets/flow-charts/fyle-qbo-data-flow.svg\',\\n    embedVideo: \'https://www.youtube.com/embed/b63lS2DG5j4\'\\n  }\\n}"}],"src/stories/AppLandingPageHeader.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/AppLandingPageHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<AppLandingPageHeaderComponent>","defaultValue":"{\\n  title: \'Onboarding/Landing/AppLandingPageHeader\',\\n  component: AppLandingPageHeaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: AppLandingPageHeaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [AppLandingPageHeaderComponent],\\n      imports: [CommonModule, ButtonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"QBD","ctype":"miscellaneous","subtype":"variable","file":"src/stories/AppLandingPageHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBD,\\n    iconPath: \'assets/logos/quickbooks-desktop.svg\',\\n    appDescription: \'Import data from QBD to \' + brandingConfig.brandName + \' and Export expenses from \' + brandingConfig.brandName + \' to QBD. \',\\n    isLoading: false,\\n    isIntegrationSetupInProgress: false,\\n    isIntegrationConnected: false,\\n    redirectLink: \'qbd/onboarding/connector\',\\n    buttonText: \'Connect\',\\n    postConnectionRoute: \'qbd/onboarding/connector\'\\n  }\\n}"},{"name":"qbo","ctype":"miscellaneous","subtype":"variable","file":"src/stories/AppLandingPageHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    iconPath: \'assets/logos/qbo.svg\',\\n    appDescription: \'Import data from QuickBooks Online to \' + brandingConfig.brandName + \' and Export expenses from \' + brandingConfig.brandName + \' to QuickBooks Online. \',\\n    isLoading: false,\\n    isIntegrationSetupInProgress: false,\\n    isIntegrationConnected: false,\\n    redirectLink: \'qbo/onboarding/connector\',\\n    buttonText: \'Connect\',\\n    postConnectionRoute: \'qbo/onboarding/connector\',\\n    showQBOButton: true\\n  }\\n}"}],"src/stories/CloneSettingHeader.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<CloneSettingHeaderComponent>","defaultValue":"{\\n  title: \'Onboarding/CloneSetting/CloneSettingHeader\',\\n  component: CloneSettingHeaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: CloneSettingHeaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [CloneSettingHeaderComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/CloneSettingHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    headerText: \'Advanced Settings\',\\n    subHeaderText: \'In this section,  you can configure settings to automate and customize your expense exports\'\\n  }\\n}"}],"src/stories/ConfigurationConfirmationDialog.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConfirmationDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationConfirmationDialogComponent>","defaultValue":"{\\n  title: \'Configuration/Dialog/ConfigurationConfirmationDialog\',\\n  component: ConfigurationConfirmationDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationConfirmationDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationConfirmationDialogComponent],\\n      imports: [CommonModule, ButtonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationConfirmationDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    isWarningVisible: true,\\n    event: ConfigurationWarningEvent.INCORRECT_QBO_ACCOUNT_CONNECTED,\\n    headerText: \'Your settings are pre-filled\',\\n    contextText: `Your previous organization\'s settings <b>(Fyle for Ashwin)</b> have been copied over to the current organization\\n    <br><br>You can change the settings or reset the configuration to restart the process from the beginning<br>`,\\n    iconPath: \'assets/icons/alert_dialog.svg\',\\n    confirmBtnText: \'Continue\',\\n    showSecondaryCTA: false\\n  }\\n}"}],"src/stories/ConfigurationCustomFieldCreationDialog.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationCustomFieldCreationDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationCustomFieldCreationDialogComponent>","defaultValue":"{\\n  title: \'Configuration/ImportSetting/ConfigurationCustomFieldCreationDialog\',\\n  component: ConfigurationCustomFieldCreationDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationCustomFieldCreationDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, DialogModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationCustomFieldCreationDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    customFieldForm: setupStoryBookFormGroup(new FormGroup({attribute_type: new FormControl(\'\'), display_name: new FormControl(\'\'), source_placeholder: new FormControl(\'\')})),\\n    showCustomFieldCreationDialog: true\\n  }\\n}"}],"src/stories/ConfigurationInfoLabel.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationInfoLabel.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationInfoLabelComponent>","defaultValue":"{\\n  title: \'Configuration/ImportSetting/ConfigurationInfoLabel\',\\n  component: ConfigurationInfoLabelComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationInfoLabelComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationInfoLabelComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationInfoLabel.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    infoText: \'If you\\\\\'d like to use only selective data from Sage Intacct, map a Sage Intacct dimension to a field in \' + brandingConfig.brandName + \' and turn off the import, as importing the data will sync in all the active values in Sage Intacct. You can add the required values in \' + brandingConfig.brandName + \' and map them later in the integration mapping section.\'\\n  }\\n}"}],"src/stories/ConfigurationLabel.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationLabel.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationLabelComponent>","defaultValue":"{\\n  title: \'Configuration/ExportSetting/ConfigurationLabel\',\\n  component: ConfigurationLabelComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationLabelComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationLabelComponent, MandatoryFieldComponent],\\n      imports: [CommonModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationLabel.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'How would you like to group your expenses?\',\\n    subLabel: \'Grouping reflects how the expense entries are posted in QuickBooks Desktop.\',\\n    labelValue: {\\n      label: \'Expense\',\\n      value: QBDExpenseGroupedBy.EXPENSE\\n    },\\n    iconPath: \'copy-v2\'\\n  }\\n}"}],"src/stories/ConfigurationMultiSelect.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationMultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationMultiSelectComponent>","defaultValue":"{\\n  title: \'Input/ConfigurationMultiSelect\',\\n  component: ConfigurationMultiSelectComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationMultiSelectComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, BrowserAnimationsModule, SharedModule, FormsModule, ReactiveFormsModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationMultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Select the accounts from QuickBooks Online to import as categories\',\\n    options: QBOImportSettingModel.getChartOfAccountTypesList(),\\n    placeholder: \'Select Chart of Accouts\',\\n    form: setupStoryBookFormGroup(new FormGroup({chartOfAccountTypes: new FormControl([\'Expense\'])})),\\n    formControllerName: \'chartOfAccountTypes\'\\n  }\\n}"}],"src/stories/ConfigurationRadioField.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationRadioField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationRadioFieldComponent>","defaultValue":"{\\n  title: \'Configuration/ExportSetting/ConfigurationRadioField\',\\n  component: ConfigurationRadioFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationRadioFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationRadioFieldComponent],\\n      imports: [CommonModule, RadioButtonModule, FormsModule, ReactiveFormsModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationRadioField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({reimbursableExportType: new FormControl()})),\\n    isFieldMandatory: true,\\n    mandatoryErrorListName: \'how expenses to be exported\',\\n    label: \'How should the expenses be exported?\',\\n    subLabel: \'Choose the type of transaction in QuickBooks Desktop to export your expenses.\',\\n    options: [\\n      {\\n        label: \'Bill\',\\n        value: \'BILL\'\\n      },\\n      {\\n        label: \'Check\',\\n        value: \'CHECK\'\\n      },\\n      {\\n        label: \'Expense\',\\n        value: \'EXPENSE\'\\n      }\\n    ],\\n    iconPath: \'expense\',\\n    formControllerName: \'reimbursableExportType\'\\n  }\\n}"}],"src/stories/ConfigurationScheduleExport.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationScheduleExport.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationScheduleExportComponent>","defaultValue":"{\\n  title: \'Configuration/AdvancedSetting/ConfigurationScheduleExport\',\\n  component: ConfigurationScheduleExportComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationScheduleExportComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, BrowserAnimationsModule, FormsModule, ReactiveFormsModule, SharedModule, MultiSelectModule],\\n      providers: [MessageService, IntegrationsToastService]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationScheduleExport.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({exportScheduleFrequency: new FormControl(1), exportSchedule: new FormControl(true), email: new FormControl([{email: \'ashwin.t@fyle.in\', name: \'Ashwin\'}]), search: new FormControl(\'\')})),\\n    isFieldMandatory: false,\\n    mandatoryErrorListName: \'automatic export method\',\\n    label: \'Set up export frequency\',\\n    subLabel: \'Set a frequency based on how often you want your expenses in \' + \'brandingConfig.brandName\' + \' to be exported to QuickBooks Online\',\\n    options: [...Array(24).keys()].map(day => {\\n      return {\\n        label: (day + 1).toString(),\\n        value: day + 1\\n      };\\n    }),\\n    isEmailPresent: true,\\n    formControllerName: \'exportScheduleFrequency\',\\n    adminEmails: [{email: \'ashwin.t@fyle.in\', name: \'Ashwin\'}]\\n  }\\n}"}],"src/stories/ConfigurationSelectField.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationSelectField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationSelectFieldComponent>","defaultValue":"{\\n  title: \'Configuration/ConfigurationSelectField\',\\n  component: ConfigurationSelectFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationSelectFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule, BrowserAnimationsModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationSelectField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({employeeMapping: new FormControl(\'\')})),\\n    isFieldMandatory: true,\\n    mandatoryErrorListName: \'option\',\\n    label: \'How are your Employees represented in QuickBooks Online?\',\\n    subLabel: \'Select how you represent your employees in QuickBooks Online. This would help to export the expenses from \' + brandingConfig.brandName + \' to the correct employee/vendor record in QuickBooks Online.\',\\n    options: [{label: \'Employee\', value: \'EMPLOYEE\'}, {label: \'Vendor\', value: \'VENDOR\'}],\\n    iconPath: \'employee\',\\n    placeholder: \'Select representation\',\\n    formControllerName: \'employeeMapping\'\\n  }\\n}"}],"src/stories/ConfigurationSkipExport.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationSkipExport.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationSkipExportComponent>","defaultValue":"{\\n  title: \'Configuration/AdvancedSetting/ConfigurationSkipExport\',\\n  component: ConfigurationSkipExportComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationSkipExportComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationSkipExportComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationSkipExport.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{}"}],"src/stories/ConfigurationStepHeader.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationStepHeaderComponent>","defaultValue":"{\\n  title: \'Configuration/ConfigurationStepHeader\',\\n  component: ConfigurationStepHeaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationStepHeaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationStepHeaderComponent],\\n      imports: [CommonModule, TooltipModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    headerText: \'Advanced Settings\',\\n    contentText: \'In this section, you can customize the integration based on your accounting requirements.\',\\n    redirectLink: \'https://help.fylehq.com/en/articles/5239189-advanced-settings\',\\n    showSyncButton: true,\\n    appName: AppName.QBO\\n  }\\n}"}],"src/stories/ConfigurationStepSubHeader.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepSubHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationStepSubHeaderComponent>","defaultValue":"{\\n  title: \'Configuration/AdvancedSetting/ConfigurationStepSubHeader\',\\n  component: ConfigurationStepSubHeaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationStepSubHeaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationStepSubHeaderComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationStepSubHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Other Preferences\',\\n    subLabel: \'Based on your preference, you can choose whether you want to create any new records in QuickBooks Online from \' + brandingConfig.brandName + \'. (when there is no employee record found, or when the accounting period is closed)\'\\n  }\\n}"}],"src/stories/ConfigurationTextField.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationTextField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationTextFieldComponent>","defaultValue":"{\\n  title: \'Input/ConfigurationTextField\',\\n  component: ConfigurationTextFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationTextFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, SharedModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"password","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationTextField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    customErrorMessage: \'Invalid Password\',\\n    formControllerName: \'userID\',\\n    isFieldMandatory: true,\\n    label: \'HH2 Password\',\\n    placeholder: \'Enter HH2 Password\',\\n    form: setupStoryBookFormGroup(new FormGroup({userID: new FormControl(\'\')})),\\n    type: \'password\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationTextField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    customErrorMessage: \'Invalid User ID. Please enter valid User ID\',\\n    formControllerName: \'userID\',\\n    isFieldMandatory: true,\\n    label: \'HH2 User ID\',\\n    placeholder: \'Enter HH2 User ID\',\\n    form: setupStoryBookFormGroup(new FormGroup({userID: new FormControl(\'\')}))\\n  }\\n}"}],"src/stories/ConfigurationToggleField.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationToggleField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ConfigurationToggleFieldComponent>","defaultValue":"{\\n  title: \'Configuration/ConfigurationToggleField\',\\n  component: ConfigurationToggleFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ConfigurationToggleFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ConfigurationToggleFieldComponent],\\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, InputSwitchModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ConfigurationToggleField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({autoCreateVendors: new FormControl(true)})),\\n    iconPath: \'building\',\\n    label: \'Auto-Create Vendors\',\\n    subLabel: \'While exporting reimbursable expenses from \' + brandingConfig.brandName + \', the integration will automatically create a vendor if a match does not exist in QuickBooks Online already.\',\\n    formControllerName: \'autoCreateVendors\'\\n  }\\n}"}],"src/stories/DashboardAccountingErrorDialog.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardAccountingErrorDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DashboardAccountingErrorDialogComponent>","defaultValue":"{\\n  title: \'Dashboard/DashboardAccountingErrorDialog\',\\n  component: DashboardAccountingErrorDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DashboardAccountingErrorDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [DashboardAccountingErrorDialogComponent],\\n      imports: [CommonModule, TableModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardAccountingErrorDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    errorExpenses: [\\n      {\\n        id: 1,\\n        employee_email: \'ashwin.t@fyle.in\',\\n        employee_name: \'Ashwin\',\\n        category: \'Travel\',\\n        sub_category: \'Travel\',\\n        project: \'Fyle\',\\n        expense_id: \'1\',\\n        org_id: \'1\',\\n        expense_number: \'E/2020/05/28\',\\n        claim_number: \'C/2020/05/28\',\\n        amount: 100,\\n        currency: \'INR\',\\n        foreign_amount: 100,\\n        foreign_currency: \'INR\',\\n        tax_amount: 0,\\n        tax_group_id: \'1\',\\n        settlement_id: \'1\',\\n        reimbursable: true,\\n        billable: false,\\n        state: \'COMPLETE\',\\n        vendor: \'Fyle\',\\n        cost_center: \'Fyle\',\\n        purpose: \'Fyle\',\\n        report_id: \'1\',\\n        spent_at: new Date(),\\n        approved_at: new Date(),\\n        posted_at: new Date(),\\n        expense_created_at: new Date(),\\n        expense_updated_at: new Date(),\\n        created_at: new Date(),\\n        updated_at: new Date(),\\n        fund_source: \'Personal Funds\',\\n        verified_at: new Date(),\\n        custom_properties: [],\\n        paid_on_sage_intacct: true,\\n        file_ids: [],\\n        payment_number: \'1\',\\n        corporate_card_id: \'1\',\\n        is_skipped: false,\\n        report_title: \'Fyle\'\\n      }\\n    ]\\n  }\\n}"}],"src/stories/DashboardErrorSection.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardErrorSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DashboardErrorSectionComponent>","defaultValue":"{\\n  title: \'Dashboard/DashboardErrorSection\',\\n  component: DashboardErrorSectionComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DashboardErrorSectionComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule, BrowserAnimationsModule],\\n      providers: [\\n        IntegrationsToastService, MessageService,\\n        {\\n          provide: DashboardService,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: MappingService,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: WorkspaceService,\\n          useValue: {\\n          }\\n        }\\n      ]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardErrorSection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    apiModuleUrl: AppUrl.QBO,\\n    errors: {\\n      EMPLOYEE_MAPPING: [\\n        {\\n          id: 1,\\n          expense_attribute: {\\n            id: 1,\\n            attribute_type: \'EMPLOYEE\',\\n            display_name: \'Employee\',\\n            value: \'ashwin.t@fyle.in\',\\n            source_id: \'ash\',\\n            auto_mapped: false,\\n            auto_created: false,\\n            active: true,\\n            detail: null,\\n            created_at: \'2021-06-01T06:30:00.000Z\',\\n            updated_at: \'2021-06-01T06:30:00.000Z\',\\n            workspace: 1\\n          },\\n          expense_group: {\\n            id: 1,\\n            type: \'EXPENSE\',\\n            description: {\\n              claim_number: \'123\',\\n              employee_email: \'\',\\n              expense_id: \'\',\\n              report_id: \'\',\\n              settlement_id: \'\'\\n            },\\n            status: AccountingExportStatus.COMPLETE,\\n            mapping_errors: [],\\n            response: {},\\n            created_at: new Date(),\\n            updated_at: new Date(),\\n            exported_at: new Date(),\\n            workspace: 1,\\n            export_url: \'\',\\n            expenses: [],\\n            fund_source: FundSource.CCC\\n          },\\n          type: AccountingErrorType.EMPLOYEE_MAPPING,\\n          is_resolved: false,\\n          error_title: \'Employee Mapping Error\',\\n          error_detail: \'Employee Mapping Error\',\\n          created_at: new Date(),\\n          updated_at: new Date(),\\n          workspace: 1\\n        }\\n      ],\\n      CATEGORY_MAPPING: [],\\n      ACCOUNTING_ERROR: [\\n        {\\n          id: 1,\\n          expense_attribute: {\\n            id: 1,\\n            attribute_type: \'EMPLOYEE\',\\n            display_name: \'Employee\',\\n            value: \'ashwin.t@fyle.in\',\\n            source_id: \'ash\',\\n            auto_mapped: false,\\n            auto_created: false,\\n            active: true,\\n            detail: null,\\n            created_at: \'2021-06-01T06:30:00.000Z\',\\n            updated_at: \'2021-06-01T06:30:00.000Z\',\\n            workspace: 1\\n          },\\n          expense_group: {\\n            id: 1,\\n            type: \'EXPENSE\',\\n            description: {\\n              claim_number: \'123\',\\n              employee_email: \'\',\\n              expense_id: \'\',\\n              report_id: \'\',\\n              settlement_id: \'\'\\n            },\\n            status: AccountingExportStatus.COMPLETE,\\n            mapping_errors: [],\\n            response: {},\\n            created_at: new Date(),\\n            updated_at: new Date(),\\n            exported_at: new Date(),\\n            workspace: 1,\\n            export_url: \'\',\\n            expenses: [],\\n            fund_source: FundSource.CCC\\n          },\\n          type: AccountingErrorType.ACCOUNTING_ERROR,\\n          is_resolved: false,\\n          error_title: \'Invalid account code for expense\',\\n          error_detail: \'Account code 223 doesn\\\\\'t exist in Quickbooks Online\',\\n          created_at: new Date(),\\n          updated_at: new Date(),\\n          workspace: 1\\n        }\\n      ]\\n    },\\n    groupedErrorStat: {\\n      [AccountingErrorType.EMPLOYEE_MAPPING]: null,\\n      [AccountingErrorType.CATEGORY_MAPPING]: null\\n    },\\n    destinationFieldMap: {\\n      [ExportErrorSourceType.EMPLOYEE]: \'EMPLOYEE\',\\n      [ExportErrorSourceType.CATEGORY]: \'ACCOUNT\'\\n    },\\n    isCategoryMappingGeneric: true,\\n    isImportItemsEnabled: false,\\n    destinationOptionsVersion: \'v1\',\\n    errorsVersion: \'v1\'\\n  }\\n}"}],"src/stories/DashboardExportLogDialog.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportLogDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DashboardExportLogDialogComponent>","defaultValue":"{\\n  title: \'Dashboard/DashboardExportLogDialog\',\\n  component: DashboardExportLogDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DashboardExportLogDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [DashboardExportLogDialogComponent, ExportLogTableComponent, ExportLogChildTableDialogComponent, SnakeCaseToSpaceCasePipe],\\n      imports: [CommonModule, DialogModule, BrowserAnimationsModule, TableModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportLogDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    isExportLogVisible: true,\\n    accountingExports: [\\n      {\\n        exportedAt: new Date(),\\n        employee: [\'Ashwin\', \'ashwin.t@fyle.in\'],\\n        expenseType: \'Reimbursable\',\\n        referenceNumber: \'E/2020/05/28\',\\n        exportedAs: \'Bill\',\\n        integrationUrl: \'https://www.fylehq.com\',\\n        fyleUrl: \'https://www.fylehq.com\',\\n        expenses: [\\n          {\\n            id: 1,\\n            employee_email: \'ashwin.t@fyle.in\',\\n            employee_name: \'Ashwin\',\\n            category: \'Travel\',\\n            sub_category: \'Travel\',\\n            project: \'Fyle\',\\n            expense_id: \'1\',\\n            org_id: \'1\',\\n            expense_number: \'E/2020/05/28\',\\n            claim_number: \'C/2020/05/28\',\\n            amount: 100,\\n            currency: \'INR\',\\n            foreign_amount: 100,\\n            foreign_currency: \'INR\',\\n            tax_amount: 0,\\n            tax_group_id: \'1\',\\n            settlement_id: \'1\',\\n            reimbursable: true,\\n            billable: false,\\n            state: \'COMPLETE\',\\n            vendor: \'Fyle\',\\n            cost_center: \'Fyle\',\\n            purpose: \'Fyle\',\\n            report_id: \'1\',\\n            spent_at: new Date(),\\n            approved_at: new Date(),\\n            posted_at: new Date(),\\n            expense_created_at: new Date(),\\n            expense_updated_at: new Date(),\\n            created_at: new Date(),\\n            updated_at: new Date(),\\n            fund_source: \'Personal Funds\',\\n            verified_at: new Date(),\\n            custom_properties: [],\\n            paid_on_sage_intacct: true,\\n            file_ids: [],\\n            payment_number: \'1\',\\n            corporate_card_id: \'1\',\\n            is_skipped: false,\\n            report_title: \'Fyle\'\\n          }\\n        ]\\n      }\\n    ],\\n    isExportLogFetchInProgress: false,\\n    exportLogHeader: \'Successful\'\\n  }\\n}"}],"src/stories/DashboardExportSummarySection.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSummarySection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<DashboardExportSummarySectionComponent>","defaultValue":"{\\n  title: \'Dashboard/DashboardExportSummarySection\',\\n  component: DashboardExportSummarySectionComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: DashboardExportSummarySectionComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule],\\n      providers: [\\n        {\\n          provide: AccountingExportService,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: ApiService,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: HttpClient,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: ExportLogService,\\n          useValue: {\\n          }\\n        }\\n      ]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/DashboardExportSummarySection.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    appName: AppName.QBO,\\n    exportLogVersion: \'v1\',\\n    accountingExportType: [QBOTaskLogType.FETCHING_EXPENSE, QBOTaskLogType.CREATING_BILL, QBOTaskLogType.CREATING_EXPENSE, QBOTaskLogType.CREATING_CHECK, QBOTaskLogType.CREATING_CREDIT_CARD_PURCHASE, QBOTaskLogType.CREATING_JOURNAL_ENTRY, QBOTaskLogType.CREATING_CREDIT_CARD_CREDIT, QBOTaskLogType.CREATING_DEBIT_CARD_EXPENSE],\\n    accountingExportSummary: {\\n      id: 1,\\n      last_exported_at: \'2021-09-01T08:00:00Z\',\\n      next_export_at: \'2021-09-01T08:00:00Z\',\\n      export_mode: \'AUTO\',\\n      total_accounting_export_count: 1,\\n      successful_accounting_export_count: 1,\\n      failed_accounting_export_count: 0,\\n      created_at: \'2021-09-01T08:00:00Z\',\\n      updated_at: \'2021-09-01T08:00:00Z\',\\n      workspace: 1\\n    }\\n  }\\n}"}],"src/stories/EmailMultiSelectField.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/EmailMultiSelectField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<EmailMultiSelectFieldComponent>","defaultValue":"{\\n  title: \'Configuration/AdvancedSetting/EmailMultiSelectField\',\\n  component: EmailMultiSelectFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: EmailMultiSelectFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MandatoryErrorMessageComponent],\\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, BrowserAnimationsModule, SharedModule, MultiSelectModule, DialogModule, TooltipModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })],\\n      providers: [MessageService, IntegrationsToastService]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/EmailMultiSelectField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({exportScheduleFrequency: new FormControl(1), exportSchedule: new FormControl(true), email: new FormControl([{email: \'ashwin.t@fyle.in\', name: \'Ashwin\'}]), search: new FormControl(\'\')})),\\n    isFieldMandatory: false,\\n    mandatoryErrorListName: \'automatic export method\',\\n    label: \'Set up export frequency\',\\n    subLabel: \'Set a frequency based on how often you want your expenses in \' + brandingConfig.brandName + \' to be exported to QuickBooks Online\',\\n    formControllerName: \'exportScheduleFrequency\',\\n    options: [{email: \'ashwin.t@fyle.in\', name: \'Ashwin\'}]\\n  }\\n}"}],"src/stories/Error.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Error.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ErrorComponent>","defaultValue":"{\\n  title: \'Onboarding/Error\',\\n  component: ErrorComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ErrorComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })],\\n      providers: [MessageService, IntegrationsToastService]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Error.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{}"}],"src/stories/ExportLogChildTableDialog.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogChildTableDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ExportLogChildTableDialogComponent>","defaultValue":"{\\n  title: \'ExportLog/ExportLogChildTableDialog\',\\n  component: ExportLogChildTableDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ExportLogChildTableDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ExportLogChildTableDialogComponent],\\n      imports: [CommonModule, DialogModule, BrowserAnimationsModule, TableModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogChildTableDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    isDialogOpen: true,\\n    expenses: [\\n      {\\n        id: 1,\\n        employee_email: \'ashwin.t@fyle.in\',\\n        employee_name: \'Ashwin\',\\n        category: \'Travel\',\\n        sub_category: \'Travel\',\\n        project: \'Fyle\',\\n        expense_id: \'1\',\\n        org_id: \'1\',\\n        expense_number: \'E/2020/05/28\',\\n        claim_number: \'C/2020/05/28\',\\n        amount: 100,\\n        currency: \'INR\',\\n        foreign_amount: 100,\\n        foreign_currency: \'INR\',\\n        tax_amount: 0,\\n        tax_group_id: \'1\',\\n        settlement_id: \'1\',\\n        reimbursable: true,\\n        billable: false,\\n        state: \'COMPLETE\',\\n        vendor: \'Fyle\',\\n        cost_center: \'Fyle\',\\n        purpose: \'Fyle\',\\n        report_id: \'1\',\\n        spent_at: new Date(),\\n        approved_at: new Date(),\\n        posted_at: new Date(),\\n        expense_created_at: new Date(),\\n        expense_updated_at: new Date(),\\n        created_at: new Date(),\\n        updated_at: new Date(),\\n        fund_source: \'Personal Funds\',\\n        verified_at: new Date(),\\n        custom_properties: [],\\n        paid_on_sage_intacct: true,\\n        file_ids: [],\\n        payment_number: \'1\',\\n        corporate_card_id: \'1\',\\n        is_skipped: false,\\n        report_title: \'Fyle\'\\n      }\\n    ]\\n  }\\n}"}],"src/stories/ExportLogFilter.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogFilter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ExportLogFilterComponent>","defaultValue":"{\\n  title: \'ExportLog/ExportLogFilter\',\\n  component: ExportLogFilterComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ExportLogFilterComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule, BrowserAnimationsModule, DropdownModule, FormsModule, ReactiveFormsModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogFilter.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    exportLogForm: setupStoryBookFormGroup(new FormGroup({searchOption: new FormControl(), dateRange: new FormControl(), start: new FormControl(), end: new FormControl()}))\\n  }\\n}"}],"src/stories/ExportLogTable.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ExportLogTableComponent>","defaultValue":"{\\n  title: \'ExportLog/ExportLogTable\',\\n  component: ExportLogTableComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ExportLogTableComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, BrowserAnimationsModule, TableModule, SharedModule, IconSpriteModule.forRoot({ path: \'assets/sprites/sprite.svg\' })]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    filteredExpenseGroups: [\\n      {\\n        exportedAt: new Date(),\\n        employee: [\'Ashwin\', \'ashwin.t@fyle.in\'],\\n        expenseType: \'Reimbursable\',\\n        referenceNumber: \'E/2020/05/28\',\\n        exportedAs: \'Bill\',\\n        integrationUrl: \'https://www.fylehq.com\',\\n        fyleUrl: \'https://www.fylehq.com\',\\n        expenses: [\\n          {\\n            id: 1,\\n            employee_email: \'ashwin.t@fyle.in\',\\n            employee_name: \'Ashwin\',\\n            category: \'Travel\',\\n            sub_category: \'Travel\',\\n            project: \'Fyle\',\\n            expense_id: \'1\',\\n            org_id: \'1\',\\n            expense_number: \'E/2020/05/28\',\\n            claim_number: \'C/2020/05/28\',\\n            amount: 100,\\n            currency: \'INR\',\\n            foreign_amount: 100,\\n            foreign_currency: \'INR\',\\n            tax_amount: 0,\\n            tax_group_id: \'1\',\\n            settlement_id: \'1\',\\n            reimbursable: true,\\n            billable: false,\\n            state: \'COMPLETE\',\\n            vendor: \'Fyle\',\\n            cost_center: \'Fyle\',\\n            purpose: \'Fyle\',\\n            report_id: \'1\',\\n            spent_at: new Date(),\\n            approved_at: new Date(),\\n            posted_at: new Date(),\\n            expense_created_at: new Date(),\\n            expense_updated_at: new Date(),\\n            created_at: new Date(),\\n            updated_at: new Date(),\\n            fund_source: \'Personal Funds\',\\n            verified_at: new Date(),\\n            custom_properties: [],\\n            paid_on_sage_intacct: true,\\n            file_ids: [],\\n            payment_number: \'1\',\\n            corporate_card_id: \'1\',\\n            is_skipped: false,\\n            report_title: \'Fyle\'\\n          }\\n        ]\\n      }\\n    ],\\n    appName: AppName.QBO,\\n    isExportLogTable: true,\\n    isDashboardFailed: false\\n  }\\n}"}],"src/stories/GenericMappingV2.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/GenericMappingV2.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<GenericMappingV2Component>","defaultValue":"{\\n  title: \'Mapping/GenericMappingV2\',\\n  component: GenericMappingV2Component,\\n  tags: [\'autodocs\'],\\n  render: (args: GenericMappingV2Component) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, SharedModule, BrowserAnimationsModule],\\n      providers: [\\n        IntegrationsToastService, MessageService,\\n        {\\n          provide: MappingService,\\n          useValue: {\\n            getGenericMappingsV2: () => of(\\n              {\\n                count: 0,\\n                next: null,\\n                previous: null,\\n                results: []\\n              }\\n            ),\\n            getMappingStats: () => of({\\n              all_attributes_count: 10,\\n              unmapped_attributes_count: 10\\n            })\\n          }\\n        },\\n        {\\n          provide: WorkspaceService,\\n          useValue: {\\n          }\\n        },\\n        {\\n          provide: ActivatedRoute,\\n          useValue: {\\n            snapshot: {\\n              params: {\\n                source_field: \'employee\'\\n              }\\n            }\\n          }\\n        }\\n      ]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/GenericMappingV2.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    isLoading: false,\\n    destinationOptions: [\\n      {\\n        id: 1,\\n        attribute_type: \'EMPLOYEE\',\\n        display_name: \'Employee\',\\n        value: \'Ashwin\',\\n        destination_id: \'1\',\\n        active: true,\\n        created_at: new Date(),\\n        updated_at: new Date(),\\n        workspace: 1\\n      },\\n      {\\n        id: 2,\\n        attribute_type: \'EMPLOYEE\',\\n        display_name: \'Employee\',\\n        value: \'Dhoni\',\\n        destination_id: \'2\',\\n        active: true,\\n        created_at: new Date(),\\n        updated_at: new Date(),\\n        workspace: 1\\n      }\\n    ],\\n    employeeFieldMapping: FyleField.EMPLOYEE,\\n    sourceField: \'employee\',\\n    destinationField: \'employee\',\\n    showAutoMapEmployee: true,\\n    appName: AppName.QBO,\\n    isCategoryMappingGeneric: true\\n  }\\n}"}],"src/stories/MainMenu.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MainMenu.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MainMenuComponent>","defaultValue":"{\\n  title: \'Core/MainMenu\',\\n  component: MainMenuComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MainMenuComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MainMenuComponent],\\n      imports: [CommonModule, TabMenuModule, RouterModule],\\n      providers: [{\\n        provide: ActivatedRoute,\\n        useValue: {\\n        }\\n      }]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MainMenu.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    modules: [\\n      {label: \'Dashboard\', routerLink: \'/integrations/qbo/main/dashboard\'},\\n      {label: \'Export Log\', routerLink: \'/integrations/qbo/main/export_log\'},\\n      {label: \'Mapping\', routerLink: \'/integrations/qbo/main/mapping\'},\\n      {label: \'Configuration\', routerLink: \'/integrations/qbo/main/configuration\'}\\n    ],\\n    activeItem: {label: \'Dashboard\', routerLink: \'/integrations/qbo/main/dashboard\'},\\n    appName: AppName.QBO,\\n    isDropdrownRequired: false\\n  }\\n}"}],"src/stories/MandatoryErrorMessage.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MandatoryErrorMessage.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MandatoryErrorMessageComponent>","defaultValue":"{\\n  title: \'Core/MandatoryErrorMessage\',\\n  component: MandatoryErrorMessageComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MandatoryErrorMessageComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MandatoryErrorMessageComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"project","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MandatoryErrorMessage.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    customErrorMessage: \'Project is mandatory\'\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MandatoryErrorMessage.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    listName: \'project\'\\n  }\\n}"}],"src/stories/MandatoryField.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MandatoryField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MandatoryFieldComponent>","defaultValue":"{\\n  title: \'Core/MandatoryField\',\\n  component: MandatoryFieldComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MandatoryFieldComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MandatoryFieldComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MandatoryField.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{}"}],"src/stories/MappingCardHeader.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MappingCardHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MappingCardHeaderComponent>","defaultValue":"{\\n  title: \'Mapping/MappingCardHeader\',\\n  component: MappingCardHeaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MappingCardHeaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MappingCardHeaderComponent, SnakeCaseToSpaceCasePipe],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MappingCardHeader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    sourceField: \'employee\',\\n    showAutoMapEmployee: true,\\n    mappingStats: {\\n      all_attributes_count: 5,\\n      unmapped_attributes_count: 5\\n    }\\n  }\\n}"}],"src/stories/MultiSelect.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<MultiSelectComponent>","defaultValue":"{\\n  title: \'Input/MultiSelect\',\\n  component: MultiSelectComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: MultiSelectComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [MultiSelectComponent],\\n      imports: [CommonModule, BrowserAnimationsModule, SharedModule, FormsModule, ReactiveFormsModule, MultiSelectModule]\\n    })\\n  ],\\n  argTypes: {\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/MultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    options: QBOImportSettingModel.getChartOfAccountTypesList(),\\n    placeholder: \'Select Chart of Accouts\',\\n    form: setupStoryBookFormGroup(new FormGroup({chartOfAccountTypes: new FormControl([\'Expense\'])})),\\n    formControllerName: \'chartOfAccountTypes\',\\n    disabledOption: \'Expense\'\\n  }\\n}"}],"src/stories/OnboardingDone.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/OnboardingDone.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<OnboardingDoneComponent>","defaultValue":"{\\n  title: \'Onboarding/OnboardingDone\',\\n  component: OnboardingDoneComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: OnboardingDoneComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [OnboardingDoneComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/OnboardingDone.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{}"}],"src/stories/Paginator.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Paginator.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<PaginatorComponent>","defaultValue":"{\\n  title: \'Core/Paginator\',\\n  component: PaginatorComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: PaginatorComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, DropdownModule, BrowserAnimationsModule, SharedModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Paginator.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    dropDownValue: 10,\\n    page: 1,\\n    totalCount: 100\\n  }\\n}"}],"src/stories/PreviewDialog.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/PreviewDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<PreviewDialogComponent>","defaultValue":"{\\n  title: \'Configuration/PreviewDialog\',\\n  component: PreviewDialogComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: PreviewDialogComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [PreviewDialogComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/PreviewDialog.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    isPreviewDialogVisible: true,\\n    iconPath: \'assets/illustrations/sageIntacct/IntacctImportSettings.png\',\\n    header: \'Preview\'\\n  }\\n}"}],"src/stories/SkippedExportLogTable.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/SkippedExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<SkippedExportLogTableComponent>","defaultValue":"{\\n  title: \'ExportLog/SkippedExportLogTable\',\\n  component: SkippedExportLogTableComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: SkippedExportLogTableComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [SkippedExportLogTableComponent],\\n      imports: [CommonModule, TableModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/SkippedExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    filteredExpense: [\\n      {\\n        updated_at: new Date(),\\n        employee: [\'Ashwin\', \'ashwin.t@fyle.in\'],\\n        expenseType: \'Reimbursable\',\\n        claim_number: \'C/2020/05/28\',\\n        fyleUrl: \'https://www.fylehq.com\'\\n      }\\n    ]\\n  }\\n}"}],"src/stories/SubMenu.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/SubMenu.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<SubMenuComponent>","defaultValue":"{\\n  title: \'Core/SubMenu\',\\n  component: SubMenuComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: SubMenuComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [],\\n      imports: [CommonModule, TabMenuModule, RouterModule],\\n      providers: [{\\n        provide: ActivatedRoute,\\n        useValue: {\\n        }\\n      }]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/SubMenu.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    modules: [\\n      {label: \'Map Employees\', routerLink: \'/integrations/qbo/main/configuration/employee_settings\'},\\n      {label: \'Export Settings\', routerLink: \'/integrations/qbo/main/configuration/export_settings\'},\\n      {label: \'Import Settings\', routerLink: \'/integrations/qbo/main/configuration/import_settings\'},\\n      {label: \'Advanced Settings\', routerLink: \'/integrations/qbo/main/configuration/advanced_settings\'}\\n    ],\\n    activeModule: {label: \'Map Employees\', routerLink: \'/integrations/qbo/main/configuration/employee_settings\'}\\n  }\\n}"}],"src/stories/Toggle.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Toggle.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ToggleComponent>","defaultValue":"{\\n  title: \'Input/Toggle\',\\n  component: ToggleComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ToggleComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ToggleComponent],\\n      imports: [CommonModule, BrowserAnimationsModule, InputSwitchModule, FormsModule, ReactiveFormsModule, RippleModule]\\n    })\\n  ],\\n  argTypes: {\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/Toggle.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    form: setupStoryBookFormGroup(new FormGroup({field: new FormControl(true)})),\\n    formControllerName: \'field\'\\n  }\\n}"}],"src/stories/ZeroState.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ZeroState.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ZeroStateComponent>","defaultValue":"{\\n  title: \'Core/ZeroState\',\\n  component: ZeroStateComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ZeroStateComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ZeroStateComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ZeroState.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    zeroStateImageURL: \'assets/icons/dashboard-illustration.svg\',\\n    zeroStateCaption: \'There are no expenses to export at the moment!\'\\n  }\\n}"}],"src/stories/ZeroStateWithIllustration.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ZeroStateWithIllustration.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<ZeroStateWithIllustrationComponent>","defaultValue":"{\\n  title: \'Core/ZeroStateWithIllustration\',\\n  component: ZeroStateWithIllustrationComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: ZeroStateWithIllustrationComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [ZeroStateWithIllustrationComponent],\\n      imports: [CommonModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/ZeroStateWithIllustration.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    mainText: \'Sorry, no results found!\',\\n    subText: \'We could not find what you were looking for. Kindly check the keywords again.\'\\n  }\\n}"}],"src/stories/loader.stories.ts":[{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"src/stories/loader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<LoaderComponent>","defaultValue":"{\\n  title: \'Core/Loader\',\\n  component: LoaderComponent,\\n  tags: [\'autodocs\'],\\n  render: (args: LoaderComponent) => ({\\n    props: { ...args }\\n  }),\\n  decorators: [\\n    moduleMetadata({\\n      declarations: [LoaderComponent],\\n      imports: [CommonModule, ProgressSpinnerModule]\\n    })\\n  ],\\n  argTypes: {\\n    ngOnInit: { table: { disable: true } }\\n  }\\n}"},{"name":"simple","ctype":"miscellaneous","subtype":"variable","file":"src/stories/loader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{}"},{"name":"smallLoader","ctype":"miscellaneous","subtype":"variable","file":"src/stories/loader.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    styleClass: \\"!tw-w-16-px !tw-h-16-px spinner-default\\"\\n  }\\n}"}],"src/app/core/services/mock.data.ts":[{"name":"mockDataComplete","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/mock.data.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    count: 1,\\n    next: null,\\n    previous: null,\\n    results: [\\n      {\\n        id: 8291,\\n        type: \\"DIRECT_COSTS\\",\\n        status: \\"COMPLETE\\",\\n        mapping_errors: [],\\n        sage_300_errors: null,\\n        created_at: \\"2023-10-09T09:48:30.802135Z\\",\\n        updated_at: \\"2023-10-09T09:48:35.369142Z\\",\\n        exported_at: \\"2023-10-09T09:48:38.929923Z\\",\\n        workspace: 313,\\n        response: {},\\n        purchase_invoice_id: 12,\\n        export_url: \\"odsifodkmf.com\\",\\n        direct_costs_id: null,\\n        sage_300_reimbursement: null\\n      }\\n    ]\\n  }"},{"name":"mockDataFailed","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/mock.data.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\n    count: 2,\\n    next: null,\\n    previous: null,\\n    results: [\\n      {\\n        id: 8290,\\n        type: \\"PURCHASE_INVOICE\\",\\n        status: \\"FAILED\\",\\n        mapping_errors: [\\n          {\\n            type: \\"Employee Mapping\\",\\n            value: \\"nilesh.p@fyle.in\\"\\n          },\\n          {\\n            type: \\"Category Mapping\\",\\n            value: \\"Unspecified\\"\\n          }\\n        ],\\n        sage_300_errors: {\\n          created_on: \\"2023-08-17T09:46:30Z\\",\\n          entity_id: \\"728406bd-32f6-4676-95ff-b06100a0f840\\",\\n          error_msg:\\n            \\"Exception of type \'DBI.Synchronization.Processing.TimberlineOffice.KeyAlreadyInUseException\' was thrown.\\",\\n          id: \\"6615abdf-733f-4190-a4ed-b06100a1166f\\",\\n          type_id: \\"4de325f1-a380-41cc-90ce-be1e02fef167\\",\\n          version: 12967\\n        },\\n        response: {},\\n        created_at: \\"2023-10-09T09:48:30.764031Z\\",\\n        updated_at: \\"2023-10-09T09:48:38.929923Z\\",\\n        exported_at: \\"2023-10-09T09:48:38.929923Z\\",\\n        workspace: 313,\\n        purchase_invoice_id: null,\\n        export_url: \\"odsifodkmf.com\\",\\n        direct_costs_id: null,\\n        sage_300_reimbursement: null\\n      }\\n    ]\\n  }"}],".storybook/preview.ts":[{"name":"preview","ctype":"miscellaneous","subtype":"variable","file":".storybook/preview.ts","deprecated":false,"deprecationMessage":"","type":"Preview","defaultValue":"{\\n  decorators: [\\n    (Story: any, context: any) => {\\n      document.documentElement.setAttribute(\'data-theme\', \'fyle\');\\n      return Story(context);\\n    },\\n  ],\\n  parameters: {\\n    actions: { argTypesRegex: \\"^on[A-Z].*\\" },\\n    controls: {\\n      matchers: {\\n        color: /(background|color)$/i,\\n        date: /Date$/i,\\n      },\\n    },\\n  },\\n}"}],"src/app/core/services/qbo/qbo-configuration/qbo-connector.service.ts":[{"name":"qboCredentialsCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbo/qbo-configuration/qbo-connector.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/core/services/qbo/qbo-configuration/qbo-import-settings.service.ts":[{"name":"qboImportSettingGetCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/qbo/qbo-configuration/qbo-import-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/core/services/sage300/sage300-configuration/sage300-advanced-settings.service.ts":[{"name":"sage300AdvancedSettingGetCache","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/sage300/sage300-configuration/sage300-advanced-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/core/services/sage300/sage300-configuration/sage300-connector.service.ts":[{"name":"sage300CredentialCache","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/sage300/sage300-configuration/sage300-connector.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/core/services/sage300/sage300-configuration/sage300-export-setting.service.ts":[{"name":"sage300ExportSettingGetCache","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/sage300/sage300-configuration/sage300-export-setting.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/core/services/sage300/sage300-configuration/sage300-import-settings.service.ts":[{"name":"sage300ImportSettingGetCache","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/sage300/sage300-configuration/sage300-import-settings.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/app/core/services/si/si-core/intacct-connector.service.ts":[{"name":"sageIntacctCredentialCache","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/si/si-core/intacct-connector.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}],"src/stories/utility.ts":[{"name":"setupStoryBookFormGroup","ctype":"miscellaneous","subtype":"variable","file":"src/stories/utility.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"<TControl extends AbstractControl>(control: TControl): TControl => {\\n    // @ts-ignore\\n    delete control._parent;\\n    if (control instanceof FormGroup || control instanceof FormRecord) {\\n        for (const childKey of Object.keys(control.controls)) {\\n            setupStoryBookFormGroup(control.controls[childKey]);\\n        }\\n    } else if (control instanceof FormArray) {\\n        for (const child of control.controls) {\\n            setupStoryBookFormGroup(child);\\n        }\\n    }\\n    return control;\\n}"}],"src/app/core/services/travelperk/travelperk.service.ts":[{"name":"travelPerkConfigurationCache$","ctype":"miscellaneous","subtype":"variable","file":"src/app/core/services/travelperk/travelperk.service.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"new Subject<void>()"}]},"groupedFunctions":{"src/app/core/models/si/misc/skip-export.model.ts":[{"name":"constructPayload1","file":"src/app/core/models/si/misc/skip-export.model.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"valueField","deprecated":false,"deprecationMessage":""},{"name":"valueOption1","deprecated":false,"deprecationMessage":""}],"returnType":"SkipExport","jsdoctags":[{"name":"valueField","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"valueOption1","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"constructPayload2","file":"src/app/core/models/si/misc/skip-export.model.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"valueField","deprecated":false,"deprecationMessage":""},{"name":"valueOption2","deprecated":false,"deprecationMessage":""}],"returnType":"SkipExport","jsdoctags":[{"name":"valueField","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}},{"name":"valueOption2","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts":[{"name":"getFrequencyTime","file":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","ctype":"miscellaneous","subtype":"function","deprecated":false,"deprecationMessage":"","description":"","args":[{"name":"advancedSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":""}],"jsdoctags":[{"name":"advancedSettingForm","type":"FormGroup","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}]},"groupedEnumerations":{"src/app/core/models/enum/enum.model.ts":[{"name":"AccountingDisplayName","childs":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"Account"},{"name":"ITEM","deprecated":false,"deprecationMessage":"","value":"Item"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingErrorType","childs":[{"name":"EMPLOYEE_MAPPING","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE_MAPPING"},{"name":"CATEGORY_MAPPING","deprecated":false,"deprecationMessage":"","value":"CATEGORY_MAPPING"},{"name":"ACCOUNTING_ERROR","deprecated":false,"deprecationMessage":"","value":"ACCOUNTING_ERROR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingExport","childs":[{"name":"CREATING_DIRECT_COST","deprecated":false,"deprecationMessage":"","value":"CREATING_DIRECT_COST"},{"name":"CREATING_PURCHASE_INVOICE","deprecated":false,"deprecationMessage":"","value":"CREATING_PURCHASE_INVOICE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingExportStatus","childs":[{"name":"READY","deprecated":false,"deprecationMessage":"","value":"READY"},{"name":"FAILED","deprecated":false,"deprecationMessage":"","value":"FAILED"},{"name":"FATAL","deprecated":false,"deprecationMessage":"","value":"FATAL"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"},{"name":"IN_PROGRESS","deprecated":false,"deprecationMessage":"","value":"IN_PROGRESS"},{"name":"ENQUEUED","deprecated":false,"deprecationMessage":"","value":"ENQUEUED"},{"name":"EXPORT_QUEUED","deprecated":false,"deprecationMessage":"","value":"EXPORT_QUEUED"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingExportType","childs":[{"name":"PURCHASE_INVOICE","deprecated":false,"deprecationMessage":"","value":"PURCHASE_INVOICE"},{"name":"DIRECT_COSTS","deprecated":false,"deprecationMessage":"","value":"DIRECT_COSTS"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingField","childs":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AccountingIntegrationApp","childs":[{"name":"QBO","deprecated":false,"deprecationMessage":"","value":"QBO"},{"name":"NETSUITE","deprecated":false,"deprecationMessage":"","value":"NetSuite"},{"name":"SAGE_INTACCT","deprecated":false,"deprecationMessage":"","value":"Sage Intacct"},{"name":"XERO","deprecated":false,"deprecationMessage":"","value":"Xero"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AppName","childs":[{"name":"BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"BambooHR"},{"name":"QBD","deprecated":false,"deprecationMessage":"","value":"QuickBooks Desktop"},{"name":"TRAVELPERK","deprecated":false,"deprecationMessage":"","value":"Travelperk"},{"name":"GUSTO","deprecated":false,"deprecationMessage":"","value":"Gusto"},{"name":"INTACCT","deprecated":false,"deprecationMessage":"","value":"Sage Intacct"},{"name":"SAGE300","deprecated":false,"deprecationMessage":"","value":"Sage 300 CRE"},{"name":"QBO","deprecated":false,"deprecationMessage":"","value":"QuickBooks Online"},{"name":"BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Dynamics 365 Business Central"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AppNameInService","childs":[{"name":"BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"bambooHR"},{"name":"QBD","deprecated":false,"deprecationMessage":"","value":"qbd"},{"name":"TRAVELPERK","deprecated":false,"deprecationMessage":"","value":"travelperk"},{"name":"GUSTO","deprecated":false,"deprecationMessage":"","value":"gusto"},{"name":"INTACCT","deprecated":false,"deprecationMessage":"","value":"sage_intacct"},{"name":"SAGE300","deprecated":false,"deprecationMessage":"","value":"sage300"},{"name":"BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"business_central"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AppUrl","childs":[{"name":"BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"bamboo_hr"},{"name":"QBD","deprecated":false,"deprecationMessage":"","value":"qbd"},{"name":"TRAVELPERK","deprecated":false,"deprecationMessage":"","value":"travelperk"},{"name":"GUSTO","deprecated":false,"deprecationMessage":"","value":"gusto"},{"name":"INTACCT","deprecated":false,"deprecationMessage":"","value":"intacct"},{"name":"SAGE300","deprecated":false,"deprecationMessage":"","value":"sage300"},{"name":"BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"business_central"},{"name":"INTEGRATION","deprecated":false,"deprecationMessage":"","value":"integration"},{"name":"QBO","deprecated":false,"deprecationMessage":"","value":"qbo"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"AutoMapEmployeeOptions","childs":[{"name":"EMAIL","deprecated":false,"deprecationMessage":"","value":"EMAIL"},{"name":"NAME","deprecated":false,"deprecationMessage":"","value":"NAME"},{"name":"EMPLOYEE_CODE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE_CODE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"BusinessCentralAccountingExportType","childs":[],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"BusinessCentralExportType","childs":[{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL_ENTRY"},{"name":"PURCHASE_INVOICE","deprecated":false,"deprecationMessage":"","value":"PURCHASE_INVOICE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"BusinessCentralField","childs":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"},{"name":"CUSTOMER","deprecated":false,"deprecationMessage":"","value":"CUSTOMER"},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","value":"DEPARTMENT"},{"name":"CLASS","deprecated":false,"deprecationMessage":"","value":"CLASS"},{"name":"TAX_DETAIL","deprecated":false,"deprecationMessage":"","value":"TAX_DETAIL"},{"name":"JOB","deprecated":false,"deprecationMessage":"","value":"JOB"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"BusinessCentralOnboardingState","childs":[{"name":"CONNECTION","deprecated":false,"deprecationMessage":"","value":"CONNECTION"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"IMPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"IMPORT_SETTINGS"},{"name":"ADVANCED_SETTINGS","deprecated":false,"deprecationMessage":"","value":"ADVANCED_SETTINGS"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"BusinessCentralUpdateEvent","childs":[{"name":"CONNECT_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Connect Business Central"},{"name":"EXPORT_SETTING_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Export Settings Business Central"},{"name":"IMPORT_SETTINGS_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Import Settings Business Central"},{"name":"ADVANCED_SETTINGS_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Advanced Settings Business Central"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"CCCExpenseState","childs":[{"name":"PAYMENT_PROCESSING","deprecated":false,"deprecationMessage":"","value":"PAYMENT_PROCESSING"},{"name":"PAID","deprecated":false,"deprecationMessage":"","value":"PAID"},{"name":"APPROVED","deprecated":false,"deprecationMessage":"","value":"APPROVED"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ClickEvent","childs":[{"name":"OPEN_QBO_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open QBO Integration"},{"name":"OPEN_NETSUITE_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open NetSuite Integration"},{"name":"OPEN_SAGE_INTACCT_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open Sage Intacct Integration"},{"name":"OPEN_XERO_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open Xero Integration"},{"name":"OPEN_BAMBOO_HR_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open Bamboo HR Integration"},{"name":"OPEN_QBD_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open QBD Integration"},{"name":"OPEN_GUSTO_INTEGRATION","deprecated":false,"deprecationMessage":"","value":"Open Gusto Integration"},{"name":"INTEGRATION_TABS","deprecated":false,"deprecationMessage":"","value":"Integration Tabs"},{"name":"CONNECT_BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Connect Bamboo HR"},{"name":"CONFIGURE_BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Configure Bamboo HR"},{"name":"DISCONNECT_BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Disconnect Bamboo HR"},{"name":"CONNECT_GUSTO","deprecated":false,"deprecationMessage":"","value":"Connect Gusto"},{"name":"CONFIGURE_GUSTO","deprecated":false,"deprecationMessage":"","value":"Configure Gusto"},{"name":"DISCONNECT_GUSTO","deprecated":false,"deprecationMessage":"","value":"Disconnect Gusto"},{"name":"SYNC_GUSTO_EMPLOYEES","deprecated":false,"deprecationMessage":"","value":"Sync Gusto Employees"},{"name":"CONNECT_QBD","deprecated":false,"deprecationMessage":"","value":"Connect QBD"},{"name":"COPY_SUPPORT_EMAIL","deprecated":false,"deprecationMessage":"","value":"Copy Support Email"},{"name":"SYNC_BAMBOO_HR_EMPLOYEES","deprecated":false,"deprecationMessage":"","value":"Sync Bamboo HR Employees"},{"name":"ADD_BAMBOO_HR_EMAIL_MANUALLY","deprecated":false,"deprecationMessage":"","value":"Add Bamboo HR Email Manually"},{"name":"ADD_EMAIL_MANUALLY","deprecated":false,"deprecationMessage":"","value":"Add Email Manually"},{"name":"ADD_CUSTOM_FIELD","deprecated":false,"deprecationMessage":"","value":"Add Custom Field"},{"name":"QBD_EXPORT","deprecated":false,"deprecationMessage":"","value":"Export IIF files"},{"name":"CONNECT_INTACCT","deprecated":false,"deprecationMessage":"","value":"Connect Sage Intacct"},{"name":"PREVIEW_INTACCT_EXPORT","deprecated":false,"deprecationMessage":"","value":"Preview Sage Intacct Export"},{"name":"INTACCT_EXPORT","deprecated":false,"deprecationMessage":"","value":"Export Sage Intacct"},{"name":"CONNECT_SAGE300","deprecated":false,"deprecationMessage":"","value":"Connect Sage 300 CRE"},{"name":"CONNECT_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Connect Dynamic 360 Business Central"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ConfigurationCta","childs":[{"name":"SAVE","deprecated":false,"deprecationMessage":"","value":"Save"},{"name":"SAVE_AND_CONTINUE","deprecated":false,"deprecationMessage":"","value":"Save and Continue"},{"name":"CONTINUE","deprecated":false,"deprecationMessage":"","value":"Continue"},{"name":"SAVING","deprecated":false,"deprecationMessage":"","value":"Saving"},{"name":"SYNCING","deprecated":false,"deprecationMessage":"","value":"Syncing"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ConfigurationWarningEvent","childs":[{"name":"CLONE_SETTINGS","deprecated":false,"deprecationMessage":"","value":"CLONE_SETTINGS"},{"name":"INCORRECT_QBO_ACCOUNT_CONNECTED","deprecated":false,"deprecationMessage":"","value":"INCORRECT_QBO_ACCOUNT_CONNECTED"},{"name":"QBO_EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"QBO_EXPORT_SETTINGS"},{"name":"RESET_CONFIGURATION","deprecated":false,"deprecationMessage":"","value":"RESET_CONFIGURATION"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"CorporateCreditCardExpensesObject","childs":[{"name":"BILL","deprecated":false,"deprecationMessage":"","value":"BILL"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL_ENTRY"},{"name":"EXPENSE_REPORT","deprecated":false,"deprecationMessage":"","value":"EXPENSE_REPORT"},{"name":"CHARGE_CARD_TRANSACTION","deprecated":false,"deprecationMessage":"","value":"CHARGE_CARD_TRANSACTION"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"CustomOperatorOption","childs":[{"name":"Is","deprecated":false,"deprecationMessage":"","value":"iexact"},{"name":"IsEmpty","deprecated":false,"deprecationMessage":"","value":"is_empty"},{"name":"IsNotEmpty","deprecated":false,"deprecationMessage":"","value":"is_not_empty"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"DefaultImportFields","childs":[{"name":"CATEGORY","deprecated":false,"deprecationMessage":"","value":"CATEGORY"},{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"},{"name":"MERCHANTS","deprecated":false,"deprecationMessage":"","value":"MERCHANTS"},{"name":"LOCATION","deprecated":false,"deprecationMessage":"","value":"LOCATION"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"EmployeeFieldMapping","childs":[{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE"},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExpenseGroupedBy","childs":[{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"EXPENSE"},{"name":"REPORT","deprecated":false,"deprecationMessage":"","value":"REPORT"},{"name":"PAYMENT","deprecated":false,"deprecationMessage":"","value":"PAYMENT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExpenseGroupingFieldOption","childs":[{"name":"CLAIM_NUMBER","deprecated":false,"deprecationMessage":"","value":"claim_number"},{"name":"SETTLEMENT_ID","deprecated":false,"deprecationMessage":"","value":"settlement_id"},{"name":"EXPENSE_ID","deprecated":false,"deprecationMessage":"","value":"expense_id"},{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"EXPENSE"},{"name":"REPORT","deprecated":false,"deprecationMessage":"","value":"REPORT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExpenseState","childs":[{"name":"PAYMENT_PROCESSING","deprecated":false,"deprecationMessage":"","value":"PAYMENT_PROCESSING"},{"name":"PAID","deprecated":false,"deprecationMessage":"","value":"PAID"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExportDateType","childs":[{"name":"LAST_SPENT_AT","deprecated":false,"deprecationMessage":"","value":"last_spent_at"},{"name":"SPENT_AT","deprecated":false,"deprecationMessage":"","value":"spent_at"},{"name":"POSTED_AT","deprecated":false,"deprecationMessage":"","value":"posted_at"},{"name":"CURRENT_DATE","deprecated":false,"deprecationMessage":"","value":"current_date"},{"name":"VERIFIED_DATE","deprecated":false,"deprecationMessage":"","value":"verified_at"},{"name":"APPROVAL_DATE","deprecated":false,"deprecationMessage":"","value":"approved_at"},{"name":"VERIFIED_AT","deprecated":false,"deprecationMessage":"","value":"verified_at"},{"name":"APPROVED_AT","deprecated":false,"deprecationMessage":"","value":"approved_at"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExportErrorSourceType","childs":[{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE"},{"name":"CATEGORY","deprecated":false,"deprecationMessage":"","value":"CATEGORY"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExportMode","childs":[{"name":"MANUAL","deprecated":false,"deprecationMessage":"","value":"MANUAL"},{"name":"AUTO","deprecated":false,"deprecationMessage":"","value":"AUTO"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ExportState","childs":[{"name":"SUCCESS","deprecated":false,"deprecationMessage":"","value":"SUCCESS"},{"name":"FAILED","deprecated":false,"deprecationMessage":"","value":"FAILED"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"FieldType","childs":[{"name":"TEXT","deprecated":false,"deprecationMessage":"","value":"TEXT"},{"name":"SELECT","deprecated":false,"deprecationMessage":"","value":"SELECT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"FundSource","childs":[{"name":"PERSONAL","deprecated":false,"deprecationMessage":"","value":"PERSONAL"},{"name":"CCC","deprecated":false,"deprecationMessage":"","value":"CCC"},{"name":"REIMBURSABLE","deprecated":false,"deprecationMessage":"","value":"Reimbursable"},{"name":"CORPORATE_CARD","deprecated":false,"deprecationMessage":"","value":"Corporate Card"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"FyleField","childs":[{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE"},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"},{"name":"CATEGORY","deprecated":false,"deprecationMessage":"","value":"CATEGORY"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"FyleReferenceType","childs":[{"name":"REPORT_ID","deprecated":false,"deprecationMessage":"","value":"report_id"},{"name":"EXPENSE_REPORT","deprecated":false,"deprecationMessage":"","value":"claim_number"},{"name":"PAYMENT","deprecated":false,"deprecationMessage":"","value":"settlement_id"},{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"expense_id"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"InAppIntegration","childs":[{"name":"BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Bamboo HR"},{"name":"QBD","deprecated":false,"deprecationMessage":"","value":"QuickBooks Desktop"},{"name":"TRAVELPERK","deprecated":false,"deprecationMessage":"","value":"TravelPerk"},{"name":"GUSTO","deprecated":false,"deprecationMessage":"","value":"Gusto"},{"name":"INTACCT","deprecated":false,"deprecationMessage":"","value":"Sage Intacct"},{"name":"SAGE300","deprecated":false,"deprecationMessage":"","value":"Sage 300 CRE"},{"name":"BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Dynamics 365 Business Central"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"InputType","childs":[{"name":"DROPDOWN","deprecated":false,"deprecationMessage":"","value":"DROPDOWN"},{"name":"TOGGLE","deprecated":false,"deprecationMessage":"","value":"TOGGLE"},{"name":"MULTI_SELECT","deprecated":false,"deprecationMessage":"","value":"MULTI_SELECT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctCategoryDestination","childs":[{"name":"EXPENSE_TYPE","deprecated":false,"deprecationMessage":"","value":"EXPENSE_TYPE"},{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"GL_ACCOUNT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctErrorType","childs":[{"name":"EMPLOYEE_MAPPING","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE_MAPPING"},{"name":"CATEGORY_MAPPING","deprecated":false,"deprecationMessage":"","value":"CATEGORY_MAPPING"},{"name":"INTACCT_ERROR","deprecated":false,"deprecationMessage":"","value":"INTACCT_ERROR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctExportSettingDestinationOptionKey","childs":[{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"},{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"},{"name":"EXPENSE_PAYMENT_TYPE","deprecated":false,"deprecationMessage":"","value":"EXPENSE_PAYMENT_TYPE"},{"name":"CCC_EXPENSE_PAYMENT_TYPE","deprecated":false,"deprecationMessage":"","value":"CCC_EXPENSE_PAYMENT_TYPE"},{"name":"CHARGE_CARD","deprecated":false,"deprecationMessage":"","value":"CHARGE_CARD"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctField","childs":[{"name":"LOCATION_ENTITY","deprecated":false,"deprecationMessage":"","value":"LOCATION_ENTITY"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"IMPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"IMPORT_SETTINGS"},{"name":"ADVANCED_SETTINGS","deprecated":false,"deprecationMessage":"","value":"ADVANCED_SETTINGS"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctOnboardingState","childs":[{"name":"CONNECTION","deprecated":false,"deprecationMessage":"","value":"CONNECTION"},{"name":"LOCATION_ENTITY","deprecated":false,"deprecationMessage":"","value":"LOCATION_ENTITY_MAPPINGS"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"IMPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"IMPORT_SETTINGS"},{"name":"ADVANCED_CONFIGURATION","deprecated":false,"deprecationMessage":"","value":"ADVANCED_CONFIGURATION"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctReimbursableExpensesObject","childs":[{"name":"BILL","deprecated":false,"deprecationMessage":"","value":"BILL"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL_ENTRY"},{"name":"EXPENSE_REPORT","deprecated":false,"deprecationMessage":"","value":"EXPENSE_REPORT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntacctUpdateEvent","childs":[{"name":"CONNECT_INTACCT","deprecated":false,"deprecationMessage":"","value":"Connect Sage Intacct"},{"name":"EXPORT_SETTING_INTACCT","deprecated":false,"deprecationMessage":"","value":"Export Settings Intacct"},{"name":"IMPORT_SETTINGS_INTACCT","deprecated":false,"deprecationMessage":"","value":"Import Settings Intacct"},{"name":"ADVANCED_SETTINGS_INTACCT","deprecated":false,"deprecationMessage":"","value":"Advanced Settings Intacct"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntegrationName","childs":[{"name":"SAGE300","deprecated":false,"deprecationMessage":"","value":"SAGE300"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"IntegrationView","childs":[{"name":"ALL","deprecated":false,"deprecationMessage":"","value":"ALL"},{"name":"ACCOUNTING","deprecated":false,"deprecationMessage":"","value":"ACCOUNTING"},{"name":"HRMS","deprecated":false,"deprecationMessage":"","value":"HRMS"},{"name":"TRAVEL","deprecated":false,"deprecationMessage":"","value":"TRAVEL"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"JoinOption","childs":[{"name":"AND","deprecated":false,"deprecationMessage":"","value":"AND"},{"name":"OR","deprecated":false,"deprecationMessage":"","value":"OR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"LoaderType","childs":[{"name":"DETERMINATE","deprecated":false,"deprecationMessage":"","value":"determinate"},{"name":"INDETERMINATE","deprecated":false,"deprecationMessage":"","value":"indeterminate"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"MappingDestinationField","childs":[{"name":"CUSTOMER","deprecated":false,"deprecationMessage":"","value":"CUSTOMER"},{"name":"CLASS","deprecated":false,"deprecationMessage":"","value":"CLASS"},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","value":"DEPARTMENT"},{"name":"TAX_CODE","deprecated":false,"deprecationMessage":"","value":"TAX_CODE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"MappingSourceField","childs":[{"name":"PROJECT","deprecated":false,"deprecationMessage":"","value":"PROJECT"},{"name":"COST_CENTER","deprecated":false,"deprecationMessage":"","value":"COST_CENTER"},{"name":"TAX_GROUP","deprecated":false,"deprecationMessage":"","value":"TAX_GROUP"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"MappingState","childs":[{"name":"MAPPED","deprecated":false,"deprecationMessage":"","value":"MAPPED"},{"name":"UNMAPPED","deprecated":false,"deprecationMessage":"","value":"UNMAPPED"},{"name":"ALL","deprecated":false,"deprecationMessage":"","value":"ALL"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"NameInJournalEntry","childs":[{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE"},{"name":"MERCHANT","deprecated":false,"deprecationMessage":"","value":"MERCHANT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"OperatingSystem","childs":[{"name":"WIN","deprecated":false,"deprecationMessage":"","value":"Win"},{"name":"MAC","deprecated":false,"deprecationMessage":"","value":"Mac"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Operator","childs":[{"name":"IsNull","deprecated":false,"deprecationMessage":"","value":"isnull"},{"name":"IExact","deprecated":false,"deprecationMessage":"","value":"iexact"},{"name":"IContains","deprecated":false,"deprecationMessage":"","value":"icontains"},{"name":"LessThan","deprecated":false,"deprecationMessage":"","value":"lt"},{"name":"LessThanOrEqual","deprecated":false,"deprecationMessage":"","value":"lte"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Page","childs":[{"name":"LANDING","deprecated":false,"deprecationMessage":"","value":"Landing"},{"name":"BAMBOO_HR_LANDING","deprecated":false,"deprecationMessage":"","value":"Bamboo HR Landing"},{"name":"CONNECT_BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Connect Bamboo HR"},{"name":"CONFIGURE_BAMBOO_HR","deprecated":false,"deprecationMessage":"","value":"Bamboo HR Configuration"},{"name":"GUSTO_LANDING","deprecated":false,"deprecationMessage":"","value":"Gusto Landing"},{"name":"CONFIGURE_GUSTO","deprecated":false,"deprecationMessage":"","value":"Gusto Configuration"},{"name":"QBD_LANDING","deprecated":false,"deprecationMessage":"","value":"QuickBooks Desktop Landing"},{"name":"INTACCT_LANDING","deprecated":false,"deprecationMessage":"","value":"Sage Intacct Landing"},{"name":"CONNECT_QBD","deprecated":false,"deprecationMessage":"","value":"Connect QuickBooks Desktop"},{"name":"CONNECT_INTACCT","deprecated":false,"deprecationMessage":"","value":"Connect Sage Intacct"},{"name":"EXPORT_SETTING_QBD","deprecated":false,"deprecationMessage":"","value":"Export Settings QBD"},{"name":"EXPORT_SETTING_INTACCT","deprecated":false,"deprecationMessage":"","value":"Export Settings Intacct"},{"name":"IMPORT_SETTINGS_INTACCT","deprecated":false,"deprecationMessage":"","value":"Import Settings Intacct"},{"name":"FIELD_MAPPING_QBD","deprecated":false,"deprecationMessage":"","value":"Field Mappings QBD"},{"name":"ADVANCED_SETTINGS_QBD","deprecated":false,"deprecationMessage":"","value":"Advanced Settings QBD"},{"name":"EXPORT_SETTING_SAGE300","deprecated":false,"deprecationMessage":"","value":"Export Settings Sage300"},{"name":"IMPORT_SETTINGS_SAGE300","deprecated":false,"deprecationMessage":"","value":"Import Settings Sage300"},{"name":"ADVANCED_SETTINGS_SAGE300","deprecated":false,"deprecationMessage":"","value":"Advanced Settings Sage300"},{"name":"EXPORT_SETTING_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Export Settings BusinessCentral"},{"name":"IMPORT_SETTINGS_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Import Settings BusinessCentral"},{"name":"ADVANCED_SETTINGS_BUSINESS_CENTRAL","deprecated":false,"deprecationMessage":"","value":"Advanced Settings BusinessCentral"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"PaginatorPage","childs":[{"name":"MAPPING","deprecated":false,"deprecationMessage":"","value":"mapping"},{"name":"DASHBOARD","deprecated":false,"deprecationMessage":"","value":"dashboard"},{"name":"EXPORT_LOG","deprecated":false,"deprecationMessage":"","value":"export-log"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"PaymentSyncDirection","childs":[{"name":"FYLE_TO_INTACCT","deprecated":false,"deprecationMessage":"","value":"fyle_to_intacct"},{"name":"INTACCT_TO_FYLE","deprecated":false,"deprecationMessage":"","value":"intacct_to_fyle"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ProgressPhase","childs":[{"name":"ONBOARDING","deprecated":false,"deprecationMessage":"","value":"Onboarding"},{"name":"POST_ONBOARDING","deprecated":false,"deprecationMessage":"","value":"Post Onboarding"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDAccountingExportsState","childs":[{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"},{"name":"ENQUEUED","deprecated":false,"deprecationMessage":"","value":"ENQUEUED"},{"name":"IN_PROGRESS","deprecated":false,"deprecationMessage":"","value":"IN_PROGRESS"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDAccountingExportsType","childs":[{"name":"EXPORT_BILLS","deprecated":false,"deprecationMessage":"","value":"EXPORT_BILLS"},{"name":"REIMBURSABLE","deprecated":false,"deprecationMessage":"","value":"REIMBURSABLE"},{"name":"CREDIT_CARD","deprecated":false,"deprecationMessage":"","value":"CREDIT_CARD"},{"name":"EXPORT_CREDIT_CARD_PURCHASES","deprecated":false,"deprecationMessage":"","value":"EXPORT_CREDIT_CARD_PURCHASES"},{"name":"EXPORT_JOURNALS","deprecated":false,"deprecationMessage":"","value":"EXPORT_JOURNALS"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDCorporateCreditCardExpensesObject","childs":[{"name":"CREDIT_CARD_PURCHASE","deprecated":false,"deprecationMessage":"","value":"CREDIT_CARD_PURCHASE"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL_ENTRY"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDEntity","childs":[{"name":"EMPLOYEE","deprecated":false,"deprecationMessage":"","value":"EMPLOYEE"},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDExpenseGroupedBy","childs":[{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"EXPENSE"},{"name":"REPORT","deprecated":false,"deprecationMessage":"","value":"REPORT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDExportDateType","childs":[{"name":"LAST_SPENT_AT","deprecated":false,"deprecationMessage":"","value":"last_spent_at"},{"name":"SPENT_AT","deprecated":false,"deprecationMessage":"","value":"spent_at"},{"name":"POSTED_AT","deprecated":false,"deprecationMessage":"","value":"posted_at"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDFyleField","childs":[{"name":"PROJECT","deprecated":false,"deprecationMessage":"","value":"PROJECT"},{"name":"COST_CENTER","deprecated":false,"deprecationMessage":"","value":"COST_CENTER"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDOnboardingState","childs":[{"name":"CONNECTION","deprecated":false,"deprecationMessage":"","value":"CONNECTION"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"FIELD_MAPPINGS","deprecated":false,"deprecationMessage":"","value":"FIELD_MAPPINGS"},{"name":"ADVANCED_SETTINGS","deprecated":false,"deprecationMessage":"","value":"ADVANCED_SETTINGS"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDReimbursableExpensesObject","childs":[{"name":"BILL","deprecated":false,"deprecationMessage":"","value":"BILL"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL_ENTRY"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBDScheduleFrequency","childs":[{"name":"DAILY","deprecated":false,"deprecationMessage":"","value":"DAILY"},{"name":"WEEKLY","deprecated":false,"deprecationMessage":"","value":"WEEKLY"},{"name":"MONTHLY","deprecated":false,"deprecationMessage":"","value":"MONTHLY"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOCorporateCreditCardExpensesObject","childs":[{"name":"CREDIT_CARD_PURCHASE","deprecated":false,"deprecationMessage":"","value":"CREDIT CARD PURCHASE"},{"name":"BILL","deprecated":false,"deprecationMessage":"","value":"BILL"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL ENTRY"},{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"EXPENSE"},{"name":"DEBIT_CARD_EXPENSE","deprecated":false,"deprecationMessage":"","value":"DEBIT CARD EXPENSE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOField","childs":[{"name":"CLASS","deprecated":false,"deprecationMessage":"","value":"CLASS"},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","value":"DEPARTMENT"},{"name":"CUSTOMER","deprecated":false,"deprecationMessage":"","value":"CUSTOMER"},{"name":"TAX_CODE","deprecated":false,"deprecationMessage":"","value":"TAX_CODE"},{"name":"BANK_ACCOUNT","deprecated":false,"deprecationMessage":"","value":"BANK_ACCOUNT"},{"name":"CREDIT_CARD_ACCOUNT","deprecated":false,"deprecationMessage":"","value":"CREDIT_CARD_ACCOUNT"},{"name":"ACCOUNTS_PAYABLE","deprecated":false,"deprecationMessage":"","value":"ACCOUNTS_PAYABLE"},{"name":"VENDOR","deprecated":false,"deprecationMessage":"","value":"VENDOR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOOnboardingState","childs":[{"name":"CONNECTION","deprecated":false,"deprecationMessage":"","value":"CONNECTION"},{"name":"MAP_EMPLOYEES","deprecated":false,"deprecationMessage":"","value":"MAP_EMPLOYEES"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"IMPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"IMPORT_SETTINGS"},{"name":"ADVANCED_CONFIGURATION","deprecated":false,"deprecationMessage":"","value":"ADVANCED_CONFIGURATION"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"},{"name":"CLONE_SETTINGS","deprecated":false,"deprecationMessage":"","value":"CLONE_SETTINGS"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOPaymentSyncDirection","childs":[{"name":"FYLE_TO_QBO","deprecated":false,"deprecationMessage":"","value":"fyle_to_qbo"},{"name":"QBO_TO_FYLE","deprecated":false,"deprecationMessage":"","value":"qbo_to_fyle"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOReimbursableExpensesObject","childs":[{"name":"BILL","deprecated":false,"deprecationMessage":"","value":"BILL"},{"name":"CHECK","deprecated":false,"deprecationMessage":"","value":"CHECK"},{"name":"JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"JOURNAL ENTRY"},{"name":"EXPENSE","deprecated":false,"deprecationMessage":"","value":"EXPENSE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"QBOTaskLogType","childs":[{"name":"CREATING_BILL","deprecated":false,"deprecationMessage":"","value":"CREATING_BILL"},{"name":"CREATING_EXPENSE","deprecated":false,"deprecationMessage":"","value":"CREATING_EXPENSE"},{"name":"CREATING_CHECK","deprecated":false,"deprecationMessage":"","value":"CREATING_CHECK"},{"name":"CREATING_JOURNAL_ENTRY","deprecated":false,"deprecationMessage":"","value":"CREATING_JOURNAL_ENTRY"},{"name":"CREATING_CREDIT_CARD_PURCHASE","deprecated":false,"deprecationMessage":"","value":"CREATING_CREDIT_CARD_PURCHASE"},{"name":"CREATING_CREDIT_CARD_CREDIT","deprecated":false,"deprecationMessage":"","value":"CREATING_CREDIT_CARD_CREDIT"},{"name":"CREATING_DEBIT_CARD_EXPENSE","deprecated":false,"deprecationMessage":"","value":"CREATING_DEBIT_CARD_EXPENSE"},{"name":"CREATING_BILL_PAYMENT","deprecated":false,"deprecationMessage":"","value":"CREATING_BILL_PAYMENT"},{"name":"FETCHING_EXPENSE","deprecated":false,"deprecationMessage":"","value":"FETCHING_EXPENSE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"RefinerSurveyType","childs":[{"name":"ONBOARDING_DONE","deprecated":false,"deprecationMessage":"","value":"Onboarding Done"},{"name":"EXPORT_DONE","deprecated":false,"deprecationMessage":"","value":"Export Done"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Sage300ExpenseDate","childs":[{"name":"LAST_SPENT_AT","deprecated":false,"deprecationMessage":"","value":"LAST_SPENT_AT"},{"name":"CURRENT_DATE","deprecated":false,"deprecationMessage":"","value":"CURRENT_DATE"},{"name":"SPENT_AT","deprecated":false,"deprecationMessage":"","value":"SPENT_AT"},{"name":"POSTED_AT","deprecated":false,"deprecationMessage":"","value":"POSTED_AT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Sage300ExportType","childs":[{"name":"PURCHASE_INVOICE","deprecated":false,"deprecationMessage":"","value":"PURCHASE_INVOICE"},{"name":"DIRECT_COST","deprecated":false,"deprecationMessage":"","value":"DIRECT_COST"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Sage300Field","childs":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"},{"name":"CUSTOMER","deprecated":false,"deprecationMessage":"","value":"CUSTOMER"},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","value":"DEPARTMENT"},{"name":"CLASS","deprecated":false,"deprecationMessage":"","value":"CLASS"},{"name":"TAX_DETAIL","deprecated":false,"deprecationMessage":"","value":"TAX_DETAIL"},{"name":"JOB","deprecated":false,"deprecationMessage":"","value":"JOB"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Sage300OnboardingState","childs":[{"name":"CONNECTION","deprecated":false,"deprecationMessage":"","value":"CONNECTION"},{"name":"EXPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"EXPORT_SETTINGS"},{"name":"IMPORT_SETTINGS","deprecated":false,"deprecationMessage":"","value":"IMPORT_SETTINGS"},{"name":"ADVANCED_SETTINGS","deprecated":false,"deprecationMessage":"","value":"ADVANCED_SETTINGS"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"Sage300UpdateEvent","childs":[{"name":"CONNECT_SAGE300","deprecated":false,"deprecationMessage":"","value":"Connect Sage300"},{"name":"EXPORT_SETTING_SAGE300","deprecated":false,"deprecationMessage":"","value":"Export Settings Sage300"},{"name":"IMPORT_SETTINGS_SAGE300","deprecated":false,"deprecationMessage":"","value":"Import Settings Sage300"},{"name":"ADVANCED_SETTINGS_SAGE300","deprecated":false,"deprecationMessage":"","value":"Advanced Settings Sage300"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"SageIntacctField","childs":[{"name":"ACCOUNT","deprecated":false,"deprecationMessage":"","value":"ACCOUNT"},{"name":"CUSTOMER","deprecated":false,"deprecationMessage":"","value":"CUSTOMER"},{"name":"DEPARTMENT","deprecated":false,"deprecationMessage":"","value":"DEPARTMENT"},{"name":"CLASS","deprecated":false,"deprecationMessage":"","value":"CLASS"},{"name":"TAX_CODE","deprecated":false,"deprecationMessage":"","value":"TAX_CODE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"TaskLogState","childs":[{"name":"ENQUEUED","deprecated":false,"deprecationMessage":"","value":"ENQUEUED"},{"name":"IN_PROGRESS","deprecated":false,"deprecationMessage":"","value":"IN_PROGRESS"},{"name":"FAILED","deprecated":false,"deprecationMessage":"","value":"FAILED"},{"name":"FATAL","deprecated":false,"deprecationMessage":"","value":"FATAL"},{"name":"COMPLETE","deprecated":false,"deprecationMessage":"","value":"COMPLETE"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"TaskLogType","childs":[{"name":"CREATING_AP_PAYMENT","deprecated":false,"deprecationMessage":"","value":"CREATING_AP_PAYMENT"},{"name":"CREATING_EXPENSE_REPORTS","deprecated":false,"deprecationMessage":"","value":"CREATING_EXPENSE_REPORTS"},{"name":"CREATING_CHARGE_CARD_TRANSACTIONS","deprecated":false,"deprecationMessage":"","value":"CREATING_CHARGE_CARD_TRANSACTIONS"},{"name":"CREATING_JOURNAL_ENTRIES","deprecated":false,"deprecationMessage":"","value":"CREATING_JOURNAL_ENTRIES"},{"name":"FETCHING_EXPENSES","deprecated":false,"deprecationMessage":"","value":"FETCHING_EXPENSES"},{"name":"CREATING_BILLS","deprecated":false,"deprecationMessage":"","value":"CREATING_BILLS"},{"name":"CREATING_REIMBURSEMENT","deprecated":false,"deprecationMessage":"","value":"CREATING_REIMBURSEMENT"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"ToastSeverity","childs":[{"name":"SUCCESS","deprecated":false,"deprecationMessage":"","value":"success"},{"name":"ERROR","deprecated":false,"deprecationMessage":"","value":"error"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"},{"name":"UpdateEvent","childs":[{"name":"CONNECT_QBD","deprecated":false,"deprecationMessage":"","value":"Connect QuickBooks Desktop"},{"name":"EXPORT_SETTING_QBD","deprecated":false,"deprecationMessage":"","value":"Export Settings QBD"},{"name":"FIELD_MAPPING_QBD","deprecated":false,"deprecationMessage":"","value":"Field Mappings QBD"},{"name":"ADVANCED_SETTINGS_QBD","deprecated":false,"deprecationMessage":"","value":"Advanced Settings QBD"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/enum/enum.model.ts"}],"src/app/core/models/si/si-configuration/advanced-settings.model.ts":[{"name":"CustomOperatorOption","childs":[{"name":"Is","deprecated":false,"deprecationMessage":"","value":"iexact"},{"name":"IsEmpty","deprecated":false,"deprecationMessage":"","value":"is_empty"},{"name":"IsNotEmpty","deprecated":false,"deprecationMessage":"","value":"is_not_empty"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts"},{"name":"JoinOption","childs":[{"name":"AND","deprecated":false,"deprecationMessage":"","value":"AND"},{"name":"OR","deprecated":false,"deprecationMessage":"","value":"OR"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts"},{"name":"Operator","childs":[{"name":"IsNull","deprecated":false,"deprecationMessage":"","value":"isnull"},{"name":"IExact","deprecated":false,"deprecationMessage":"","value":"iexact"},{"name":"IContains","deprecated":false,"deprecationMessage":"","value":"icontains"},{"name":"LessThan","deprecated":false,"deprecationMessage":"","value":"lt"},{"name":"LessThanOrEqual","deprecated":false,"deprecationMessage":"","value":"lte"}],"ctype":"miscellaneous","subtype":"enum","deprecated":false,"deprecationMessage":"","description":"","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts"}]},"groupedTypeAliases":{"src/app/core/models/db/accounting-export.model.ts":[{"name":"AccountingExportGetParam","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/accounting-export.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbd/db/iif-logs.model.ts":[{"name":"AccountingExportsResult","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/iif-logs.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QbdAccountingExportDownload","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/iif-logs.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QbdExportTriggerGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/iif-logs.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QbdExportTriggerResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/iif-logs.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/error.model.ts":[{"name":"AccountingGroupedErrors","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AccountingGroupedErrorStat","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ErrorStat","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/integrations/integrations.model.ts":[{"name":"AccountingIntegrationEvent","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/integrations/integrations.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AppUrlMap","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/integrations/integrations.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"InAppIntegrationUrlMap","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/integrations/integrations.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntegrationCallbackUrl","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/integrations/integrations.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntegrationsView","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/integrations/integrations.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/si-configuration/advanced-settings.model.ts":[{"name":"AdvancedSettingFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AdvancedSettingsGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"AdvancedSettingsPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ConditionField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmailOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFilterResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SkipExport","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/common/advanced-settings.model.ts":[{"name":"AdvancedSettingValidatorRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ConditionField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmailOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFilterPayload","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFilterPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFilterResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"skipExportValidator","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SkipExportValidatorRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/bamboo-hr/bamboo-hr.model.ts":[{"name":"BambooHr","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BambooHRConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BambooHRConfigurationPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BambooHrConnection","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmailOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/branding/branding-configuration.model.ts":[{"name":"BrandingConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/branding/branding-configuration.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model.ts":[{"name":"BusinessCentralAdvancedSettings","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/business-central/business-central-configuration/business-central-connector.model.ts":[{"name":"BusinessCentralConnector","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-connector.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/business-central/db/business-central-credentials.model.ts":[{"name":"BusinessCentralCredential","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/db/business-central-credentials.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts":[{"name":"BusinessCentralExportSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"BusinessCentralExportSettingFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model.ts":[{"name":"BusinessCentralImportSettings","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/business-central/business-central-configuration/business-central-onboarding.model.ts":[{"name":"BusinessCentralOnboardingStepperMap","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/business-central-configuration/business-central-onboarding.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/category-mapping.model.ts":[{"name":"CategoryMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/category-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/category-mapping.model.ts":[{"name":"CategoryMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/category-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"CategoryMappingResult","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/category-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/category-mapping-response.model.ts":[{"name":"CategoryMappingsResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/category-mapping-response.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/common/clone-setting.model.ts":[{"name":"CloneSettingExist","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/clone-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/configuration.model.ts":[{"name":"Configuration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/configuration.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/si-configuration/import-settings.model.ts":[{"name":"Configuration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DependentFieldSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportSettingGeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/misc/configuration-warning.model.ts":[{"name":"ConfigurationWarningOut","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/configuration-warning.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbd/misc/date-filter.model.ts":[{"name":"DateFilter","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/misc/date-filter.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SelectedDateFilter","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/misc/date-filter.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/destination-attribute.model.ts":[{"name":"DefaultDestinationAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DestinationAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"DestinationAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GroupedDestinationAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/branding/demo-video.model.ts":[{"name":"DemoVideo","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/branding/demo-video.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/destination-attribute-detail.model.ts":[{"name":"DestinationAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/destination-attribute-detail.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/employee-mapping.model.ts":[{"name":"DropdownOptionSearch","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMappingResult","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMappingsResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/common/select-form-option.model.ts":[{"name":"EmailOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/select-form-option.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SelectFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/select-form-option.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/gusto/gusto.model.ts":[{"name":"EmailOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/gusto/gusto.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Gusto","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/gusto/gusto.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GustoConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/gusto/gusto.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GustoConfigurationPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/gusto/gusto.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts":[{"name":"EmailOptions","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDAdvancedSettingsGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDAdvancedSettingsPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/employee-mapping.model.ts":[{"name":"EmployeeMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"EmployeeMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/employee-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/business-central/db/business-central-destination-attribute.model.ts":[{"name":"EmployeeMappingDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/db/business-central-destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaxMappingDetails","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/business-central/db/business-central-destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/sage300/db/sage300-destination-attribuite.model.ts":[{"name":"EmployeeMappingDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/db/sage300-destination-attribuite.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaxMappingDetails","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/db/sage300-destination-attribuite.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/error.model.ts":[{"name":"Error","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ErrorStat","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GroupedErrors","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GroupedErrorStat","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/error.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/expense.model.ts":[{"name":"Expense","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/expense-attribute.model.ts":[{"name":"ExpenseAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExtendedExpenseAttributeResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MinimalExpenseAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/expense-attribute.model.ts":[{"name":"ExpenseAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/expense-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/expense-attribute-detail.model.ts":[{"name":"ExpenseAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-attribute-detail.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/common/import-settings.model.ts":[{"name":"ExpenseField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFieldFormArray","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportDefaultField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportSettingMappingRow","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ImportSettingsCustomFieldRow","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/expense-field.model.ts":[{"name":"ExpenseField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-field.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseFieldFormArray","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-field.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/expense-group.model.ts":[{"name":"ExpenseGroup","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroupDescription","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroupParam","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/expense-group.model.ts":[{"name":"ExpenseGroup","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroupDescription","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExpenseGroupResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportableExpenseGroup","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"SkipExportLog","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/expense-group.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/expense-group-setting.model.ts":[{"name":"ExpenseGroupSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/expense-group-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/si-configuration/export-settings.model.ts":[{"name":"ExpenseGroupSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingGeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingOptionSearch","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/common/export-settings.model.ts":[{"name":"ExportModuleRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingValidatorRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/common/export-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts":[{"name":"ExportModuleRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ExportSettingValidatorRule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300ExportSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300ExportSettingFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/destination-attribute.model.ts":[{"name":"ExportSettingDestinationAttributeOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GroupedDestinationAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntacctDestinationAttributeDetail","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"PaginatedintacctDestinationAttribute","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/destination-attribute.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/branding/feature-configuration.model.ts":[{"name":"FeatureConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/branding/feature-configuration.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/fyle-credentials.model.ts":[{"name":"FyleCredential","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/fyle-credentials.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/mapping.model.ts":[{"name":"FyleField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GenericMappingApiParams","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntegrationField","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingPrimaryKey","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingStats","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/mappings.model.ts":[{"name":"GeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mappings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/org/org.model.ts":[{"name":"GeneratedToken","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/org/org.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Org","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/org/org.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/generic-mapping.model.ts":[{"name":"GenericMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/generic-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MinimalMappingSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/generic-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/generic-mapping-v2.model.ts":[{"name":"GenericMappingV2","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/generic-mapping-v2.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"GenericMappingV2Response","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/generic-mapping-v2.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/export-log.model.ts":[{"name":"IntacctExports","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/export-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"IntacctExportTriggerResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/export-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/branding/kb-article.model.ts":[{"name":"KbArticle","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/branding/kb-article.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/last-export.model.ts":[{"name":"LastExport","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/last-export.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/location-entity-mapping.model.ts":[{"name":"LocationEntityMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/location-entity-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/si-configuration/connector.model.ts":[{"name":"LocationEntityPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/si-configuration/connector.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/misc/tracking.model.ts":[{"name":"MappingAlphabeticalFilterAdditionalProperty","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/tracking.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ResolveMappingErrorProperty","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/tracking.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"UpdateEventAdditionalProperty","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/tracking.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"UpdateIntacctEventAdditionalProperty","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/tracking.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/mapping-destination.model.ts":[{"name":"MappingDestination","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-destination.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/mapping.model.ts":[{"name":"MappingList","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingStats","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"ResolveMappingError","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbd/db/mapping.model.ts":[{"name":"MappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingStats","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/db/mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/mapping-setting.model.ts":[{"name":"MappingSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/mapping-setting.model.ts":[{"name":"MappingSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSettingList","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MappingSettingResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"MinimalMappingSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/mapping-source.model.ts":[{"name":"MappingSource","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/mapping-source.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/user.model.ts":[{"name":"MinimalUser","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/user.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/misc/onboarding-stepper.model.ts":[{"name":"OnboardingStepper","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/onboarding-stepper.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/misc/paginator.model.ts":[{"name":"Paginator","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/paginator.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/misc/preview-page.model.ts":[{"name":"PreviewPage","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/preview-page.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbd/qbd-configuration/export-setting.model.ts":[{"name":"QBDExportSettingFormOption","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDExportSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDExportSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbd/qbd-configuration/field-mapping.model.ts":[{"name":"QBDFieldMappingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/field-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBDFieldMappingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbd/qbd-configuration/field-mapping.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts":[{"name":"QBOAdvancedSettingAddEmailModel","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingGeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingWorkspaceGeneralSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingWorkspaceSchedule","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOAdvancedSettingWorkspaceSchedulePost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbo/qbo-configuration/qbo-clone-setting.model.ts":[{"name":"QBOCloneSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-clone-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOCloneSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-clone-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbo/qbo-configuration/qbo-connector.model.ts":[{"name":"QBOConnector","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-connector.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbo/db/qbo-credential.model.ts":[{"name":"QBOCredential","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/db/qbo-credential.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model.ts":[{"name":"QBOEmployeeSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOEmployeeSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOEmployeeSettingWorkspaceGeneralSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts":[{"name":"QBOExportSettingGeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOExportSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOExportSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOExportSettingWorkspaceGeneralSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts":[{"name":"QBOImportSettingGeneralMapping","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOImportSettingGet","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOImportSettingPost","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"QBOImportSettingWorkspaceGeneralSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model.ts":[{"name":"QBOOnboardingStepperMap","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbo/db/workspace-general-setting.model.ts":[{"name":"QBOWorkspaceGeneralSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/db/workspace-general-setting.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/qbo/db/qbo-task-log.model.ts":[{"name":"QuickbooksError","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/qbo/db/qbo-task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model.ts":[{"name":"Sage300AdvancedSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/sage300/db/sage300-credentials.model.ts":[{"name":"Sage300Credential","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/db/sage300-credentials.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts":[{"name":"Sage300DefaultFields","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300DependentImportFields","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300ImportSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Sage300ImportSettingsDependentFieldSetting","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/sage300/sage300-configuration/sage300-onboarding-stepper/sage300-onboarding-stepper.model.ts":[{"name":"Sage300OnboardingStepperMap","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/sage300/sage300-configuration/sage300-onboarding-stepper/sage300-onboarding-stepper.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/sage-credentials.model.ts":[{"name":"SageIntacctCredential","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/sage-credentials.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/db/task-log.model.ts":[{"name":"SageIntacctError","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"Task","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaskGetParams","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaskResponse","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/si/misc/skip-export.model.ts":[{"name":"SkipExport","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/si/misc/skip-export.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/stories/AppLandingPageBody.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<AppLandingPageBodyComponent>","file":"src/stories/AppLandingPageBody.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/AppLandingPageHeader.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<AppLandingPageHeaderComponent>","file":"src/stories/AppLandingPageHeader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/CloneSettingField.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<CloneSettingFieldComponent>","file":"src/stories/CloneSettingField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/CloneSettingHeader.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<CloneSettingHeaderComponent>","file":"src/stories/CloneSettingHeader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationConfirmationDialog.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationConfirmationDialogComponent>","file":"src/stories/ConfigurationConfirmationDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationConnector.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationConnectorComponent>","file":"src/stories/ConfigurationConnector.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationCustomFieldCreationDialog.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationCustomFieldCreationDialogComponent>","file":"src/stories/ConfigurationCustomFieldCreationDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationImportField.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationImportFieldComponent>","file":"src/stories/ConfigurationImportField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationInfoLabel.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationInfoLabelComponent>","file":"src/stories/ConfigurationInfoLabel.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationLabel.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationLabelComponent>","file":"src/stories/ConfigurationLabel.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationMultiSelect.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationMultiSelectComponent>","file":"src/stories/ConfigurationMultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationRadioField.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationRadioFieldComponent>","file":"src/stories/ConfigurationRadioField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationScheduleExport.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationScheduleExportComponent>","file":"src/stories/ConfigurationScheduleExport.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationSelectField.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationSelectFieldComponent>","file":"src/stories/ConfigurationSelectField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationSkipExport.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationSkipExportComponent>","file":"src/stories/ConfigurationSkipExport.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationStepFooter.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationStepFooterComponent>","file":"src/stories/ConfigurationStepFooter.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationStepHeader.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationStepHeaderComponent>","file":"src/stories/ConfigurationStepHeader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationStepSubHeader.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationStepSubHeaderComponent>","file":"src/stories/ConfigurationStepSubHeader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationTextField.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationTextFieldComponent>","file":"src/stories/ConfigurationTextField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ConfigurationToggleField.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ConfigurationToggleFieldComponent>","file":"src/stories/ConfigurationToggleField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/DashboardAccountingErrorDialog.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DashboardAccountingErrorDialogComponent>","file":"src/stories/DashboardAccountingErrorDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/DashboardErrorSection.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DashboardErrorSectionComponent>","file":"src/stories/DashboardErrorSection.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/DashboardExportLogDialog.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DashboardExportLogDialogComponent>","file":"src/stories/DashboardExportLogDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/DashboardExportSection.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DashboardExportSectionComponent>","file":"src/stories/DashboardExportSection.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/DashboardExportSummarySection.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DashboardExportSummarySectionComponent>","file":"src/stories/DashboardExportSummarySection.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/Dropdown.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<DropdownComponent>","file":"src/stories/Dropdown.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/EmailMultiSelectField.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<EmailMultiSelectFieldComponent>","file":"src/stories/EmailMultiSelectField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/Error.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ErrorComponent>","file":"src/stories/Error.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ExportLogChildTableDialog.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ExportLogChildTableDialogComponent>","file":"src/stories/ExportLogChildTableDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ExportLogFilter.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ExportLogFilterComponent>","file":"src/stories/ExportLogFilter.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ExportLogTable.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ExportLogTableComponent>","file":"src/stories/ExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/GenericMappingV2.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<GenericMappingV2Component>","file":"src/stories/GenericMappingV2.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/MainMenu.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MainMenuComponent>","file":"src/stories/MainMenu.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/MandatoryErrorMessage.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MandatoryErrorMessageComponent>","file":"src/stories/MandatoryErrorMessage.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/MandatoryField.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MandatoryFieldComponent>","file":"src/stories/MandatoryField.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/MappingCardHeader.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MappingCardHeaderComponent>","file":"src/stories/MappingCardHeader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/MappingFilter.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MappingFilterComponent>","file":"src/stories/MappingFilter.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/MultiSelect.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<MultiSelectComponent>","file":"src/stories/MultiSelect.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/OnboardingDone.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<OnboardingDoneComponent>","file":"src/stories/OnboardingDone.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/Paginator.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<PaginatorComponent>","file":"src/stories/Paginator.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/PreviewDialog.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<PreviewDialogComponent>","file":"src/stories/PreviewDialog.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/Shimmers.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ShimmersComponent>","file":"src/stories/Shimmers.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/SkippedExportLogTable.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SkippedExportLogTableComponent>","file":"src/stories/SkippedExportLogTable.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/SubMenu.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<SubMenuComponent>","file":"src/stories/SubMenu.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/Toggle.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ToggleComponent>","file":"src/stories/Toggle.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ZeroState.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ZeroStateComponent>","file":"src/stories/ZeroState.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/ZeroStateWithIllustration.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<ZeroStateWithIllustrationComponent>","file":"src/stories/ZeroStateWithIllustration.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/stories/loader.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<LoaderComponent>","file":"src/stories/loader.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"src/app/core/models/db/task-log.model.ts":[{"name":"TaskLog","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TaskLogGetParams","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/task-log.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/misc/token.model.ts":[{"name":"Token","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/misc/token.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/travelperk/travelperk.model.ts":[{"name":"Travelperk","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/travelperk/travelperk.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"TravelperkConfiguration","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/travelperk/travelperk.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187},{"name":"WorkatoConnectionStatus","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/travelperk/travelperk.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}],"src/app/core/models/db/workspaces.model.ts":[{"name":"Workspace","ctype":"miscellaneous","subtype":"typealias","rawtype":"literal type","file":"src/app/core/models/db/workspaces.model.ts","deprecated":false,"deprecationMessage":"","description":"","kind":187}]}},"routes":{"name":"<root>","kind":"module","className":"AppModule","children":[{"name":"routes","filename":"src/app/app-routing.module.ts","module":"AppRoutingModule","children":[{"path":"","redirectTo":"integrations","pathMatch":"full"},{"path":"auth","loadChildren":"./auth/auth.module#AuthModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/auth/auth-routing.module.ts","module":"AuthRoutingModule","children":[{"path":"","component":"AuthComponent","children":[{"path":"callback","component":"LoginComponent"},{"path":"redirect","component":"RedirectComponent"}]}],"kind":"module"}],"module":"AuthModule"}]},{"path":"oauth","loadChildren":"./oauth/oauth.module#OauthModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/oauth/oauth-routing.module.ts","module":"OauthRoutingModule","children":[{"path":"","component":"OauthComponent","children":[{"path":"travelperk","component":"OauthTravelperkComponent"}]}],"kind":"module"}],"module":"OauthModule"}]},{"path":"integrations","loadChildren":"./integrations/integrations.module#IntegrationsModule","canActivate":["AuthGuard"],"children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/integrations-routing.module.ts","module":"IntegrationsRoutingModule","children":[{"path":"","component":"IntegrationsComponent","children":[{"path":"landing","component":"LandingComponent"},{"path":"bamboo_hr","loadChildren":"./bamboo-hr/bamboo-hr.module#BambooHrModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/bamboo-hr/bamboo-hr-routing.module.ts","module":"BambooHrRoutingModule","children":[{"path":"","component":"BambooHrComponent"}],"kind":"module"}],"module":"BambooHrModule"}]},{"path":"qbd","loadChildren":"./qbd/qbd.module#QbdModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbd/qbd-routing.module.ts","module":"QbdRoutingModule","children":[{"path":"","component":"QbdComponent","children":[{"path":"onboarding","loadChildren":"./onboarding/onboarding.module#OnboardingModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbd/onboarding/onboarding-routing.module.ts","module":"OnboardingRoutingModule","children":[{"path":"","component":"OnboardingComponent","children":[{"path":"landing","component":"LandingComponent"},{"path":"export_settings","component":"OnboardingExportSettingComponent"},{"path":"field_mappings","component":"OnboardingFieldSettingComponent"},{"path":"advanced_settings","component":"OnboardingAdvancedSettingComponent"},{"path":"done","component":"OnboardingDoneComponent"}]}],"kind":"module"}],"module":"OnboardingModule"}]},{"path":"main","loadChildren":"./main/main.module#MainModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbd/main/main-routing.module.ts","module":"MainRoutingModule","children":[{"path":"","component":"MainComponent","children":[{"path":"configuration","loadChildren":"./configuration/configuration.module#ConfigurationModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbd/main/configuration/configuration-routing.module.ts","module":"ConfigurationRoutingModule","children":[{"path":"","component":"ConfigurationComponent","children":[{"path":"export_settings","component":"ConfigurationExportSettingComponent"},{"path":"field_mapping","component":"ConfigurationFieldSettingComponent"},{"path":"advanced_settings","component":"ConfigurationAdvancedSettingComponent"}]}],"kind":"module"}],"module":"ConfigurationModule"}]},{"path":"dashboard","loadChildren":"./dashboard/dashboard.module#DashboardModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbd/main/dashboard/dashboard-routing.module.ts","module":"DashboardRoutingModule","children":[{"path":"","component":"DashboardComponent"}],"kind":"module"}],"module":"DashboardModule"}]},{"path":"mapping","loadChildren":"./mapping/mapping.module#MappingModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbd/main/mapping/mapping-routing.module.ts","module":"MappingRoutingModule","children":[{"path":"","component":"MappingComponent","children":[{"path":":source_field","component":"GenericMappingComponent"}]}],"kind":"module"}],"module":"MappingModule"}]}]}],"kind":"module"}],"module":"MainModule"}]}]}],"kind":"module"}],"module":"QbdModule"}]},{"path":"travelperk","loadChildren":"./travelperk/travelperk.module#TravelperkModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/travelperk/travelperk-routing.module.ts","module":"TravelperkRoutingModule","children":[{"path":"","component":"TravelperkComponent"}],"kind":"module"}],"module":"TravelperkModule"}]},{"path":"gusto","loadChildren":"./gusto/gusto.module#GustoModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/gusto/gusto-routing.module.ts","module":"GustoRoutingModule","children":[{"path":"","component":"GustoComponent"}],"kind":"module"}],"module":"GustoModule"}]},{"path":"intacct","loadChildren":"./si/si.module#SiModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/si/si-routing.module.ts","module":"SiRoutingModule","children":[{"path":"","component":"SiComponent","children":[{"path":"onboarding","loadChildren":"./onboarding/onboarding.module#OnboardingModule","children":[{"kind":"module","children":[],"module":"OnboardingModule"}]},{"path":"main","loadChildren":"./main/main.module#MainModule","children":[{"kind":"module","children":[],"module":"MainModule"}]}]}],"kind":"module"}],"module":"SiModule"}]},{"path":"sage300","loadChildren":"./sage300/sage300.module#Sage300Module","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/sage300/sage300-routing.module.ts","module":"Sage300RoutingModule","children":[{"path":"","component":"Sage300Component","children":[{"path":"onboarding","loadChildren":"./sage300-onboarding/sage300-onboarding.module#Sage300OnboardingModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-routing.module.ts","module":"Sage300OnboardingRoutingModule","children":[{"path":"","component":"Sage300OnboardingComponent","children":[{"path":"landing","component":"Sage300OnboardingLandingComponent"},{"path":"connector","component":"Sage300OnboardingConnectorComponent"},{"path":"export_settings","component":"Sage300OnboardingExportSettingsComponent"},{"path":"import_settings","component":"Sage300OnboardingImportSettingsComponent"},{"path":"advanced_settings","component":"Sage300OnboardingAdvancedSettingsComponent"},{"path":"done","component":"Sage300OnboardingDoneComponent"}]}],"kind":"module"}],"module":"Sage300OnboardingModule"}]},{"path":"main","loadChildren":"./sage300-main/sage300-main.module#Sage300MainModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/sage300/sage300-main/sage300-main-routing.module.ts","module":"Sage300MainRoutingModule","children":[{"path":"","component":"Sage300MainComponent","children":[{"path":"dashboard","loadChildren":"./sage300-dashboard/sage300-dashboard.module#Sage300DashboardModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/sage300/sage300-main/sage300-dashboard/sage300-dashboard-routing.module.ts","module":"Sage300DashboardRoutingModule","children":[{"path":"","component":"Sage300DashboardComponent"}],"kind":"module"}],"module":"Sage300DashboardModule"}]},{"path":"configuration","loadChildren":"./sage300-configuration/sage300-configuration.module#Sage300ConfigurationModule"},{"path":"mapping","loadChildren":"./sage300-mapping/sage300-mapping.module#Sage300MappingModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/sage300/sage300-main/sage300-mapping/sage300-mapping-routing.module.ts","module":"Sage300MappingRoutingModule","children":[{"path":"","component":"Sage300MappingComponent","children":[{"path":":source_field","component":"Sage300BaseMappingComponent"}]}],"kind":"module"}],"module":"Sage300MappingModule"}]},{"path":"export_log","loadChildren":"./sage300-export-log/sage300-export-log.module#Sage300ExportLogModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/sage300/sage300-main/sage300-export-log/sage300-export-log-routing.module.ts","module":"Sage300ExportLogRoutingModule","children":[{"path":"","component":"Sage300ExportLogComponent","children":[{"path":"complete_export_log","component":"Sage300CompleteExportLogComponent"},{"path":"skip_export_log","component":"Sage300SkippedExportLogComponent"}]}],"kind":"module"}],"module":"Sage300ExportLogModule"}]}]}],"kind":"module"}],"module":"Sage300MainModule"}]}]}],"kind":"module"}],"module":"Sage300Module"}]},{"path":"qbo","loadChildren":"./qbo/qbo.module#QboModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbo/qbo-routing.module.ts","module":"QboRoutingModule","children":[{"path":"","component":"QboComponent","children":[{"path":"onboarding","loadChildren":"./qbo-onboarding/qbo-onboarding.module#QboOnboardingModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-routing.module.ts","module":"QboOnboardingRoutingModule","children":[{"path":"","component":"QboOnboardingComponent","children":[{"path":"landing","component":"QboOnboardingLandingComponent"},{"path":"connector","component":"QboOnboardingConnectorComponent"},{"path":"employee_settings","component":"QboOnboardingEmployeeSettingsComponent","canActivate":["QboTokenGuard"]},{"path":"export_settings","component":"QboOnboardingExportSettingsComponent","canActivate":["QboTokenGuard"]},{"path":"import_settings","component":"QboOnboardingImportSettingsComponent","canActivate":["QboTokenGuard"]},{"path":"advanced_settings","component":"QboOnboardingAdvancedSettingsComponent","canActivate":["QboTokenGuard"]},{"path":"done","component":"QboOnboardingDoneComponent","canActivate":["QboTokenGuard"]},{"path":"clone_settings","component":"QboCloneSettingsComponent","canActivate":["QboTokenGuard"]}]}],"kind":"module"}],"module":"QboOnboardingModule"}]},{"path":"main","loadChildren":"./qbo-main/qbo-main.module#QboMainModule","canActivate":["QboTokenGuard"],"children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbo/qbo-main/qbo-main-routing.module.ts","module":"QboMainRoutingModule","children":[{"path":"","component":"QboMainComponent","children":[{"path":"dashboard","loadChildren":"./qbo-dashboard/qbo-dashboard.module#QboDashboardModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbo/qbo-main/qbo-dashboard/qbo-dashboard-routing.module.ts","module":"QboDashboardRoutingModule","children":[{"path":"","component":"QboDashboardComponent"}],"kind":"module"}],"module":"QboDashboardModule"}]},{"path":"export_log","loadChildren":"./qbo-export-log/qbo-export-log.module#QboExportLogModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbo/qbo-main/qbo-export-log/qbo-export-log-routing.module.ts","module":"QboExportLogRoutingModule","children":[{"path":"","component":"QboExportLogComponent","children":[{"path":"complete","component":"QboCompleteExportLogComponent"},{"path":"skipped","component":"QboSkippedExportLogComponent"}]}],"kind":"module"}],"module":"QboExportLogModule"}]},{"path":"mapping","loadChildren":"./qbo-mapping/qbo-mapping.module#QboMappingModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbo/qbo-main/qbo-mapping/qbo-mapping-routing.module.ts","module":"QboMappingRoutingModule","children":[{"path":"","component":"QboMappingComponent","children":[{"path":":source_field","component":"QboBaseMappingComponent"}]}],"kind":"module"}],"module":"QboMappingModule"}]},{"path":"configuration","loadChildren":"./qbo-configuration/qbo-configuration.module#QboConfigurationModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/qbo/qbo-main/qbo-configuration/qbo-configuration-routing.module.ts","module":"QboConfigurationRoutingModule","children":[{"path":"","component":"QboConfigurationComponent","children":[{"path":"employee_settings","component":"QboEmployeeSettingsComponent"},{"path":"export_settings","component":"QboExportSettingsComponent"},{"path":"import_settings","component":"QboImportSettingsComponent"},{"path":"advanced_settings","component":"QboAdvancedSettingsComponent"}]}],"kind":"module"}],"module":"QboConfigurationModule"}]}]}],"kind":"module"}],"module":"QboMainModule"}]}]}],"kind":"module"}],"module":"QboModule"}]},{"path":"business_central","loadChildren":"./business-central/business-central.module#BusinessCentralModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/business-central/business-central-routing.module.ts","module":"BusinessCentralRoutingModule","children":[{"path":"","component":"BusinessCentralComponent","children":[{"path":"onboarding","loadChildren":"./business-central-onboarding/business-central-onboarding.module#BusinessCentralOnboardingModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-routing.module.ts","module":"BusinessCentralOnboardingRoutingModule","children":[{"path":"","component":"BusinessCentralOnboardingComponent","children":[{"path":"landing","component":"BusinessCentralOnboardingLandingComponent"},{"path":"connector","component":"BusinessCentralOnboardingConnectorComponent"},{"path":"export_settings","component":"BusinessCentralOnboardingExportSettingsComponent"},{"path":"import_settings","component":"BusinessCentralOnboardingImportSettingsComponent"},{"path":"advanced_settings","component":"BusinessCentralOnboardingAdvancedSettingsComponent"},{"path":"done","component":"BusinessCentralOnboardingDoneComponent"}]}],"kind":"module"}],"module":"BusinessCentralOnboardingModule"}]},{"path":"main","loadChildren":"./business-central-main/business-central-main.module#BusinessCentralMainModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/business-central/business-central-main/business-central-main-routing.module.ts","module":"BusinessCentralMainRoutingModule","children":[{"path":"","component":"BusinessCentralMainComponent","children":[{"path":"dashboard","loadChildren":"./business-central-dashboard/business-central-dashboard.module#BusinessCentralDashboardModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/business-central/business-central-main/business-central-dashboard/business-central-dashboard-routing.module.ts","module":"BusinessCentralDashboardRoutingModule","children":[{"path":"","component":"BusinessCentralDashboardComponent"}],"kind":"module"}],"module":"BusinessCentralDashboardModule"}]},{"path":"export_log","loadChildren":"./business-central-export-log/business-central-export-log.module#BusinessCentralExportLogModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/business-central/business-central-main/business-central-export-log/business-central-export-log-routing.module.ts","module":"BusinessCentralExportLogRoutingModule","children":[{"path":"","component":"BusinessCentralExportLogComponent","children":[{"path":"complete_export_log","component":"BusinessCentralCompleteExportLogComponent"},{"path":"skip_export_log","component":"BusinessCentralSkippedExportLogComponent"}]}],"kind":"module"}],"module":"BusinessCentralExportLogModule"}]},{"path":"mapping","loadChildren":"./business-central-mapping/business-central-mapping.module#BusinessCentralMappingModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/business-central/business-central-main/business-central-mapping/business-central-mapping-routing.module.ts","module":"BusinessCentralMappingRoutingModule","children":[{"path":"","component":"BusinessCentralMappingComponent","children":[{"path":":source_field","component":"BusinessCentralBaseMappingComponent"}]}],"kind":"module"}],"module":"BusinessCentralMappingModule"}]},{"path":"configuration","loadChildren":"./business-central-configuration/business-central-configuration.module#BusinessCentralConfigurationModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/business-central/business-central-main/business-central-configuration/business-central-configuration-routing.module.ts","module":"BusinessCentralConfigurationRoutingModule","children":[{"path":"","component":"BusinessCentralConfigurationComponent","children":[{"path":"export_settings","component":"BusinessCentralExportSettingsComponent"},{"path":"import_settings","component":"BusinessCentralImportSettingsComponent"},{"path":"advanced_settings","component":"BusinessCentralAdvancedSettingsComponent"}]}],"kind":"module"}],"module":"BusinessCentralConfigurationModule"}]}]}],"kind":"module"}],"module":"BusinessCentralMainModule"}]}]}],"kind":"module"}],"module":"BusinessCentralModule"}]},{"path":"oauth_callback","loadChildren":"./oauth-callback/oauth-callback.module#OauthCallbackModule","children":[{"kind":"module","children":[{"name":"routes","filename":"src/app/integrations/oauth-callback/oauth-callback-routing.module.ts","module":"OauthCallbackRoutingModule","children":[{"path":"","component":"OauthCallbackComponent"}],"kind":"module"}],"module":"OauthCallbackModule"}]}]}],"kind":"module"}],"module":"IntegrationsModule"}]},{"path":"**","redirectTo":"integrations","pathMatch":"full"}],"kind":"module"},{"name":"routes","filename":"src/app/integrations/sage300/sage300-main/sage300-configuration/sage300-configuration-routing.module.ts","module":"Sage300ConfigurationRoutingModule","children":[{"path":"","component":"Sage300ConfigurationComponent","children":[{"path":"export_settings","component":"Sage300ExportSettingsComponent"},{"path":"import_settings","component":"Sage300ImportSettingsComponent"},{"path":"advanced_settings","component":"Sage300AdvancedSettingsComponent"}]}],"kind":"module"}]},"coverage":{"count":0,"status":"low","files":[{"filePath":".storybook/preview.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"preview","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/app.component.ts","type":"component","linktype":"component","name":"AppComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/app.error-handling.ts","type":"injectable","linktype":"injectable","name":"GlobalErrorHandler","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/auth/auth.component.ts","type":"component","linktype":"component","name":"AuthComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/auth/login/login.component.ts","type":"component","linktype":"component","name":"LoginComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/auth/redirect/redirect.component.ts","type":"component","linktype":"component","name":"RedirectComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/branding/branding-config.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"brandingConfig","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/branding/branding-config.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"brandingDemoVideoLinks","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/branding/branding-config.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"brandingFeatureConfig","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/branding/branding-config.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"brandingKbArticles","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/branding/branding-config.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"demoVideoLinks","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/branding/branding-config.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"featureConfigs","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/branding/branding-config.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"kbArticles","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/guard/auth.guard.ts","type":"guard","linktype":"guard","name":"AuthGuard","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/guard/business-central-token.guard.ts","type":"guard","linktype":"guard","name":"BusinessCentralTokenGuard","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/guard/qbo-token.guard.ts","type":"guard","linktype":"guard","name":"QboTokenGuard","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/interceptor/jwt.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"dummyErrorResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/interceptor/jwt.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"loginResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/interceptor/jwt.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"minimalUser","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/interceptor/jwt.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"tokenResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/interceptor/jwt.interceptor.ts","type":"interceptor","linktype":"interceptor","name":"JwtInterceptor","coveragePercent":9,"coverageCount":"1/11","status":"low"},{"filePath":"src/app/core/models/bamboo-hr/bamboo-hr.model.ts","type":"class","linktype":"classe","name":"BambooHrModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model.ts","type":"class","linktype":"classe","name":"BusinessCentralAdvancedSettingsModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralAdvancedSettingsGet","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-advanced-settings.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralAdvancedSettingsPost","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-connector.model.ts","type":"class","linktype":"classe","name":"BusinessCentralConnectorModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-connector.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralConnectorPost","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts","type":"class","linktype":"classe","name":"BusinessCentralExportSettingModel","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralExportSettingGet","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-export-setting.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralExportSettingPost","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model.ts","type":"class","linktype":"classe","name":"BusinessCentralImportSettingsModel","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralImportSettingsGet","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/business-central/business-central-configuration/business-central-import-settings.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralImportSettingsPost","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/business-central/db/business-central-accounting-export.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralAccountingExport","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/business-central/db/business-central-accounting-export.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralAccountingExportResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/business-central/db/business-central-credentials.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralCompanyDetails","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/business-central/db/business-central-destination-attribute.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralDestinationAttributes","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/business-central/db/business-central-workspace.model.ts","type":"interface","linktype":"interface","name":"BusinessCentralWorkspace","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/core/models/common/advanced-settings.model.ts","type":"class","linktype":"classe","name":"AdvancedSettingsModel","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/common/advanced-settings.model.ts","type":"class","linktype":"classe","name":"SkipExportModel","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/core/models/common/advanced-settings.model.ts","type":"interface","linktype":"interface","name":"ExpenseFilter","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/common/advanced-settings.model.ts","type":"interface","linktype":"interface","name":"HourOption","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/common/employee-settings.model.ts","type":"class","linktype":"classe","name":"EmployeeSettingModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/common/export-settings.model.ts","type":"class","linktype":"classe","name":"ExportSettingModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/common/helper.model.ts","type":"class","linktype":"classe","name":"HelperUtility","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/common/import-settings.model.ts","type":"class","linktype":"classe","name":"ImportSettingsModel","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/db/accounting-export-summary.model.ts","type":"class","linktype":"classe","name":"AccountingExportSummaryModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/db/accounting-export-summary.model.ts","type":"interface","linktype":"interface","name":"AccountingExportSummary","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/core/models/db/accounting-export.model.ts","type":"class","linktype":"classe","name":"AccountingExportModel","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/core/models/db/accounting-export.model.ts","type":"class","linktype":"classe","name":"SkippedAccountingExportModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/db/accounting-export.model.ts","type":"interface","linktype":"interface","name":"AccountingExport","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"src/app/core/models/db/accounting-export.model.ts","type":"interface","linktype":"interface","name":"AccountingExportCount","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/db/accounting-export.model.ts","type":"interface","linktype":"interface","name":"AccountingExportList","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/core/models/db/accounting-export.model.ts","type":"interface","linktype":"interface","name":"ExportableAccountingExport","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/db/category-mapping.model.ts","type":"interface","linktype":"interface","name":"CategoryMapping","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/core/models/db/configuration.model.ts","type":"interface","linktype":"interface","name":"Configuration","coveragePercent":0,"coverageCount":"0/19","status":"low"},{"filePath":"src/app/core/models/db/dashboard.model.ts","type":"class","linktype":"classe","name":"DashboardModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/db/dashboard.model.ts","type":"interface","linktype":"interface","name":"DestinationFieldMap","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/db/error.model.ts","type":"class","linktype":"classe","name":"ErrorModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/db/error.model.ts","type":"interface","linktype":"interface","name":"DestinationAttributeDetail","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/core/models/db/error.model.ts","type":"interface","linktype":"interface","name":"Error","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/core/models/db/error.model.ts","type":"interface","linktype":"interface","name":"ErrorResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/db/expense-attribute.model.ts","type":"interface","linktype":"interface","name":"ExpenseAttribute","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"src/app/core/models/db/expense-group-setting.model.ts","type":"interface","linktype":"interface","name":"ExpenseGroupSetting","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/core/models/db/expense-group-setting.model.ts","type":"interface","linktype":"interface","name":"ExpenseGroupSettingGet","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/db/expense-group.model.ts","type":"interface","linktype":"interface","name":"ExpenseGroupResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/db/extended-generic-mapping.model.ts","type":"interface","linktype":"interface","name":"ExtendedGenericMapping","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/models/db/extended-generic-mapping.model.ts","type":"interface","linktype":"interface","name":"GenericMappingResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/db/generic-mapping.model.ts","type":"class","linktype":"classe","name":"MappingClass","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/models/db/generic-mapping.model.ts","type":"interface","linktype":"interface","name":"GenericMapping","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/core/models/db/mapping-setting.model.ts","type":"interface","linktype":"interface","name":"MappingSettingResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/db/paginated-response.model.ts","type":"interface","linktype":"interface","name":"PaginatedResponse","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/models/db/task-log.model.ts","type":"interface","linktype":"interface","name":"TaskResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/db/user.model.ts","type":"interface","linktype":"interface","name":"User","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/models/gusto/gusto.model.ts","type":"class","linktype":"classe","name":"GustoModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/qbd/db/mapping.model.ts","type":"class","linktype":"classe","name":"MappingModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/qbd/db/mapping.model.ts","type":"interface","linktype":"interface","name":"Mapping","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/qbd/db/workspaces.model.ts","type":"interface","linktype":"interface","name":"QBDWorkspace","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","type":"class","linktype":"classe","name":"AdvancedSettingModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/qbd/qbd-configuration/advanced-setting.model.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"getFrequencyTime","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/qbd/qbd-configuration/export-setting.model.ts","type":"class","linktype":"classe","name":"ExportSettingModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/qbd/qbd-configuration/field-mapping.model.ts","type":"class","linktype":"classe","name":"FieldMappingModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/qbo/db/qbo-task-log.model.ts","type":"interface","linktype":"interface","name":"QBOTaskLog","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/qbo/db/qbo-task-log.model.ts","type":"interface","linktype":"interface","name":"QBOTaskResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/qbo/db/qbo-workspace.model.ts","type":"interface","linktype":"interface","name":"QBOWorkspace","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/core/models/qbo/qbo-configuration/qbo-advanced-setting.model.ts","type":"class","linktype":"classe","name":"QBOAdvancedSettingModel","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/core/models/qbo/qbo-configuration/qbo-clone-setting.model.ts","type":"class","linktype":"classe","name":"QBOCloneSettingModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/qbo/qbo-configuration/qbo-connector.model.ts","type":"class","linktype":"classe","name":"QBOConnectorModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/qbo/qbo-configuration/qbo-connector.model.ts","type":"interface","linktype":"interface","name":"QBOConnectorPost","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/qbo/qbo-configuration/qbo-employee-setting.model.ts","type":"class","linktype":"classe","name":"QBOEmployeeSettingModel","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/models/qbo/qbo-configuration/qbo-export-setting.model.ts","type":"class","linktype":"classe","name":"QBOExportSettingModel","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/core/models/qbo/qbo-configuration/qbo-import-setting.model.ts","type":"class","linktype":"classe","name":"QBOImportSettingModel","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/core/models/qbo/qbo-configuration/qbo-onboarding.model.ts","type":"class","linktype":"classe","name":"QBOOnboardingModel","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/models/sage300/db/sage300-accounting-export.model.ts","type":"interface","linktype":"interface","name":"Sage300AccountingExport","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/sage300/db/sage300-accounting-export.model.ts","type":"interface","linktype":"interface","name":"Sage300AccountingExportResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/sage300/db/sage300-destination-attribuite.model.ts","type":"interface","linktype":"interface","name":"Sage300DestinationAttributes","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/sage300/db/sage300-destination-attribuite.model.ts","type":"interface","linktype":"interface","name":"Sage300GroupedDestinationAttribute","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/core/models/sage300/db/sage300-workspace.model.ts","type":"interface","linktype":"interface","name":"Sage300Workspace","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model.ts","type":"class","linktype":"classe","name":"Sage300AdvancedSettingModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model.ts","type":"interface","linktype":"interface","name":"Sage300AdvancedSettingGet","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/sage300/sage300-configuration/sage300-advanced-settings.model.ts","type":"interface","linktype":"interface","name":"Sage300AdvancedSettingPost","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","type":"class","linktype":"classe","name":"ExportSettingModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","type":"interface","linktype":"interface","name":"Sage300ExportSettingGet","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/models/sage300/sage300-configuration/sage300-export-setting.model.ts","type":"interface","linktype":"interface","name":"Sage300ExportSettingPost","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","type":"class","linktype":"classe","name":"Sage300ImportSettingModel","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","type":"interface","linktype":"interface","name":"Sage300ImportSettingGet","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/sage300/sage300-configuration/sage300-import-settings.model.ts","type":"interface","linktype":"interface","name":"Sage300ImportSettingPost","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/si/db/category-mapping.model.ts","type":"interface","linktype":"interface","name":"CategoryMapping","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/si/db/destination-attribute.model.ts","type":"interface","linktype":"interface","name":"IntacctDestinationAttribute","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/si/db/expense-attribute.model.ts","type":"interface","linktype":"interface","name":"ExtendedExpenseAttribute","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/si/db/expense-group.model.ts","type":"interface","linktype":"interface","name":"ExpenseGroupList","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/core/models/si/db/expense-group.model.ts","type":"interface","linktype":"interface","name":"SkipExportList","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/core/models/si/db/expense-group.model.ts","type":"interface","linktype":"interface","name":"SkipExportLogResponse","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/si/db/expense.model.ts","type":"class","linktype":"classe","name":"ExpenseModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/si/db/expense.model.ts","type":"interface","linktype":"interface","name":"ExpenseList","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/core/models/si/db/generic-mapping-v2.model.ts","type":"interface","linktype":"interface","name":"ExtendedGenericMappingV2","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/models/si/db/mapping.model.ts","type":"class","linktype":"classe","name":"MappingModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/si/db/mapping.model.ts","type":"interface","linktype":"interface","name":"MappingIntacct","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/models/si/db/workspaces.model.ts","type":"interface","linktype":"interface","name":"IntacctWorkspace","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/models/si/misc/si-export-logs.model.ts","type":"class","linktype":"classe","name":"SiExportLogs","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/si/misc/skip-export.model.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"constructPayload1","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/si/misc/skip-export.model.ts","type":"function","linktype":"miscellaneous","linksubtype":"function","name":"constructPayload2","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","type":"class","linktype":"classe","name":"AdvancedSetting","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","type":"interface","linktype":"interface","name":"AdvancedSettingGeneralMapping","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","type":"interface","linktype":"interface","name":"Configuration","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","type":"interface","linktype":"interface","name":"GeneralMappingEntity","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","type":"interface","linktype":"interface","name":"HourOption","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","type":"interface","linktype":"interface","name":"WorkspaceSchedules","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/core/models/si/si-configuration/advanced-settings.model.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"JoinOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/models/si/si-configuration/export-settings.model.ts","type":"class","linktype":"classe","name":"ExportSettingModel","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/si/si-configuration/import-settings.model.ts","type":"class","linktype":"classe","name":"ImportSettings","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/models/si/si-configuration/import-settings.model.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"emptyDestinationAttribute","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"bambooHRMockConfiguration","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"bambooHRMockConfigurationPayload","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"bambooHRMockConnectionPayload","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"bambooHrMockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/bamboo-hr/bamboo-hr.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"bambooHrMockWithoutToken","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/bamboo-hr/bamboo-hr.service.ts","type":"injectable","linktype":"injectable","name":"BambooHrService","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-configuration/business-central-advanced-settings.service.ts","type":"injectable","linktype":"injectable","name":"BusinessCentralAdvancedSettingsService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-configuration/business-central-advanced-settings.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"businessCentralAdvancedSettingGetCache$","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-configuration/business-central-connector.service.ts","type":"injectable","linktype":"injectable","name":"BusinessCentralConnectorService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-configuration/business-central-connector.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"businessCentralCredentialsCache$","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-configuration/business-central-export-settings.service.ts","type":"injectable","linktype":"injectable","name":"BusinessCentralExportSettingsService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-configuration/business-central-export-settings.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"businessCentralExportSettingCache$","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-configuration/business-central-import-settings.service.ts","type":"injectable","linktype":"injectable","name":"BusinessCentralImportSettingsService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-configuration/business-central-import-settings.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"businessCentralImportSettingGetCache$","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-configuration/business-central-onboarding.service.ts","type":"injectable","linktype":"injectable","name":"BusinessCentralOnboardingService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-core/business-central-auth.service.ts","type":"injectable","linktype":"injectable","name":"BusinessCentralAuthService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-core/business-central-helper.service.ts","type":"injectable","linktype":"injectable","name":"BusinessCentralHelperService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/business-central/business-central-mapping/business-central-mapping.service.ts","type":"injectable","linktype":"injectable","name":"BusinessCentralMappingService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/services/common/accounting-export.service.ts","type":"injectable","linktype":"injectable","name":"AccountingExportService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/services/common/api.service.ts","type":"injectable","linktype":"injectable","name":"ApiService","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/core/services/common/api.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"API_BASE_URL","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/common/api.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"httpOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/common/auth.service.ts","type":"injectable","linktype":"injectable","name":"AuthService","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/core/services/common/branding.service.ts","type":"injectable","linktype":"injectable","name":"BrandingService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/common/clone-setting.service.ts","type":"injectable","linktype":"injectable","name":"CloneSettingService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/core/services/common/configuration.service.ts","type":"injectable","linktype":"injectable","name":"ConfigurationService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/services/common/dashboard.service.ts","type":"injectable","linktype":"injectable","name":"DashboardService","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/core/services/common/events.service.ts","type":"injectable","linktype":"injectable","name":"EventsService","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/core/services/common/events.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"EXPOSE_INTACCT_NEW_APP","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/common/events.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"MODULE_PATHS","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/common/export-log.service.ts","type":"injectable","linktype":"injectable","name":"ExportLogService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/services/common/helper.service.ts","type":"injectable","linktype":"injectable","name":"HelperService","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"src/app/core/services/common/integrations-toast.service.ts","type":"injectable","linktype":"injectable","name":"IntegrationsToastService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/services/common/integrations-user.service.ts","type":"injectable","linktype":"injectable","name":"IntegrationsUserService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/services/common/mapping.service.ts","type":"injectable","linktype":"injectable","name":"MappingService","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"src/app/core/services/common/paginator.service.ts","type":"injectable","linktype":"injectable","name":"PaginatorService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/common/skip-export.service.ts","type":"injectable","linktype":"injectable","name":"SkipExportService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/services/common/storage.service.ts","type":"injectable","linktype":"injectable","name":"StorageService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/services/common/window.service.ts","type":"injectable","linktype":"injectable","name":"WindowService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/services/common/workspace.service.ts","type":"injectable","linktype":"injectable","name":"WorkspaceService","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/core/services/gusto/gusto.service.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"connectGustoMockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/gusto/gusto.service.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"GustoMockConfiguration","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/gusto/gusto.service.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"GustoMockConfigurationPayload","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/gusto/gusto.service.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"GustoMockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/gusto/gusto.service.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"GustoMockWithoutToken","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/gusto/gusto.service.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"workatoConnectionStatusMockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/gusto/gusto.service.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"workatoConnectionStatusMockDatawithTrue","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/gusto/gusto.service.ts","type":"injectable","linktype":"injectable","name":"GustoService","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/core/services/gusto/gusto.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"gustoConfigurationCache$","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/integration/appcues.service.ts","type":"injectable","linktype":"injectable","name":"AppcuesService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/integration/refiner.service.ts","type":"injectable","linktype":"injectable","name":"RefinerService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/integration/tracking.service.ts","type":"injectable","linktype":"injectable","name":"TrackingService","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"src/app/core/services/misc/user.service.ts","type":"injectable","linktype":"injectable","name":"UserService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/mock.data.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mockDataComplete","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/mock.data.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mockDataFailed","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/org/org.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"generateTokenData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/org/org.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"orgMockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/org/org.service.ts","type":"injectable","linktype":"injectable","name":"OrgService","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/core/services/qbd/qbd-configuration/qbd-advanced-setting.service.ts","type":"injectable","linktype":"injectable","name":"QbdAdvancedSettingService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/qbd/qbd-configuration/qbd-export-setting.service.ts","type":"injectable","linktype":"injectable","name":"QbdExportSettingService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/qbd/qbd-configuration/qbd-field-mapping.service.ts","type":"injectable","linktype":"injectable","name":"QbdFieldMappingService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/qbd/qbd-core/qbd-api.service.ts","type":"injectable","linktype":"injectable","name":"QbdApiService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/services/qbd/qbd-core/qbd-api.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"API_BASE_URL","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/qbd/qbd-core/qbd-api.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"httpOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/qbd/qbd-core/qbd-auth.service.ts","type":"injectable","linktype":"injectable","name":"QbdAuthService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/services/qbd/qbd-core/qbd-workspace.service.ts","type":"injectable","linktype":"injectable","name":"QbdWorkspaceService","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/core/services/qbd/qbd-iif-log/qbd-iif-logs.service.ts","type":"injectable","linktype":"injectable","name":"QbdIifLogsService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/services/qbd/qbd-mapping/qbd-mapping.service.ts","type":"injectable","linktype":"injectable","name":"QbdMappingService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-configuration/qbo-advanced-settings.service.ts","type":"injectable","linktype":"injectable","name":"QboAdvancedSettingsService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-configuration/qbo-advanced-settings.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"advancedSettingsCache$","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-configuration/qbo-connector.service.ts","type":"injectable","linktype":"injectable","name":"QboConnectorService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-configuration/qbo-connector.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"qboCredentialsCache$","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-configuration/qbo-employee-settings.service.ts","type":"injectable","linktype":"injectable","name":"QboEmployeeSettingsService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-configuration/qbo-employee-settings.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"employeeSettingsCache$","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-configuration/qbo-export-settings.service.ts","type":"injectable","linktype":"injectable","name":"QboExportSettingsService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-configuration/qbo-import-settings.service.ts","type":"injectable","linktype":"injectable","name":"QboImportSettingsService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-configuration/qbo-import-settings.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"qboImportSettingGetCache$","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-core/qbo-auth.service.ts","type":"injectable","linktype":"injectable","name":"QboAuthService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/services/qbo/qbo-core/qbo-helper.service.ts","type":"injectable","linktype":"injectable","name":"QboHelperService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-configuration/sage300-advanced-settings.service.ts","type":"injectable","linktype":"injectable","name":"Sage300AdvancedSettingsService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-configuration/sage300-advanced-settings.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sage300AdvancedSettingGetCache","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-configuration/sage300-connector.service.ts","type":"injectable","linktype":"injectable","name":"Sage300ConnectorService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-configuration/sage300-connector.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sage300CredentialCache","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-configuration/sage300-export-setting.service.ts","type":"injectable","linktype":"injectable","name":"Sage300ExportSettingService","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-configuration/sage300-export-setting.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sage300ExportSettingGetCache","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-configuration/sage300-import-settings.service.ts","type":"injectable","linktype":"injectable","name":"Sage300ImportSettingsService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-configuration/sage300-import-settings.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sage300ImportSettingGetCache","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-configuration/sage300-onboarding.service.ts","type":"injectable","linktype":"injectable","name":"Sage300OnboardingService","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-core/sage300-auth.service.ts","type":"injectable","linktype":"injectable","name":"Sage300AuthService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-helper/sage300-helper.service.ts","type":"injectable","linktype":"injectable","name":"Sage300HelperService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/services/sage300/sage300-mapping/sage300-mapping.service.ts","type":"injectable","linktype":"injectable","name":"Sage300MappingService","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/core/services/si/export-log/export-log.service.ts","type":"injectable","linktype":"injectable","name":"ExportLogService","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/core/services/si/si-configuration/si-advanced-setting.service.ts","type":"injectable","linktype":"injectable","name":"SiAdvancedSettingService","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/core/services/si/si-configuration/si-export-setting.service.ts","type":"injectable","linktype":"injectable","name":"SiExportSettingService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/si/si-configuration/si-import-setting.service.ts","type":"injectable","linktype":"injectable","name":"SiImportSettingService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/si/si-core/dashboard.service.ts","type":"injectable","linktype":"injectable","name":"DashboardService","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/core/services/si/si-core/intacct-connector.service.ts","type":"injectable","linktype":"injectable","name":"IntacctConnectorService","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/core/services/si/si-core/intacct-connector.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sageIntacctCredentialCache","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/si/si-core/paginator.service.ts","type":"injectable","linktype":"injectable","name":"PaginatorService","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/core/services/si/si-core/si-api.service.ts","type":"injectable","linktype":"injectable","name":"SiApiService","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/core/services/si/si-core/si-api.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"API_BASE_URL","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/si/si-core/si-api.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"httpOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/si/si-core/si-auth.service.ts","type":"injectable","linktype":"injectable","name":"SiAuthService","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/core/services/si/si-core/si-mappings.service.ts","type":"injectable","linktype":"injectable","name":"SiMappingsService","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"src/app/core/services/si/si-core/si-user.service.ts","type":"injectable","linktype":"injectable","name":"SiUserService","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"src/app/core/services/si/si-core/si-workspace.service.ts","type":"injectable","linktype":"injectable","name":"SiWorkspaceService","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/core/services/travelperk/travelperk.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"connectAwsS3MockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/travelperk/travelperk.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"connectTravelperkMockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/travelperk/travelperk.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"travelperkConfigurationMockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/travelperk/travelperk.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"travelperkErrorMockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/travelperk/travelperk.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"travelperkMockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/travelperk/travelperk.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"workatoConnectionStatusMockData","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/core/services/travelperk/travelperk.service.ts","type":"injectable","linktype":"injectable","name":"TravelperkService","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"src/app/core/services/travelperk/travelperk.service.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"travelPerkConfigurationCache$","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/bamboo-hr/bamboo-hr.component.ts","type":"component","linktype":"component","name":"BambooHrComponent","coveragePercent":0,"coverageCount":"0/29","status":"low"},{"filePath":"src/app/integrations/bamboo-hr/configuration/configuration.component.ts","type":"component","linktype":"component","name":"ConfigurationComponent","coveragePercent":0,"coverageCount":"0/23","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-main/business-central-configuration/business-central-configuration.component.ts","type":"component","linktype":"component","name":"BusinessCentralConfigurationComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-main/business-central-dashboard/business-central-dashboard.component.ts","type":"component","linktype":"component","name":"BusinessCentralDashboardComponent","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-main/business-central-export-log/business-central-complete-export-log/business-central-complete-export-log.component.ts","type":"component","linktype":"component","name":"BusinessCentralCompleteExportLogComponent","coveragePercent":0,"coverageCount":"0/26","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-main/business-central-export-log/business-central-export-log.component.ts","type":"component","linktype":"component","name":"BusinessCentralExportLogComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-main/business-central-export-log/business-central-skipped-export-log/business-central-skipped-export-log.component.ts","type":"component","linktype":"component","name":"BusinessCentralSkippedExportLogComponent","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-main/business-central-main.component.ts","type":"component","linktype":"component","name":"BusinessCentralMainComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-main/business-central-mapping/business-central-base-mapping/business-central-base-mapping.component.ts","type":"component","linktype":"component","name":"BusinessCentralBaseMappingComponent","coveragePercent":0,"coverageCount":"0/14","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-main/business-central-mapping/business-central-mapping.component.ts","type":"component","linktype":"component","name":"BusinessCentralMappingComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-advanced-settings/business-central-onboarding-advanced-settings.component.ts","type":"component","linktype":"component","name":"BusinessCentralOnboardingAdvancedSettingsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-connector/business-central-onboarding-connector.component.ts","type":"component","linktype":"component","name":"BusinessCentralOnboardingConnectorComponent","coveragePercent":0,"coverageCount":"0/27","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-done/business-central-onboarding-done.component.ts","type":"component","linktype":"component","name":"BusinessCentralOnboardingDoneComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-export-settings/business-central-onboarding-export-settings.component.ts","type":"component","linktype":"component","name":"BusinessCentralOnboardingExportSettingsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-import-settings/business-central-onboarding-import-settings.component.ts","type":"component","linktype":"component","name":"BusinessCentralOnboardingImportSettingsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding-landing/business-central-onboarding-landing.component.ts","type":"component","linktype":"component","name":"BusinessCentralOnboardingLandingComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-onboarding/business-central-onboarding.component.ts","type":"component","linktype":"component","name":"BusinessCentralOnboardingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central-advanced-settings/business-central-advanced-settings.component.ts","type":"component","linktype":"component","name":"BusinessCentralAdvancedSettingsComponent","coveragePercent":0,"coverageCount":"0/31","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central-export-settings/business-central-export-settings.component.ts","type":"component","linktype":"component","name":"BusinessCentralExportSettingsComponent","coveragePercent":0,"coverageCount":"0/32","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central-import-settings/business-central-import-settings.component.ts","type":"component","linktype":"component","name":"BusinessCentralImportSettingsComponent","coveragePercent":0,"coverageCount":"0/33","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"businessCentralAdvancedSettingResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"businessCentralFieldsResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"destinationAttributes","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"expenseFilterCondition","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"expenseFiltersGet","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"exportSettingsResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"fyleFieldsResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/business-central/business-central-shared/business-central.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"importSettingsResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/business-central/business-central.component.ts","type":"component","linktype":"component","name":"BusinessCentralComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/integrations/gusto/gusto-configuration/gusto-configuration.component.ts","type":"component","linktype":"component","name":"GustoConfigurationComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"src/app/integrations/gusto/gusto.component.ts","type":"component","linktype":"component","name":"GustoComponent","coveragePercent":0,"coverageCount":"0/31","status":"low"},{"filePath":"src/app/integrations/integrations.component.ts","type":"component","linktype":"component","name":"IntegrationsComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/integrations/landing/landing.component.ts","type":"component","linktype":"component","name":"LandingComponent","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"src/app/integrations/oauth-callback/oauth-callback.component.ts","type":"component","linktype":"component","name":"OauthCallbackComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/qbd/main/configuration/configuration-advanced-setting/configuration-advanced-setting.component.ts","type":"component","linktype":"component","name":"ConfigurationAdvancedSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/qbd/main/configuration/configuration-export-setting/configuration-export-setting.component.ts","type":"component","linktype":"component","name":"ConfigurationExportSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/qbd/main/configuration/configuration-field-setting/configuration-field-setting.component.ts","type":"component","linktype":"component","name":"ConfigurationFieldSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/qbd/main/configuration/configuration.component.ts","type":"component","linktype":"component","name":"ConfigurationComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/integrations/qbd/main/dashboard/dashboard.component.ts","type":"component","linktype":"component","name":"DashboardComponent","coveragePercent":0,"coverageCount":"0/37","status":"low"},{"filePath":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"errorResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"getQbdAccountingExports","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"getQbdAccountingExports2","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"postQbdAccountingExports","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"postQbdTriggerExportResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"postQbdTriggerExportResponse2","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBDAdvancedSettingResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBDAdvancedSettingResponse2","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/dashboard/dashboard.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBDAdvancedSettingResponse3","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/main.component.ts","type":"component","linktype":"component","name":"MainComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.component.ts","type":"component","linktype":"component","name":"GenericMappingComponent","coveragePercent":0,"coverageCount":"0/26","status":"low"},{"filePath":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"getMappingResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"getMappingStatsResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"postMappingPayload","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/mapping/generic-mapping/generic-mapping.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"postMappingResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/main/mapping/mapping.component.ts","type":"component","linktype":"component","name":"MappingComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/integrations/qbd/onboarding/onboarding-advanced-setting/onboarding-advanced-setting.component.ts","type":"component","linktype":"component","name":"OnboardingAdvancedSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/qbd/onboarding/onboarding-done/onboarding-done.component.ts","type":"component","linktype":"component","name":"OnboardingDoneComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/qbd/onboarding/onboarding-export-setting/onboarding-export-setting.component.ts","type":"component","linktype":"component","name":"OnboardingExportSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/qbd/onboarding/onboarding-field-setting/onboarding-field-setting.component.ts","type":"component","linktype":"component","name":"OnboardingFieldSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/qbd/onboarding/onboarding-landing/landing.component.ts","type":"component","linktype":"component","name":"LandingComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/integrations/qbd/onboarding/onboarding.component.ts","type":"component","linktype":"component","name":"OnboardingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/qbd/qbd.component.ts","type":"component","linktype":"component","name":"QbdComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/integrations/qbd/qbd.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"errorResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbd/qbd.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"workspaceResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-main/qbo-configuration/qbo-configuration.component.ts","type":"component","linktype":"component","name":"QboConfigurationComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-main/qbo-dashboard/qbo-dashboard.component.ts","type":"component","linktype":"component","name":"QboDashboardComponent","coveragePercent":0,"coverageCount":"0/23","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-main/qbo-export-log/qbo-complete-export-log/qbo-complete-export-log.component.ts","type":"component","linktype":"component","name":"QboCompleteExportLogComponent","coveragePercent":0,"coverageCount":"0/25","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-main/qbo-export-log/qbo-export-log.component.ts","type":"component","linktype":"component","name":"QboExportLogComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-main/qbo-export-log/qbo-skipped-export-log/qbo-skipped-export-log.component.ts","type":"component","linktype":"component","name":"QboSkippedExportLogComponent","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-main/qbo-main.component.ts","type":"component","linktype":"component","name":"QboMainComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-main/qbo-mapping/qbo-base-mapping/qbo-base-mapping.component.ts","type":"component","linktype":"component","name":"QboBaseMappingComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-main/qbo-mapping/qbo-mapping.component.ts","type":"component","linktype":"component","name":"QboMappingComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-onboarding/qbo-clone-settings/qbo-clone-settings.component.ts","type":"component","linktype":"component","name":"QboCloneSettingsComponent","coveragePercent":0,"coverageCount":"0/82","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-advanced-settings/qbo-onboarding-advanced-settings.component.ts","type":"component","linktype":"component","name":"QboOnboardingAdvancedSettingsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-connector/qbo-onboarding-connector.component.ts","type":"component","linktype":"component","name":"QboOnboardingConnectorComponent","coveragePercent":0,"coverageCount":"0/33","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-done/qbo-onboarding-done.component.ts","type":"component","linktype":"component","name":"QboOnboardingDoneComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-employee-settings/qbo-onboarding-employee-settings.component.ts","type":"component","linktype":"component","name":"QboOnboardingEmployeeSettingsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-export-settings/qbo-onboarding-export-settings.component.ts","type":"component","linktype":"component","name":"QboOnboardingExportSettingsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-import-settings/qbo-onboarding-import-settings.component.ts","type":"component","linktype":"component","name":"QboOnboardingImportSettingsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding-landing/qbo-onboarding-landing.component.ts","type":"component","linktype":"component","name":"QboOnboardingLandingComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-onboarding/qbo-onboarding.component.ts","type":"component","linktype":"component","name":"QboOnboardingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-shared/qbo-advanced-settings/qbo-advanced-settings.component.ts","type":"component","linktype":"component","name":"QboAdvancedSettingsComponent","coveragePercent":0,"coverageCount":"0/38","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-shared/qbo-employee-settings/qbo-employee-settings.component.ts","type":"component","linktype":"component","name":"QboEmployeeSettingsComponent","coveragePercent":0,"coverageCount":"0/26","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-shared/qbo-export-settings/qbo-export-settings.component.ts","type":"component","linktype":"component","name":"QboExportSettingsComponent","coveragePercent":0,"coverageCount":"0/48","status":"low"},{"filePath":"src/app/integrations/qbo/qbo-shared/qbo-import-settings/qbo-import-settings.component.ts","type":"component","linktype":"component","name":"QboImportSettingsComponent","coveragePercent":0,"coverageCount":"0/39","status":"low"},{"filePath":"src/app/integrations/qbo/qbo.component.ts","type":"component","linktype":"component","name":"QboComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-main/sage300-configuration/sage300-configuration.component.ts","type":"component","linktype":"component","name":"Sage300ConfigurationComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-main/sage300-dashboard/sage300-dashboard.component.ts","type":"component","linktype":"component","name":"Sage300DashboardComponent","coveragePercent":0,"coverageCount":"0/22","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-main/sage300-export-log/sage300-complete-export-log/sage300-complete-export-log.component.ts","type":"component","linktype":"component","name":"Sage300CompleteExportLogComponent","coveragePercent":0,"coverageCount":"0/26","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-main/sage300-export-log/sage300-export-log.component.ts","type":"component","linktype":"component","name":"Sage300ExportLogComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-main/sage300-export-log/sage300-skipped-export-log/sage300-skipped-export-log.component.ts","type":"component","linktype":"component","name":"Sage300SkippedExportLogComponent","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-main/sage300-main.component.ts","type":"component","linktype":"component","name":"Sage300MainComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-main/sage300-mapping/sage300-base-mapping/sage300-base-mapping.component.ts","type":"component","linktype":"component","name":"Sage300BaseMappingComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-main/sage300-mapping/sage300-mapping.component.ts","type":"component","linktype":"component","name":"Sage300MappingComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-advanced-settings/sage300-onboarding-advanced-settings.component.ts","type":"component","linktype":"component","name":"Sage300OnboardingAdvancedSettingsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-connector/sage300-onboarding-connector.component.ts","type":"component","linktype":"component","name":"Sage300OnboardingConnectorComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-done/sage300-onboarding-done.component.ts","type":"component","linktype":"component","name":"Sage300OnboardingDoneComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-export-settings/sage300-onboarding-export-settings.component.ts","type":"component","linktype":"component","name":"Sage300OnboardingExportSettingsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-import-settings/sage300-onboarding-import-settings.component.ts","type":"component","linktype":"component","name":"Sage300OnboardingImportSettingsComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding-landing/sage300-onboarding-landing.component.ts","type":"component","linktype":"component","name":"Sage300OnboardingLandingComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-onboarding/sage300-onboarding.component.ts","type":"component","linktype":"component","name":"Sage300OnboardingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"adminEmails","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"destinationAttributes","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"expenseFilterCondition","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"expenseFiltersGet","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"fyleFieldsResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"importSettingsResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sage300AdvancedSettingResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"sage300FieldsResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/sage300-advanced-settings/sage300-advanced-settings.component.ts","type":"component","linktype":"component","name":"Sage300AdvancedSettingsComponent","coveragePercent":0,"coverageCount":"0/33","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/sage300-export-settings/sage300-export-settings.component.ts","type":"component","linktype":"component","name":"Sage300ExportSettingsComponent","coveragePercent":0,"coverageCount":"0/30","status":"low"},{"filePath":"src/app/integrations/sage300/sage300-shared/sage300-import-settings/sage300-import-settings.component.ts","type":"component","linktype":"component","name":"Sage300ImportSettingsComponent","coveragePercent":0,"coverageCount":"0/48","status":"low"},{"filePath":"src/app/integrations/sage300/sage300.component.ts","type":"component","linktype":"component","name":"Sage300Component","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/integrations/si/main/configuration/configuration-advanced-setting/configuration-advanced-setting.component.ts","type":"component","linktype":"component","name":"ConfigurationAdvancedSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/si/main/configuration/configuration-export-setting/configuration-export-setting.component.ts","type":"component","linktype":"component","name":"ConfigurationExportSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/si/main/configuration/configuration-import-setting/configuration-import-setting.component.ts","type":"component","linktype":"component","name":"ConfigurationImportSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/si/main/configuration/configuration.component.ts","type":"component","linktype":"component","name":"ConfigurationComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/integrations/si/main/dashboard/dashboard.component.ts","type":"component","linktype":"component","name":"DashboardComponent","coveragePercent":0,"coverageCount":"0/50","status":"low"},{"filePath":"src/app/integrations/si/main/export-log/completed-export-log/completed-export-log.component.ts","type":"component","linktype":"component","name":"CompletedExportLogComponent","coveragePercent":0,"coverageCount":"0/41","status":"low"},{"filePath":"src/app/integrations/si/main/export-log/export-log.component.ts","type":"component","linktype":"component","name":"ExportLogComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/integrations/si/main/export-log/skip-export-log/skip-export-log.component.ts","type":"component","linktype":"component","name":"SkipExportLogComponent","coveragePercent":0,"coverageCount":"0/40","status":"low"},{"filePath":"src/app/integrations/si/main/main.component.ts","type":"component","linktype":"component","name":"MainComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/si/main/mapping/category-mapping/category-mapping.component.ts","type":"component","linktype":"component","name":"CategoryMappingComponent","coveragePercent":0,"coverageCount":"0/39","status":"low"},{"filePath":"src/app/integrations/si/main/mapping/employee-mapping/employee-mapping.component.ts","type":"component","linktype":"component","name":"EmployeeMappingComponent","coveragePercent":0,"coverageCount":"0/47","status":"low"},{"filePath":"src/app/integrations/si/main/mapping/generic-mapping/generic-mapping.component.ts","type":"component","linktype":"component","name":"GenericMappingComponent","coveragePercent":0,"coverageCount":"0/35","status":"low"},{"filePath":"src/app/integrations/si/main/mapping/mapping.component.ts","type":"component","linktype":"component","name":"MappingComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/integrations/si/onboarding/onboarding-advanced-setting/onboarding-advanced-setting.component.ts","type":"component","linktype":"component","name":"OnboardingAdvancedSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/si/onboarding/onboarding-done/onboarding-done.component.ts","type":"component","linktype":"component","name":"OnboardingDoneComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/integrations/si/onboarding/onboarding-export-setting/onboarding-export-setting.component.ts","type":"component","linktype":"component","name":"OnboardingExportSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/si/onboarding/onboarding-import-setting/onboarding-import-setting.component.ts","type":"component","linktype":"component","name":"OnboardingImportSettingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/si/onboarding/onboarding-intacct-connector/onboarding-intacct-connector.component.ts","type":"component","linktype":"component","name":"OnboardingIntacctConnectorComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/integrations/si/onboarding/onboarding-landing/onboarding-landing.component.ts","type":"component","linktype":"component","name":"OnboardingLandingComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/integrations/si/onboarding/onboarding.component.ts","type":"component","linktype":"component","name":"OnboardingComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/integrations/si/si.component.ts","type":"component","linktype":"component","name":"SiComponent","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"src/app/integrations/si/si.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"errorResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/si/si.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"workspaceResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/integrations/travelperk/travelperk.component.ts","type":"component","linktype":"component","name":"TravelperkComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"src/app/oauth/oauth-travelperk/oauth-travelperk.component.ts","type":"component","linktype":"component","name":"OauthTravelperkComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/oauth/oauth.component.ts","type":"component","linktype":"component","name":"OauthComponent","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-confirmation-dialog/configuration-confirmation-dialog.component.ts","type":"component","linktype":"component","name":"ConfigurationConfirmationDialogComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-connector/configuration-connector.component.ts","type":"component","linktype":"component","name":"ConfigurationConnectorComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-custom-field-creation-dialog/configuration-custom-field-creation-dialog.component.ts","type":"component","linktype":"component","name":"ConfigurationCustomFieldCreationDialogComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-import-field/configuration-import-field.component.ts","type":"component","linktype":"component","name":"ConfigurationImportFieldComponent","coveragePercent":0,"coverageCount":"0/26","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-info-label/configuration-info-label.component.ts","type":"component","linktype":"component","name":"ConfigurationInfoLabelComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-multi-select/configuration-multi-select.component.ts","type":"component","linktype":"component","name":"ConfigurationMultiSelectComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-schedule-export/configuration-schedule-export.component.ts","type":"component","linktype":"component","name":"ConfigurationScheduleExportComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-select-field/configuration-select-field.component.ts","type":"component","linktype":"component","name":"ConfigurationSelectFieldComponent","coveragePercent":0,"coverageCount":"0/43","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-skip-export/configuration-skip-export.component.ts","type":"component","linktype":"component","name":"ConfigurationSkipExportComponent","coveragePercent":0,"coverageCount":"0/36","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-step-footer/configuration-step-footer.component.ts","type":"component","linktype":"component","name":"ConfigurationStepFooterComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-step-header/configuration-step-header.component.ts","type":"component","linktype":"component","name":"ConfigurationStepHeaderComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-step-sub-header/configuration-step-sub-header.component.ts","type":"component","linktype":"component","name":"ConfigurationStepSubHeaderComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-text-field/configuration-text-field.component.ts","type":"component","linktype":"component","name":"ConfigurationTextFieldComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/shared/components/configuration/configuration-toggle-field/configuration-toggle-field.component.ts","type":"component","linktype":"component","name":"ConfigurationToggleFieldComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/shared/components/configuration/email-multi-select-field/email-multi-select-field.component.ts","type":"component","linktype":"component","name":"EmailMultiSelectFieldComponent","coveragePercent":0,"coverageCount":"0/29","status":"low"},{"filePath":"src/app/shared/components/configuration/preview-dialog/preview-dialog.component.ts","type":"component","linktype":"component","name":"PreviewDialogComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/shared/components/core/dashboard-menu/dashboard-menu.component.ts","type":"component","linktype":"component","name":"DashboardMenuComponent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"src/app/shared/components/core/error/error.component.ts","type":"component","linktype":"component","name":"ErrorComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/shared/components/core/loader/loader.component.ts","type":"component","linktype":"component","name":"LoaderComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/shared/components/dashboard/dashboard-accounting-error-dialog/dashboard-accounting-error-dialog.component.ts","type":"component","linktype":"component","name":"DashboardAccountingErrorDialogComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/shared/components/dashboard/dashboard-error-section/dashboard-error-section.component.ts","type":"component","linktype":"component","name":"DashboardErrorSectionComponent","coveragePercent":0,"coverageCount":"0/41","status":"low"},{"filePath":"src/app/shared/components/dashboard/dashboard-export-log-dialog/dashboard-export-log-dialog.component.ts","type":"component","linktype":"component","name":"DashboardExportLogDialogComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/shared/components/dashboard/dashboard-export-section/dashboard-export-section.component.ts","type":"component","linktype":"component","name":"DashboardExportSectionComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/shared/components/dashboard/dashboard-export-summary-section/dashboard-export-summary-section.component.ts","type":"component","linktype":"component","name":"DashboardExportSummarySectionComponent","coveragePercent":0,"coverageCount":"0/21","status":"low"},{"filePath":"src/app/shared/components/export-log/export-log-dialog/export-log-child-table-dialog.component.ts","type":"component","linktype":"component","name":"ExportLogChildTableDialogComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/shared/components/export-log/export-log-filter/export-log-filter.component.ts","type":"component","linktype":"component","name":"ExportLogFilterComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/shared/components/export-log/export-log-table/export-log-table.component.ts","type":"component","linktype":"component","name":"ExportLogTableComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"src/app/shared/components/export-log/skipped-export-log-table/skipped-export-log-table.component.ts","type":"component","linktype":"component","name":"SkippedExportLogTableComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/shared/components/helper/app-landing-page-body/app-landing-page-body.component.ts","type":"component","linktype":"component","name":"AppLandingPageBodyComponent","coveragePercent":0,"coverageCount":"0/12","status":"low"},{"filePath":"src/app/shared/components/helper/app-landing-page-header/app-landing-page-header.component.ts","type":"component","linktype":"component","name":"AppLandingPageHeaderComponent","coveragePercent":0,"coverageCount":"0/32","status":"low"},{"filePath":"src/app/shared/components/helper/mandatory-error-message/mandatory-error-message.component.ts","type":"component","linktype":"component","name":"MandatoryErrorMessageComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/shared/components/helper/mandatory-field/mandatory-field.component.ts","type":"component","linktype":"component","name":"MandatoryFieldComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/shared/components/helper/mapping/generic-mapping-table/generic-mapping-table.component.ts","type":"component","linktype":"component","name":"GenericMappingTableComponent","coveragePercent":0,"coverageCount":"0/22","status":"low"},{"filePath":"src/app/shared/components/helper/mapping/generic-mapping-v2/generic-mapping-v2.component.ts","type":"component","linktype":"component","name":"GenericMappingV2Component","coveragePercent":0,"coverageCount":"0/34","status":"low"},{"filePath":"src/app/shared/components/helper/mapping/mapping-card-header/mapping-card-header.component.ts","type":"component","linktype":"component","name":"MappingCardHeaderComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/shared/components/helper/mapping/mapping-filter/mapping-filter.component.ts","type":"component","linktype":"component","name":"MappingFilterComponent","coveragePercent":0,"coverageCount":"0/24","status":"low"},{"filePath":"src/app/shared/components/helper/onboarding-done/onboarding-done.component.ts","type":"component","linktype":"component","name":"OnboardingDoneComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/shared/components/helper/onboarding-stepper/onboarding-stepper.component.ts","type":"component","linktype":"component","name":"OnboardingSteppersComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"src/app/shared/components/helper/paginator/paginator.component.ts","type":"component","linktype":"component","name":"PaginatorComponent","coveragePercent":0,"coverageCount":"0/16","status":"low"},{"filePath":"src/app/shared/components/helper/shimmers/shimmers.component.ts","type":"component","linktype":"component","name":"ShimmersComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/shared/components/helper/zero-state/zero-state.component.ts","type":"component","linktype":"component","name":"ZeroStateComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/shared/components/input/dropdown/dropdown.component.ts","type":"component","linktype":"component","name":"DropdownComponent","coveragePercent":62,"coverageCount":"5/8","status":"good"},{"filePath":"src/app/shared/components/input/multi-select/multi-select.component.ts","type":"component","linktype":"component","name":"MultiSelectComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/shared/components/input/toggle/toggle.component.ts","type":"component","linktype":"component","name":"ToggleComponent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"src/app/shared/components/menu/main-menu/main-menu.component.ts","type":"component","linktype":"component","name":"MainMenuComponent","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"src/app/shared/components/menu/sub-menu/sub-menu.component.ts","type":"component","linktype":"component","name":"SubMenuComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/shared/components/onboarding/clone-setting/clone-setting-field/clone-setting-field.component.ts","type":"component","linktype":"component","name":"CloneSettingFieldComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/shared/components/onboarding/clone-setting/clone-setting-header/clone-setting-header.component.ts","type":"component","linktype":"component","name":"CloneSettingHeaderComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.component.ts","type":"component","linktype":"component","name":"AdvancedSettingComponent","coveragePercent":0,"coverageCount":"0/32","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"errorResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBDAdvancedSettingResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBDAdvancedSettingResponse2","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/advanced-setting/advanced-setting.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBDEmailOptioResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/configuration-label/configuration-label.component.ts","type":"component","linktype":"component","name":"ConfigurationLabelComponent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/configuration-radio-field/configuration-radio-field.component.ts","type":"component","linktype":"component","name":"ConfigurationRadioFieldComponent","coveragePercent":0,"coverageCount":"0/13","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/export-setting/export-setting.component.ts","type":"component","linktype":"component","name":"ExportSettingComponent","coveragePercent":0,"coverageCount":"0/41","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/export-setting/export-setting.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"errorResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/export-setting/export-setting.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBDExportSettingResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/export-setting/export-setting.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBDExportSettingResponse2","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.component.ts","type":"component","linktype":"component","name":"FieldMappingComponent","coveragePercent":0,"coverageCount":"0/18","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"errorResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBDFieldMappingResponse","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/components/qbd/configuration/field-mapping/field-mapping.fixture.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBDFieldMappingResponse2","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/components/qbd/core/zero-state-with-illustration/zero-state-with-illustration.component.ts","type":"component","linktype":"component","name":"ZeroStateWithIllustrationComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/shared/components/qbd/helper/onboarding-stepper/onboarding-stepper.component.ts","type":"component","linktype":"component","name":"OnboardingStepperComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/shared/components/qbd/mapping/mapping-header-section/mapping-header-section.component.ts","type":"component","linktype":"component","name":"MappingHeaderSectionComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/shared/components/qbd/mapping/mapping-table/mapping-table.component.ts","type":"component","linktype":"component","name":"MappingTableComponent","coveragePercent":0,"coverageCount":"0/17","status":"low"},{"filePath":"src/app/shared/components/si/configuration/configuration-advanced-settings/configuration-advanced-settings.component.ts","type":"component","linktype":"component","name":"ConfigurationAdvancedSettingsComponent","coveragePercent":0,"coverageCount":"0/48","status":"low"},{"filePath":"src/app/shared/components/si/configuration/configuration-export-settings/configuration-export-settings.component.ts","type":"component","linktype":"component","name":"ConfigurationExportSettingsComponent","coveragePercent":0,"coverageCount":"0/56","status":"low"},{"filePath":"src/app/shared/components/si/configuration/configuration-import-settings/configuration-import-settings.component.ts","type":"component","linktype":"component","name":"ConfigurationImportSettingsComponent","coveragePercent":0,"coverageCount":"0/59","status":"low"},{"filePath":"src/app/shared/components/si/core/intacct-connector/intacct-connector.component.ts","type":"component","linktype":"component","name":"IntacctConnectorComponent","coveragePercent":0,"coverageCount":"0/15","status":"low"},{"filePath":"src/app/shared/components/si/core/intacct-location-entity/intacct-location-entity.component.ts","type":"component","linktype":"component","name":"IntacctLocationEntityComponent","coveragePercent":0,"coverageCount":"0/23","status":"low"},{"filePath":"src/app/shared/components/si/helper/dashboard-intacct-errors/dashboard-intacct-errors.component.ts","type":"component","linktype":"component","name":"DashboardIntacctErrorsComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"src/app/shared/components/si/helper/dashboard-mapping-resolve/dashboard-mapping-resolve.component.ts","type":"component","linktype":"component","name":"DashboardMappingResolveComponent","coveragePercent":0,"coverageCount":"0/20","status":"low"},{"filePath":"src/app/shared/components/si/helper/intacct-stepper/intacct-stepper.component.ts","type":"component","linktype":"component","name":"IntacctStepperComponent","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"src/app/shared/components/si/helper/skip-export/skip-export.component.ts","type":"component","linktype":"component","name":"SkipExportComponent","coveragePercent":0,"coverageCount":"0/52","status":"low"},{"filePath":"src/app/shared/pipes/search.pipe.ts","type":"pipe","linktype":"pipe","name":"SearchPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/pipes/snake-case-to-space-case.pipe.ts","type":"pipe","linktype":"pipe","name":"SnakeCaseToSpaceCasePipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/app/shared/pipes/trim-character.pipe.ts","type":"pipe","linktype":"pipe","name":"TrimCharacterPipe","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/environments/environment.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"environment","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/AppLandingPageBody.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/AppLandingPageBody.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/AppLandingPageHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/AppLandingPageHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"QBD","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/AppLandingPageHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"qbo","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/CloneSettingField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"dropdown","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/CloneSettingField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/CloneSettingField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"multiSelect","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/CloneSettingField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"toggle","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/CloneSettingHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/CloneSettingHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationConfirmationDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationConfirmationDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationConnector.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"expiredToken","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationConnector.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationConnector.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"refreshingDimension","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationConnector.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationCustomFieldCreationDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationCustomFieldCreationDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationImportField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"cloneSetting","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationImportField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"dynamicDestinationImport","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationImportField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"fixedDestinationImport","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationImportField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"fixture","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationImportField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"importSettingForm","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationImportField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationInfoLabel.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationInfoLabel.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationLabel.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationLabel.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationMultiSelect.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationMultiSelect.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationRadioField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationRadioField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationScheduleExport.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationScheduleExport.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationSelectField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationSelectField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationSkipExport.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationSkipExport.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationStepFooter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"disabledButton","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationStepFooter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"enabledButton","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationStepFooter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"loaderButton","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationStepFooter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationStepHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationStepHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationStepSubHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationStepSubHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationTextField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationTextField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"password","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationTextField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationToggleField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ConfigurationToggleField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardAccountingErrorDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardAccountingErrorDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardErrorSection.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardErrorSection.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardExportLogDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardExportLogDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardExportSection.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"exportInProgress","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardExportSection.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"importInProgress","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardExportSection.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardExportSection.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"readyState","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardExportSummarySection.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/DashboardExportSummarySection.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Dropdown.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"form","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Dropdown.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Dropdown.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"newField","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Dropdown.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"newFieldForm","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Dropdown.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"preFilled","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/EmailMultiSelectField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/EmailMultiSelectField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Error.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Error.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ExportLogChildTableDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ExportLogChildTableDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ExportLogFilter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ExportLogFilter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ExportLogTable.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ExportLogTable.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/GenericMappingV2.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/GenericMappingV2.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MainMenu.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MainMenu.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MandatoryErrorMessage.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MandatoryErrorMessage.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"project","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MandatoryErrorMessage.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MandatoryField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MandatoryField.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MappingCardHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MappingCardHeader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MappingFilter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"alphabetFilter","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MappingFilter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MappingFilter.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MultiSelect.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/MultiSelect.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/OnboardingDone.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/OnboardingDone.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Paginator.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Paginator.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/PreviewDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/PreviewDialog.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Shimmers.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"dashboard","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Shimmers.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"exportLog","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Shimmers.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"mapping","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Shimmers.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/SkippedExportLogTable.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/SkippedExportLogTable.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/SubMenu.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/SubMenu.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Toggle.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/Toggle.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ZeroState.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ZeroState.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ZeroStateWithIllustration.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/ZeroStateWithIllustration.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/loader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/loader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"simple","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/loader.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"smallLoader","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"src/stories/utility.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"setupStoryBookFormGroup","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}');var injectStylesIntoStyleTag=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),injectStylesIntoStyleTag_default=__webpack_require__.n(injectStylesIntoStyleTag),styleDomAPI=__webpack_require__("./node_modules/style-loader/dist/runtime/styleDomAPI.js"),styleDomAPI_default=__webpack_require__.n(styleDomAPI),insertBySelector=__webpack_require__("./node_modules/style-loader/dist/runtime/insertBySelector.js"),insertBySelector_default=__webpack_require__.n(insertBySelector),setAttributesWithoutAttributes=__webpack_require__("./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js"),setAttributesWithoutAttributes_default=__webpack_require__.n(setAttributesWithoutAttributes),insertStyleElement=__webpack_require__("./node_modules/style-loader/dist/runtime/insertStyleElement.js"),insertStyleElement_default=__webpack_require__.n(insertStyleElement),styleTagTransform=__webpack_require__("./node_modules/style-loader/dist/runtime/styleTagTransform.js"),styleTagTransform_default=__webpack_require__.n(styleTagTransform),styles=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles.scss"),options={};options.styleTagTransform=styleTagTransform_default(),options.setAttributes=setAttributesWithoutAttributes_default(),options.insert=insertBySelector_default().bind(null,"head"),options.domAPI=styleDomAPI_default(),options.insertStyleElement=insertStyleElement_default();injectStylesIntoStyleTag_default()(styles.Z,options);styles.Z&&styles.Z.locals&&styles.Z.locals;(0,angular.P)(documentation_namespaceObject);const _storybook_preview={decorators:[(Story,context)=>(document.documentElement.setAttribute("data-theme","fyle"),Story(context))],parameters:{actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/i}}}}},"./src/polyfills.ts":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__("./node_modules/zone.js/fesm2015/zone.js")},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("@storybook/channels"),asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");const pipeline=x=>x(),importers=[function(){var _ref=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.mdx)$/.exec(path))return;const pathRemainder=path.substring(6);return __webpack_require__("./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$")("./"+pathRemainder)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:src(?:\/(?!\.)(?:(?:(?!(?:^|\/)\.).)*?)\/|\/|$)(?!\.)(?=.)[^/]*?\.stories\.(js|jsx|mjs|ts|tsx))$/.exec(path))return;const pathRemainder=path.substring(6);return __webpack_require__("./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$")("./"+pathRemainder)}));return function(_x2){return _ref2.apply(this,arguments)}}()];function _importFn(){return(_importFn=(0,asyncToGenerator.Z)((function*(path){for(let i=0;i<importers.length;i++){const moduleExports=yield pipeline((()=>importers[i](path)));if(moduleExports)return moduleExports}}))).apply(this,arguments)}const channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);const preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb;window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel,window.__STORYBOOK_CLIENT_API__=new external_STORYBOOK_MODULE_PREVIEW_API_.ClientApi({storyStore:preview.storyStore}),preview.initialize({importFn:function importFn(_x3){return _importFn.apply(this,arguments)},getProjectAnnotations:()=>(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)([__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.js"),__webpack_require__("./node_modules/@storybook/addon-links/dist/preview.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/docs/preview.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/actions/preview.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/backgrounds/preview.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/measure/preview.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/outline/preview.js"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/highlight/preview.js"),__webpack_require__("./node_modules/@storybook/addon-interactions/dist/preview.js"),__webpack_require__("./.storybook/preview.ts")])})},"./node_modules/@storybook/addon-interactions/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/addon-interactions/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./src/styles.scss":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/sourceMaps.js"),_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/css-loader/dist/runtime/getUrl.js"),_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__),___CSS_LOADER_URL_IMPORT_0___=new URL(__webpack_require__("./src/assets/icons/cross.svg"),__webpack_require__.b),___CSS_LOADER_URL_IMPORT_1___=new URL(__webpack_require__("./src/assets/icons/arrow-down.svg"),__webpack_require__.b),___CSS_LOADER_URL_IMPORT_2___=new URL(__webpack_require__("./src/assets/icons/eye.svg"),__webpack_require__.b),___CSS_LOADER_URL_IMPORT_3___=new URL(__webpack_require__("./src/assets/icons/eye-slash.svg"),__webpack_require__.b),___CSS_LOADER_EXPORT___=_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()(_node_modules_css_loader_dist_runtime_sourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()),___CSS_LOADER_URL_REPLACEMENT_0___=_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___),___CSS_LOADER_URL_REPLACEMENT_1___=_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_1___),___CSS_LOADER_URL_REPLACEMENT_2___=_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_2___),___CSS_LOADER_URL_REPLACEMENT_3___=_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_3___);___CSS_LOADER_EXPORT___.push([module.id,"@tailwind base;@tailwind components;@tailwind utilities;@layer base{[data-theme=fyle]{--white: #FFFFFF;--placeholder: #A9ACBC;--separator: #ECECEE;--normal-text-color: #161528;--slightly-normal-text-color: #2C304E;--menu-inactive-text-color: #A9ACBC;--sub-text-color: #414562;--faded-text-color: #5A5D72;--box-color: #DFDFE2;--hyperlink-color: #0062FF;--mandatory-field-color: #FF3366;--disabled-bg-color: #F5F5F5;--configuration-bg: #FAFCFF;--dropdown-hover: #e9ecef;--check-box: #ced4da;--info-section: #EFF5FC;--info: #5C98E5;--success-toast: #24A148;--alert-toast: #DA1E28;--cta-disabled: #FFC2D6;--line-inactive: #CCCDD7;--progress-bar-bg: #FFF0F5;--mapped-green-border: #D9EBE1;--mapped-green-bg: #EEF8F2;--unmapped-red-border: #F5C0C3;--unmapped-red-bg: #FCE9EA;--pink: #D23669;--pink-box-border: #FF336629}}html,body{@apply tw-h-[100%] tw-leading-19}body{@apply tw-m-0-px tw-text-normal-text-color tw-font-aktiv-grotesk tw-text-16-px}p{@apply tw-m-0-px}.pi-times:before{content:url("+___CSS_LOADER_URL_REPLACEMENT_0___+") !important}.pi-chevron-down:before{content:url("+___CSS_LOADER_URL_REPLACEMENT_1___+") !important}.pi-eye:before{content:url("+___CSS_LOADER_URL_REPLACEMENT_2___+") !important}.pi-eye-slash:before{content:url("+___CSS_LOADER_URL_REPLACEMENT_3___+") !important}.pi-times:before{@apply tw-text-12-px tw-text-placeholder !important}.p-button{@apply tw-w-[100%] tw-text-14-px tw-shadow-none tw-border-none tw-bg-btn-cta !important}.p-button.p-button-raised{@apply tw-justify-center !important}.p-button-label{@apply tw-flex-none !important}.p-button:enabled:hover{@apply tw-shadow-btn-cta-shadow !important}.p-button:disabled{@apply tw-cursor-no-drop !important}.p-dialog .p-dialog-content{@apply tw-p-0 !important}.p-inputtext{@apply tw-text-14-px tw-border-box-color !important}.p-inputtext:enabled:focus-visible{@apply tw-shadow-none tw-border-faded-text-color !important}.p-tooltip .p-tooltip-text{@apply tw-bg-slightly-normal-text-color tw-text-white tw-text-12-px tw-py-6-px tw-px-8-px tw-h-auto tw-break-words tw-whitespace-normal tw-overflow-visible tw-font-400 !important}.p-tooltip.p-tooltip-right .p-tooltip-arrow{@apply tw-border-r-slightly-normal-text-color !important}.p-tooltip.p-tooltip-left .p-tooltip-arrow{@apply tw-border-l-slightly-normal-text-color !important}.p-tooltip.p-tooltip-top .p-tooltip-arrow{@apply tw-border-t-slightly-normal-text-color !important}.p-tooltip.p-tooltip-bottom .p-tooltip-arrow{@apply tw-border-b-slightly-normal-text-color !important}.p-inputswitch{@apply tw-h-20-px tw-w-50-px !important}.p-inputswitch .p-inputswitch-slider:before{@apply tw-mt-[-0.425rem] tw-w-14-px tw-h-14-px !important}.p-inputswitch.p-inputswitch-checked .p-inputswitch-slider:before{@apply tw-translate-x-[1.8rem] !important}.p-inputswitch.p-inputswitch-checked .p-inputswitch-slider{@apply tw-bg-mandatory-field-color !important}.p-inputswitch.p-focus .p-inputswitch-slider{@apply tw-shadow-none !important}.p-radiobutton{@apply tw-w-fit tw-h-19-px !important}.p-radiobutton .p-radiobutton-box{@apply tw-w-16-px tw-h-16-px tw-border !important}.p-radiobutton .p-radiobutton-box:hover{@apply tw-border-slightly-normal-text-color !important}.p-radiobutton .p-radiobutton-box.p-highlight,.p-radiobutton .p-radiobutton-box.p-highlight:hover{@apply tw-shadow-none tw-border-slightly-normal-text-color tw-bg-white !important}.p-radiobutton .p-radiobutton-box .p-radiobutton-icon{@apply tw-w-10-px tw-h-10-px tw-bg-slightly-normal-text-color !important}.p-dropdown{@apply lg:tw-w-300-px md:tw-w-260-px tw-scale-[1] !important}.p-dropdown .p-dropdown-label.p-inputtext{@apply tw-px-3 tw-py-2 !important}.p-dropdown-panel .p-dropdown-items{@apply tw-pt-px tw-pr-0 tw-pb-0 tw-border tw-border-box-color tw-rounded-b-8-px !important}.p-dropdown-panel .p-dropdown-items .p-dropdown-item{@apply tw-h-fit tw-py-8-px tw-pl-14-px tw-text-14-px tw-rounded-4-px tw-mx-px tw-mt-px tw-mb-4-px !important}.p-dropdown-panel .p-dropdown-items .p-dropdown-item.p-highlight{@apply tw-text-mandatory-field-color tw-bg-disabled-bg-color !important}.p-dropdown-panel .p-dropdown-items .p-dropdown-item:not(.p-highlight):not(.p-disabled):hover{@apply tw-bg-disabled-bg-color tw-text-slightly-normal-text-color !important}.p-dropdown-panel .p-dropdown-items .p-dropdown-item,.p-dropdown-panel .p-dropdown-items .p-dropdown-item.p-highlight{max-width:18.5rem;overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.p-dropdown.p-focus{@apply tw-shadow-none tw-border-slightly-normal-text-color !important}.p-dropdown:hover{@apply tw-shadow-none tw-border-slightly-normal-text-color !important}.p-multiselect{@apply lg:tw-w-300-px md:tw-w-260-px}.p-multiselect .p-multiselect-label{@apply tw-text-sub-text-color tw-py-8-px tw-pl-14-px tw-text-14-px !important}.p-multiselect:not(.p-disabled):hover{@apply tw-border-faded-text-color !important}.p-multiselect:not(.p-disabled).p-focus{@apply tw-shadow-none !important}.p-multiselect.p-focus:not(.p-disabled){@apply tw-shadow-none !important}.p-multiselect-panel .p-multiselect-header .p-checkbox{@apply tw-hidden}.p-multiselect-filter-container{@apply tw-hidden}.p-multiselect-close{@apply tw-hidden !important}.p-multiselect-panel{@apply tw-w-320-px}.p-dropdown .p-dropdown-label.p-placeholder{@apply tw-text-placeholder !important}.p-multiselect .p-multiselect-label.p-placeholder{@apply tw-text-placeholder !important}.p-multiselect-panel .p-multiselect-items .p-multiselect-item{@apply tw-text-14-px tw-text-slightly-normal-text-color tw-h-54-px tw-px-16-px tw-py-8-px !important}.p-multiselect-panel .p-multiselect-items .p-multiselect-item .p-checkbox{@apply tw-mb-0 tw-mt-2-px !important}.p-checkbox .p-checkbox-box{@apply tw-h-16-px tw-w-16-px tw-rounded-4-px tw-transition-none tw-border tw-border-sub-text-color !important}.p-multiselect-panel .p-multiselect-items .p-multiselect-item.p-highlight{@apply tw-text-14-px tw-text-slightly-normal-text-color tw-bg-disabled-bg-color tw-rounded-4-px !important}.p-multiselect-panel .p-multiselect-items .p-multiselect-item:not(.p-highlight):not(.p-disabled):hover{@apply tw-shadow-none tw-bg-disabled-bg-color !important}.p-multiselect-panel .p-multiselect-items .p-multiselect-item:focus{@apply tw-shadow-none tw-bg-disabled-bg-color !important}.p-checkbox .p-checkbox-box.p-highlight{@apply tw-bg-sub-text-color tw-border-none tw-pb-5-px !important}.pi-check:before{@apply tw-font-700 tw-text-9-px !important}.p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box:hover{@apply tw-border-sub-text-color !important}.p-multiselect-panel .p-multiselect-items .p-multiselect-empty-message{@apply tw-py-24-px tw-flex tw-justify-center tw-text-slightly-normal-text-color tw-text-14-px tw-italic !important}.spinner-16.p-progress-spinner{@apply tw-h-16-px\n        tw-w-16-px}.spinner-16 .p-progress-spinner-circle{@apply tw-animate-progress-spinner !important}.spinner-16-white.p-progress-spinner{@apply tw-h-16-px\n        tw-w-16-px}.spinner-16-white .p-progress-spinner-circle{@apply tw-animate-progress-spinner-cta !important}.spinner-default.p-progress-spinner{@apply tw-h-100-px\n        tw-w-100-px}.spinner-default .p-progress-spinner-circle{@apply tw-animate-progress-spinner !important}.p-skeleton{@apply tw-bg-disabled-bg-color !important}.p-toast{@apply tw-opacity-100 !important}.p-toast .p-toast-message.p-toast-message-success{@apply tw-border-none !important}.p-toast .p-toast-message.p-toast-message-error{@apply tw-border-none !important}.p-toast .p-toast-message .p-toast-message-content{@apply tw-border-0 tw-p-0 tw-text-white !important}.p-toast .p-toast-message .p-toast-icon-close{@apply tw-hidden !important}.p-toast-icon-close-icon{@apply tw-hidden !important}.p-toast-message-content{@apply tw-block !important}.configuration--section{@apply tw-pb-100-px}.configuration--contents{@apply tw-overflow-hidden tw-border-separator tw-box-border tw-bg-white tw-rounded-xl tw-mb-0-px md:tw-mx-100-px lg:tw-mx-120-px tw-shadow-app-card !important}.p-tabmenu{@apply tw-font-aktiv-grotesk tw-font-500 !important}.p-tabmenu .p-tabmenu-nav{@apply tw-border-b-2-px tw-border-b-box-color tw-text-14-px !important}.p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link{@apply tw-text-menu-inactive-text-color tw-font-500 !important}.p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link{@apply tw-text-slightly-normal-text-color tw-border-b-2 tw-border-b-slightly-normal-text-color tw-font-500 !important}.p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link:not(.p-disabled):focus{@apply tw-shadow-none !important}.p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link{@apply tw-px-0 tw-pt-0 tw-pb-20-px tw-mx-24-px tw-mt-20-px !important}.mapped{@apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-mapped-green-border tw-bg-mapped-green-bg tw-py-4-px tw-px-12-px tw-text-success-toast tw-w-fit !important}.unmapped{@apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-unmapped-red-border tw-bg-unmapped-red-bg tw-py-4-px tw-px-12-px tw-text-alert-toast tw-w-fit !important}.p-calendar .p-inputtext{@apply tw-p-0 tw-bg-white tw-border-none tw-cursor-pointer tw-transition-none tw-text-sub-text-color !important}.p-dropdown-panel .p-dropdown-items .p-dropdown-item:not(.p-highlight):hover .p-calendar .p-inputtext,.p-dropdown-panel .p-dropdown-items .p-dropdown-item.p-highlight .p-calendar .p-inputtext{@apply tw-bg-disabled-bg-color !important}.p-calendar ::placeholder{@apply tw-text-sub-text-color !important}.p-datepicker table td>span.p-highlight{@apply tw-text-white tw-bg-mandatory-field-color !important}.p-datepicker table td>span:focus{@apply tw-shadow-none !important}.p-datepicker table th{@apply tw-text-center !important}.p-datepicker-touch-ui,.p-calendar .p-datepicker-touch-ui{@apply tw-min-w-fit tw-top-[50%] tw-left-[50%] !important}.p-dropdown-filter{@apply tw-h-32-px}.p-dialog .p-dialog-header .p-dialog-title{@apply tw-text-20-px tw-font-500 !important}.preview-text{@apply tw-text-14-px tw-font-400 tw-text-faded-text-color tw-p-24-px !important}.preview-box{@apply tw-p-10-px tw-bg-disabled-bg-color tw-rounded-8-px !important}","",{version:3,sources:["webpack://./src/styles.scss","webpack://./src/assets/themes/fyle.scss"],names:[],mappings:"AAAA,cAAA,CACA,oBAAA,CACA,mBAAA,CCFA,YACI,kBACI,gBAAA,CACA,sBAAA,CACA,oBAAA,CACA,4BAAA,CACA,qCAAA,CACA,mCAAA,CACA,yBAAA,CACA,2BAAA,CACA,oBAAA,CACA,0BAAA,CACA,gCAAA,CACA,4BAAA,CACA,2BAAA,CACA,yBAAA,CACA,oBAAA,CACA,uBAAA,CACA,eAAA,CACA,wBAAA,CACA,sBAAA,CACA,uBAAA,CACA,wBAAA,CACA,0BAAA,CACA,8BAAA,CACA,0BAAA,CACA,8BAAA,CACA,0BAAA,CACA,eAAA,CACA,4BAAA,CAAA,CDrBR,UAEI,+BAAA,CAAA,CAGJ,KACI,6EAAA,CAAA,CAGJ,EACI,eAAA,CAAA,CAGJ,iBACI,0DAAA,CAGJ,wBACI,0DAAA,CAGJ,eACI,0DAAA,CAGJ,qBACI,0DAAA,CAGJ,iBACI,kDAAA,CAAA,CAIJ,UACI,sFAAA,CAAA,CAGJ,0BACI,kCAAA,CAAA,CAGJ,gBACI,6BAAA,CAAA,CAGJ,wBACI,yCAAA,CAAA,CAGJ,mBACI,kCAAA,CAAA,CAIJ,4BACI,uBAAA,CAAA,CAIJ,aACI,kDAAA,CAAA,CAGJ,mCACI,0DAAA,CAAA,CAIJ,2BACI,iLAAA,CAAA,CAGJ,4CACI,uDAAA,CAAA,CAGJ,2CACI,uDAAA,CAAA,CAGJ,0CACI,uDAAA,CAAA,CAGJ,6CACI,uDAAA,CAAA,CAIJ,eACI,sCAAA,CAAA,CAGJ,4CACI,wDAAA,CAAA,CAGJ,kEACI,wCAAA,CAAA,CAGJ,2DACI,4CAAA,CAAA,CAGJ,6CACI,+BAAA,CAAA,CAIJ,eACI,oCAAA,CAAA,CAGJ,kCACI,gDAAA,CAAA,CAGJ,wCACI,qDAAA,CAAA,CAGJ,kGACI,gFAAA,CAAA,CAGJ,sDACI,uEAAA,CAAA,CAIJ,YACI,2DAAA,CAAA,CAGA,0CACI,gCAAA,CAAA,CAIR,oCACI,yFAAA,CAAA,CAGJ,qDACI,2GAAA,CAAA,CAGJ,iEACI,sEAAA,CAAA,CAGJ,8FACI,2EAAA,CAAA,CAGJ,sHAEI,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,sBAAA,CAGJ,oBACI,oEAAA,CAAA,CAGJ,kBACI,oEAAA,CAAA,CAGJ,eACI,mCAAA,CAAA,CAGJ,oCACI,4EAAA,CAAA,CAGJ,sCACI,2CAAA,CAAA,CAGJ,wCACI,+BAAA,CAAA,CAGJ,wCACI,+BAAA,CAAA,CAGJ,uDACI,eAAA,CAAA,CAGJ,gCACI,eAAA,CAAA,CAGJ,qBACI,0BAAA,CAAA,CAGJ,qBACI,iBAAA,CAAA,CAGJ,4CACI,oCAAA,CAAA,CAGJ,kDACI,oCAAA,CAAA,CAGJ,8DACI,mGAAA,CAAA,CAGJ,0EACI,mCAAA,CAAA,CAGJ,4BACI,4GAAA,CAAA,CAGJ,0EACI,yGAAA,CAAA,CAGJ,uGACI,uDAAA,CAAA,CAGJ,oEACI,uDAAA,CAAA,CAGJ,wCACI,+DAAA,CAAA,CAGJ,iBACI,yCAAA,CAAA,CAGJ,4DACI,yCAAA,CAAA,CAGJ,uEACI,iHAAA,CAAA,CAIA,+BACI;iBACA,CAAA,CAIJ,uCACI,4CACA,CAAA,CARJ,qCACI;iBACA,CAAA,CAIJ,6CACI,gDACA,CAAA,CARJ,oCACI;kBACA,CAAA,CAIJ,4CACI,4CACA,CAAA,CAgBR,YACI,wCAAA,CAAA,CAGJ,SACI,+BAAA,CAAA,CAEJ,kDACI,+BAAA,CAAA,CAGJ,gDACI,+BAAA,CAAA,CAGJ,mDACI,iDAAA,CAAA,CAGJ,8CACI,0BAAA,CAAA,CAGJ,yBACI,0BAAA,CAAA,CAGJ,yBACI,yBAAA,CAAA,CAIA,wBACE,kBAAA,CAAA,CAGF,yBACI,6JAAA,CAAA,CAIR,WACI,kDAAA,CAAA,CAGJ,0BACI,qEAAA,CAAA,CAGJ,0DACI,6DAAA,CAAA,CAGJ,sEACI,oHAAA,CAAA,CAGJ,iFACI,+BAAA,CAAA,CAGJ,0DACI,oEAAA,CAAA,CAGJ,QACI,kLAAA,CAAA,CAGJ,UACI,gLAAA,CAAA,CAGJ,yBACI,8GAAA,CAAA,CAGJ,gMACI,wCAAA,CAAA,CAGJ,0BACI,uCAAA,CAAA,CAGJ,wCACI,0DAAA,CAAA,CAGJ,kCACI,+BAAA,CAAA,CAGJ,uBACI,+BAAA,CAAA,CAGJ,0DACI,wDAAA,CAAA,CAGJ,mBACI,gBAAA,CAAA,CAGJ,2CACI,0CAAA,CAAA,CAGJ,cACI,8EAAA,CAAA,CAGJ,aACI,mEAAA,CAAA",sourcesContent:["@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n// Import all the themes here\n@import 'assets/themes/fyle.scss';\n\n\nhtml,\nbody {\n    @apply tw-h-[100%] tw-leading-19;\n}\n\nbody {\n    @apply tw-m-0-px tw-text-normal-text-color tw-font-aktiv-grotesk tw-text-16-px;\n}\n\np {\n    @apply tw-m-0-px;\n}\n\n.pi-times:before {\n    content: url('./assets/icons/cross.svg') #{!important};\n}\n\n.pi-chevron-down:before {\n    content: url('./assets/icons/arrow-down.svg') #{!important};\n}\n\n.pi-eye:before {\n    content: url('./assets/icons/eye.svg') #{!important};\n}\n\n.pi-eye-slash:before {\n    content: url('./assets/icons/eye-slash.svg') #{!important};\n}\n\n.pi-times:before {\n    @apply tw-text-12-px tw-text-placeholder #{!important}\n}\n\n// Button CTA\n.p-button {\n    @apply tw-w-[100%] tw-text-14-px tw-shadow-none tw-border-none tw-bg-btn-cta #{!important};\n}\n\n.p-button.p-button-raised {\n    @apply tw-justify-center #{!important};\n}\n\n.p-button-label {\n    @apply tw-flex-none #{!important};\n}\n\n.p-button:enabled:hover {\n    @apply tw-shadow-btn-cta-shadow #{!important};\n}\n\n.p-button:disabled {\n    @apply tw-cursor-no-drop #{!important};\n}\n\n// Dialog\n.p-dialog .p-dialog-content {\n    @apply tw-p-0 #{!important};\n}\n\n// Input text\n.p-inputtext {\n    @apply tw-text-14-px tw-border-box-color #{!important};\n}\n\n.p-inputtext:enabled:focus-visible {\n    @apply tw-shadow-none tw-border-faded-text-color #{!important};\n}\n\n// Tooltip\n.p-tooltip .p-tooltip-text {\n    @apply tw-bg-slightly-normal-text-color tw-text-white tw-text-12-px tw-py-6-px tw-px-8-px tw-h-auto tw-break-words tw-whitespace-normal tw-overflow-visible tw-font-400 #{!important}\n}\n\n.p-tooltip.p-tooltip-right .p-tooltip-arrow {\n    @apply tw-border-r-slightly-normal-text-color #{!important};\n}\n\n.p-tooltip.p-tooltip-left .p-tooltip-arrow {\n    @apply tw-border-l-slightly-normal-text-color #{!important};\n}\n\n.p-tooltip.p-tooltip-top .p-tooltip-arrow {\n    @apply tw-border-t-slightly-normal-text-color #{!important};\n}\n\n.p-tooltip.p-tooltip-bottom .p-tooltip-arrow {\n    @apply tw-border-b-slightly-normal-text-color #{!important};\n}\n\n// Toggle\n.p-inputswitch {\n    @apply tw-h-20-px tw-w-50-px #{!important};\n}\n\n.p-inputswitch .p-inputswitch-slider:before {\n    @apply tw-mt-[-0.425rem] tw-w-14-px tw-h-14-px #{!important};\n}\n\n.p-inputswitch.p-inputswitch-checked .p-inputswitch-slider:before {\n    @apply tw-translate-x-[1.8rem] #{!important};\n}\n\n.p-inputswitch.p-inputswitch-checked .p-inputswitch-slider {\n    @apply tw-bg-mandatory-field-color #{!important};\n}\n\n.p-inputswitch.p-focus .p-inputswitch-slider {\n    @apply tw-shadow-none #{!important};\n}\n\n// Radio Button\n.p-radiobutton {\n    @apply tw-w-fit tw-h-19-px #{!important};\n}\n\n.p-radiobutton .p-radiobutton-box {\n    @apply tw-w-16-px tw-h-16-px tw-border #{!important};\n}\n\n.p-radiobutton .p-radiobutton-box:hover {\n    @apply tw-border-slightly-normal-text-color #{!important};\n}\n\n.p-radiobutton .p-radiobutton-box.p-highlight, .p-radiobutton .p-radiobutton-box.p-highlight:hover{\n    @apply tw-shadow-none tw-border-slightly-normal-text-color tw-bg-white #{!important};\n}\n\n.p-radiobutton .p-radiobutton-box .p-radiobutton-icon {\n    @apply tw-w-10-px tw-h-10-px tw-bg-slightly-normal-text-color #{!important};\n}\n\n// Dropdown\n.p-dropdown {\n    @apply lg:tw-w-300-px md:tw-w-260-px tw-scale-[1] #{!important};\n}\n.p-dropdown .p-dropdown-label {\n    &.p-inputtext {\n        @apply tw-px-3 tw-py-2 #{!important};\n    }\n}\n\n.p-dropdown-panel .p-dropdown-items {\n    @apply tw-pt-px tw-pr-0 tw-pb-0 tw-border tw-border-box-color tw-rounded-b-8-px #{!important};\n}\n\n.p-dropdown-panel .p-dropdown-items .p-dropdown-item {\n    @apply tw-h-fit tw-py-8-px tw-pl-14-px tw-text-14-px tw-rounded-4-px tw-mx-px tw-mt-px tw-mb-4-px #{!important};\n}\n\n.p-dropdown-panel .p-dropdown-items .p-dropdown-item.p-highlight {\n    @apply tw-text-mandatory-field-color tw-bg-disabled-bg-color #{!important};\n}\n\n.p-dropdown-panel .p-dropdown-items .p-dropdown-item:not(.p-highlight):not(.p-disabled):hover {\n    @apply tw-bg-disabled-bg-color tw-text-slightly-normal-text-color #{!important};\n}\n\n.p-dropdown-panel .p-dropdown-items .p-dropdown-item, \n.p-dropdown-panel .p-dropdown-items .p-dropdown-item.p-highlight {\n    max-width: 18.5rem;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n}\n\n.p-dropdown.p-focus {\n    @apply tw-shadow-none tw-border-slightly-normal-text-color #{!important};\n}\n\n.p-dropdown:hover {\n    @apply tw-shadow-none tw-border-slightly-normal-text-color #{!important};\n}\n\n.p-multiselect {\n    @apply lg:tw-w-300-px md:tw-w-260-px ;\n}\n\n.p-multiselect .p-multiselect-label {\n    @apply tw-text-sub-text-color tw-py-8-px tw-pl-14-px tw-text-14-px #{!important};\n}\n\n.p-multiselect:not(.p-disabled):hover {\n    @apply tw-border-faded-text-color #{!important};\n}\n\n.p-multiselect:not(.p-disabled).p-focus {\n    @apply tw-shadow-none #{!important};\n}\n\n.p-multiselect.p-focus:not(.p-disabled) {\n    @apply tw-shadow-none #{!important};\n}\n\n.p-multiselect-panel .p-multiselect-header .p-checkbox {\n    @apply tw-hidden;\n}\n\n.p-multiselect-filter-container {\n    @apply tw-hidden;\n}\n\n.p-multiselect-close {\n    @apply tw-hidden #{!important};\n}\n\n.p-multiselect-panel {\n    @apply tw-w-320-px ;\n}\n\n.p-dropdown .p-dropdown-label.p-placeholder {\n    @apply tw-text-placeholder #{!important};\n}\n\n.p-multiselect .p-multiselect-label.p-placeholder {\n    @apply tw-text-placeholder #{!important};\n}\n\n.p-multiselect-panel .p-multiselect-items .p-multiselect-item {\n    @apply tw-text-14-px tw-text-slightly-normal-text-color tw-h-54-px tw-px-16-px tw-py-8-px #{!important};\n}\n\n.p-multiselect-panel .p-multiselect-items .p-multiselect-item .p-checkbox {\n    @apply tw-mb-0 tw-mt-2-px #{!important};\n}\n\n.p-checkbox .p-checkbox-box {\n    @apply tw-h-16-px tw-w-16-px tw-rounded-4-px tw-transition-none tw-border tw-border-sub-text-color #{!important};\n}\n\n.p-multiselect-panel .p-multiselect-items .p-multiselect-item.p-highlight {\n    @apply tw-text-14-px tw-text-slightly-normal-text-color tw-bg-disabled-bg-color tw-rounded-4-px #{!important};\n}\n\n.p-multiselect-panel .p-multiselect-items .p-multiselect-item:not(.p-highlight):not(.p-disabled):hover {\n    @apply tw-shadow-none tw-bg-disabled-bg-color #{!important};\n}\n\n.p-multiselect-panel .p-multiselect-items .p-multiselect-item:focus {\n    @apply tw-shadow-none tw-bg-disabled-bg-color #{!important};\n}\n\n.p-checkbox .p-checkbox-box.p-highlight {\n    @apply tw-bg-sub-text-color tw-border-none tw-pb-5-px #{!important};\n}\n\n.pi-check:before {\n    @apply tw-font-700 tw-text-9-px #{!important};\n}\n\n.p-checkbox:not(.p-checkbox-disabled) .p-checkbox-box:hover {\n    @apply tw-border-sub-text-color #{!important};\n}\n\n.p-multiselect-panel .p-multiselect-items .p-multiselect-empty-message {\n    @apply tw-py-24-px tw-flex tw-justify-center tw-text-slightly-normal-text-color tw-text-14-px tw-italic #{!important};\n}\n\n@mixin spinner($height, $width, $animation) {\n    &.p-progress-spinner {\n        @apply\n        tw-h-#{$height}\n        tw-w-#{$width};\n    }\n\n    .p-progress-spinner-circle {\n        @apply\n        tw-animate-#{$animation} #{!important};\n    }\n}\n\n.spinner-16 {\n    @include spinner('16-px', '16-px', 'progress-spinner');\n}\n\n.spinner-16-white {\n    @include spinner('16-px', '16-px', 'progress-spinner-cta');\n}\n\n.spinner-default {\n    @include spinner('100-px', '100-px', 'progress-spinner');\n}\n\n.p-skeleton {\n    @apply tw-bg-disabled-bg-color #{!important};\n}\n\n.p-toast {\n    @apply tw-opacity-100 #{!important}\n}\n.p-toast .p-toast-message.p-toast-message-success {\n    @apply tw-border-none #{!important};\n}\n\n.p-toast .p-toast-message.p-toast-message-error {\n    @apply tw-border-none #{!important};\n}\n\n.p-toast .p-toast-message .p-toast-message-content {\n    @apply tw-border-0 tw-p-0 tw-text-white #{!important};\n}\n\n.p-toast .p-toast-message .p-toast-icon-close {\n    @apply tw-hidden #{!important};\n}\n\n.p-toast-icon-close-icon {\n    @apply tw-hidden #{!important};\n}\n\n.p-toast-message-content {\n    @apply tw-block #{!important};\n}\n\n.configuration {\n    &--section {\n      @apply tw-pb-100-px ;\n    }\n  \n    &--contents {\n        @apply tw-overflow-hidden tw-border-separator tw-box-border tw-bg-white tw-rounded-xl tw-mb-0-px md:tw-mx-100-px lg:tw-mx-120-px tw-shadow-app-card #{!important};\n    }\n}\n\n.p-tabmenu {\n    @apply tw-font-aktiv-grotesk tw-font-500 #{!important};\n}\n\n.p-tabmenu .p-tabmenu-nav {\n    @apply tw-border-b-2-px tw-border-b-box-color tw-text-14-px #{!important};\n}\n\n.p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\n    @apply tw-text-menu-inactive-text-color tw-font-500 #{!important};\n}\n\n.p-tabmenu .p-tabmenu-nav .p-tabmenuitem.p-highlight .p-menuitem-link {\n    @apply tw-text-slightly-normal-text-color tw-border-b-2 tw-border-b-slightly-normal-text-color tw-font-500 #{!important};\n}\n\n.p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link:not(.p-disabled):focus{\n    @apply tw-shadow-none #{!important};\n}\n\n.p-tabmenu .p-tabmenu-nav .p-tabmenuitem .p-menuitem-link {\n    @apply tw-px-0 tw-pt-0 tw-pb-20-px tw-mx-24-px tw-mt-20-px #{!important};\n}\n\n.mapped {\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-mapped-green-border tw-bg-mapped-green-bg tw-py-4-px tw-px-12-px tw-text-success-toast tw-w-fit #{!important}\n}\n\n.unmapped {\n    @apply tw-text-12-px tw-rounded-full tw-border tw-border-solid tw-border-unmapped-red-border tw-bg-unmapped-red-bg tw-py-4-px tw-px-12-px tw-text-alert-toast tw-w-fit #{!important}\n}\n\n.p-calendar .p-inputtext {\n    @apply tw-p-0 tw-bg-white tw-border-none tw-cursor-pointer tw-transition-none tw-text-sub-text-color #{!important};\n}\n\n.p-dropdown-panel .p-dropdown-items .p-dropdown-item:not(.p-highlight):hover .p-calendar .p-inputtext, .p-dropdown-panel .p-dropdown-items .p-dropdown-item.p-highlight .p-calendar .p-inputtext{\n    @apply tw-bg-disabled-bg-color #{!important};\n}\n\n.p-calendar ::placeholder {\n    @apply tw-text-sub-text-color #{!important};\n}\n\n.p-datepicker table td > span.p-highlight {\n    @apply tw-text-white tw-bg-mandatory-field-color #{!important};\n}\n\n.p-datepicker table td > span:focus {\n    @apply tw-shadow-none #{!important};\n}\n\n.p-datepicker table th {\n    @apply tw-text-center #{!important};\n}\n\n.p-datepicker-touch-ui, .p-calendar .p-datepicker-touch-ui {\n    @apply tw-min-w-fit tw-top-[50%] tw-left-[50%] #{!important};\n}\n\n.p-dropdown-filter {\n    @apply tw-h-32-px;\n}\n\n.p-dialog .p-dialog-header .p-dialog-title {\n    @apply tw-text-20-px tw-font-500 #{!important};\n}\n\n.preview-text {\n    @apply tw-text-14-px tw-font-400 tw-text-faded-text-color tw-p-24-px #{!important} ;\n}\n\n.preview-box {\n    @apply tw-p-10-px tw-bg-disabled-bg-color tw-rounded-8-px #{!important} ;\n}\n","@layer base {\n    [data-theme='fyle'] {\n        --white: #FFFFFF;\n        --placeholder: #A9ACBC;\n        --separator: #ECECEE;\n        --normal-text-color: #161528;\n        --slightly-normal-text-color: #2C304E;\n        --menu-inactive-text-color: #A9ACBC;\n        --sub-text-color: #414562;\n        --faded-text-color: #5A5D72;\n        --box-color: #DFDFE2;\n        --hyperlink-color: #0062FF;\n        --mandatory-field-color: #FF3366;\n        --disabled-bg-color: #F5F5F5;\n        --configuration-bg: #FAFCFF;\n        --dropdown-hover: #e9ecef;\n        --check-box: #ced4da;\n        --info-section: #EFF5FC;\n        --info: #5C98E5;\n        --success-toast: #24A148;\n        --alert-toast: #DA1E28;\n        --cta-disabled: #FFC2D6;\n        --line-inactive: #CCCDD7;\n        --progress-bar-bg: #FFF0F5;\n        --mapped-green-border: #D9EBE1;\n        --mapped-green-bg: #EEF8F2;\n        --unmapped-red-border: #F5C0C3;\n        --unmapped-red-bg: #FCE9EA;\n        --pink: #D23669;\n        --pink-box-border: #FF336629;\n    }\n}\n"],sourceRoot:""}]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"./node_modules/memoizerific sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/memoizerific sync recursive",module.exports=webpackEmptyContext},"./src/styles.scss":()=>{},"./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$":module=>{function webpackEmptyAsyncContext(req){return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=()=>[],webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id="./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.mdx)$",module.exports=webpackEmptyAsyncContext},"./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./stories/AppLandingPageBody.stories":["./src/stories/AppLandingPageBody.stories.ts",6e3,3119],"./stories/AppLandingPageBody.stories.ts":["./src/stories/AppLandingPageBody.stories.ts",6e3,3119],"./stories/AppLandingPageHeader.stories":["./src/stories/AppLandingPageHeader.stories.ts",1410,1340,6264,6e3,6803],"./stories/AppLandingPageHeader.stories.ts":["./src/stories/AppLandingPageHeader.stories.ts",1410,1340,6264,6e3,6803],"./stories/CloneSettingField.stories":["./src/stories/CloneSettingField.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,1871],"./stories/CloneSettingField.stories.ts":["./src/stories/CloneSettingField.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,1871],"./stories/CloneSettingHeader.stories":["./src/stories/CloneSettingHeader.stories.ts",6068],"./stories/CloneSettingHeader.stories.ts":["./src/stories/CloneSettingHeader.stories.ts",6068],"./stories/ConfigurationConfirmationDialog.stories":["./src/stories/ConfigurationConfirmationDialog.stories.ts",1410,1340,6e3,4487],"./stories/ConfigurationConfirmationDialog.stories.ts":["./src/stories/ConfigurationConfirmationDialog.stories.ts",1410,1340,6e3,4487],"./stories/ConfigurationConnector.stories":["./src/stories/ConfigurationConnector.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,5122],"./stories/ConfigurationConnector.stories.ts":["./src/stories/ConfigurationConnector.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,5122],"./stories/ConfigurationCustomFieldCreationDialog.stories":["./src/stories/ConfigurationCustomFieldCreationDialog.stories.ts",1410,1340,7019,2191,5184],"./stories/ConfigurationCustomFieldCreationDialog.stories.ts":["./src/stories/ConfigurationCustomFieldCreationDialog.stories.ts",1410,1340,7019,2191,5184],"./stories/ConfigurationImportField.stories":["./src/stories/ConfigurationImportField.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,1734],"./stories/ConfigurationImportField.stories.ts":["./src/stories/ConfigurationImportField.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,1734],"./stories/ConfigurationInfoLabel.stories":["./src/stories/ConfigurationInfoLabel.stories.ts",2393],"./stories/ConfigurationInfoLabel.stories.ts":["./src/stories/ConfigurationInfoLabel.stories.ts",2393],"./stories/ConfigurationLabel.stories":["./src/stories/ConfigurationLabel.stories.ts",3906,6e3,8789],"./stories/ConfigurationLabel.stories.ts":["./src/stories/ConfigurationLabel.stories.ts",3906,6e3,8789],"./stories/ConfigurationMultiSelect.stories":["./src/stories/ConfigurationMultiSelect.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,3173],"./stories/ConfigurationMultiSelect.stories.ts":["./src/stories/ConfigurationMultiSelect.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,3173],"./stories/ConfigurationRadioField.stories":["./src/stories/ConfigurationRadioField.stories.ts",7019,366],"./stories/ConfigurationRadioField.stories.ts":["./src/stories/ConfigurationRadioField.stories.ts",7019,366],"./stories/ConfigurationScheduleExport.stories":["./src/stories/ConfigurationScheduleExport.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,5558],"./stories/ConfigurationScheduleExport.stories.ts":["./src/stories/ConfigurationScheduleExport.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,5558],"./stories/ConfigurationSelectField.stories":["./src/stories/ConfigurationSelectField.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,18],"./stories/ConfigurationSelectField.stories.ts":["./src/stories/ConfigurationSelectField.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,18],"./stories/ConfigurationSkipExport.stories":["./src/stories/ConfigurationSkipExport.stories.ts",7019,6264,5378,6e3,1680,9551],"./stories/ConfigurationSkipExport.stories.ts":["./src/stories/ConfigurationSkipExport.stories.ts",7019,6264,5378,6e3,1680,9551],"./stories/ConfigurationStepFooter.stories":["./src/stories/ConfigurationStepFooter.stories.ts",1410,1340,6693],"./stories/ConfigurationStepFooter.stories.ts":["./src/stories/ConfigurationStepFooter.stories.ts",1410,1340,6693],"./stories/ConfigurationStepHeader.stories":["./src/stories/ConfigurationStepHeader.stories.ts",1410,1340,2538,6e3,1174],"./stories/ConfigurationStepHeader.stories.ts":["./src/stories/ConfigurationStepHeader.stories.ts",1410,1340,2538,6e3,1174],"./stories/ConfigurationStepSubHeader.stories":["./src/stories/ConfigurationStepSubHeader.stories.ts",3115],"./stories/ConfigurationStepSubHeader.stories.ts":["./src/stories/ConfigurationStepSubHeader.stories.ts",3115],"./stories/ConfigurationTextField.stories":["./src/stories/ConfigurationTextField.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,8141],"./stories/ConfigurationTextField.stories.ts":["./src/stories/ConfigurationTextField.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,8141],"./stories/ConfigurationToggleField.stories":["./src/stories/ConfigurationToggleField.stories.ts",7019,4177,6e3,8893],"./stories/ConfigurationToggleField.stories.ts":["./src/stories/ConfigurationToggleField.stories.ts",7019,4177,6e3,8893],"./stories/DashboardAccountingErrorDialog.stories":["./src/stories/DashboardAccountingErrorDialog.stories.ts",1410,1340,7019,6447,1196,8381,1784],"./stories/DashboardAccountingErrorDialog.stories.ts":["./src/stories/DashboardAccountingErrorDialog.stories.ts",1410,1340,7019,6447,1196,8381,1784],"./stories/DashboardErrorSection.stories":["./src/stories/DashboardErrorSection.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,8465],"./stories/DashboardErrorSection.stories.ts":["./src/stories/DashboardErrorSection.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,8465],"./stories/DashboardExportLogDialog.stories":["./src/stories/DashboardExportLogDialog.stories.ts",1410,1340,7019,6447,1196,8381,2191,6e3,9020],"./stories/DashboardExportLogDialog.stories.ts":["./src/stories/DashboardExportLogDialog.stories.ts",1410,1340,7019,6447,1196,8381,2191,6e3,9020],"./stories/DashboardExportSection.stories":["./src/stories/DashboardExportSection.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,1403],"./stories/DashboardExportSection.stories.ts":["./src/stories/DashboardExportSection.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,1403],"./stories/DashboardExportSummarySection.stories":["./src/stories/DashboardExportSummarySection.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,1930],"./stories/DashboardExportSummarySection.stories.ts":["./src/stories/DashboardExportSummarySection.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,1930],"./stories/Dropdown.stories":["./src/stories/Dropdown.stories.ts",1410,1340,7019,6447,1196,6950],"./stories/Dropdown.stories.ts":["./src/stories/Dropdown.stories.ts",1410,1340,7019,6447,1196,6950],"./stories/EmailMultiSelectField.stories":["./src/stories/EmailMultiSelectField.stories.ts",1410,1340,7019,6447,2191,5125,6e3,2689,494],"./stories/EmailMultiSelectField.stories.ts":["./src/stories/EmailMultiSelectField.stories.ts",1410,1340,7019,6447,2191,5125,6e3,2689,494],"./stories/Error.stories":["./src/stories/Error.stories.ts",1410,6e3,1514],"./stories/Error.stories.ts":["./src/stories/Error.stories.ts",1410,6e3,1514],"./stories/ExportLogChildTableDialog.stories":["./src/stories/ExportLogChildTableDialog.stories.ts",1410,1340,7019,6447,1196,8381,2191,6e3,1290],"./stories/ExportLogChildTableDialog.stories.ts":["./src/stories/ExportLogChildTableDialog.stories.ts",1410,1340,7019,6447,1196,8381,2191,6e3,1290],"./stories/ExportLogFilter.stories":["./src/stories/ExportLogFilter.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,2524],"./stories/ExportLogFilter.stories.ts":["./src/stories/ExportLogFilter.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,2524],"./stories/ExportLogTable.stories":["./src/stories/ExportLogTable.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,3766],"./stories/ExportLogTable.stories.ts":["./src/stories/ExportLogTable.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,3766],"./stories/GenericMappingV2.stories":["./src/stories/GenericMappingV2.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,2483],"./stories/GenericMappingV2.stories.ts":["./src/stories/GenericMappingV2.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,2483],"./stories/MainMenu.stories":["./src/stories/MainMenu.stories.ts",1410,1340,6264,6851,6797,6e3,9668],"./stories/MainMenu.stories.ts":["./src/stories/MainMenu.stories.ts",1410,1340,6264,6851,6797,6e3,9668],"./stories/MandatoryErrorMessage.stories":["./src/stories/MandatoryErrorMessage.stories.ts",5954],"./stories/MandatoryErrorMessage.stories.ts":["./src/stories/MandatoryErrorMessage.stories.ts",5954],"./stories/MandatoryField.stories":["./src/stories/MandatoryField.stories.ts",2877],"./stories/MandatoryField.stories.ts":["./src/stories/MandatoryField.stories.ts",2877],"./stories/MappingCardHeader.stories":["./src/stories/MappingCardHeader.stories.ts",3286],"./stories/MappingCardHeader.stories.ts":["./src/stories/MappingCardHeader.stories.ts",3286],"./stories/MappingFilter.stories":["./src/stories/MappingFilter.stories.ts",1410,1340,7019,6447,1196,6e3,7292],"./stories/MappingFilter.stories.ts":["./src/stories/MappingFilter.stories.ts",1410,1340,7019,6447,1196,6e3,7292],"./stories/MultiSelect.stories":["./src/stories/MultiSelect.stories.ts",1410,1340,7019,6447,5125,3137,6e3,166],"./stories/MultiSelect.stories.ts":["./src/stories/MultiSelect.stories.ts",1410,1340,7019,6447,5125,3137,6e3,166],"./stories/OnboardingDone.stories":["./src/stories/OnboardingDone.stories.ts",1864],"./stories/OnboardingDone.stories.ts":["./src/stories/OnboardingDone.stories.ts",1864],"./stories/Paginator.stories":["./src/stories/Paginator.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,8140],"./stories/Paginator.stories.ts":["./src/stories/Paginator.stories.ts",1410,1340,7019,6447,1196,8381,6264,2191,5125,6851,3137,5378,4177,1531,6e3,1680,2689,4913,8140],"./stories/PreviewDialog.stories":["./src/stories/PreviewDialog.stories.ts",2153],"./stories/PreviewDialog.stories.ts":["./src/stories/PreviewDialog.stories.ts",2153],"./stories/Shimmers.stories":["./src/stories/Shimmers.stories.ts",5288],"./stories/Shimmers.stories.ts":["./src/stories/Shimmers.stories.ts",5288],"./stories/SkippedExportLogTable.stories":["./src/stories/SkippedExportLogTable.stories.ts",1410,1340,7019,6447,1196,8381,6e3,5711],"./stories/SkippedExportLogTable.stories.ts":["./src/stories/SkippedExportLogTable.stories.ts",1410,1340,7019,6447,1196,8381,6e3,5711],"./stories/SubMenu.stories":["./src/stories/SubMenu.stories.ts",1410,1340,6264,6851,1431],"./stories/SubMenu.stories.ts":["./src/stories/SubMenu.stories.ts",1410,1340,6264,6851,1431],"./stories/Toggle.stories":["./src/stories/Toggle.stories.ts",1410,1340,7019,1737],"./stories/Toggle.stories.ts":["./src/stories/Toggle.stories.ts",1410,1340,7019,1737],"./stories/ZeroState.stories":["./src/stories/ZeroState.stories.ts",1793],"./stories/ZeroState.stories.ts":["./src/stories/ZeroState.stories.ts",1793],"./stories/ZeroStateWithIllustration.stories":["./src/stories/ZeroStateWithIllustration.stories.ts",7170],"./stories/ZeroStateWithIllustration.stories.ts":["./src/stories/ZeroStateWithIllustration.stories.ts",7170],"./stories/loader.stories":["./src/stories/loader.stories.ts",750],"./stories/loader.stories.ts":["./src/stories/loader.stories.ts",750]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./src lazy recursive ^\\.\\/.*$ include: (?:\\/src(?:\\/(?%21\\.)(?:(?:(?%21(?:^%7C\\/)\\.).)*?)\\/%7C\\/%7C$)(?%21\\.)(?=.)[^/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$",module.exports=webpackAsyncContext},"./src/assets/icons/arrow-down.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/arrow-down.e1a7f508.svg"},"./src/assets/icons/cross.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/cross.d1ed7e01.svg"},"./src/assets/icons/eye-slash.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/eye-slash.417bd956.svg"},"./src/assets/icons/eye.svg":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__.p+"static/media/eye.09851730.svg"},"@storybook/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"@storybook/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"@storybook/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"@storybook/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[9045],(()=>(__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("./src/styles.scss"),__webpack_exec__("./node_modules/primeicons/primeicons.css"),__webpack_exec__("./node_modules/primeng/resources/themes/lara-light-blue/theme.css"),__webpack_exec__("./node_modules/primeng/resources/primeng.min.css"),__webpack_exec__("./src/polyfills.ts"))));__webpack_require__.O()}]);